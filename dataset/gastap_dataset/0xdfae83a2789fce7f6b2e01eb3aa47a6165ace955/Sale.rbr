block0(g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	lt(s(1), s(0))
	call(block769(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump0(s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	geq(s(1), s(0))
	call(block13(g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump13(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block870(s(0),g(transferedToPool), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block13(g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 43523326
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block913(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block65(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 126867946
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1057(s(0),g(saleCap), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block87(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1100(s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block98(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 384831835
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1201(s(0),g(pool), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block109(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1288(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump120(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1331(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump120(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block120(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 725819751
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1464(s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake))

jump131(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block142(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 727858464
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1529(s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp))

jump142(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump153(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1616(s(0),g(saleShare), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block153(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 815215180
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1665(s(0), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block164(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 923920425
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1714(s(0),g(withdrawnAmountForSalePromotion), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump186(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1757(s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide))

jump186(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block186(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 978839192
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1824(s(0),g(saleStartTimestamp), l(l1), l(l0), callvalue))

jump197(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block197(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1009216902
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1010690900
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1867(s(0),g(contractCreatedTimestamp), l(l1), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block219(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1102099661
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1910(s(0),g(distributedTeamStakes), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump230(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1953(s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump230(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block230(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1219932749
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1241804162
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2112(s(0),g(usdPerEther), l(l1), l(l0), callvalue))

jump241(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block252(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1261541139
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2155(s(0),g(totalWithdrawn), l(l1), l(l0), callvalue))

jump252(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block263(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1285791392
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2198(s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents))

jump263(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

jump274(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2256(s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd))

jump274(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block285(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block274(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1332382910
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1377218284
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2301(s(0),g(totalInvested), l(l1), l(l0), callvalue))

jump285(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block296(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

jump296(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2344(s(0),g(priceIsFrozen), g(owner), caller, callvalue))

jump296(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block307(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block296(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1489992817
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2367(s(0),g(maxAmountForSalePromotion), l(l1), l(l0), callvalue))

jump307(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block318(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block307(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1499605670
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2410(s(0),g(distributedBountyStakes), l(l1), l(l0), callvalue))

jump318(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block329(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block318(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1537990683
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1655964809
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2453(s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue))

jump329(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block340(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

jump340(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2496(s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key))

jump340(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block351(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block340(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1668414935
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2563(s(0),g(distributedSaleStakes), l(l1), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block362(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block351(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1710999967
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2606(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue))

jump362(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block373(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block362(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1712882787
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1835839154
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2707(s(0),g(poolCapUSD), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block384(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block384(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1837201307
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2750(s(0),g(teamCap), l(l1), l(l0), callvalue))

jump384(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block395(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block395(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2793(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner))

jump395(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block406(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

jump406(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2880(s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp))

jump406(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block417(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block406(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2096180112
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2101670479
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2903(s(0),g(supplyCap), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, my_address))

jump417(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, my_address, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block428(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block428(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2175762833
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2990(s(0),g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump428(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block439(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

jump439(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3055(s(0),g(bonusShare), l(l1), l(l0), callvalue))

jump439(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block450(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block439(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2204014807
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3098(s(0),g(owner), l(l1), l(l0), callvalue))

jump450(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block461(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block461(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2406943440
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3185(s(0),g(supplyCap), l(l1), l(l0), callvalue))

jump461(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block472(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

jump472(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3228(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump472(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block483(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block472(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3372(s(0),g(distributedBonusStakes), l(l1), l(l0), callvalue))

jump483(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block494(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block483(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2652944232
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2657483440
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3415(s(0),g(priceIsFrozen), l(l1), l(l0), callvalue))

jump494(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block505(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block505(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2809539154
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3462(s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump505(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block516(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block516(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3567(s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump516(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block527(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))

jump527(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	eq(s(2), s(1))
	call(block3668(s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue))

jump527(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	neq(s(2), s(1))
	call(block538(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))

block527(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2942106344
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump538(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	eq(s(2), s(1))
	call(block3711(s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump538(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	neq(s(2), s(1))
	call(block549(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))

block538(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3208526158
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	eq(s(2), s(1))
	call(block3734(s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to))

jump549(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	neq(s(2), s(1))
	call(block560(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

block549(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3239337633
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3258665819
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3811(s(0),g(bountyShare), l(l1), l(l0), callvalue))

jump560(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyShare), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block571(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

jump571(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3860(s(0),g(guideInvestmentAttractedShareToPay), l(l1), l(l0), callvalue))

jump571(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block582(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

block571(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3320591967
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3331189630
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3909(s(0),g(saleEndTimestamp), l(l1), l(l0), callvalue))

jump582(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block593(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

block593(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3446783044
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3952(s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether))

jump593(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block604(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))

block604(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3611153955
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3997(s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender))

jump604(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block615(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))

jump615(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4098(s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei))

jump615(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block626(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp))

block615(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3644829301
	nop(PUSH4)
	call(jump615(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump626(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4163(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump626(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block637(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))

block626(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump626(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block637(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3810917195
	nop(PUSH4)
	call(jump637(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4282(s(0),g(bonusCap), l(l1), l(l0), callvalue))

jump637(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block648(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))

jump648(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4325(s(0),g(lastStakePriceUSCents), l(l1), l(l0), callvalue))

jump648(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block659(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))

block648(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3831928040
	nop(PUSH4)
	call(jump648(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block659(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3923860303
	nop(PUSH4)
	call(jump659(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump659(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4368(s(0),g(pool), g(owner), calldatasize, caller, callvalue, pool))

jump659(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block670(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block670(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3933139710
	nop(PUSH4)
	call(jump670(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump670(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4435(s(0),g(teamShare), l(l1), l(l0), callvalue))

jump670(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block681(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block681(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3960570562
	nop(PUSH4)
	call(jump681(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump681(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4484(s(0),g(priceIsFrozen), g(owner), caller, callvalue))

jump681(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block692(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block692(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3989163952
	nop(PUSH4)
	call(jump692(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump692(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4507(s(0),g(financePeriodsTimestamps), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump692(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block703(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block703(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3991899101
	nop(PUSH4)
	call(jump703(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump703(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4572(s(0),g(teamStakesFrozen), l(l1), l(l0), callvalue))

jump703(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block714(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

jump714(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4619(s(0),g(financePeriodsCount), l(l1), l(l0), callvalue))

jump714(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block725(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block714(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4099643040
	nop(PUSH4)
	call(jump714(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block725(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4112546865
	nop(PUSH4)
	call(jump725(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump725(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4668(s(0),g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue))

jump725(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block736(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block736(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4121032116
	nop(PUSH4)
	call(jump736(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump736(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4711(s(0),g(owner), calldatasize, caller, callvalue, new_owner))

jump736(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block747(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))

block747(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4212220401
	nop(PUSH4)
	call(jump747(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump747(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4778(s(0),g(bountyCap), l(l1), l(l0), callvalue))

jump747(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block758(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))

jump758(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4821(s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))

jump758(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block769_0(s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block758(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4262527254
	nop(PUSH4)
	call(jump758(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump769(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(1), s(0))
	call(block829(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump769(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(1), s(0))
	call(block825())

block769(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = caller
	nop(CALLER)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	call(jump769(s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block825()=>
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

jump829(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(1), s(0))
	call(block844(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump829(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(1), s(0))
	call(block840())

block829(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = callvalue
	nop(CALLVALUE)
	call(jump829(s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block840()=>
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

jump844(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(1), s(0))
	call(block860(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump844(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(1), s(0))
	call(block856())

block844(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 9
	nop(PUSH1)
	s(0) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(1) = timestamp
	nop(TIMESTAMP)
	call(jump844(s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block856()=>
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block860(g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 868
	nop(PUSH2)
	s(1) = 4844
	nop(PUSH2)
	call(block4844(s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block868()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump870(s(2), s(1), s(0), g(transferedToPool), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block882(s(1), s(0),g(transferedToPool), l(l1), l(l0)))

jump870(s(2), s(1), s(0), g(transferedToPool), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block878(s(1), s(0)))

block870(s(0), g(transferedToPool), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump870(s(2),s(1),s(0),g(transferedToPool), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block878(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block882(s(1), s(0), g(transferedToPool), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 891
	nop(PUSH2)
	s(2) = 5516
	nop(PUSH2)
	call(block5516(s(1),s(0),g(transferedToPool), l(l1), l(l0)))
	nop(JUMP)

block891(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block913(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump913(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump913(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block925(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump913(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block921(s(1), s(0)))

block921(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block925(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 934
	nop(PUSH2)
	s(2) = 5522
	nop(PUSH2)
	call(block5522(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block934(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block971(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

jump971(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block998(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump971(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block980(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block971(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump971(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block980(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 971
	nop(PUSH2)
	call(block971(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

block998(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump998(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump998(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block1043(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump998(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block1018(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block1018(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1043(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1043(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1057(s(0), g(saleCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1057(s(2),s(1),s(0),g(saleCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1057(s(2), s(1), s(0), g(saleCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1069(s(1), s(0),g(saleCap), l(l1), l(l0)))

jump1057(s(2), s(1), s(0), g(saleCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1065(s(1), s(0)))

block1065(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1069(s(1), s(0), g(saleCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1078
	nop(PUSH2)
	s(2) = 5579
	nop(PUSH2)
	call(block5579(s(1),s(0),g(saleCap), l(l1), l(l0)))
	nop(JUMP)

block1078(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1100(s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1100(s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1100(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1112(s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value))

jump1100(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1108(s(1), s(0)))

block1108(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1112(s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1175
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5585
	nop(PUSH2)
	call(block5585(s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1175(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1201(s(0), g(pool), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1201(s(2),s(1),s(0),g(pool), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1201(s(2), s(1), s(0), g(pool), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1213(s(1), s(0),g(pool), l(l1), l(l0)))

jump1201(s(2), s(1), s(0), g(pool), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1209(s(1), s(0)))

block1209(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1213(s(1), s(0), g(pool), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1222
	nop(PUSH2)
	s(2) = 6033
	nop(PUSH2)
	call(block6033(s(1),s(0),g(pool), l(l1), l(l0)))
	nop(JUMP)

block1222(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1288(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1288(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1288(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1300(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1288(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1296(s(1), s(0)))

block1296(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1300(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1309
	nop(PUSH2)
	s(2) = 6071
	nop(PUSH2)
	call(block6071(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1309(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1331(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1331(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1331(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1343(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1331(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1339(s(1), s(0)))

block1339(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1343(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1438
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6077
	nop(PUSH2)
	call(block6077(s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1438(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1464(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake)=>
	eq(s(2), 0)
	call(block1476(s(1), s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_stake))

jump1464(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake)=>
	neq(s(2), 0)
	call(block1472(s(1), s(0)))

block1464(s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1464(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1472(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1476(s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_stake)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1507
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = input_stake
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7036
	nop(PUSH2)
	call(block7036_0(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(JUMP)

block1507(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1529(s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp)=>
	eq(s(2), 0)
	call(block1541(s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), calldatasize, guide, timestamp))

jump1529(s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp)=>
	neq(s(2), 0)
	call(block1537(s(1), s(0)))

block1529(s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1529(s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1537(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1541(s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), calldatasize, guide, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1594
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = guide
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7076
	nop(PUSH2)
	call(block7076(s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(JUMP)

block1594(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1616(s(0), g(saleShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1616(s(2),s(1),s(0),g(saleShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1616(s(2), s(1), s(0), g(saleShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1628(s(1), s(0),g(saleShare), l(l1), l(l0)))

jump1616(s(2), s(1), s(0), g(saleShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1624(s(1), s(0)))

block1624(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1628(s(1), s(0), g(saleShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1637
	nop(PUSH2)
	s(2) = 7356
	nop(PUSH2)
	call(block7356(s(1),s(0),g(saleShare), l(l1), l(l0)))
	nop(JUMP)

block1637(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1665(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1665(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1665(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1677(s(1), s(0), l(l1), l(l0)))

jump1665(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1673(s(1), s(0)))

block1673(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1677(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1686
	nop(PUSH2)
	s(2) = 7375
	nop(PUSH2)
	call(block7375(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1686(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1714(s(0), g(withdrawnAmountForSalePromotion), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1714(s(2),s(1),s(0),g(withdrawnAmountForSalePromotion), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1714(s(2), s(1), s(0), g(withdrawnAmountForSalePromotion), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1726(s(1), s(0),g(withdrawnAmountForSalePromotion), l(l1), l(l0)))

jump1714(s(2), s(1), s(0), g(withdrawnAmountForSalePromotion), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1722(s(1), s(0)))

block1722(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1726(s(1), s(0), g(withdrawnAmountForSalePromotion), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1735
	nop(PUSH2)
	s(2) = 7380
	nop(PUSH2)
	call(block7380(s(1),s(0),g(withdrawnAmountForSalePromotion), l(l1), l(l0)))
	nop(JUMP)

block1735(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1757(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide)=>
	eq(s(2), 0)
	call(block1769(s(1), s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, investment_guide))

jump1757(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide)=>
	neq(s(2), 0)
	call(block1765(s(1), s(0)))

block1757(s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1757(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1765(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1769(s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, investment_guide)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1822
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investment_guide
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7386
	nop(PUSH2)
	call(block7386(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1822(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1824(s(2), s(1), s(0), g(saleStartTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1836(s(1), s(0),g(saleStartTimestamp), l(l1), l(l0)))

jump1824(s(2), s(1), s(0), g(saleStartTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1832(s(1), s(0)))

block1824(s(0), g(saleStartTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1824(s(2),s(1),s(0),g(saleStartTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1832(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1836(s(1), s(0), g(saleStartTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1845
	nop(PUSH2)
	s(2) = 7671
	nop(PUSH2)
	call(block7671(s(1),s(0),g(saleStartTimestamp), l(l1), l(l0)))
	nop(JUMP)

block1845(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1867(s(2), s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1879(s(1), s(0),g(contractCreatedTimestamp), l(l1), l(l0)))

jump1867(s(2), s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1875(s(1), s(0)))

block1867(s(0), g(contractCreatedTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1867(s(2),s(1),s(0),g(contractCreatedTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1875(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1879(s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1888
	nop(PUSH2)
	s(2) = 7677
	nop(PUSH2)
	call(block7677(s(1),s(0),g(contractCreatedTimestamp), l(l1), l(l0)))
	nop(JUMP)

block1888(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1910(s(0), g(distributedTeamStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1910(s(2),s(1),s(0),g(distributedTeamStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1910(s(2), s(1), s(0), g(distributedTeamStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1922(s(1), s(0),g(distributedTeamStakes), l(l1), l(l0)))

jump1910(s(2), s(1), s(0), g(distributedTeamStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1918(s(1), s(0)))

block1918(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1922(s(1), s(0), g(distributedTeamStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1931
	nop(PUSH2)
	s(2) = 7683
	nop(PUSH2)
	call(block7683(s(1),s(0),g(distributedTeamStakes), l(l1), l(l0)))
	nop(JUMP)

block1931(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1953(s(2), s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1965(s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump1953(s(2), s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1961(s(1), s(0)))

block1953(s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1953(s(2),s(1),s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1961(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1965(s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2018
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7689
	nop(PUSH2)
	call(block7689(s(2),s(1),s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2018(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2112(s(0), g(usdPerEther), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2112(s(2),s(1),s(0),g(usdPerEther), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2112(s(2), s(1), s(0), g(usdPerEther), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2124(s(1), s(0),g(usdPerEther), l(l1), l(l0)))

jump2112(s(2), s(1), s(0), g(usdPerEther), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2120(s(1), s(0)))

block2120(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2124(s(1), s(0), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2133
	nop(PUSH2)
	s(2) = 7775
	nop(PUSH2)
	call(block7775(s(1),s(0),g(usdPerEther), l(l1), l(l0)))
	nop(JUMP)

block2133(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2155(s(0), g(totalWithdrawn), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2155(s(2),s(1),s(0),g(totalWithdrawn), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2155(s(2), s(1), s(0), g(totalWithdrawn), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2167(s(1), s(0),g(totalWithdrawn), l(l1), l(l0)))

jump2155(s(2), s(1), s(0), g(totalWithdrawn), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2163(s(1), s(0)))

block2163(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2167(s(1), s(0), g(totalWithdrawn), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2176
	nop(PUSH2)
	s(2) = 7781
	nop(PUSH2)
	call(block7781(s(1),s(0),g(totalWithdrawn), l(l1), l(l0)))
	nop(JUMP)

block2176(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2198(s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents)=>
	eq(s(2), 0)
	call(block2210(s(1), s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, n, stake_price_us_cents))

jump2198(s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents)=>
	neq(s(2), 0)
	call(block2206(s(1), s(0)))

block2198(s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2198(s(2),s(1),s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2206(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2210(s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, n, stake_price_us_cents)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2254
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = n
	nop(CALLDATALOAD)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = stake_price_us_cents
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 7787
	nop(PUSH2)
	call(block7787(s(3),s(2),s(1),s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2254(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2256(s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2256(s(2),s(1),s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2256(s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd)=>
	eq(s(2), 0)
	call(block2268(s(1), s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_pool_cap_usd))

jump2256(s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd)=>
	neq(s(2), 0)
	call(block2264(s(1), s(0)))

block2264(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2268(s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_pool_cap_usd)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2299
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = new_pool_cap_usd
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8021
	nop(PUSH2)
	call(block8021(s(2),s(1),s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block2299(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2301(s(2), s(1), s(0), g(totalInvested), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2313(s(1), s(0),g(totalInvested), l(l1), l(l0)))

jump2301(s(2), s(1), s(0), g(totalInvested), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2309(s(1), s(0)))

block2301(s(0), g(totalInvested), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2301(s(2),s(1),s(0),g(totalInvested), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2309(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2313(s(1), s(0), g(totalInvested), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2322
	nop(PUSH2)
	s(2) = 8188
	nop(PUSH2)
	call(block8188(s(1),s(0),g(totalInvested), l(l1), l(l0)))
	nop(JUMP)

block2322(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2344(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block2356(s(1), s(0),g(priceIsFrozen), g(owner), caller))

jump2344(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block2352(s(1), s(0)))

block2344(s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2344(s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2352(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2356(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2365
	nop(PUSH2)
	s(2) = 8194
	nop(PUSH2)
	call(block8194(s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(JUMP)

block2365(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2367(s(0), g(maxAmountForSalePromotion), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2367(s(2),s(1),s(0),g(maxAmountForSalePromotion), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2367(s(2), s(1), s(0), g(maxAmountForSalePromotion), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2379(s(1), s(0),g(maxAmountForSalePromotion), l(l1), l(l0)))

jump2367(s(2), s(1), s(0), g(maxAmountForSalePromotion), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2375(s(1), s(0)))

block2375(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2379(s(1), s(0), g(maxAmountForSalePromotion), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2388
	nop(PUSH2)
	s(2) = 8315
	nop(PUSH2)
	call(block8315(s(1),s(0),g(maxAmountForSalePromotion), l(l1), l(l0)))
	nop(JUMP)

block2388(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2410(s(0), g(distributedBountyStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2410(s(2),s(1),s(0),g(distributedBountyStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2410(s(2), s(1), s(0), g(distributedBountyStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2422(s(1), s(0),g(distributedBountyStakes), l(l1), l(l0)))

jump2410(s(2), s(1), s(0), g(distributedBountyStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2418(s(1), s(0)))

block2418(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2422(s(1), s(0), g(distributedBountyStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2431
	nop(PUSH2)
	s(2) = 8321
	nop(PUSH2)
	call(block8321(s(1),s(0),g(distributedBountyStakes), l(l1), l(l0)))
	nop(JUMP)

block2431(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2453(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2465(s(1), s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0)))

jump2453(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2461(s(1), s(0)))

block2453(s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2453(s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2461(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2465(s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2474
	nop(PUSH2)
	s(2) = 8327
	nop(PUSH2)
	call(block8327(s(1),s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0)))
	nop(JUMP)

block2474(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2496(s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2496(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2496(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key)=>
	eq(s(2), 0)
	call(block2508(s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, key))

jump2496(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key)=>
	neq(s(2), 0)
	call(block2504(s(1), s(0)))

block2504(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2508(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, key)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2561
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = key
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8333
	nop(PUSH2)
	call(block8333(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2561(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2563(s(0), g(distributedSaleStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2563(s(2),s(1),s(0),g(distributedSaleStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2563(s(2), s(1), s(0), g(distributedSaleStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2575(s(1), s(0),g(distributedSaleStakes), l(l1), l(l0)))

jump2563(s(2), s(1), s(0), g(distributedSaleStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2571(s(1), s(0)))

block2571(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2575(s(1), s(0), g(distributedSaleStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2584
	nop(PUSH2)
	s(2) = 8932
	nop(PUSH2)
	call(block8932(s(1),s(0),g(distributedSaleStakes), l(l1), l(l0)))
	nop(JUMP)

block2584(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2606(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	eq(s(2), 0)
	call(block2618(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, subtractedValue))

jump2606(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	neq(s(2), 0)
	call(block2614(s(1), s(0)))

block2606(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2606(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2614(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2618(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, subtractedValue)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2681
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = subtractedValue
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 8938
	nop(PUSH2)
	call(block8938(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block2681(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2707(s(2), s(1), s(0), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2719(s(1), s(0),g(poolCapUSD), l(l1), l(l0)))

jump2707(s(2), s(1), s(0), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2715(s(1), s(0)))

block2707(s(0), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2707(s(2),s(1),s(0),g(poolCapUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2715(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2719(s(1), s(0), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2728
	nop(PUSH2)
	s(2) = 9595
	nop(PUSH2)
	call(block9595(s(1),s(0),g(poolCapUSD), l(l1), l(l0)))
	nop(JUMP)

block2728(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2750(s(0), g(teamCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2750(s(2),s(1),s(0),g(teamCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2750(s(2), s(1), s(0), g(teamCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2762(s(1), s(0),g(teamCap), l(l1), l(l0)))

jump2750(s(2), s(1), s(0), g(teamCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2758(s(1), s(0)))

block2758(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2762(s(1), s(0), g(teamCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2771
	nop(PUSH2)
	s(2) = 9601
	nop(PUSH2)
	call(block9601(s(1),s(0),g(teamCap), l(l1), l(l0)))
	nop(JUMP)

block2771(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2793(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2793(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2793(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	eq(s(2), 0)
	call(block2805(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner))

jump2793(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	neq(s(2), 0)
	call(block2801(s(1), s(0)))

block2801(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2805(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2858
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9607
	nop(PUSH2)
	call(block9607(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block2858(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2880(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2892(s(1), s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp))

jump2880(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2888(s(1), s(0)))

block2880(s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2880(s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2888(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2892(s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2901
	nop(PUSH2)
	s(2) = 9680
	nop(PUSH2)
	call(block9680(s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp))
	nop(JUMP)

block2901(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2903(s(0), g(supplyCap), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, my_address)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2903(s(2),s(1),s(0),g(supplyCap), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, my_address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2903(s(2), s(1), s(0), g(supplyCap), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, my_address)=>
	eq(s(2), 0)
	call(block2915(s(1), s(0),g(supplyCap), l(l7), l(l6), l(l1), l(l0), calldatasize, my_address))

jump2903(s(2), s(1), s(0), g(supplyCap), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, my_address)=>
	neq(s(2), 0)
	call(block2911(s(1), s(0)))

block2911(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2915(s(1), s(0), g(supplyCap), l(l7), l(l6), l(l1), l(l0), calldatasize, my_address)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2968
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = my_address
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9812
	nop(PUSH2)
	call(block9812(s(2),s(1),s(0),g(supplyCap), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block2968(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2990(s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3002(s(1), s(0),g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump2990(s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2998(s(1), s(0)))

block2990(s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2990(s(2),s(1),s(0),g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2998(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3002(s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3033
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9901
	nop(PUSH2)
	call(block9901(s(2),s(1),s(0),g(targetPrice), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3033(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3055(s(2), s(1), s(0), g(bonusShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3067(s(1), s(0),g(bonusShare), l(l1), l(l0)))

jump3055(s(2), s(1), s(0), g(bonusShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3063(s(1), s(0)))

block3055(s(0), g(bonusShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3055(s(2),s(1),s(0),g(bonusShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3063(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3067(s(1), s(0), g(bonusShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3076
	nop(PUSH2)
	s(2) = 9936
	nop(PUSH2)
	call(block9936(s(1),s(0),g(bonusShare), l(l1), l(l0)))
	nop(JUMP)

block3076(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3098(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3110(s(1), s(0),g(owner), l(l1), l(l0)))

jump3098(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3106(s(1), s(0)))

block3098(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3098(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3106(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3110(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3119
	nop(PUSH2)
	s(2) = 9942
	nop(PUSH2)
	call(block9942(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3119(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3185(s(2), s(1), s(0), g(supplyCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3197(s(1), s(0),g(supplyCap), l(l1), l(l0)))

jump3185(s(2), s(1), s(0), g(supplyCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3193(s(1), s(0)))

block3185(s(0), g(supplyCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3185(s(2),s(1),s(0),g(supplyCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3193(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3197(s(1), s(0), g(supplyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3206
	nop(PUSH2)
	s(2) = 9980
	nop(PUSH2)
	call(block9980(s(1),s(0),g(supplyCap), l(l1), l(l0)))
	nop(JUMP)

block3206(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3228(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3228(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3228(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3240(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump3228(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3236(s(1), s(0)))

block3236(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3240(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3249
	nop(PUSH2)
	s(2) = 9986
	nop(PUSH2)
	call(block9986(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3249(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3286(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

block3286(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3286(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3286(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block3313(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump3286(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block3295(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block3295(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3286
	nop(PUSH2)
	call(block3286(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

block3313(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3313(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3313(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block3358(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3313(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block3333(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block3333(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3358(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3358(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3372(s(2), s(1), s(0), g(distributedBonusStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3384(s(1), s(0),g(distributedBonusStakes), l(l1), l(l0)))

jump3372(s(2), s(1), s(0), g(distributedBonusStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3380(s(1), s(0)))

block3372(s(0), g(distributedBonusStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3372(s(2),s(1),s(0),g(distributedBonusStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3380(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3384(s(1), s(0), g(distributedBonusStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3393
	nop(PUSH2)
	s(2) = 10043
	nop(PUSH2)
	call(block10043(s(1),s(0),g(distributedBonusStakes), l(l1), l(l0)))
	nop(JUMP)

block3393(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3415(s(2), s(1), s(0), g(priceIsFrozen), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3427(s(1), s(0),g(priceIsFrozen), l(l1), l(l0)))

jump3415(s(2), s(1), s(0), g(priceIsFrozen), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3423(s(1), s(0)))

block3415(s(0), g(priceIsFrozen), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3415(s(2),s(1),s(0),g(priceIsFrozen), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3423(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3427(s(1), s(0), g(priceIsFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3436
	nop(PUSH2)
	s(2) = 10049
	nop(PUSH2)
	call(block10049(s(1),s(0),g(priceIsFrozen), l(l1), l(l0)))
	nop(JUMP)

block3436(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3462(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3474(s(1), s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3462(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3470(s(1), s(0)))

block3462(s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3462(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3470(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3474(s(1), s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3527
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10068
	nop(PUSH2)
	call(block10068(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3527(s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3567(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3579(s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, to, value))

jump3567(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3575(s(1), s(0)))

block3567(s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3567(s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3575(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3579(s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3642
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 10123
	nop(PUSH2)
	call(block10123(s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block3642(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3668(s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3668(s(2),s(1),s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3668(s(2), s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3680(s(1), s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0)))

jump3668(s(2), s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3676(s(1), s(0)))

block3676(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3680(s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3689
	nop(PUSH2)
	s(2) = 10878
	nop(PUSH2)
	call(block10878_0(s(1),s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0)))
	nop(JUMP)

block3689(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3711(s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3711(s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3711(s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block3723(s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump3711(s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block3719(s(1), s(0)))

block3719(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3723(s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3732
	nop(PUSH2)
	s(2) = 10954
	nop(PUSH2)
	call(block10954(s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(JUMP)

block3732(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3734(s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to)=>
	eq(s(2), 0)
	call(block3746(s(1), s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, stakes, to))

jump3734(s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to)=>
	neq(s(2), 0)
	call(block3742(s(1), s(0)))

block3734(s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3734(s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3742(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3746(s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, stakes, to)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3809
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = stakes
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 13397
	nop(PUSH2)
	call(block13397(s(3),s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block3809(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3811(s(2), s(1), s(0), g(bountyShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3823(s(1), s(0),g(bountyShare), l(l1), l(l0)))

jump3811(s(2), s(1), s(0), g(bountyShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3819(s(1), s(0)))

block3811(s(0), g(bountyShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3811(s(2),s(1),s(0),g(bountyShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3819(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3823(s(1), s(0), g(bountyShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3832
	nop(PUSH2)
	s(2) = 13801
	nop(PUSH2)
	call(block13801(s(1),s(0),g(bountyShare), l(l1), l(l0)))
	nop(JUMP)

block3832(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3860(s(0), g(guideInvestmentAttractedShareToPay), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3860(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3860(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3872(s(1), s(0),g(guideInvestmentAttractedShareToPay), l(l1), l(l0)))

jump3860(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3868(s(1), s(0)))

block3868(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3872(s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3881
	nop(PUSH2)
	s(2) = 13820
	nop(PUSH2)
	call(block13820(s(1),s(0),g(guideInvestmentAttractedShareToPay), l(l1), l(l0)))
	nop(JUMP)

block3881(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3909(s(0), g(saleEndTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3909(s(2),s(1),s(0),g(saleEndTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3909(s(2), s(1), s(0), g(saleEndTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3921(s(1), s(0),g(saleEndTimestamp), l(l1), l(l0)))

jump3909(s(2), s(1), s(0), g(saleEndTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3917(s(1), s(0)))

block3917(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3921(s(1), s(0), g(saleEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3930
	nop(PUSH2)
	s(2) = 13839
	nop(PUSH2)
	call(block13839(s(1),s(0),g(saleEndTimestamp), l(l1), l(l0)))
	nop(JUMP)

block3930(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3952(s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether)=>
	eq(s(2), 0)
	call(block3964(s(1), s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_usd_per_ether))

jump3952(s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether)=>
	neq(s(2), 0)
	call(block3960(s(1), s(0)))

block3952(s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3952(s(2),s(1),s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3960(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3964(s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_usd_per_ether)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3995
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = new_usd_per_ether
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13845
	nop(PUSH2)
	call(block13845(s(2),s(1),s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block3995(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3997(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	eq(s(2), 0)
	call(block4009(s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, spender))

jump3997(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	neq(s(2), 0)
	call(block4005(s(1), s(0)))

block3997(s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3997(s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4005(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4009(s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4072
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = addedValue
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14012
	nop(PUSH2)
	call(block14012(s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block4072(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4098(s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4098(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4098(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei)=>
	eq(s(2), 0)
	call(block4110(s(1), s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_wei))

jump4098(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei)=>
	neq(s(2), 0)
	call(block4106(s(1), s(0)))

block4106(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4110(s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_wei)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4141
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = input_wei
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14726
	nop(PUSH2)
	call(block14726_1(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(JUMP)

block4141(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4163(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4175(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner, spender))

jump4163(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4171(s(1), s(0)))

block4163(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4163(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4171(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4175(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4260
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14775
	nop(PUSH2)
	call(block14775(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block4260(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4282(s(2), s(1), s(0), g(bonusCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4294(s(1), s(0),g(bonusCap), l(l1), l(l0)))

jump4282(s(2), s(1), s(0), g(bonusCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4290(s(1), s(0)))

block4282(s(0), g(bonusCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4282(s(2),s(1),s(0),g(bonusCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4290(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4294(s(1), s(0), g(bonusCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4303
	nop(PUSH2)
	s(2) = 14910
	nop(PUSH2)
	call(block14910(s(1),s(0),g(bonusCap), l(l1), l(l0)))
	nop(JUMP)

block4303(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4325(s(2), s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4337(s(1), s(0),g(lastStakePriceUSCents), l(l1), l(l0)))

jump4325(s(2), s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4333(s(1), s(0)))

block4325(s(0), g(lastStakePriceUSCents), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4325(s(2),s(1),s(0),g(lastStakePriceUSCents), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4333(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4337(s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4346
	nop(PUSH2)
	s(2) = 14916
	nop(PUSH2)
	call(block14916(s(1),s(0),g(lastStakePriceUSCents), l(l1), l(l0)))
	nop(JUMP)

block4346(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4368(s(0), g(pool), g(owner), calldatasize, caller, callvalue, pool)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4368(s(2),s(1),s(0),g(pool), g(owner), calldatasize, caller, callvalue, pool))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4368(s(2), s(1), s(0), g(pool), g(owner), calldatasize, caller, callvalue, pool)=>
	eq(s(2), 0)
	call(block4380(s(1), s(0),g(pool), g(owner), calldatasize, caller, pool))

jump4368(s(2), s(1), s(0), g(pool), g(owner), calldatasize, caller, callvalue, pool)=>
	neq(s(2), 0)
	call(block4376(s(1), s(0)))

block4376(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4380(s(1), s(0), g(pool), g(owner), calldatasize, caller, pool)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4433
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = pool
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14922
	nop(PUSH2)
	call(block14922(s(2),s(1),s(0),g(pool), g(owner), caller))
	nop(JUMP)

block4433(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4435(s(2), s(1), s(0), g(teamShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4447(s(1), s(0),g(teamShare), l(l1), l(l0)))

jump4435(s(2), s(1), s(0), g(teamShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4443(s(1), s(0)))

block4435(s(0), g(teamShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4435(s(2),s(1),s(0),g(teamShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4443(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4447(s(1), s(0), g(teamShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4456
	nop(PUSH2)
	s(2) = 15082
	nop(PUSH2)
	call(block15082(s(1),s(0),g(teamShare), l(l1), l(l0)))
	nop(JUMP)

block4456(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4484(s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4484(s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4484(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4496(s(1), s(0),g(priceIsFrozen), g(owner), caller))

jump4484(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4492(s(1), s(0)))

block4492(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4496(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4505
	nop(PUSH2)
	s(2) = 15101
	nop(PUSH2)
	call(block15101(s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(JUMP)

block4505(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4507(s(0), g(financePeriodsTimestamps), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4507(s(2),s(1),s(0),g(financePeriodsTimestamps), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4507(s(2), s(1), s(0), g(financePeriodsTimestamps), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4519(s(1), s(0),g(financePeriodsTimestamps), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump4507(s(2), s(1), s(0), g(financePeriodsTimestamps), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4515(s(1), s(0)))

block4515(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4519(s(1), s(0), g(financePeriodsTimestamps), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4550
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15222
	nop(PUSH2)
	call(block15222(s(2),s(1),s(0),g(financePeriodsTimestamps), l(l6), l(l1), l(l0)))
	nop(JUMP)

block4550(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4572(s(2), s(1), s(0), g(teamStakesFrozen), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4584(s(1), s(0),g(teamStakesFrozen), l(l1), l(l0)))

jump4572(s(2), s(1), s(0), g(teamStakesFrozen), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4580(s(1), s(0)))

block4572(s(0), g(teamStakesFrozen), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4572(s(2),s(1),s(0),g(teamStakesFrozen), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4580(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4584(s(1), s(0), g(teamStakesFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4593
	nop(PUSH2)
	s(2) = 15257
	nop(PUSH2)
	call(block15257(s(1),s(0),g(teamStakesFrozen), l(l1), l(l0)))
	nop(JUMP)

block4593(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4619(s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4619(s(2),s(1),s(0),g(financePeriodsCount), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4619(s(2), s(1), s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4631(s(1), s(0),g(financePeriodsCount), l(l1), l(l0)))

jump4619(s(2), s(1), s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4627(s(1), s(0)))

block4627(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4631(s(1), s(0), g(financePeriodsCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4640
	nop(PUSH2)
	s(2) = 15276
	nop(PUSH2)
	call(block15276(s(1),s(0),g(financePeriodsCount), l(l1), l(l0)))
	nop(JUMP)

block4640(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4668(s(2), s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4680(s(1), s(0),g(businessPlannedPeriodDuration), l(l1), l(l0)))

jump4668(s(2), s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4676(s(1), s(0)))

block4668(s(0), g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4668(s(2),s(1),s(0),g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4676(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4680(s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4689
	nop(PUSH2)
	s(2) = 15295
	nop(PUSH2)
	call(block15295(s(1),s(0),g(businessPlannedPeriodDuration), l(l1), l(l0)))
	nop(JUMP)

block4689(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4711(s(0), g(owner), calldatasize, caller, callvalue, new_owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4711(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, new_owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4711(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, new_owner)=>
	eq(s(2), 0)
	call(block4723(s(1), s(0),g(owner), calldatasize, caller, new_owner))

jump4711(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, new_owner)=>
	neq(s(2), 0)
	call(block4719(s(1), s(0)))

block4719(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4723(s(1), s(0), g(owner), calldatasize, caller, new_owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4776
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = new_owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15301
	nop(PUSH2)
	call(block15301(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block4776(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4778(s(2), s(1), s(0), g(bountyCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4790(s(1), s(0),g(bountyCap), l(l1), l(l0)))

jump4778(s(2), s(1), s(0), g(bountyCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4786(s(1), s(0)))

block4778(s(0), g(bountyCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4778(s(2),s(1),s(0),g(bountyCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4786(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4790(s(1), s(0), g(bountyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4799
	nop(PUSH2)
	s(2) = 15461
	nop(PUSH2)
	call(block15461(s(1),s(0),g(bountyCap), l(l1), l(l0)))
	nop(JUMP)

block4799(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4821(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block4833(s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

jump4821(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block4829(s(1), s(0)))

block4821(s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4821(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4829(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4833(s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4842
	nop(PUSH2)
	s(2) = 15467
	nop(PUSH2)
	call(block15467(s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(JUMP)

block4842(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4844(s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(priceIsFrozen)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump4844(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4844(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block4883(s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump4844(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block4875(s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block4875(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(6) = 4882
	nop(PUSH2)
	s(7) = 16368
	nop(PUSH2)
	call(block16368(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block4882(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block4883(s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4883(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 4891
	nop(PUSH2)
	s(7) = 16683
	nop(PUSH2)
	call(block16683(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4891(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 4900
	nop(PUSH2)
	s(7) = callvalue
	nop(CALLVALUE)
	s(8) = 14726
	nop(PUSH2)
	call(block14726_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4900(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	call(jump4900(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block5437(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

jump4900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block4912(s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump4912(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block4940(s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump4912(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block4930(s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4912(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 21
	nop(PUSH1)
	s(7) = g(distributedSaleStakes)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 24
	nop(PUSH1)
	s(6) = g(saleCap)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump4912(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4930(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = callvalue
	nop(CALLVALUE)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 4961
	nop(PUSH2)
	call(block4961(s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4940(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 21
	nop(PUSH1)
	s(6) = g(distributedSaleStakes)
	nop(SLOAD)
	s(7) = 24
	nop(PUSH1)
	s(7) = g(saleCap)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 4958
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 7036
	nop(PUSH2)
	call(block7036(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4958(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	call(block4961(s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4961(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 5018
	nop(PUSH2)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(saleShare)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(teamShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(2)
	nop(DUP7)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 16956
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block16956_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5018(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	call(jump5018(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5018(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block5348(s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5018(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block5030(s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5030(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = s(1)
	nop(DUP5)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(distributedTeamStakes)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(distributedTeamStakes) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 5183
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(1)
	nop(DUP9)
	s(11) = 16983
	nop(PUSH2)
	call(block16983(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5183(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 18
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump5183(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5183(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), s(6))
	call(block5347(s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5183(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), s(6))
	call(block5336(s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5336(s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 5346
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 17677
	nop(PUSH2)
	call(block17677(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5346(s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5347(s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

block5347(s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5348(s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

block5348(s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 24
	nop(PUSH1)
	s(6) = g(saleCap)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump5348(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5348(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block5432(s(5), s(4), s(3), s(2), s(1), s(0)))

jump5348(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block5359(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

jump5359(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block5430(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5359(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block5421(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5359(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = callvalue
	nop(CALLVALUE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5359(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5421(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5430(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5432(s(5),s(4),s(3),s(2),s(1),s(0)))

block5432(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(6) = 5509
	nop(PUSH2)
	call(block5509(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump5437(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block5507(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5437(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block5498(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5437(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = callvalue
	nop(CALLVALUE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5437(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5498(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5507(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5509(s(5),s(4),s(3),s(2),s(1),s(0)))

block5509(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block868())
	nop(JUMP)

block5516(s(1), s(0), g(transferedToPool), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 38
	nop(PUSH1)
	s(2) = g(transferedToPool)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block891(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5522(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 14
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 31869382405762890339674382399805784031119402398705422713077115816609784528896
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block934(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5579(s(1), s(0), g(saleCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(saleCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1078(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5585(s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 5782
	nop(PUSH2)
	call(jump5585(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMPI)

jump5585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 1 )
	call(block5782(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 1 )
	call(block5675(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block5675(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump5675(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5675(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block5781(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5675(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block5763(s(5), s(4), s(3), s(2), s(1), s(0),g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block5763(s(5), s(4), s(3), s(2), s(1), s(0), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(teamStakesFrozen)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(block5781(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block5781(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block5782(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block5782(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5782(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5782(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(5), 0)
	call(block5793(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5782(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(5), 0)
	call(block5789(s(4), s(3), s(2), s(1), s(0)))

block5789(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block5793(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1175(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6033(s(1), s(0), g(pool), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(pool)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1222(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6071(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1309(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6077(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block6138(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump6077(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block6134(s(5), s(4), s(3), s(2), s(1), s(0)))

block6077(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump6077(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6134(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6138(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump6138(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6138(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block6216(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump6138(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block6212(s(5), s(4), s(3), s(2), s(1), s(0)))

block6212(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump6216(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block6355(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump6216(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block6351(s(5), s(4), s(3), s(2), s(1), s(0)))

block6216(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump6216(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6351(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6355(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 6437
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 18512
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block18512_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block6437(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 6586
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 18537
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block18537_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block6586(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 6796
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 4
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 18512
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block18512_4(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block6796(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1438(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump7036(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(11), 0)
	call(block7068(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump7036(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(11), 0)
	call(block7067(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7036(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 100
	nop(PUSH1)
	s(10) = 6
	nop(PUSH1)
	s(10) = g(usdPerEther)
	nop(SLOAD)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = 1000000000000000000
	nop(PUSH8)
	s(11) = 26
	nop(PUSH1)
	s(11) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	call(jump7036(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7067(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7068(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block4958(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block7076(s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block7089(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))

jump7089(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	geq(s(7), s(6))
	call(block7178(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0)))

jump7089(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	lt(s(7), s(6))
	call(block7119(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))

block7089(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6) = 36
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(financePeriodsCount)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump7089(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7119(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	lt(s(9), s(8))
	call(block7142(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))

jump7119(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	geq(s(9), s(8))
	call(block7141(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7119(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 37
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(financePeriodsTimestamps)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump7119(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7141(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7142(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump7142(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7142(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	geq(s(7), s(6))
	call(block7165(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))

jump7142(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	lt(s(7), s(6))
	call(block7161(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0)))

block7161(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0))=>
	s(6) = 7178
	nop(PUSH2)
	call(block7178(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block7165(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 7089
	nop(PUSH2)
	call(block7089(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(JUMP)

jump7178(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block7345(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump7178(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block7344(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7178(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 29
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = 36
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(financePeriodsCount)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 29
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump7178(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7344(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7345(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1594(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7356(s(1), s(0), g(saleShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(saleShare)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1637(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7375(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(block1686(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7380(s(1), s(0), g(withdrawnAmountForSalePromotion), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 35
	nop(PUSH1)
	s(2) = g(withdrawnAmountForSalePromotion)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1735(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7386(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7386(s(4),s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7386(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block7478(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7386(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block7474(s(2), s(1), s(0)))

block7474(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7478(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 29
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 74690229460080076773977143971028755641734768986340892270864022976825899138355
	nop(PUSH32)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	call(block1822(s(0)))
	nop(JUMP)

block7671(s(1), s(0), g(saleStartTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(2) = g(saleStartTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1845(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7677(s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(contractCreatedTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1888(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7683(s(1), s(0), g(distributedTeamStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(distributedTeamStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1931(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7689(s(2), s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 18
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(2)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(3)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(4)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(1)
	nop(DUP6)
	call(block2018(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block7775(s(1), s(0), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(usdPerEther)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2133(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7781(s(1), s(0), g(totalWithdrawn), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(totalWithdrawn)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2176(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7787(s(3), s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump7787(s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7787(s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block7879(s(3), s(2), s(1), s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump7787(s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block7875(s(3), s(2), s(1), s(0)))

block7875(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block7879(s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 38542286264638929965756872400505687355306226076748146400959412412322190655518
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 27
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(targetPrice)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump7879(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7879(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block7931(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump7879(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block7930(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7930(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7931(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(8), s(7))
	call(block8003(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6)))

jump7931(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(8), s(7))
	call(block8002(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7931(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 27
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(targetPrice)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump7931(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8002(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8003(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2254(s(0)))
	nop(JUMP)

jump8021(s(4), s(3), s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block8113(s(2), s(1), s(0),g(poolCapUSD), l(l4), l(l1), l(l0)))

jump8021(s(4), s(3), s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block8109(s(2), s(1), s(0)))

block8021(s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump8021(s(4),s(3),s(2),s(1),s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8109(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block8113(s(2), s(1), s(0), g(poolCapUSD), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 114194013262987755910992578155860030329241928304966195380937679144418034219059
	nop(PUSH32)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(poolCapUSD)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(poolCapUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2299(s(0)))
	nop(JUMP)

block8188(s(1), s(0), g(totalInvested), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(totalInvested)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2322(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8194(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump8194(s(3),s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8194(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	eq(s(3), s(2))
	call(block8286(s(1), s(0),g(priceIsFrozen)))

jump8194(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	neq(s(3), s(2))
	call(block8282(s(1), s(0)))

block8282(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block8286(s(1), s(0), g(priceIsFrozen))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 28
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(priceIsFrozen)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(priceIsFrozen) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block2365(s(0)))
	nop(JUMP)

block8315(s(1), s(0), g(maxAmountForSalePromotion), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 34
	nop(PUSH1)
	s(2) = g(maxAmountForSalePromotion)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2388(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8321(s(1), s(0), g(distributedBountyStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(2) = g(distributedBountyStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2431(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8327(s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2474(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump8333(s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(3), 0)
	call(block8424(s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump8333(s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(3), 0)
	call(block8420(s(2), s(1), s(0)))

block8333(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l6) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump8333(s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8420(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block8424(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 18
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 4
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump8424(s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8424(s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block8581(s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump8424(s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block8577(s(2), s(1), s(0)))

block8577(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump8581(s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(4), s(3))
	call(block8929(s(2), s(1), s(0)))

jump8581(s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(4), s(3))
	call(block8786(s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

block8581(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 18
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 4
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 18
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	call(jump8581(s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8786(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(3) = 8928
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(7) = 17677
	nop(PUSH2)
	call(block17677_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block8928(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block8929(s(2),s(1),s(0)))

block8929(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2561(s(0)))
	nop(JUMP)

block8932(s(1), s(0), g(distributedSaleStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 21
	nop(PUSH1)
	s(2) = g(distributedSaleStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2584(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8938(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	call(jump8938(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8938(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block9211(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump8938(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block9077(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

block9077(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 9359
	nop(PUSH2)
	call(block9359(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block9211(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 9230
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 18512
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block18512_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block9230(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block9359(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block9359(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(9) = 4
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block2681(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9595(s(1), s(0), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(poolCapUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2728(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9601(s(1), s(0), g(teamCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(teamCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2771(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9607(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2858(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9680(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	eq(s(3), s(2))
	call(block9772(s(1), s(0),g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp))

jump9680(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	neq(s(3), s(2))
	call(block9768(s(1), s(0)))

block9680(s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump9680(s(3),s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9768(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block9772(s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp)=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(3) = timestamp
	nop(TIMESTAMP)
	call(jump9772(s(3),s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9772(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp)=>
	leq(s(3), s(2))
	call(block9810(s(1), s(0)))

jump9772(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp)=>
	gt(s(3), s(2))
	call(block9783(s(1), s(0),g(teamStakesFrozen)))

block9783(s(1), s(0), g(teamStakesFrozen))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(teamStakesFrozen)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(teamStakesFrozen) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block9810(s(1),s(0)))

block9810(s(1), s(0))=>
	nop(JUMPDEST)
	call(block2901(s(0)))
	nop(JUMP)

block9812(s(2), s(1), s(0), g(supplyCap), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(supplyCap)
	nop(SLOAD)
	s(5) = 100
	nop(PUSH1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump9812(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(supplyCap), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9812(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(supplyCap), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block9893(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump9812(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(supplyCap), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block9892(s(5), s(4), s(3), s(2), s(1), s(0)))

block9892(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9893(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2968(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9901(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block9916(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0)))

jump9901(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block9915(s(4), s(3), s(2), s(1), s(0)))

block9901(s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 27
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(targetPrice)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump9901(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9915(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9916(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3033(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9936(s(1), s(0), g(bonusShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 32
	nop(PUSH1)
	s(2) = g(bonusShare)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3076(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9942(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3119(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9980(s(1), s(0), g(supplyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(supplyCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3206(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9986(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 37218633419556665902672161853149578535905948287684913352831634630229035581440
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3249(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10043(s(1), s(0), g(distributedBonusStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 31
	nop(PUSH1)
	s(2) = g(distributedBonusStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3393(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10049(s(1), s(0), g(priceIsFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 28
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(priceIsFrozen)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3436(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10068(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(2)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	nop(DUP4)
	call(block3527(s(4),s(3),s(2),s(1),s(0), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump10123(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 1 )
	call(block10320(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump10123(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 1 )
	call(block10213(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block10123(s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 10320
	nop(PUSH2)
	call(jump10123(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMPI)

jump10213(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block10319(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump10213(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block10301(s(5), s(4), s(3), s(2), s(1), s(0),g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block10213(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump10213(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10301(s(5), s(4), s(3), s(2), s(1), s(0), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(teamStakesFrozen)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(block10319(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block10319(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block10320(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block10320(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump10320(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10320(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(5), 0)
	call(block10331(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump10320(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(5), 0)
	call(block10327(s(4), s(3), s(2), s(1), s(0)))

block10327(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block10331(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump10331(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10331(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), s(5))
	call(block10391(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump10331(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), s(5))
	call(block10387(s(4), s(3), s(2), s(1), s(0)))

block10387(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block10391(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	call(jump10391(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10391(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block10469(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump10391(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block10465(s(4), s(3), s(2), s(1), s(0)))

block10465(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block10469(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 10551
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 18512
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block18512_6(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block10551(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 10700
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 18537
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block18537_6(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block10700(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block3642(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10878(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 10949
	nop(PUSH2)
	s(11) = 22
	nop(PUSH1)
	s(11) = g(totalInvested)
	nop(SLOAD)
	s(12) = 10935
	nop(PUSH2)
	s(13) = 1000000000000000000
	nop(PUSH8)
	s(14) = 10921
	nop(PUSH2)
	s(15) = 6
	nop(PUSH1)
	s(15) = g(usdPerEther)
	nop(SLOAD)
	s(16) = 5
	nop(PUSH1)
	s(16) = g(poolCapUSD)
	nop(SLOAD)
	s(17) = 16956
	nop(PUSH2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 4294967295
	nop(PUSH4)
	s(17) = and(s(18), s(17))
	nop(AND)
	call(block16956(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block10921(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 18567
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18567(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block10935(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 18512
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block18512(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block10949(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block16694(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump10954(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block11042(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump10954(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block11038(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10954(s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump10954(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11038(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump11042(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block11254(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump11042(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block11250(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11042(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 18
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	call(jump11042(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11250(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump11254(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block11270(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump11254(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block11266(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11254(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 20
	nop(PUSH1)
	s(7) = g(saleEndTimestamp)
	nop(SLOAD)
	s(8) = timestamp
	nop(TIMESTAMP)
	call(jump11254(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11266(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block11270(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	call(block11275(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

block11275(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 1
	nop(PUSH1)
	s(8) = 36
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(financePeriodsCount)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump11275(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11275(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block13390(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump11275(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block11308(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

block11308(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	s(7) = 37
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(financePeriodsTimestamps)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	call(jump11308(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11308(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(10), s(9))
	call(block11325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump11308(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(10), s(9))
	call(block11324(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11324(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block13377(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump11325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block11344(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

block11325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 0
	nop(PUSH1)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = timestamp
	nop(TIMESTAMP)
	call(jump11325(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11344(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(7) = 36
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(financePeriodsCount)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(totalInvested)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump11344(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11344(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block11382(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump11344(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block11381(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11381(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11382(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block11470(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump11382(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block11469(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11382(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(totalInvested)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = 22
	nop(PUSH1)
	s(7) = g(totalInvested)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 18
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump11382(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11469(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11470(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = 18
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(saleShare)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(teamShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 18
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump11470(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11470(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block11725(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump11470(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block11724(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11724(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11725(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 11844
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 2
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(owner)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 18512
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18512_8(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block11844(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(owner)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedTeamStakes)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedTeamStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 12043
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 2
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 18512
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18512_9(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block12043(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 12131
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 22
	nop(PUSH1)
	s(9) = g(totalInvested)
	nop(SLOAD)
	s(10) = 18512
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18512_10(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block12131(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalInvested) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 12176
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 12162
	nop(PUSH2)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 0
	nop(PUSH1)
	s(11) = g(totalSupply)
	nop(SLOAD)
	s(12) = 18512
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block18512_11(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block12162(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 18512
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18512_12(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

jump12176(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(8), s(7))
	call(block12992(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump12176(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(8), s(7))
	call(block12417(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

block12176(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalSupply) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 18
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 21
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedSaleStakes)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedSaleStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 4
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump12176(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12417(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(7) = 36
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(financePeriodsCount)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump12417(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12417(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block12519(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump12417(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block12518(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12518(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12519(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 18
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = caller
	nop(CALLER)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 4
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 18
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(3)
	nop(SLOAD)
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedBonusStakes)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedBonusStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 2
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block12992(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

block12992(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(totalWithdrawn)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalWithdrawn) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2300
	nop(PUSH2)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(7)
	nop(DUP9)
	s(17) = s(8)
	nop(DUP9)
	s(11) = 1
	nop(CALL)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump12992(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12992(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(8), 0)
	call(block13222(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump12992(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(8), 0)
	call(block13213(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block13213(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block13222(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(7) = 29065665065941190794663224841002571248325211392503539961938724776095849587148
	nop(PUSH32)
	s(8) = caller
	nop(CALLER)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 36
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(financePeriodsCount)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(13)
	nop(DUP2)
	l(l2) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(8)
	s(8) = s(13)
	s(13) = s(14)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	s(7) = 13390
	nop(PUSH2)
	call(block13390(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block13377(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(7) = 11275
	nop(PUSH2)
	call(block11275(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(JUMP)

block13390(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3732(s(0)))
	nop(JUMP)

jump13397(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block13489(s(3), s(2), s(1), s(0),g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump13397(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block13485(s(3), s(2), s(1), s(0)))

block13397(s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump13397(s(5),s(4),s(3),s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13485(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump13489(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	leq(s(5), s(4))
	call(block13510(s(3), s(2), s(1), s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump13489(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	gt(s(5), s(4))
	call(block13506(s(3), s(2), s(1), s(0)))

block13489(s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 16
	nop(PUSH1)
	s(4) = g(bountyCap)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 15
	nop(PUSH1)
	s(6) = g(distributedBountyStakes)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump13489(s(5),s(4),s(3),s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13506(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13510(s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 13592
	nop(PUSH2)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = 18537
	nop(PUSH2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(block18537_7(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block13592(s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 15
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(distributedBountyStakes)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(distributedBountyStakes) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 62614538958505596320647097984881409505025540992403589762143773726516554587899
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block3809(s(0)))
	nop(JUMP)

block13801(s(1), s(0), g(bountyShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(bountyShare)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3832(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13820(s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 33
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3881(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13839(s(1), s(0), g(saleEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(2) = g(saleEndTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3930(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump13845(s(4), s(3), s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block13937(s(2), s(1), s(0),g(usdPerEther), l(l4), l(l1), l(l0)))

jump13845(s(4), s(3), s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block13933(s(2), s(1), s(0)))

block13845(s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump13845(s(4),s(3),s(2),s(1),s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13933(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13937(s(2), s(1), s(0), g(usdPerEther), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 108458020438957567819856154950935969306536107057257815563412500765568210918370
	nop(PUSH32)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(usdPerEther)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 6
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(usdPerEther) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3995(s(0)))
	nop(JUMP)

block14012(s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 14209
	nop(PUSH2)
	call(jump14012(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMPI)

jump14012(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 1 )
	call(block14209(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump14012(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 1 )
	call(block14102(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

jump14102(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block14208(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump14102(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block14190(s(5), s(4), s(3), s(2), s(1), s(0),g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block14102(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump14102(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14190(s(5), s(4), s(3), s(2), s(1), s(0), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(teamStakesFrozen)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(block14208(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block14208(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block14209(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump14209(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(5), 0)
	call(block14220(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump14209(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(5), 0)
	call(block14216(s(4), s(3), s(2), s(1), s(0)))

block14209(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump14209(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14216(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block14220(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 14363
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 18537
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block18537_8(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block14363(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(8) = 4
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4072(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14726(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block14757(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14726(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block14756_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14726(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 26
	nop(PUSH1)
	s(10) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(11) = 1000000000000000000
	nop(PUSH8)
	s(12) = 100
	nop(PUSH1)
	s(13) = 6
	nop(PUSH1)
	s(13) = g(usdPerEther)
	nop(SLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump14726(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14756(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14757(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block14767(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14757(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block14766_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14757(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	nop(DUP2)
	call(jump14757(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14766(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14767(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	call(block16699(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block14775(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4260(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14910(s(1), s(0), g(bonusCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 30
	nop(PUSH1)
	s(2) = g(bonusCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4303(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14916(s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 26
	nop(PUSH1)
	s(2) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4346(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14922(s(4), s(3), s(2), s(1), s(0), g(pool), g(owner), caller)=>
	eq(s(4), s(3))
	call(block15014(s(2), s(1), s(0),g(pool)))

jump14922(s(4), s(3), s(2), s(1), s(0), g(pool), g(owner), caller)=>
	neq(s(4), s(3))
	call(block15010(s(2), s(1), s(0)))

block14922(s(2), s(1), s(0), g(pool), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump14922(s(4),s(3),s(2),s(1),s(0),g(pool), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15010(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block15014(s(2), s(1), s(0), g(pool))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 14
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(pool)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(pool) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4433(s(0)))
	nop(JUMP)

block15082(s(1), s(0), g(teamShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(teamShare)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4456(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15101(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump15101(s(3),s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15101(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	eq(s(3), s(2))
	call(block15193(s(1), s(0),g(priceIsFrozen)))

jump15101(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	neq(s(3), s(2))
	call(block15189(s(1), s(0)))

block15189(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block15193(s(1), s(0), g(priceIsFrozen))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 28
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(priceIsFrozen)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(priceIsFrozen) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block4505(s(0)))
	nop(JUMP)

block15222(s(2), s(1), s(0), g(financePeriodsTimestamps), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 37
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(financePeriodsTimestamps)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump15222(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsTimestamps), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15222(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), l(l6), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block15237(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0)))

jump15222(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsTimestamps), l(l6), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block15236(s(4), s(3), s(2), s(1), s(0)))

block15236(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15237(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4550(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15257(s(1), s(0), g(teamStakesFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(teamStakesFrozen)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4593(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15276(s(1), s(0), g(financePeriodsCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 36
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(financePeriodsCount)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4640(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15295(s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(businessPlannedPeriodDuration)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4689(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump15301(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block15393(s(2), s(1), s(0),g(owner)))

jump15301(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block15389(s(2), s(1), s(0)))

block15301(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump15301(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15389(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block15393(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4776(s(0)))
	nop(JUMP)

block15461(s(1), s(0), g(bountyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(2) = g(bountyCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4799(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump15467(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block15564(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump15467(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block15560(s(4), s(3), s(2), s(1), s(0)))

block15467(s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump15467(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15560(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump15564(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block15886(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump15564(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block15575(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize))

block15564(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 20
	nop(PUSH1)
	s(5) = g(saleEndTimestamp)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	call(jump15564(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalWithdrawn), g(totalInvested), g(saleEndTimestamp), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15575(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	lt(s(6), s(5))
	call(block15592(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize))

jump15575(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	geq(s(6), s(5))
	call(block15588(s(4), s(3), s(2), s(1), s(0)))

block15575(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	s(5) = 34
	nop(PUSH1)
	s(5) = g(maxAmountForSalePromotion)
	nop(SLOAD)
	s(6) = 35
	nop(PUSH1)
	s(6) = g(withdrawnAmountForSalePromotion)
	nop(SLOAD)
	call(jump15575(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15588(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump15592(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block15623(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize))

jump15592(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block15622(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15592(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = 36
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(financePeriodsCount)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 22
	nop(PUSH1)
	s(6) = g(totalInvested)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump15592(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(totalInvested), g(pool), l(l4), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15622(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15623(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 34
	nop(PUSH1)
	s(5) = g(maxAmountForSalePromotion)
	nop(SLOAD)
	s(6) = 35
	nop(PUSH1)
	s(6) = g(withdrawnAmountForSalePromotion)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump15623(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15623(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	gt(s(6), s(5))
	call(block15681(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize))

jump15623(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	leq(s(6), s(5))
	call(block15642(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(withdrawnAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize))

block15642(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(withdrawnAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	s(5) = s(2)
	nop(DUP3)
	s(6) = 35
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(withdrawnAmountForSalePromotion)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(withdrawnAmountForSalePromotion) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 38
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(transferedToPool)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(transferedToPool) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 15709
	nop(PUSH2)
	call(block15709(s(4),s(3),s(2),s(1),s(0),g(pool), l(l4), l(l1), l(l0), returndatasize))
	nop(JUMP)

block15681(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(withdrawnAmountForSalePromotion), g(maxAmountForSalePromotion), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = 35
	nop(PUSH1)
	s(5) = g(withdrawnAmountForSalePromotion)
	nop(SLOAD)
	s(6) = 34
	nop(PUSH1)
	s(6) = g(maxAmountForSalePromotion)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 34
	nop(PUSH1)
	s(5) = g(maxAmountForSalePromotion)
	nop(SLOAD)
	s(6) = 35
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(withdrawnAmountForSalePromotion) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 34
	nop(PUSH1)
	s(5) = g(maxAmountForSalePromotion)
	nop(SLOAD)
	s(6) = 38
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(transferedToPool) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block15709(s(4),s(3),s(2),s(1),s(0),g(pool), l(l4), l(l1), l(l0), returndatasize))

jump15709(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block15813(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

jump15709(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block15804(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block15709(s(4), s(3), s(2), s(1), s(0), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = 14
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(pool)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump15709(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(pool), l(l4), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15804(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block15813(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 39485088300647221686824530596291872725412487376170972045504057697509214676812
	nop(PUSH32)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG1)
	s(5) = 16363
	nop(PUSH2)
	call(block16363(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block15886(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block15891(s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump15891(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block16362(s(4), s(3), s(2), s(1), s(0)))

jump15891(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block15921(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block15891(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 36
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(financePeriodsCount)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump15891(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15921(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	s(5) = 37
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(financePeriodsTimestamps)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump15921(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15921(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block15938(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump15921(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block15937(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15937(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15938(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(6), 1 )
	call(block16024(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump15938(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(6), 1 )
	call(block15957(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block15938(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = lt(s(6), s(5))
	nop(LT)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 16024
	nop(PUSH2)
	call(jump15938(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMPI)

block15957(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 36
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(financePeriodsCount)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump15957(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15957(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block16023(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump15957(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block15991(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block15991(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(POP)
	s(5) = 37
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(financePeriodsTimestamps)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump15991(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15991(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block16009(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump15991(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block16008(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16008(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16009(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block16023(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block16023(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block16024(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump16024(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block16349(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump16024(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block16030(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block16024(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump16024(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16030(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	s(5) = 36
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(financePeriodsCount)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(totalWithdrawn)
	nop(SLOAD)
	s(7) = 22
	nop(PUSH1)
	s(7) = g(totalInvested)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump16030(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16030(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(7), 0)
	call(block16072(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

jump16030(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(7), 0)
	call(block16071(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16071(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16072(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(6), s(5))
	call(block16344(s(4), s(3), s(2), s(1), s(0)))

jump16072(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(6), s(5))
	call(block16086(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block16072(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 38
	nop(PUSH1)
	s(5) = g(transferedToPool)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	call(jump16072(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16086(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	s(5) = 38
	nop(PUSH1)
	s(5) = g(transferedToPool)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(3)
	nop(DUP3)
	call(jump16086(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16086(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(6), s(5))
	call(block16150(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), returndatasize))

jump16086(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(6), s(5))
	call(block16124(s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block16124(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	call(block16150(s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), returndatasize))

jump16150(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block16270(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

jump16150(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block16261(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block16150(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 38
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(transferedToPool)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(transferedToPool) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 14
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(pool)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump16150(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(pool), l(l4), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16261(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block16270(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 39485088300647221686824530596291872725412487376170972045504057697509214676812
	nop(PUSH32)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG1)
	call(block16344(s(4),s(3),s(2),s(1),s(0)))

block16344(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(5) = 16362
	nop(PUSH2)
	call(block16362(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block16349(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 15891
	nop(PUSH2)
	call(block15891(s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(financePeriodsTimestamps), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block16362(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block16363(s(4),s(3),s(2),s(1),s(0)))

block16363(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4842(s(0)))
	nop(JUMP)

block16368(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 19
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump16368(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16368(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(12), s(11))
	call(block16457(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16368(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(12), s(11))
	call(block16385(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16385(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block16400(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16385(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block16399(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16385(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(11) = 27
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump16385(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16399(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16400(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	s(11) = 27
	nop(PUSH1)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump16400(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16400(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block16429(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16400(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block16428(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16428(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16429(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 13
	nop(PUSH1)
	s(11) = g(contractCreatedTimestamp)
	nop(SLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 19
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 16649
	nop(PUSH2)
	call(block16649(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block16457(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 19
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(11)
	nop(DUP1)
	call(jump16457(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16457(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block16476(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16457(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block16470(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16470(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(11) = 20
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	call(block16476(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16476(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(11), 0)
	call(block16554(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16476(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(11), 0)
	call(block16482(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16476(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump16476(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16482(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block16497(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16482(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block16496(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16482(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(11) = 27
	nop(PUSH1)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump16482(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16496(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16497(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	s(11) = 27
	nop(PUSH1)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump16497(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16497(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block16526(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16497(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block16525(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16525(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16526(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 19
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 20
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 16648
	nop(PUSH2)
	call(block16648(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block16554(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 20
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(11)
	nop(DUP1)
	call(jump16554(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16554(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block16573(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16554(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block16567(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16567(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(11) = 9
	nop(PUSH1)
	s(11) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	call(block16573(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16573(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump16573(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16573(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(11), 0)
	call(block16647(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16573(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(11), 0)
	call(block16579(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16579(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block16594(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16579(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block16593(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16579(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(11) = 27
	nop(PUSH1)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump16579(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16593(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16594(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block16623(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16594(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block16622(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16594(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	s(11) = 27
	nop(PUSH1)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump16594(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16622(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16623(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 20
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 9
	nop(PUSH1)
	s(11) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	call(block16647(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16647(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block16648(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16648(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block16649(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16649(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(13), 0)
	call(block16668(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16649(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(13), 0)
	call(block16667(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16649(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(7)
	nop(DUP5)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(9)
	nop(DUP4)
	s(14) = timestamp
	nop(TIMESTAMP)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump16649(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16667(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16668(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 26
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(lastStakePriceUSCents) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4882(s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16683(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 16699
	nop(PUSH2)
	s(8) = 16694
	nop(PUSH2)
	s(9) = 10878
	nop(PUSH2)
	call(block10878(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16694(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 14726
	nop(PUSH2)
	call(block14726(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16699(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 21
	nop(PUSH1)
	s(8) = g(distributedSaleStakes)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 24
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(saleCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 16767
	nop(PUSH2)
	s(8) = 25
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(saleShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 16753
	nop(PUSH2)
	s(10) = 100
	nop(PUSH1)
	s(11) = 24
	nop(PUSH1)
	s(11) = g(saleCap)
	nop(SLOAD)
	s(12) = 18567
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block18567_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16753(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 16956
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block16956_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16767(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 7
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(supplyCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 16831
	nop(PUSH2)
	s(8) = 100
	nop(PUSH1)
	s(9) = 16817
	nop(PUSH2)
	s(10) = 11
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(teamShare)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 7
	nop(PUSH1)
	s(11) = g(supplyCap)
	nop(SLOAD)
	s(12) = 18567
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block18567_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16817(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 16956
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block16956_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16831(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(teamCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 16879
	nop(PUSH2)
	s(8) = 100
	nop(PUSH1)
	s(9) = 16865
	nop(PUSH2)
	s(10) = 32
	nop(PUSH1)
	s(10) = g(bonusShare)
	nop(SLOAD)
	s(11) = 7
	nop(PUSH1)
	s(11) = g(supplyCap)
	nop(SLOAD)
	s(12) = 18567
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block18567_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16865(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 16956
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block16956_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16879(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 30
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(bonusCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 16948
	nop(PUSH2)
	s(8) = 30
	nop(PUSH1)
	s(8) = g(bonusCap)
	nop(SLOAD)
	s(9) = 16934
	nop(PUSH2)
	s(10) = 10
	nop(PUSH1)
	s(10) = g(teamCap)
	nop(SLOAD)
	s(11) = 16920
	nop(PUSH2)
	s(12) = 24
	nop(PUSH1)
	s(12) = g(saleCap)
	nop(SLOAD)
	s(13) = 7
	nop(PUSH1)
	s(13) = g(supplyCap)
	nop(SLOAD)
	s(14) = 18512
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18512_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16920(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 18512
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block18512_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16934(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 18512
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18512_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16948(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 16
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(bountyCap) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block4891(s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump16956(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(21), 0)
	call(block16970(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(21), 0)
	call(block16969_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(15)
	nop(DUP5)
	s(21) = s(19)
	nop(DUP2)
	call(jump16956(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16969(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16970(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10921(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump16983(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(12), s(11))
	call(block16998(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16983(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(12), s(11))
	call(block16994(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16983(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	call(jump16983(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16994(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block16998(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 17080
	nop(PUSH2)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 2
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = 18537
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18537(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17080(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 17168
	nop(PUSH2)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 0
	nop(PUSH1)
	s(13) = g(totalSupply)
	nop(SLOAD)
	s(14) = 18537
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18537_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17168(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalSupply) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 17195
	nop(PUSH2)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 21
	nop(PUSH1)
	s(13) = g(distributedSaleStakes)
	nop(SLOAD)
	s(14) = 18537
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18537_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17195(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 21
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(distributedSaleStakes) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 17222
	nop(PUSH2)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 22
	nop(PUSH1)
	s(13) = g(totalInvested)
	nop(SLOAD)
	s(14) = 18537
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18537_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17222(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 22
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalInvested) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 17313
	nop(PUSH2)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 18
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = 18537
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18537_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17313(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 18
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 17468
	nop(PUSH2)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 18
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = 18537
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18537_4(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17468(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 18
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 3763212831111208910400525981279380030022262317506620506771875353129738587918
	nop(PUSH32)
	s(12) = s(7)
	nop(DUP5)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(10)
	nop(DUP5)
	s(16) = 26
	nop(PUSH1)
	s(16) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(12)
	nop(DUP7)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	l(l1) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(13)
	nop(DUP6)
	s(20) = s(18)
	nop(DUP2)
	l(l4) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(18)
	nop(DUP2)
	l(l2) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(18)
	nop(DUP2)
	l(l3) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(18)
	nop(DUP2)
	l(l5) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(12)
	s(12) = s(18)
	s(18) = s(19)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5183(s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17677(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 100
	nop(PUSH1)
	s(13) = 17724
	nop(PUSH2)
	s(14) = 25
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(15) = g(saleShare)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 100
	nop(PUSH1)
	s(16) = 32
	nop(PUSH1)
	s(16) = g(bonusShare)
	nop(SLOAD)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = 16956
	nop(PUSH2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 4294967295
	nop(PUSH4)
	s(16) = and(s(17), s(16))
	nop(AND)
	call(block16956_4(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17724(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(8)
	nop(DUP6)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump17724(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17724(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block17735(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump17724(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block17734(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17734(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17735(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(13), s(12))
	call(block17759(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump17735(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(13), s(12))
	call(block17755(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17735(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 30
	nop(PUSH1)
	s(12) = g(bonusCap)
	nop(SLOAD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 31
	nop(PUSH1)
	s(14) = g(distributedBonusStakes)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	call(jump17735(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17755(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block17759(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 100
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump17759(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17759(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block17791(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump17759(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block17790(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17790(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17791(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 29
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = 18
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(7)
	nop(DUP10)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l7) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 4
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 18
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 3
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(2)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 18
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(3)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 2
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(4)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 31
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(distributedBonusStakes)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(distributedBonusStakes) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(totalSupply)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(totalSupply) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 106190483984544320851992182089162347111658405430666556957074112094424747200476
	nop(PUSH32)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 18
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(7)
	nop(DUP10)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l7) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 4
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gl = s(16)
	s(16) = fresh(5)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(11)
	nop(DUP5)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(13)
	nop(DUP6)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	l(l1) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(18)
	nop(DUP2)
	l(l4) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	l(l2) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(18)
	nop(DUP2)
	l(l3) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(13)
	s(13) = s(18)
	s(18) = s(19)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5346(s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump18512(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(15), s(14))
	call(block18526(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(15), s(14))
	call(block18525_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	call(jump18512(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18525(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18526(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10949(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump18537(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block18557(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block18556_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump18537(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18556(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18557(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17080(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump18567(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 1 )
	call(block18600(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 1 )
	call(block18585_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18567(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(13)
	nop(DUP5)
	s(17)= eq(s(18), s(17))
	nop(EQ)
	s(18) = s(17)
	nop(DUP1)
	s(19) = 18600
	nop(PUSH2)
	call(jump18567(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18585(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block18597(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block18596(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18585(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	call(jump18585(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18596(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18597(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	call(block18600_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18600(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block18608(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block18607_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18607(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18608(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10935(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block10878_0(s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 10949
	nop(PUSH2)
	s(4) = 22
	nop(PUSH1)
	s(4) = g(totalInvested)
	nop(SLOAD)
	s(5) = 10935
	nop(PUSH2)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = 10921
	nop(PUSH2)
	s(8) = 6
	nop(PUSH1)
	s(8) = g(usdPerEther)
	nop(SLOAD)
	s(9) = 5
	nop(PUSH1)
	s(9) = g(poolCapUSD)
	nop(SLOAD)
	s(10) = 16956
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block16956_6(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10878_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 10949
	nop(PUSH2)
	s(12) = 22
	nop(PUSH1)
	s(12) = g(totalInvested)
	nop(SLOAD)
	s(13) = 10935
	nop(PUSH2)
	s(14) = 1000000000000000000
	nop(PUSH8)
	s(15) = 10921
	nop(PUSH2)
	s(16) = 6
	nop(PUSH1)
	s(16) = g(usdPerEther)
	nop(SLOAD)
	s(17) = 5
	nop(PUSH1)
	s(17) = g(poolCapUSD)
	nop(SLOAD)
	s(18) = 16956
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block16956_7(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block10921_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 18567
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block18567_3(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10921_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 18567
	nop(PUSH2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 4294967295
	nop(PUSH4)
	s(16) = and(s(17), s(16))
	nop(AND)
	call(block18567_4(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block10935_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 18512
	nop(PUSH2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(block18512_7(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10935_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 18512
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block18512_13(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block10949_0(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block3689(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10949_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block16694_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block14726_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 26
	nop(PUSH1)
	s(9) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(10) = 1000000000000000000
	nop(PUSH8)
	s(11) = 100
	nop(PUSH1)
	s(12) = 6
	nop(PUSH1)
	s(12) = g(usdPerEther)
	nop(SLOAD)
	s(13) = s(7)
	nop(DUP6)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	call(jump14726_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14726_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block14757_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14726_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block14756(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14726_1(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 26
	nop(PUSH1)
	s(4) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = 100
	nop(PUSH1)
	s(7) = 6
	nop(PUSH1)
	s(7) = g(usdPerEther)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump14726_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14726_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block14757_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump14726_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block14756_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14726_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 26
	nop(PUSH1)
	s(11) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(12) = 1000000000000000000
	nop(PUSH8)
	s(13) = 100
	nop(PUSH1)
	s(14) = 6
	nop(PUSH1)
	s(14) = g(usdPerEther)
	nop(SLOAD)
	s(15) = s(9)
	nop(DUP6)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump14726_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14726_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block14757_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14726_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block14756_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14726_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 26
	nop(PUSH1)
	s(10) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(11) = 1000000000000000000
	nop(PUSH8)
	s(12) = 100
	nop(PUSH1)
	s(13) = 6
	nop(PUSH1)
	s(13) = g(usdPerEther)
	nop(SLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump14726_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14726_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block14757_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14726_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block14756_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14756_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14756_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14756_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14756_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14757_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(11), 0)
	call(block14767_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14757_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(11), 0)
	call(block14766(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14757_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	nop(DUP2)
	call(jump14757_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14757_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block14767_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump14757_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block14766_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block14757_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	nop(DUP2)
	call(jump14757_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14757_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block14767_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14757_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block14766_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14757_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	nop(DUP2)
	call(jump14757_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14757_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block14767_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump14757_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block14766_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14757_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	nop(DUP2)
	call(jump14757_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14766_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14766_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14766_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14766_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14767_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block4900(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block14767_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block4141(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14767_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block16699_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block14767_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	call(block4900_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump16368_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(13), s(12))
	call(block16457_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16368_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(13), s(12))
	call(block16385_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16368_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 19
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	call(jump16368_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16385_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block16400_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16385_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block16399_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16385_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(12) = 27
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump16385_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16399_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16400_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block16429_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16400_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block16428_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16400_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = 27
	nop(PUSH1)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump16400_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16428_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16429_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = 13
	nop(PUSH1)
	s(12) = g(contractCreatedTimestamp)
	nop(SLOAD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 19
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 16649
	nop(PUSH2)
	call(block16649_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block16457_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 19
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump16457_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16457_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(13), 0)
	call(block16476_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16457_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(13), 0)
	call(block16470_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16470_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(12) = 20
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	call(block16476_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16476_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump16476_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16476_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block16554_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16476_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block16482_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16482_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(12) = 27
	nop(PUSH1)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump16482_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16482_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block16497_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16482_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block16496_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16496_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16497_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block16526_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16497_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block16525_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16497_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = 27
	nop(PUSH1)
	s(13) = 2
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump16497_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16525_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16526_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = 19
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 20
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 16648
	nop(PUSH2)
	call(block16648_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block16554_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 20
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump16554_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16554_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(13), 0)
	call(block16573_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16554_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(13), 0)
	call(block16567_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16567_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(12) = 9
	nop(PUSH1)
	s(12) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	call(block16573_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16573_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block16647_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16573_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block16579_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16573_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump16573_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16579_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block16594_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16579_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block16593_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16579_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(12) = 27
	nop(PUSH1)
	s(13) = 2
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump16579_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16593_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16594_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block16623_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump16594_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block16622_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16594_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = 27
	nop(PUSH1)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump16594_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16622_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16623_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = 20
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 9
	nop(PUSH1)
	s(12) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	call(block16647_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16647_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block16648_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16648_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block16649_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block16649_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	nop(DUP4)
	s(15) = timestamp
	nop(TIMESTAMP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump16649_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16649_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(14), 0)
	call(block16668_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16649_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(14), 0)
	call(block16667_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16667_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16668_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 26
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(lastStakePriceUSCents) = s(13)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4882_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16683_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 16699
	nop(PUSH2)
	s(9) = 16694
	nop(PUSH2)
	s(10) = 10878
	nop(PUSH2)
	call(block10878_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16694_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 14726
	nop(PUSH2)
	call(block14726_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16699_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 21
	nop(PUSH1)
	s(9) = g(distributedSaleStakes)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 24
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(saleCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 16767
	nop(PUSH2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(saleShare)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 16753
	nop(PUSH2)
	s(11) = 100
	nop(PUSH1)
	s(12) = 24
	nop(PUSH1)
	s(12) = g(saleCap)
	nop(SLOAD)
	s(13) = 18567
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block18567_5(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16753_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 16956
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block16956_8(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16767_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 7
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(supplyCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 16831
	nop(PUSH2)
	s(9) = 100
	nop(PUSH1)
	s(10) = 16817
	nop(PUSH2)
	s(11) = 11
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(teamShare)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 7
	nop(PUSH1)
	s(12) = g(supplyCap)
	nop(SLOAD)
	s(13) = 18567
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block18567_6(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16817_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 16956
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block16956_9(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16831_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 10
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(teamCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 16879
	nop(PUSH2)
	s(9) = 100
	nop(PUSH1)
	s(10) = 16865
	nop(PUSH2)
	s(11) = 32
	nop(PUSH1)
	s(11) = g(bonusShare)
	nop(SLOAD)
	s(12) = 7
	nop(PUSH1)
	s(12) = g(supplyCap)
	nop(SLOAD)
	s(13) = 18567
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block18567_7(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16865_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 16956
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block16956_10(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16879_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 30
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(bonusCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 16948
	nop(PUSH2)
	s(9) = 30
	nop(PUSH1)
	s(9) = g(bonusCap)
	nop(SLOAD)
	s(10) = 16934
	nop(PUSH2)
	s(11) = 10
	nop(PUSH1)
	s(11) = g(teamCap)
	nop(SLOAD)
	s(12) = 16920
	nop(PUSH2)
	s(13) = 24
	nop(PUSH1)
	s(13) = g(saleCap)
	nop(SLOAD)
	s(14) = 7
	nop(PUSH1)
	s(14) = g(supplyCap)
	nop(SLOAD)
	s(15) = 18512
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18512_14(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16920_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 18512
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block18512_15(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16934_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 18512
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block18512_16(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16948_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 16
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(bountyCap) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block4891_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16956_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump16956_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block16970_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block16969_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump16956_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block16970_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block16969_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump16956_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_10(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block16970_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_10(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block16969_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	call(jump16956_10(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16956_11(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump16956_11(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block16970_11(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block16969_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump16956_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(21), 0)
	call(block16970_12(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(21), 0)
	call(block16969_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_12(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(15)
	nop(DUP5)
	s(21) = s(19)
	nop(DUP2)
	call(jump16956_12(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16956_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump16956_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block16970_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block16969_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(7)
	nop(DUP5)
	s(13) = s(11)
	nop(DUP2)
	call(jump16956_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block16970_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block16969_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(18)
	nop(DUP2)
	call(jump16956_4(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(20), 0)
	call(block16970_4(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(20), 0)
	call(block16969(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_5(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(15)
	nop(DUP2)
	call(jump16956_5(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(17), 0)
	call(block16970_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump16956_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(17), 0)
	call(block16969_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump16956_6(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(14), 0)
	call(block16970_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump16956_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(14), 0)
	call(block16969_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(16)
	nop(DUP5)
	s(22) = s(20)
	nop(DUP2)
	call(jump16956_7(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_7(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(22), 0)
	call(block16970_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_7(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(22), 0)
	call(block16969_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump16956_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block16970_8(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block16969_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16956_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	call(jump16956_8(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16956_9(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	call(jump16956_9(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16956_9(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block16970_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16956_9(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block16969_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16969_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16969_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16970_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16767(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16831(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16879_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_11(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5018_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_12(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17724_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16879(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5018(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_4(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = s(19)/s(18)
	nop(DIV)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	nop(POP)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17724(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17724_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block16970_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10921_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16970_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10921_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_8(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16767_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16970_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16831_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump16983_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(13), s(12))
	call(block16998_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16983_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(13), s(12))
	call(block16994_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16983_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(9)
	nop(DUP4)
	call(jump16983_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16994_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block16998_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 17080
	nop(PUSH2)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 2
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 18537
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18537_9(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17080_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 2
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17168
	nop(PUSH2)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 0
	nop(PUSH1)
	s(14) = g(totalSupply)
	nop(SLOAD)
	s(15) = 18537
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18537_10(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17168_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(totalSupply) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17195
	nop(PUSH2)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 21
	nop(PUSH1)
	s(14) = g(distributedSaleStakes)
	nop(SLOAD)
	s(15) = 18537
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18537_11(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17195_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 21
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(distributedSaleStakes) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17222
	nop(PUSH2)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 22
	nop(PUSH1)
	s(14) = g(totalInvested)
	nop(SLOAD)
	s(15) = 18537
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18537_12(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17222_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 22
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(totalInvested) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17313
	nop(PUSH2)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 18
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 0
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 18537
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18537_13(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17313_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 18
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17468
	nop(PUSH2)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 18
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 18537
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block18537_14(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17468_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 18
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 3763212831111208910400525981279380030022262317506620506771875353129738587918
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(11)
	nop(DUP5)
	s(17) = 26
	nop(PUSH1)
	s(17) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(13)
	nop(DUP7)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = s(19)
	nop(DUP2)
	l(l1) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(14)
	nop(DUP6)
	s(21) = s(19)
	nop(DUP2)
	l(l4) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(15)
	nop(DUP5)
	s(21) = s(19)
	nop(DUP2)
	l(l2) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(16)
	nop(DUP4)
	s(21) = s(19)
	nop(DUP2)
	l(l3) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(19)
	nop(DUP2)
	l(l5) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(13)
	s(13) = s(19)
	s(19) = s(20)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5183_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block17677_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 100
	nop(PUSH1)
	s(10) = 17724
	nop(PUSH2)
	s(11) = 25
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(saleShare)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(13) = g(bonusShare)
	nop(SLOAD)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = 16956
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block16956_5(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block17677_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 100
	nop(PUSH1)
	s(14) = 17724
	nop(PUSH2)
	s(15) = 25
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(saleShare)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 100
	nop(PUSH1)
	s(17) = 32
	nop(PUSH1)
	s(17) = g(bonusShare)
	nop(SLOAD)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(17) = 16956
	nop(PUSH2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 4294967295
	nop(PUSH4)
	s(17) = and(s(18), s(17))
	nop(AND)
	call(block16956_12(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump17724_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(11), 0)
	call(block17735_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump17724_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(11), 0)
	call(block17734_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17724_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(5)
	nop(DUP6)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	call(jump17724_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17724_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block17735_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump17724_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block17734_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17724_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(9)
	nop(DUP6)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump17724_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17734_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17734_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17735_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block17759_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump17735_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block17755_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17735_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	s(9) = 30
	nop(PUSH1)
	s(9) = g(bonusCap)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 31
	nop(PUSH1)
	s(11) = g(distributedBonusStakes)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	call(jump17735_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17735_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(14), s(13))
	call(block17759_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump17735_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(14), s(13))
	call(block17755_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17735_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	s(13) = 30
	nop(PUSH1)
	s(13) = g(bonusCap)
	nop(SLOAD)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 31
	nop(PUSH1)
	s(15) = g(distributedBonusStakes)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	call(jump17735_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17755_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block17755_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

block17759_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 100
	nop(PUSH1)
	s(10) = 33
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	call(jump17759_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17759_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(11), 0)
	call(block17791_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump17759_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(11), 0)
	call(block17790_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17759_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 100
	nop(PUSH1)
	s(14) = 33
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(15) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump17759_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17759_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block17791_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump17759_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block17790_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17790_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17790_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17791_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 29
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 18
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 18
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 3
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 18
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 2
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(3)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(4)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 31
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(distributedBonusStakes)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(distributedBonusStakes) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(totalSupply)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(totalSupply) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 106190483984544320851992182089162347111658405430666556957074112094424747200476
	nop(PUSH32)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 18
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(5)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(10)
	nop(DUP6)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(15)
	nop(DUP2)
	l(l4) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l2) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l3) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(10)
	s(10) = s(15)
	s(15) = s(16)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block8928(s(2),s(1),s(0)))
	nop(JUMP)

block17791_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 29
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = 18
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(8)
	nop(DUP10)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	l(l6) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	l(l7) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(17) = 4
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(1)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 18
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 3
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(2)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 18
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 2
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(3)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 2
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(4)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 31
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	s(17) = g(distributedBonusStakes)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(distributedBonusStakes) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	s(17) = g(totalSupply)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(totalSupply) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 106190483984544320851992182089162347111658405430666556957074112094424747200476
	nop(PUSH32)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 18
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(8)
	nop(DUP10)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	l(l6) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	l(l7) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(17) = 4
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gl = s(17)
	s(17) = fresh(5)
	nop(SLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(12)
	nop(DUP5)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(14)
	nop(DUP6)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = s(19)
	nop(DUP2)
	l(l1) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(15)
	nop(DUP5)
	s(21) = s(19)
	nop(DUP2)
	l(l4) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = s(19)
	nop(DUP2)
	l(l2) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(19)
	nop(DUP2)
	l(l3) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(14)
	s(14) = s(19)
	s(19) = s(20)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5346_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump18512_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(16), s(15))
	call(block18526_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(16), s(15))
	call(block18525_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	call(jump18512_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18512_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	call(jump18512_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(14), s(13))
	call(block18526_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(14), s(13))
	call(block18525_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_10(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump18512_10(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_10(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block18526_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump18512_10(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block18525_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18512_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(14), s(13))
	call(block18526_11(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump18512_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(14), s(13))
	call(block18525_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_11(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	call(jump18512_11(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_12(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block18526_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump18512_12(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block18525_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_12(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump18512_12(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(16), s(15))
	call(block18526_13(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(16), s(15))
	call(block18525_16(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_13(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	call(jump18512_13(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_14(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(17), s(16))
	call(block18526_14(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512_14(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(17), s(16))
	call(block18525_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_14(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	call(jump18512_14(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(15), s(14))
	call(block18526_15(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(15), s(14))
	call(block18525_14(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_15(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	call(jump18512_15(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_16(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(13), s(12))
	call(block18526_16(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512_16(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(13), s(12))
	call(block18525_13(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_16(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	call(jump18512_16(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18512_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump18512_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(12), s(11))
	call(block18526_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18512_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(12), s(11))
	call(block18525(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump18512_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block18526_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump18512_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block18525_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18512_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block18526_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump18512_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block18525_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump18512_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18512_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump18512_5(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block18526_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump18512_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block18525_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18512_6(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block18526_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump18512_6(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block18525_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_6(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	call(jump18512_6(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18512_7(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	call(jump18512_7(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block18526_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump18512_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block18525_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18512_8(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block18526_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump18512_8(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block18525_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18512_8(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump18512_8(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18512_9(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump18512_9(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18512_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block18526_9(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump18512_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block18525_11(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18525_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_11(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_13(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_14(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_16(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18525_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18526_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16920(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18526_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16934(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18526_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12131(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block18526_11(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12162(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block18526_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12176(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block18526_13(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10949_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18526_14(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(13)
	nop(DUP4)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16920_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18526_15(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16934_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18526_16(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16948_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18526_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16948(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18526_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block6437(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block18526_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block6796(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block18526_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block9230(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block18526_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10551(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block18526_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10949_0(s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block18526_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block11844(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block18526_9(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12043(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block18537_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump18537_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block18557_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block18556_3(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18537_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block18557_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block18556_2(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump18537_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18537_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump18537_10(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_10(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(18), s(17))
	call(block18557_10(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_10(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(18), s(17))
	call(block18556_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump18537_11(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_11(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(18), s(17))
	call(block18557_11(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_11(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(18), s(17))
	call(block18556_12(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18537_12(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(18), s(17))
	call(block18557_12(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_12(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(18), s(17))
	call(block18556_11(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_12(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump18537_12(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18537_13(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump18537_13(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_13(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(18), s(17))
	call(block18557_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_13(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(18), s(17))
	call(block18556_10(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_14(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump18537_14(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_14(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(18), s(17))
	call(block18557_14(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_14(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(18), s(17))
	call(block18556_9(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump18537_2(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block18557_2(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block18556_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump18537_3(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_3(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block18557_3(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_3(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block18556_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_4(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump18537_4(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block18557_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block18556(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	call(jump18537_5(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_5(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(12), s(11))
	call(block18557_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump18537_5(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(12), s(11))
	call(block18556_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_6(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump18537_6(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(11), s(10))
	call(block18557_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump18537_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(11), s(10))
	call(block18556_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18537_7(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	geq(s(10), s(9))
	call(block18557_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump18537_7(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	lt(s(10), s(9))
	call(block18556_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(5)
	nop(DUP5)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	call(jump18537_7(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18537_8(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump18537_8(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_8(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(11), s(10))
	call(block18557_8(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump18537_8(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(11), s(10))
	call(block18556_8(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18537_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump18537_9(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18537_9(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(18), s(17))
	call(block18557_9(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18537_9(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(18), s(17))
	call(block18556_14(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18556_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_10(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_11(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_12(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_14(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_2(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_3(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_8(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18556_9(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18557_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17168(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17195(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_10(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17168_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_11(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17195_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_12(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17222_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17313_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_14(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17468_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_2(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17222(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_3(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17313(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17468(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18557_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block6586(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block18557_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10700(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block18557_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block13592(s(4),s(3),s(2),s(1),s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block18557_8(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block14363(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block18557_9(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block17080_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18567_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(10)
	nop(DUP5)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 18600
	nop(PUSH2)
	call(jump18567_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18567_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 1 )
	call(block18600_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 1 )
	call(block18585_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18567_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(10)
	nop(DUP5)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 18600
	nop(PUSH2)
	call(jump18567_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18567_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 1 )
	call(block18600_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 1 )
	call(block18585_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18567_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(10)
	nop(DUP5)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 18600
	nop(PUSH2)
	call(jump18567_2(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18567_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 1 )
	call(block18600_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 1 )
	call(block18585(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18567_3(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(6)
	nop(DUP5)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 18600
	nop(PUSH2)
	call(jump18567_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMPI)

jump18567_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(11), 1 )
	call(block18600_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump18567_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(11), 1 )
	call(block18585_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block18567_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	nop(POP)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(14)
	nop(DUP5)
	s(18)= eq(s(19), s(18))
	nop(EQ)
	s(19) = s(18)
	nop(DUP1)
	s(20) = 18600
	nop(PUSH2)
	call(jump18567_4(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18567_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(19), 1 )
	call(block18600_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(19), 1 )
	call(block18585_7(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18567_5(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(11)
	nop(DUP5)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 18600
	nop(PUSH2)
	call(jump18567_5(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18567_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(16), 1 )
	call(block18600_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(16), 1 )
	call(block18585_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18567_6(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(11)
	nop(DUP5)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 18600
	nop(PUSH2)
	call(jump18567_6(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18567_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(16), 1 )
	call(block18600_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(16), 1 )
	call(block18585_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18567_7(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(11)
	nop(DUP5)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 18600
	nop(PUSH2)
	call(jump18567_7(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump18567_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(16), 1 )
	call(block18600_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18567_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(16), 1 )
	call(block18585_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18585_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	call(jump18585_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18585_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block18597_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block18596_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18585_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block18597_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block18596_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18585_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	call(jump18585_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18585_2(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(20), 0)
	call(block18597_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585_2(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(20), 0)
	call(block18596_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18585_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(18)
	nop(DUP2)
	call(jump18585_2(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18585_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(13), 0)
	call(block18597_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump18585_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(13), 0)
	call(block18596_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18585_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(POP)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	call(jump18585_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18585_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	call(jump18585_4(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18585_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block18597_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block18596_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18585_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block18597_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block18596_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18585_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	call(jump18585_5(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18585_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block18597_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block18596_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18585_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	call(jump18585_6(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18585_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(21), 0)
	call(block18597_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18585_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(21), 0)
	call(block18596_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18585_7(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(19)
	nop(DUP2)
	call(jump18585_7(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18596_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18596_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18596_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18596_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18596_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18596_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18596_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18596_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18597_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	call(block18600_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18597_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	call(block18600_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18597_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = s(19)/s(18)
	nop(DIV)
	s(17)= eq(s(18), s(17))
	nop(EQ)
	call(block18600(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18597_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	call(block18600_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block18597_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	call(block18600_7(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18597_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	call(block18600_6(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18597_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	call(block18600_5(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block18597_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(18)= eq(s(19), s(18))
	nop(EQ)
	call(block18600_4(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block18608_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block18607_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18600_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block18608_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block18607_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18600_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block18608_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block18607(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18600_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block18608_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump18600_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block18607_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18600_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump18600_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18600_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600_4(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block18608_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block18607_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18600_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600_5(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block18608_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block18607_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18600_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600_6(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block18608_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block18607_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18600_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump18600_7(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18600_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block18608_7(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18600_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block18607_4(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18607_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18607_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18607_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18607_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18607_4(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18607_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18607_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18607_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18608_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16753(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18608_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16817(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18608_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16865(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18608_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10935_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block18608_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10935_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18608_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16753_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18608_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16817_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18608_7(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16865_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4844_0(s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 28
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(priceIsFrozen)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump4844_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4844_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), 0)
	call(block4883_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump4844_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), 0)
	call(block4875_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block4875_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(7) = 4882
	nop(PUSH2)
	s(8) = 16368
	nop(PUSH2)
	call(block16368_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block4882_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block4883_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4883_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 4891
	nop(PUSH2)
	s(8) = 16683
	nop(PUSH2)
	call(block16683_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4891_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 4900
	nop(PUSH2)
	s(8) = callvalue
	nop(CALLVALUE)
	s(9) = 14726
	nop(PUSH2)
	call(block14726_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump4900_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block5437_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

jump4900_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block4912_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4900_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	call(jump4900_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4912_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = s(5)
	nop(DUP2)
	s(8) = 21
	nop(PUSH1)
	s(8) = g(distributedSaleStakes)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 24
	nop(PUSH1)
	s(7) = g(saleCap)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump4912_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4912_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block4940_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump4912_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block4930_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4930_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = callvalue
	nop(CALLVALUE)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 4961
	nop(PUSH2)
	call(block4961_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4940_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 21
	nop(PUSH1)
	s(7) = g(distributedSaleStakes)
	nop(SLOAD)
	s(8) = 24
	nop(PUSH1)
	s(8) = g(saleCap)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = 4958
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 7036
	nop(PUSH2)
	call(block7036_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4958_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	call(block4961_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4961_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 5018
	nop(PUSH2)
	s(8) = 25
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(saleShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 11
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(teamShare)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(3)
	nop(DUP7)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = 16956
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block16956_11(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump5018_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block5348_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5018_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block5030_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5018_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	call(jump5018_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5030_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = s(2)
	nop(DUP5)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(owner)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(totalSupply)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalSupply) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedTeamStakes)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedTeamStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 5183
	nop(PUSH2)
	s(8) = caller
	nop(CALLER)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 16983
	nop(PUSH2)
	call(block16983_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump5183_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), s(7))
	call(block5347_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5183_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), s(7))
	call(block5336_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5183_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 18
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 4
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump5183_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5336_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = 5346
	nop(PUSH2)
	s(8) = caller
	nop(CALLER)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 17677
	nop(PUSH2)
	call(block17677_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5346_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5347_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

block5347_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5348_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

block5348_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 24
	nop(PUSH1)
	s(7) = g(saleCap)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump5348_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5348_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block5432_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5348_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block5359_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

block5359_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2300
	nop(PUSH2)
	s(9) = s(4)
	nop(DUP5)
	s(10) = callvalue
	nop(CALLVALUE)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(7)
	nop(DUP9)
	s(17) = s(8)
	nop(DUP9)
	s(11) = 1
	nop(CALL)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump5359_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5359_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block5430_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5359_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block5421_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5421_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block5430_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5432_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block5432_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(7) = 5509
	nop(PUSH2)
	call(block5509_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5437_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2300
	nop(PUSH2)
	s(9) = callvalue
	nop(CALLVALUE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(7)
	nop(DUP9)
	s(17) = s(8)
	nop(DUP9)
	s(11) = 1
	nop(CALL)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump5437_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5437_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block5507_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5437_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block5498_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5498_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block5507_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5509_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block5509_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block868_0(s(0)))
	nop(JUMP)

jump7036_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block7068_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump7036_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block7067_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block7036_0(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 100
	nop(PUSH1)
	s(5) = 6
	nop(PUSH1)
	s(5) = g(usdPerEther)
	nop(SLOAD)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = 26
	nop(PUSH1)
	s(6) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump7036_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7036_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 100
	nop(PUSH1)
	s(11) = 6
	nop(PUSH1)
	s(11) = g(usdPerEther)
	nop(SLOAD)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = 1000000000000000000
	nop(PUSH8)
	s(12) = 26
	nop(PUSH1)
	s(12) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	call(jump7036_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7036_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block7068_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump7036_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block7067_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7067_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7067_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7068_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1507(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7068_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	call(block4958_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block769_0(s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	call(jump769_0(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump769_0(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block829_0(s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump769_0(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block825_0(s(0)))

block825_0(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

block829_0(s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = callvalue
	nop(CALLVALUE)
	call(jump829_0(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump829_0(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(2), s(1))
	call(block844_0(s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump829_0(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(2), s(1))
	call(block840_0(s(0)))

block840_0(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

jump844_0(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(2), s(1))
	call(block860_0(s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump844_0(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(2), s(1))
	call(block856_0(s(0)))

block844_0(s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 9
	nop(PUSH1)
	s(1) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(2) = timestamp
	nop(TIMESTAMP)
	call(jump844_0(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block856_0(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

block860_0(s(0), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 868
	nop(PUSH2)
	s(2) = 4844
	nop(PUSH2)
	call(block4844_0(s(1),s(0),g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block868_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

