{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "volumeBonus(uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IcoLimits": {
        "function_list": [
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "privateSaleStart": "uint256",
                    "privateSaleEnd": "uint256",
                    "presaleStart": "uint256",
                    "presaleEnd": "uint256",
                    "publicSaleStart": "uint256",
                    "publicSaleEnd": "uint256",
                    "foundersTokensUnlock": "uint256",
                    "privateSalePrice": "uint256",
                    "preSalePrice": "uint256",
                    "publicSalePrice": "uint256",
                    "privateSaleSupplyLimit": "uint256",
                    "preSaleSupplyLimit": "uint256",
                    "publicSaleSupplyLimit": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                245,
                97
            ],
            "balanceOf(address)": [
                522,
                163
            ],
            "totalSupply()": [
                346,
                119
            ],
            "allowance(address,address)": [
                710,
                207
            ],
            "transferFrom(address,address,uint256)": [
                389,
                141
            ],
            "transfer(address,uint256)": [
                609,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "ExoTownToken": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "volumeBonus(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ExoTownToken(address)",
            "burnTokens(address,uint256)",
            "emitTokens(address,uint256)",
            "getOwner(uint256)",
            "getOwnerCount()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "ExoTownToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwner(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwnerCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getOwnerCount()": [
                1528,
                361
            ],
            "approve(address,uint256)": [
                477,
                119
            ],
            "getOwner(uint256)": [
                1206,
                295
            ],
            "emitTokens(address,uint256)": [
                1571,
                383
            ],
            "totalSupply()": [
                655,
                163
            ],
            "burnTokens(address,uint256)": [
                578,
                141
            ],
            "balanceOf(address)": [
                874,
                229
            ],
            "transferFrom(address,address,uint256)": [
                698,
                185
            ],
            "allowance(address,address)": [
                1409,
                339
            ],
            "transfer(address,uint256)": [
                1105,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "ExoTownIco": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "volumeBonus(uint256)",
            "isPrivateSale()",
            "isPreSale()",
            "isPublicSale()",
            "getPrice()",
            "getStageSupplyLimit()",
            "getStageSoldTokens()",
            "addStageTokensSold(uint256)",
            "addStageEtherRaised(uint256)",
            "getStageEtherRaised()",
            "getTokensSold()",
            "getEtherRaised()",
            "ExoTownIco(address)",
            "init(address,address,address,address,address,address)",
            "setState(ExoTownIco.State)",
            "setNewManager(address)",
            "setBountyCampaign(address)",
            "setNewMediator(address)",
            "buyTokens(address)",
            "giftToken(address)",
            "fallback()",
            "distributeEtherByStage()",
            "withdrawEther(uint256)",
            "sendTokensToBountyOwner()",
            "sendTokensToFounders()",
            "burnTokens(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "isPrivateSale()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "isPreSale()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "isPublicSale()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "getPrice()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "getStageSupplyLimit()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "getStageSoldTokens()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "addStageTokensSold(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "addStageEtherRaised(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "getStageEtherRaised()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "getTokensSold()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "getEtherRaised()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "ExoTownIco(address)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "init(address,address,address,address,address,address)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "setState(ExoTownIco.State)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "setNewManager(address)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "setBountyCampaign(address)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "setNewMediator(address)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "giftToken(address)": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "distributeEtherByStage()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "withdrawEther(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "sendTokensToBountyOwner()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "sendTokensToFounders()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "burnTokens(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "privateSaleSoldTokens": "uint256",
                    "preSaleSoldTokens": "uint256",
                    "publicSaleSoldTokens": "uint256",
                    "privateSaleEtherRaised": "uint256",
                    "preSaleEtherRaised": "uint256",
                    "publicSaleEtherRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "giftToken(address)": [
                2410,
                735
            ],
            "getStageSoldTokens()": [
                1954,
                559
            ],
            "getTokensSold()": [
                2507,
                779
            ],
            "setBountyCampaign(address)": [
                1420,
                427
            ],
            "setNewManager(address)": [
                2300,
                691
            ],
            "withdrawEther(uint256)": [
                754,
                185
            ],
            "setNewMediator(address)": [
                577,
                119
            ],
            "getStageSupplyLimit()": [
                1158,
                339
            ],
            "getStageEtherRaised()": [
                2367,
                713
            ],
            "burnTokens(uint256)": [
                1201,
                361
            ],
            "getEtherRaised()": [
                2464,
                757
            ],
            "sendTokensToFounders()": [
                644,
                141
            ],
            "init(address,address,address,address,address,address)": [
                1553,
                493
            ],
            "sendTokensToBountyOwner()": [
                1530,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump4727": [
                "exotownToken.burnTokens(buyBack, _amount)",
                "exotownToken.burnTokens(buyBack, _amount)"
            ],
            "block3002_1": [
                "exotownToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump8226_1": [
                "teamWallet.transfer(_balance - _devAmount - _prAmount)",
                "teamWallet.transfer(_balance - _devAmount - _prAmount)"
            ],
            "jump8226_0": [
                "teamWallet.transfer(_balance - _devAmount - _prAmount)",
                "teamWallet.transfer(_balance - _devAmount - _prAmount)"
            ],
            "block3002": [
                "exotownToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block7907": [
                "mediatorWallet.transfer(_mediatorAmount)"
            ],
            "jump3745": [
                "exotownToken.emitTokens(founderWallet, founderReward)",
                "exotownToken.emitTokens(founderWallet, founderReward)"
            ],
            "jump7907": [
                "mediatorWallet.transfer(_mediatorAmount)",
                "mediatorWallet.transfer(_mediatorAmount)"
            ],
            "jump6632": [
                "exotownToken.emitTokens(icoManager, 0)",
                "exotownToken.emitTokens(icoManager, 0)"
            ],
            "block8121": [
                "marketingWallet.transfer(_prAmount)"
            ],
            "block8226": [
                "teamWallet.transfer(_balance - _devAmount - _prAmount)"
            ],
            "jump8226": [
                "teamWallet.transfer(_balance - _devAmount - _prAmount)",
                "teamWallet.transfer(_balance - _devAmount - _prAmount)"
            ],
            "block8014": [
                "developmentWallet.transfer(_devAmount - _mediatorAmount)"
            ],
            "block4727": [
                "exotownToken.burnTokens(buyBack, _amount)"
            ],
            "block8226_0": [
                "teamWallet.transfer(_balance - _devAmount - _prAmount)"
            ],
            "block6632": [
                "exotownToken.emitTokens(icoManager, 0)"
            ],
            "jump8121": [
                "marketingWallet.transfer(_prAmount)",
                "marketingWallet.transfer(_prAmount)"
            ],
            "jump3991": [
                "icoManager.transfer(_value * 1000000000000000)",
                "icoManager.transfer(_value * 1000000000000000)"
            ],
            "block3745": [
                "exotownToken.emitTokens(founderWallet, founderReward)"
            ],
            "jump5549": [
                "exotownToken.emitTokens(bountyOwner, bountyTokens)",
                "exotownToken.emitTokens(bountyOwner, bountyTokens)"
            ],
            "block8014_0": [
                "developmentWallet.transfer(_devAmount - _mediatorAmount)"
            ],
            "jump3002": [
                "exotownToken.emitTokens(_buyer, tokensToEmit)",
                "exotownToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block3002_0": [
                "exotownToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block8014_1": [
                "developmentWallet.transfer(_devAmount - _mediatorAmount)"
            ],
            "jump8121_1": [
                "marketingWallet.transfer(_prAmount)",
                "marketingWallet.transfer(_prAmount)"
            ],
            "jump8121_0": [
                "marketingWallet.transfer(_prAmount)",
                "marketingWallet.transfer(_prAmount)"
            ],
            "block8121_1": [
                "marketingWallet.transfer(_prAmount)"
            ],
            "block8121_0": [
                "marketingWallet.transfer(_prAmount)"
            ],
            "block7907_0": [
                "mediatorWallet.transfer(_mediatorAmount)"
            ],
            "block7907_1": [
                "mediatorWallet.transfer(_mediatorAmount)"
            ],
            "jump3002_0": [
                "exotownToken.emitTokens(_buyer, tokensToEmit)",
                "exotownToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump3002_1": [
                "exotownToken.emitTokens(_buyer, tokensToEmit)",
                "exotownToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block5549": [
                "exotownToken.emitTokens(bountyOwner, bountyTokens)"
            ],
            "jump8014_0": [
                "developmentWallet.transfer(_devAmount - _mediatorAmount)",
                "developmentWallet.transfer(_devAmount - _mediatorAmount)"
            ],
            "jump8014_1": [
                "developmentWallet.transfer(_devAmount - _mediatorAmount)",
                "developmentWallet.transfer(_devAmount - _mediatorAmount)"
            ],
            "block8226_1": [
                "teamWallet.transfer(_balance - _devAmount - _prAmount)"
            ],
            "jump8014": [
                "developmentWallet.transfer(_devAmount - _mediatorAmount)",
                "developmentWallet.transfer(_devAmount - _mediatorAmount)"
            ],
            "block3991": [
                "icoManager.transfer(_value * 1000000000000000)"
            ],
            "jump7907_0": [
                "mediatorWallet.transfer(_mediatorAmount)",
                "mediatorWallet.transfer(_mediatorAmount)"
            ],
            "jump7907_1": [
                "mediatorWallet.transfer(_mediatorAmount)",
                "mediatorWallet.transfer(_mediatorAmount)"
            ]
        }
    }
}