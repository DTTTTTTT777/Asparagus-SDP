{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Math": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "mulDiv(uint256,uint256,uint256)",
            "mul(uint256,Math.Fraction)",
            "div(uint256,Math.Fraction)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "mulDiv(uint256,uint256,uint256)": {
                "argument": {
                    "value": "uint256",
                    "m": "uint256",
                    "d": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,Math.Fraction)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {}
            },
            "div(uint256,Math.Fraction)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "PrivateSaleMacau": {
        "function_list": [
            "PrivateSaleMacau(ERC20)",
            "buy()",
            "fallback()",
            "transferOwnership(address)",
            "processPurchase(uint256[])",
            "finalize()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PrivateSaleMacau(ERC20)": {
                "argument": {},
                "contract": {
                    "fstTotalSupply": "uint256",
                    "fstPrivateSalePortionNumerator": "uint256",
                    "fstPrivateSalePortionDenominator": "uint256",
                    "fstUnitPriceNumerator": "uint256",
                    "fstUnitPriceDenominator": "uint256",
                    "saleCap": "uint256",
                    "minWeiValue": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "fstSold": "uint256",
                    "weiReceived": "uint256",
                    "weiLiquid": "uint256",
                    "weiRefund": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "fstTotalSupply": "uint256",
                    "fstPrivateSalePortionNumerator": "uint256",
                    "fstPrivateSalePortionDenominator": "uint256",
                    "fstUnitPriceNumerator": "uint256",
                    "fstUnitPriceDenominator": "uint256",
                    "saleCap": "uint256",
                    "minWeiValue": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "fstSold": "uint256",
                    "weiReceived": "uint256",
                    "weiLiquid": "uint256",
                    "weiRefund": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fstTotalSupply": "uint256",
                    "fstPrivateSalePortionNumerator": "uint256",
                    "fstPrivateSalePortionDenominator": "uint256",
                    "fstUnitPriceNumerator": "uint256",
                    "fstUnitPriceDenominator": "uint256",
                    "saleCap": "uint256",
                    "minWeiValue": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "fstSold": "uint256",
                    "weiReceived": "uint256",
                    "weiLiquid": "uint256",
                    "weiRefund": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "fstTotalSupply": "uint256",
                    "fstPrivateSalePortionNumerator": "uint256",
                    "fstPrivateSalePortionDenominator": "uint256",
                    "fstUnitPriceNumerator": "uint256",
                    "fstUnitPriceDenominator": "uint256",
                    "saleCap": "uint256",
                    "minWeiValue": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "fstSold": "uint256",
                    "weiReceived": "uint256",
                    "weiLiquid": "uint256",
                    "weiRefund": "uint256"
                }
            },
            "processPurchase(uint256[])": {
                "argument": {
                    "results": "uint256[]"
                },
                "contract": {
                    "fstTotalSupply": "uint256",
                    "fstPrivateSalePortionNumerator": "uint256",
                    "fstPrivateSalePortionDenominator": "uint256",
                    "fstUnitPriceNumerator": "uint256",
                    "fstUnitPriceDenominator": "uint256",
                    "saleCap": "uint256",
                    "minWeiValue": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "fstSold": "uint256",
                    "weiReceived": "uint256",
                    "weiLiquid": "uint256",
                    "weiRefund": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "fstTotalSupply": "uint256",
                    "fstPrivateSalePortionNumerator": "uint256",
                    "fstPrivateSalePortionDenominator": "uint256",
                    "fstUnitPriceNumerator": "uint256",
                    "fstUnitPriceDenominator": "uint256",
                    "saleCap": "uint256",
                    "minWeiValue": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "fstSold": "uint256",
                    "weiReceived": "uint256",
                    "weiLiquid": "uint256",
                    "weiRefund": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "fstTotalSupply": "uint256",
                    "fstPrivateSalePortionNumerator": "uint256",
                    "fstPrivateSalePortionDenominator": "uint256",
                    "fstUnitPriceNumerator": "uint256",
                    "fstUnitPriceDenominator": "uint256",
                    "saleCap": "uint256",
                    "minWeiValue": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "fstSold": "uint256",
                    "weiReceived": "uint256",
                    "weiLiquid": "uint256",
                    "weiRefund": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buy()": [
                980,
                383
            ],
            "processPurchase(uint256[])": [
                792,
                317
            ],
            "transferOwnership(address)": [
                1194,
                471
            ],
            "finalize()": [
                683,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump2727": [
                "token.transfer(msg.sender, tokenAvailable)",
                "token.transfer(msg.sender, tokenAvailable)"
            ],
            "block3500": [
                "userAddress.transfer(user.weiPaid)"
            ],
            "jump1604_1": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "block3353": [
                "token.transfer(userAddress, user.fstVested)"
            ],
            "block2727": [
                "token.transfer(msg.sender, tokenAvailable)"
            ],
            "jump3500": [
                "userAddress.transfer(user.weiPaid)",
                "userAddress.transfer(user.weiPaid)"
            ],
            "block1604": [
                "msg.sender.transfer(refund)"
            ],
            "jump1604_0": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "jump2200": [
                "msg.sender.transfer(weiAvailable)",
                "msg.sender.transfer(weiAvailable)"
            ],
            "block1604_1": [
                "msg.sender.transfer(refund)"
            ],
            "jump1604": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "jump3353": [
                "token.transfer(userAddress, user.fstVested)",
                "token.transfer(userAddress, user.fstVested)"
            ],
            "block2460": [
                "token.balanceOf(this)"
            ],
            "jump2460": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block2200": [
                "msg.sender.transfer(weiAvailable)"
            ],
            "block1604_0": [
                "msg.sender.transfer(refund)"
            ]
        }
    }
}