{
    "SafeMath": {
        "function_list": [
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                401,
                97
            ],
            "transfer(address,uint256)": [
                1385,
                361
            ],
            "allowance(address,address)": [
                1704,
                427
            ],
            "balanceOf(address)": [
                1044,
                273
            ],
            "transferFrom(address,address,uint256)": [
                588,
                163
            ]
        },
        "block_CALL_mapping": {
            "block3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SmartBillions": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "SmartBillions()",
            "hashesLength()",
            "walletBalanceOf(address)",
            "walletPeriodOf(address)",
            "walletBlockOf(address)",
            "betValueOf(address)",
            "betHashOf(address)",
            "betBlockNumberOf(address)",
            "dividendsBlocks()",
            "changeOwner(address)",
            "changeAnimator(address)",
            "setInvestStart(uint256)",
            "setBetMax(uint256)",
            "resetBet()",
            "coldStore(uint256)",
            "hotStore()",
            "houseKeeping()",
            "payWallet()",
            "pay(uint256)",
            "investDirect()",
            "invest(address)",
            "disinvest()",
            "payDividends()",
            "commitDividend(address)",
            "betPrize(SmartBillions.Bet,uint24)",
            "betOf(address)",
            "won()",
            "fallback()",
            "play()",
            "playRandom(address)",
            "playSystem(uint256,address)",
            "addHashes(uint256)",
            "addHashes128()",
            "calcHashes(uint32,uint32)",
            "getHash(uint256)",
            "putHash()",
            "putHashes(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "SmartBillions()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "hashesLength()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "walletBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "walletPeriodOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "walletBlockOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betValueOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betHashOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betBlockNumberOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "dividendsBlocks()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "changeAnimator(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "setInvestStart(uint256)": {
                "argument": {
                    "_when": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "setBetMax(uint256)": {
                "argument": {
                    "_maxsum": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "resetBet()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "coldStore(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "hotStore()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "houseKeeping()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "payWallet()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "pay(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "investDirect()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "disinvest()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "payDividends()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betPrize(SmartBillions.Bet,uint24)": {
                "argument": {
                    "_hash": "uint24"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "won()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "play()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "playRandom(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "playSystem(uint256,address)": {
                "argument": {
                    "_hash": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "addHashes(uint256)": {
                "argument": {
                    "_sadd": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "addHashes128()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "calcHashes(uint32,uint32)": {
                "argument": {
                    "_lastb": "uint32",
                    "_delta": "uint32"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "getHash(uint256)": {
                "argument": {
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "putHash()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "putHashes(uint256)": {
                "argument": {
                    "_num": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceGot": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "coldStore(uint256)": [
                3647,
                1087
            ],
            "won()": [
                1191,
                163
            ],
            "walletBalanceOf(address)": [
                2269,
                559
            ],
            "dividendsBlocks()": [
                1852,
                405
            ],
            "investDirect()": [
                3551,
                1021
            ],
            "allowance(address,address)": [
                3758,
                1153
            ],
            "transferFrom(address,address,uint256)": [
                1347,
                251
            ],
            "hotStore()": [
                3498,
                977
            ],
            "setBetMax(uint256)": [
                1069,
                119
            ],
            "approve(address,uint256)": [
                1114,
                141
            ],
            "betHashOf(address)": [
                2941,
                779
            ],
            "invest(address)": [
                871,
                75
            ],
            "changeAnimator(address)": [
                1982,
                449
            ],
            "hashesLength()": [
                2529,
                647
            ],
            "addHashes(uint256)": [
                1787,
                383
            ],
            "changeOwner(address)": [
                3268,
                889
            ],
            "walletPeriodOf(address)": [
                4052,
                1285
            ],
            "play()": [
                3028,
                801
            ],
            "playRandom(address)": [
                1456,
                273
            ],
            "disinvest()": [
                3986,
                1241
            ],
            "putHashes(uint256)": [
                2049,
                471
            ],
            "balanceOf(address)": [
                2442,
                625
            ],
            "payWallet()": [
                3202,
                845
            ],
            "playSystem(uint256,address)": [
                1530,
                295
            ],
            "betOf(address)": [
                2094,
                493
            ],
            "addHashes128()": [
                3412,
                933
            ],
            "setInvestStart(uint256)": [
                4139,
                1307
            ],
            "payDividends()": [
                3920,
                1197
            ],
            "putHash()": [
                1214,
                185
            ],
            "walletBlockOf(address)": [
                2615,
                691
            ],
            "houseKeeping()": [
                3735,
                1131
            ],
            "betValueOf(address)": [
                1895,
                427
            ],
            "resetBet()": [
                2181,
                515
            ],
            "transfer(address,uint256)": [
                3335,
                911
            ],
            "betBlockNumberOf(address)": [
                2854,
                757
            ]
        },
        "block_CALL_mapping": {
            "block18883": [
                "msg.sender.transfer(maxpay)"
            ],
            "block4339": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump18784": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump4339_0": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump4339_1": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump4339_2": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump4339": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "block4339_2": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "block4339_0": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "block4339_1": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump18784_8": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_9": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_4": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_5": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_6": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_7": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_0": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_1": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_2": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_3": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block18784_6": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_7": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_4": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_5": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_2": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_3": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_0": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_1": [
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_16": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_17": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_14": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_15": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_12": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_13": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block18784_8": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_9": [
                "msg.sender.transfer(_amount)"
            ],
            "block18883_6": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_7": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_4": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_5": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_2": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_3": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_0": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_1": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_16": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_17": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_14": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_15": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_12": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_13": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_10": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_9": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block16788": [
                "msg.sender.transfer(_amount)"
            ],
            "jump16788": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_10": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18784_11": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block18784_14": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_15": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_16": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_17": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_10": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_11": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_12": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784_13": [
                "msg.sender.transfer(_amount)"
            ],
            "block18784": [
                "msg.sender.transfer(_amount)"
            ],
            "block18883_8": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_11": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_14": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_15": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_16": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_17": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_10": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_11": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_12": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18883_13": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_8": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_9": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_4": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_5": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_6": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_7": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_0": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_1": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_2": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18883_3": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ]
        }
    }
}