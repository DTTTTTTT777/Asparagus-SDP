{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "balanceOf(address)": [
                773,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "allowance(address,address)": [
                1394,
                339
            ],
            "transfer(address,uint256)": [
                1091,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "STEAK": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "STEAK(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "STEAK(uint256)": {
                "argument": {
                    "tokenTotalAmount": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                368,
                97
            ],
            "increaseApproval(address,uint256)": [
                1427,
                361
            ],
            "burn(uint256)": [
                737,
                207
            ],
            "balanceOf(address)": [
                994,
                273
            ],
            "decreaseApproval(address,uint256)": [
                893,
                251
            ],
            "burnFrom(address,uint256)": [
                1081,
                295
            ],
            "transferFrom(address,address,uint256)": [
                512,
                141
            ],
            "allowance(address,address)": [
                1528,
                383
            ],
            "transfer(address,uint256)": [
                1326,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardCrowdsale": {
        "function_list": [
            "StandardCrowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens()",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "StandardCrowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                421,
                207
            ],
            "buyTokens()": [
                411,
                185
            ]
        },
        "block_CALL_mapping": {
            "block826": [
                "token.transfer(msg.sender, tokens)"
            ],
            "block1245_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1245_0": [
                "wallet.transfer(msg.value)"
            ],
            "jump826": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "block826_0": [
                "token.transfer(msg.sender, tokens)"
            ],
            "jump826_0": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1245_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1245_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump826_1": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "block1245": [
                "wallet.transfer(msg.value)"
            ],
            "jump1245": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block826_1": [
                "token.transfer(msg.sender, tokens)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "StandardCrowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens()",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "StandardCrowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                717,
                273
            ]
        },
        "block_CALL_mapping": {
            "block1629": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block2143_1": [
                "token.mint(reserve, reserveAmount)"
            ],
            "block2143_0": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1886_0": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump1886_1": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "block1886": [
                "token.mint(team, teamAmount)"
            ],
            "jump2648": [
                "token.mint(_to, mintAmount)",
                "token.mint(_to, mintAmount)"
            ],
            "jump2143": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1372": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1886_0": [
                "token.mint(team, teamAmount)"
            ],
            "block1886_1": [
                "token.mint(team, teamAmount)"
            ],
            "block3343_0": [
                "wallet.transfer(msg.value)"
            ],
            "block3343_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump3343_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3343_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2143": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump3343": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1629_1": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block1629_0": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block3343": [
                "wallet.transfer(msg.value)"
            ],
            "jump1372_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1372_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1886": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump2143_1": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump2143_0": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "block1372_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1372_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629_1": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "jump1629_0": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "block2648": [
                "token.mint(_to, mintAmount)"
            ],
            "block1372": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ]
        }
    },
    "InfiniteCappedCrowdsale": {
        "function_list": [
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "StandardCrowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens()",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "InfiniteCappedCrowdsale(uint256,uint256,address)"
        ],
        "initial_state": {
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "StandardCrowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens()": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "InfiniteCappedCrowdsale(uint256,uint256,address)": {
                "argument": {
                    "_cap": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                475,
                229
            ],
            "buyTokens()": [
                465,
                207
            ]
        },
        "block_CALL_mapping": {
            "block880_0": [
                "token.transfer(msg.sender, tokens)"
            ],
            "block1331": [
                "wallet.transfer(msg.value)"
            ],
            "block880_1": [
                "token.transfer(msg.sender, tokens)"
            ],
            "jump880_0": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "jump880_1": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "jump880": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "block1331_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1331_0": [
                "wallet.transfer(msg.value)"
            ],
            "block880": [
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1331": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1331_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1331_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "ICS": {
        "function_list": [
            "InfiniteCappedCrowdsale(uint256,uint256,address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "StandardCrowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens()",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "ICS(address)",
            "createTokenContract()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "InfiniteCappedCrowdsale(uint256,uint256,address)": {
                "argument": {
                    "_cap": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "StandardCrowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "ICS(address)": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOTAL_SUPPLY": "uint256",
                    "ARBITRARY_VALUATION_IN_ETH": "uint256",
                    "ETH_TO_WEI": "uint256",
                    "TOKEN_RATE": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                648,
                295
            ],
            "buyTokens()": [
                638,
                273
            ]
        },
        "block_CALL_mapping": {
            "block1096": [
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1594_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1594": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1096": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1594_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1594": [
                "wallet.transfer(msg.value)"
            ],
            "jump1096_1": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1096_0": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "block1096_1": [
                "token.transfer(msg.sender, tokens)"
            ],
            "block1096_0": [
                "token.transfer(msg.sender, tokens)"
            ],
            "block1594_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1594_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    }
}