{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "balanceOf(address)": [
                773,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "allowance(address,address)": [
                1394,
                339
            ],
            "transfer(address,uint256)": [
                1091,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "HasNoEther": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "HasNoEther()",
            "fallback()",
            "reclaimEther()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "HasNoEther()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "reclaimEther()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "reclaimEther()": [
                189,
                97
            ],
            "transferOwnership(address)": [
                212,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump407": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block407": [
                "owner.send(this.balance)"
            ]
        }
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeERC20": {
        "function_list": [
            "safeTransfer(ERC20Basic,address,uint256)",
            "safeTransferFrom(ERC20,address,address,uint256)",
            "safeApprove(ERC20,address,uint256)"
        ],
        "initial_state": {
            "safeTransfer(ERC20Basic,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "safeTransferFrom(ERC20,address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "safeApprove(ERC20,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "CanReclaimToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "reclaimToken(ERC20Basic)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "reclaimToken(ERC20Basic)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump561": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump1243": [
                "token.transfer(to, value)",
                "token.transfer(to, value)"
            ],
            "block1243": [
                "token.transfer(to, value)"
            ],
            "block561": [
                "token.balanceOf(this)"
            ]
        }
    },
    "EcoVault": {
        "function_list": [
            "reclaimToken(ERC20Basic)",
            "Ownable()",
            "transferOwnership(address)",
            "HasNoEther()",
            "fallback()",
            "reclaimEther()",
            "pause()",
            "unpause()",
            "EcoVault(address)",
            "contribute(uint256)",
            "contributionsOf(address)",
            "withdraw()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "reclaimToken(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "HasNoEther()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "reclaimEther()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "EcoVault(address)": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "contribute(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "contributionsOf(address)": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_CONTRIBUTION": "uint256",
                    "MAX_TOTAL_CONTRIBUTIONS": "uint256",
                    "CONTRIBUTION_START": "uint256",
                    "CONTRIBUTION_END": "uint256",
                    "TIME_LOCK_END": "uint256",
                    "totalContributions": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "pause()": [
                730,
                273
            ],
            "unpause()": [
                530,
                185
            ],
            "contributionsOf(address)": [
                420,
                141
            ],
            "withdraw()": [
                507,
                163
            ],
            "contribute(uint256)": [
                949,
                383
            ],
            "reclaimEther()": [
                926,
                361
            ],
            "transferOwnership(address)": [
                1037,
                427
            ]
        },
        "block_CALL_mapping": {
            "jump3250": [
                "token.allowance(msg.sender, this)",
                "token.allowance(msg.sender, this)"
            ],
            "block3250": [
                "token.allowance(msg.sender, this)"
            ],
            "jump4580": [
                "token.transferFrom(from, to, value)",
                "token.transferFrom(from, to, value)"
            ],
            "block2701": [
                "owner.send(this.balance)"
            ],
            "jump2701": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block4238": [
                "token.transfer(to, value)"
            ],
            "jump1439": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block4238_0": [
                "token.transfer(to, value)"
            ],
            "jump4238": [
                "token.transfer(to, value)",
                "token.transfer(to, value)"
            ],
            "block4580": [
                "token.transferFrom(from, to, value)"
            ],
            "jump4238_0": [
                "token.transfer(to, value)",
                "token.transfer(to, value)"
            ],
            "block1439": [
                "token.balanceOf(this)"
            ]
        }
    }
}