{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "isToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isToken()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "allowance(address,address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                500,
                163
            ],
            "isToken()": [
                720,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "LGBiT": {
        "function_list": [
            "isToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "LGBiT()",
            "price()",
            "buy()",
            "processBuy(address,uint256)",
            "setPreIco()",
            "unPreIco()",
            "halt()",
            "unHalt()",
            "sendBounty(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "fallback()",
            "changeOwner(address)",
            "changeFounder(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "isToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "LGBiT()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "price()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "processBuy(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "setPreIco()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "unPreIco()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "unHalt()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "sendBounty(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            },
            "changeFounder(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "multiplier": "uint256",
                    "totalTokens": "uint256",
                    "bounty": "uint256",
                    "preIcoCap": "uint256",
                    "icoCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preIcoTokenSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "unPreIco()": [
                651,
                119
            ],
            "balanceOf(address)": [
                1256,
                361
            ],
            "buy()": [
                1816,
                559
            ],
            "allowance(address,address)": [
                2194,
                713
            ],
            "transferFrom(address,address,uint256)": [
                760,
                185
            ],
            "approve(address,uint256)": [
                550,
                97
            ],
            "setPreIco()": [
                1343,
                383
            ],
            "changeFounder(address)": [
                1519,
                471
            ],
            "changeOwner(address)": [
                1850,
                581
            ],
            "isToken()": [
                2313,
                735
            ],
            "sendBounty(address,uint256)": [
                979,
                251
            ],
            "unHalt()": [
                1366,
                405
            ],
            "price()": [
                1773,
                537
            ],
            "halt()": [
                1233,
                339
            ],
            "transfer(address,uint256)": [
                1917,
                603
            ]
        },
        "block_CALL_mapping": {
            "jump6073_1": [
                "founder.transfer(_value)",
                "founder.transfer(_value)"
            ],
            "jump6073_0": [
                "founder.transfer(_value)",
                "founder.transfer(_value)"
            ],
            "jump6073": [
                "founder.transfer(_value)",
                "founder.transfer(_value)"
            ],
            "block6073_1": [
                "founder.transfer(_value)"
            ],
            "block6073_0": [
                "founder.transfer(_value)"
            ],
            "block6073": [
                "founder.transfer(_value)"
            ]
        }
    }
}