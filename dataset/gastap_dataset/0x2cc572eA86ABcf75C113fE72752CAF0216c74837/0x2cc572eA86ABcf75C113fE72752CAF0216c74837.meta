{
    "token": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "YourMomTokenCrowdsale": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "YourMomTokenCrowdsale(string,address,uint256,uint256,address,address,uint256,uint256)",
            "fallback()",
            "enablePurchase()",
            "disablePurchase()",
            "Withdrawal()",
            "_currentTokenRewardCalculator()",
            "_activateFailSafe()",
            "name()",
            "tokenBalanceOf(address)",
            "etherContributionOf(address)",
            "currentPrice()",
            "discount()",
            "remainingTokens()",
            "crowdsaleStarted()",
            "reclaimEtherDeadline()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "YourMomTokenCrowdsale(string,address,uint256,uint256,address,address,uint256,uint256)": {
                "argument": {
                    "contractName": "string",
                    "durationInDays": "uint256",
                    "howManyTokensAnEtherCanBuy": "uint256",
                    "crowdsaleStartTimeTimestamp": "uint256",
                    "ifInFailSafeTimeInDaysAfterDeadlineToReclaimForgottenEther": "uint256"
                },
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "enablePurchase()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "disablePurchase()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "Withdrawal()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "_currentTokenRewardCalculator()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "_activateFailSafe()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "tokenBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "etherContributionOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "currentPrice()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "discount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "remainingTokens()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "crowdsaleStarted()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            },
            "reclaimEtherDeadline()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "crowdsaleStartTime": "uint256",
                    "deadline": "uint256",
                    "tokensIssued": "uint256",
                    "amountRaised": "uint256",
                    "reclaimForgottenEtherDeadline": "uint256",
                    "currentContractAllowance": "uint256",
                    "initialContractAllowance": "uint256",
                    "originalTokenReward": "uint256",
                    "_etherAmount": "uint256",
                    "price": "uint256",
                    "errorCount": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "tokenBalanceOf(address)": [
                2839,
                493
            ],
            "name()": [
                1729,
                75
            ],
            "Withdrawal()": [
                2220,
                207
            ],
            "crowdsaleStarted()": [
                2376,
                295
            ],
            "discount()": [
                2090,
                163
            ],
            "enablePurchase()": [
                2353,
                273
            ],
            "disablePurchase()": [
                2596,
                383
            ],
            "transferOwnership(address)": [
                2973,
                537
            ],
            "reclaimEtherDeadline()": [
                2553,
                361
            ],
            "remainingTokens()": [
                2619,
                405
            ],
            "etherContributionOf(address)": [
                2709,
                449
            ],
            "currentPrice()": [
                2510,
                339
            ]
        },
        "block_CALL_mapping": {
            "block1244_0": [
                "tokenReward.allowance(beneficiary, this)"
            ],
            "jump705": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, msg.value * price)",
                "tokenReward.transferFrom(tokenHolder, msg.sender, msg.value * price)"
            ],
            "block705_0": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, msg.value * price)"
            ],
            "block7810": [
                "tokenReward.allowance(beneficiary, this)"
            ],
            "jump1244_0": [
                "tokenReward.allowance(beneficiary, this)",
                "tokenReward.allowance(beneficiary, this)"
            ],
            "jump705_0": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, msg.value * price)",
                "tokenReward.transferFrom(tokenHolder, msg.sender, msg.value * price)"
            ],
            "jump1509_0": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "jump4449": [
                "beneficiary.transfer(_etherAmount)",
                "beneficiary.transfer(_etherAmount)"
            ],
            "block1244": [
                "tokenReward.allowance(beneficiary, this)"
            ],
            "block1509_0": [
                "beneficiary.send(msg.value)"
            ],
            "jump5918": [
                "tokenReward.allowance(msg.sender, this)",
                "tokenReward.allowance(msg.sender, this)"
            ],
            "block4092": [
                "beneficiary.send(amountRaised)"
            ],
            "jump4092": [
                "beneficiary.send(amountRaised)",
                "beneficiary.send(amountRaised)"
            ],
            "block1509": [
                "beneficiary.send(msg.value)"
            ],
            "block4822": [
                "beneficiary.transfer(_etherAmount)"
            ],
            "jump5541": [
                "tokenReward.balanceOf(msg.sender)",
                "tokenReward.balanceOf(msg.sender)"
            ],
            "jump4822": [
                "beneficiary.transfer(_etherAmount)",
                "beneficiary.transfer(_etherAmount)"
            ],
            "jump7810": [
                "tokenReward.allowance(beneficiary, this)",
                "tokenReward.allowance(beneficiary, this)"
            ],
            "block705": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, msg.value * price)"
            ],
            "jump1244": [
                "tokenReward.allowance(beneficiary, this)",
                "tokenReward.allowance(beneficiary, this)"
            ],
            "jump6336": [
                "tokenReward.transferFrom(msg.sender, tokenHolder, balanceOf[msg.sender])",
                "tokenReward.transferFrom(msg.sender, tokenHolder, balanceOf[msg.sender])"
            ],
            "jump1509": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "block5541": [
                "tokenReward.balanceOf(msg.sender)"
            ],
            "jump6607": [
                "msg.sender.transfer(_etherAmount)",
                "msg.sender.transfer(_etherAmount)"
            ],
            "jump7464": [
                "tokenReward.allowance(beneficiary, this)",
                "tokenReward.allowance(beneficiary, this)"
            ],
            "block7464": [
                "tokenReward.allowance(beneficiary, this)"
            ],
            "block6607": [
                "msg.sender.transfer(_etherAmount)"
            ],
            "block5918": [
                "tokenReward.allowance(msg.sender, this)"
            ],
            "block6336": [
                "tokenReward.transferFrom(msg.sender, tokenHolder, balanceOf[msg.sender])"
            ],
            "block4449": [
                "beneficiary.transfer(_etherAmount)"
            ]
        }
    }
}