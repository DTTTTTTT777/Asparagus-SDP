{
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                8995,
                26
            ],
            "claimTokens(address)": [
                2505,
                537
            ],
            "totalSupply()": [
                632,
                141
            ],
            "allowance(address,address)": [
                2386,
                515
            ],
            "transferFrom(address,address,uint256)": [
                675,
                163
            ],
            "approve(address,uint256)": [
                488,
                97
            ],
            "totalSupplyAt(uint256)": [
                8995,
                26
            ],
            "enableTransfers(bool)": [
                2659,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1165,
                273
            ],
            "changeController(address)": [
                5468,
                889
            ],
            "balanceOf(address)": [
                7875,
                847
            ],
            "generateTokens(address,uint256)": [
                1613,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2114,
                471
            ],
            "destroyTokens(address,uint256)": [
                2285,
                493
            ],
            "transfer(address,uint256)": [
                8132,
                996
            ]
        },
        "block_CALL_mapping": {
            "block6964": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump4481_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4481_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4481_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4481_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4481_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4481": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4481_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4481_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7586": [
                "controller.transfer(this.balance)"
            ],
            "jump6450": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6450_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6450_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6450_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7875": [
                "token.balanceOf(this)"
            ],
            "block4481_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6450": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6450_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6450_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6450_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5468": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7875": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump5252": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block5252": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block4481_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4481_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4481_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4481_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8132": [
                "token.transfer(controller, balance)"
            ],
            "block4481_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4481_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4481": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5468": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7586": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump6964": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump8132": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "MiniMeMintableToken": {
        "function_list": [
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "MiniMeMintableToken(address,address,uint256,string,uint8,string,bool)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {}
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {}
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "MiniMeMintableToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                9840,
                26
            ],
            "claimTokens(address)": [
                2733,
                603
            ],
            "totalSupply()": [
                712,
                163
            ],
            "allowance(address,address)": [
                2614,
                581
            ],
            "transferFrom(address,address,uint256)": [
                755,
                185
            ],
            "approve(address,uint256)": [
                568,
                119
            ],
            "totalSupplyAt(uint256)": [
                9840,
                26
            ],
            "enableTransfers(bool)": [
                2887,
                647
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1346,
                317
            ],
            "changeController(address)": [
                6084,
                889
            ],
            "finishMinting()": [
                1707,
                361
            ],
            "balanceOf(address)": [
                8690,
                847
            ],
            "generateTokens(address,uint256)": [
                1841,
                405
            ],
            "approveAndCall(address,uint256,bytes)": [
                2342,
                537
            ],
            "mint(address,uint256)": [
                1004,
                251
            ],
            "destroyTokens(address,uint256)": [
                2513,
                559
            ],
            "transfer(address,uint256)": [
                8947,
                996
            ]
        },
        "block_CALL_mapping": {
            "block8690": [
                "token.balanceOf(this)"
            ],
            "block8947": [
                "token.transfer(controller, balance)"
            ],
            "block7265_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7265_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7265_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7265_3": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7265_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5097_7": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6084": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7265_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8690": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump8947": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block5097_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5868": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump7265": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6084": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block5097": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8401": [
                "controller.transfer(this.balance)"
            ],
            "jump7265_3": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5868": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump7779": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump7265_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5097_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8401": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "block5097_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5097_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5097_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7265": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5097_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5097_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7779": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump5097_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097_7": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5097_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "MiniMeVestedToken": {
        "function_list": [
            "MiniMeMintableToken(address,address,uint256,string,uint8,string,bool)",
            "mint(address,uint256)",
            "finishMinting()",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "MiniMeVestedToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "setVestingParams(uint256,uint256,uint256)",
            "getVestingPeriodsCompleted(uint256,uint256)",
            "getVestedBalance(uint256,uint256,uint256,uint256)",
            "vestedBalanceOf(address)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MiniMeMintableToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "MiniMeVestedToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "setVestingParams(uint256,uint256,uint256)": {
                "argument": {
                    "_vestingStartTime": "uint256",
                    "_vestingTotalPeriods": "uint256",
                    "_vestingPeriodTime": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "getVestingPeriodsCompleted(uint256,uint256)": {
                "argument": {
                    "_vestingStartTime": "uint256",
                    "_currentTime": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "getVestedBalance(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_initialBalance": "uint256",
                    "_currentBalance": "uint256",
                    "_vestingStartTime": "uint256",
                    "_currentTime": "uint256"
                },
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            },
            "vestedBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "vestingStartTime": "uint256",
                    "vestingPeriodTime": "uint256",
                    "vestingTotalPeriods": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10478,
                26
            ],
            "claimTokens(address)": [
                3261,
                757
            ],
            "totalSupply()": [
                876,
                185
            ],
            "allowance(address,address)": [
                3142,
                735
            ],
            "transferFrom(address,address,uint256)": [
                919,
                207
            ],
            "approve(address,uint256)": [
                645,
                119
            ],
            "totalSupplyAt(uint256)": [
                10478,
                26
            ],
            "setVestingParams(uint256,uint256,uint256)": [
                1127,
                251
            ],
            "enableTransfers(bool)": [
                3415,
                801
            ],
            "getVestingPeriodsCompleted(uint256,uint256)": [
                1052,
                229
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1650,
                383
            ],
            "changeController(address)": [
                6532,
                889
            ],
            "getVestedBalance(uint256,uint256,uint256,uint256)": [
                2289,
                515
            ],
            "finishMinting()": [
                2011,
                427
            ],
            "balanceOf(address)": [
                9313,
                847
            ],
            "generateTokens(address,uint256)": [
                2145,
                471
            ],
            "approveAndCall(address,uint256,bytes)": [
                2870,
                691
            ],
            "vestedBalanceOf(address)": [
                746,
                141
            ],
            "mint(address,uint256)": [
                1308,
                317
            ],
            "destroyTokens(address,uint256)": [
                3041,
                713
            ],
            "transfer(address,uint256)": [
                9570,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump6532": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7850": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_9": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9313": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block5545_7": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_3": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6532": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block5545_8": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8402": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block5545_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9024": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump5545_10": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6316": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block5545": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9024": [
                "controller.transfer(this.balance)"
            ],
            "jump5545_8": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_9": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9570": [
                "token.transfer(controller, balance)"
            ],
            "block9313": [
                "token.balanceOf(this)"
            ],
            "jump5545_7": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_10": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8402": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump9570": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block6316": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump5545_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_3": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "SwarmToken": {
        "function_list": [
            "MiniMeVestedToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "setVestingParams(uint256,uint256,uint256)",
            "getVestingPeriodsCompleted(uint256,uint256)",
            "getVestedBalance(uint256,uint256,uint256,uint256)",
            "vestedBalanceOf(address)",
            "finishMinting()",
            "MiniMeMintableToken(address,address,uint256,string,uint8,string,bool)",
            "mint(address,uint256)",
            "finishMinting()",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "SwarmToken(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MiniMeVestedToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "setVestingParams(uint256,uint256,uint256)": {
                "argument": {
                    "_vestingStartTime": "uint256",
                    "_vestingTotalPeriods": "uint256",
                    "_vestingPeriodTime": "uint256"
                },
                "contract": {}
            },
            "getVestingPeriodsCompleted(uint256,uint256)": {
                "argument": {
                    "_vestingStartTime": "uint256",
                    "_currentTime": "uint256"
                },
                "contract": {}
            },
            "getVestedBalance(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_initialBalance": "uint256",
                    "_currentBalance": "uint256",
                    "_vestingStartTime": "uint256",
                    "_currentTime": "uint256"
                },
                "contract": {}
            },
            "vestedBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            },
            "MiniMeMintableToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {}
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {}
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "SwarmToken(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10478,
                26
            ],
            "claimTokens(address)": [
                3261,
                757
            ],
            "totalSupply()": [
                876,
                185
            ],
            "allowance(address,address)": [
                3142,
                735
            ],
            "transferFrom(address,address,uint256)": [
                919,
                207
            ],
            "approve(address,uint256)": [
                645,
                119
            ],
            "totalSupplyAt(uint256)": [
                10478,
                26
            ],
            "setVestingParams(uint256,uint256,uint256)": [
                1127,
                251
            ],
            "enableTransfers(bool)": [
                3415,
                801
            ],
            "getVestingPeriodsCompleted(uint256,uint256)": [
                1052,
                229
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1650,
                383
            ],
            "changeController(address)": [
                6532,
                889
            ],
            "getVestedBalance(uint256,uint256,uint256,uint256)": [
                2289,
                515
            ],
            "finishMinting()": [
                2011,
                427
            ],
            "balanceOf(address)": [
                9313,
                847
            ],
            "generateTokens(address,uint256)": [
                2145,
                471
            ],
            "approveAndCall(address,uint256,bytes)": [
                2870,
                691
            ],
            "vestedBalanceOf(address)": [
                746,
                141
            ],
            "mint(address,uint256)": [
                1308,
                317
            ],
            "destroyTokens(address,uint256)": [
                3041,
                713
            ],
            "transfer(address,uint256)": [
                9570,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump6532": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7850": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_9": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9313": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block5545_7": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_3": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7850_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6532": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block5545_8": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8402": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block5545_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9024": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump5545_10": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6316": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block5545": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9024": [
                "controller.transfer(this.balance)"
            ],
            "jump5545_8": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_9": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9570": [
                "token.transfer(controller, balance)"
            ],
            "block9313": [
                "token.balanceOf(this)"
            ],
            "jump5545_7": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5545_10": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8402": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump9570": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block6316": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump5545_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_3": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7850_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5545_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                208,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                342,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                688,
                251
            ],
            "buyTokens(address)": [
                634,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2282": [
                "token.balanceOf(holders[i])"
            ],
            "jump1509_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1509": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2572": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump1509_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump3774_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2282": [
                "token.balanceOf(holders[i])",
                "token.balanceOf(holders[i])"
            ],
            "block1509_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block3078": [
                "token.destroy(amount.mul(1000000000000000000), msg.sender)"
            ],
            "jump3774_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3078": [
                "token.destroy(amount.mul(1000000000000000000), msg.sender)",
                "token.destroy(amount.mul(1000000000000000000), msg.sender)"
            ],
            "block3774": [
                "wallet.transfer(msg.value)"
            ],
            "block2572": [
                "token.totalSupply()"
            ],
            "block1509_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump3774": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2664": [
                "holders[i].transfer(ballanceOfHolder.mul(weiAmount).div(token.totalSupply()))",
                "holders[i].transfer(ballanceOfHolder.mul(weiAmount).div(token.totalSupply()))"
            ],
            "block2664": [
                "holders[i].transfer(ballanceOfHolder.mul(weiAmount).div(token.totalSupply()))"
            ],
            "block1509": [
                "token.mint(beneficiary, tokens)"
            ],
            "block3774_0": [
                "wallet.transfer(msg.value)"
            ],
            "block3774_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "FinalizableCrowdsale(uint256,uint256,uint256,address,address)",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "FinalizableCrowdsale(uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                326,
                141
            ],
            "hasEnded()": [
                710,
                295
            ],
            "buyTokens(address)": [
                656,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2472_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2472_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1170_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2472_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2472_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1743_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1743": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1743_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1170_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2472": [
                "wallet.transfer(msg.value)"
            ],
            "jump1743_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2472": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "SwarmCrowdsale": {
        "function_list": [
            "FinalizableCrowdsale(uint256,uint256,uint256,address,address)",
            "finalize()",
            "finalization()",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "SwarmCrowdsale(uint256,uint256,uint256,address,address,uint256)",
            "presaleMint(address,uint256)",
            "multiPresaleMint(address[],uint256[])",
            "initializeToken()",
            "setBaseTokensSold(uint256)",
            "buyTokens(address)",
            "finalization()",
            "transferUnallocatedTokens()",
            "getSaleRate(uint256)",
            "getCurrentSaleRate()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "FinalizableCrowdsale(uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "SwarmCrowdsale(uint256,uint256,uint256,address,address,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_baseTokensSold": "uint256"
                },
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "presaleMint(address,uint256)": {
                "argument": {
                    "_amt": "uint256"
                },
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "multiPresaleMint(address[],uint256[])": {
                "argument": {
                    "_toArray": "address[]",
                    "_amtArray": "uint256[]"
                },
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "initializeToken()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "setBaseTokensSold(uint256)": {
                "argument": {
                    "_baseTokensSold": "uint256"
                },
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "transferUnallocatedTokens()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "getSaleRate(uint256)": {
                "argument": {
                    "currentBaseTokensSold": "uint256"
                },
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "getCurrentSaleRate()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "baseTokensSold": "uint256",
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_TARGET_SOLD": "uint256",
                    "MAX_TOKEN_SALE_CAP": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1441,
                515
            ],
            "setBaseTokensSold(uint256)": [
                1342,
                471
            ],
            "getSaleRate(uint256)": [
                933,
                317
            ],
            "multiPresaleMint(address[],uint256[])": [
                365,
                97
            ],
            "pause()": [
                1041,
                361
            ],
            "unpause()": [
                643,
                185
            ],
            "initializeToken()": [
                620,
                163
            ],
            "transferOwnership(address)": [
                1488,
                537
            ],
            "presaleMint(address,uint256)": [
                1222,
                427
            ],
            "finalize()": [
                733,
                229
            ],
            "getCurrentSaleRate()": [
                890,
                295
            ],
            "buyTokens(address)": [
                1387,
                493
            ]
        },
        "block_CALL_mapping": {
            "jump4763": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2072": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block5321": [
                "token.changeController(wallet)"
            ],
            "block4763_1": [
                "wallet.transfer(msg.value)"
            ],
            "block4763_0": [
                "wallet.transfer(msg.value)"
            ],
            "block4763": [
                "wallet.transfer(msg.value)"
            ],
            "block4190": [
                "token.mint(_to, _amt)"
            ],
            "jump5039": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump5672": [
                "token.mint(wallet, amountToTransfer)",
                "token.mint(wallet, amountToTransfer)"
            ],
            "block5672": [
                "token.mint(wallet, amountToTransfer)"
            ],
            "block2072_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2072_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump4190": [
                "token.mint(_to, _amt)",
                "token.mint(_to, _amt)"
            ],
            "jump2072_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2072_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block5039": [
                "token.finishMinting()"
            ],
            "jump5321": [
                "token.changeController(wallet)",
                "token.changeController(wallet)"
            ],
            "block2072": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump4763_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump4763_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2683": [
                "token.mint(_toArray[i], _amtArray[i])"
            ],
            "jump2683": [
                "token.mint(_toArray[i], _amtArray[i])",
                "token.mint(_toArray[i], _amtArray[i])"
            ]
        }
    }
}