{
    "ERC20Interface": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "OpenANXTokenConfig": {
        "function_list": [
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "SYMBOL": "string",
                    "NAME": "string",
                    "DECIMALS": "uint8",
                    "DECIMALSFACTOR": "uint256",
                    "TOKENS_SOFT_CAP": "uint256",
                    "TOKENS_HARD_CAP": "uint256",
                    "TOKENS_TOTAL": "uint256",
                    "START_DATE": "uint256",
                    "END_DATE": "uint256",
                    "LOCKED_1Y_DATE": "uint256",
                    "LOCKED_2Y_DATE": "uint256",
                    "CONTRIBUTIONS_MIN": "uint256",
                    "CONTRIBUTIONS_MAX": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "LockedTokens": {
        "function_list": [
            "LockedTokens(address)",
            "addRemainingTokens()",
            "add1Y(address,uint256)",
            "add2Y(address,uint256)",
            "balanceOfLocked1Y(address)",
            "balanceOfLocked2Y(address)",
            "balanceOfLocked(address)",
            "totalSupplyLocked()",
            "unlock1Y()",
            "unlock2Y()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "LockedTokens(address)": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "addRemainingTokens()": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "add1Y(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "add2Y(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "balanceOfLocked1Y(address)": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "balanceOfLocked2Y(address)": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "balanceOfLocked(address)": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "totalSupplyLocked()": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "unlock1Y()": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "unlock2Y()": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOKENS_LOCKED_1Y_TOTAL": "uint256",
                    "TOKENS_LOCKED_2Y_TOTAL": "uint256",
                    "totalSupplyLocked1Y": "uint256",
                    "totalSupplyLocked2Y": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "unlock1Y()": [
                719,
                207
            ],
            "addRemainingTokens()": [
                1774,
                603
            ],
            "totalSupplyLocked()": [
                958,
                317
            ],
            "balanceOfLocked1Y(address)": [
                497,
                119
            ],
            "balanceOfLocked(address)": [
                1687,
                581
            ],
            "unlock2Y()": [
                1664,
                559
            ],
            "balanceOfLocked2Y(address)": [
                1534,
                515
            ]
        },
        "block_CALL_mapping": {
            "jump3853": [
                "tokenContract.totalSupply()",
                "tokenContract.totalSupply()"
            ],
            "block3379": [
                "tokenContract.transfer(msg.sender, amount)"
            ],
            "jump3379": [
                "tokenContract.transfer(msg.sender, amount)",
                "tokenContract.transfer(msg.sender, amount)"
            ],
            "block3853": [
                "tokenContract.totalSupply()"
            ],
            "jump2561": [
                "tokenContract.transfer(msg.sender, amount)",
                "tokenContract.transfer(msg.sender, amount)"
            ],
            "block2561": [
                "tokenContract.transfer(msg.sender, amount)"
            ]
        }
    },
    "ERC20Token": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ERC20Token(string,string,uint8,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "ERC20Token(string,string,uint8,uint256)": {
                "argument": {
                    "_symbol": "string",
                    "_name": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "balanceOf(address)": [
                672,
                185
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "acceptOwnership()": [
                759,
                207
            ],
            "allowance(address,address)": [
                1201,
                317
            ],
            "transfer(address,uint256)": [
                1013,
                273
            ],
            "transferOwnership(address)": [
                1320,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "OpenANXToken": {
        "function_list": [
            "ERC20Token(string,string,uint8,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "allowance(address,address)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "OpenANXToken(address)",
            "setWallet(address)",
            "setTokensPerKEther(uint256)",
            "fallback()",
            "proxyPayment(address)",
            "finalise()",
            "addPrecommitment(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "kycVerify(address)",
            "burnFrom(address,uint256)",
            "balanceOfLocked1Y(address)",
            "balanceOfLocked2Y(address)",
            "balanceOfLocked(address)",
            "totalSupplyLocked1Y()",
            "totalSupplyLocked2Y()",
            "totalSupplyLocked()",
            "totalSupplyUnlocked()",
            "transferAnyERC20Token(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "ERC20Token(string,string,uint8,uint256)": {
                "argument": {
                    "_symbol": "string",
                    "_name": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "OpenANXToken(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "setTokensPerKEther(uint256)": {
                "argument": {
                    "_tokensPerKEther": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "finalise()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "addPrecommitment(address,uint256)": {
                "argument": {
                    "balance": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "kycVerify(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "balanceOfLocked1Y(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "balanceOfLocked2Y(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "balanceOfLocked(address)": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "totalSupplyLocked1Y()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "totalSupplyLocked2Y()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "totalSupplyLocked()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "totalSupplyUnlocked()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "transferAnyERC20Token(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "tokensPerKEther": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finalise()": [
                2646,
                735
            ],
            "totalSupplyLocked2Y()": [
                6810,
                885
            ],
            "allowance(address,address)": [
                3265,
                933
            ],
            "transferFrom(address,address,uint256)": [
                1235,
                273
            ],
            "kycVerify(address)": [
                1034,
                207
            ],
            "totalSupplyUnlocked()": [
                3034,
                867
            ],
            "approve(address,uint256)": [
                715,
                97
            ],
            "proxyPayment(address)": [
                3648,
                1043
            ],
            "transferAnyERC20Token(address,uint256)": [
                3164,
                911
            ],
            "addPrecommitment(address,uint256)": [
                1552,
                383
            ],
            "burnFrom(address,uint256)": [
                1998,
                559
            ],
            "setTokensPerKEther(uint256)": [
                859,
                141
            ],
            "totalSupplyLocked()": [
                10311,
                887
            ],
            "setWallet(address)": [
                3384,
                955
            ],
            "balanceOfLocked1Y(address)": [
                5714,
                929
            ],
            "balanceOf(address)": [
                1888,
                515
            ],
            "balanceOfLocked(address)": [
                11624,
                929
            ],
            "transferOwnership(address)": [
                3538,
                999
            ],
            "totalSupplyLocked1Y()": [
                10078,
                885
            ],
            "balanceOfLocked2Y(address)": [
                9855,
                929
            ],
            "transfer(address,uint256)": [
                10938,
                946
            ],
            "acceptOwnership()": [
                1975,
                537
            ]
        },
        "block_CALL_mapping": {
            "jump8970": [
                "lockedTokens.totalSupplyLocked()",
                "lockedTokens.totalSupplyLocked()"
            ],
            "jump10311": [
                "lockedTokens.totalSupplyLocked()",
                "lockedTokens.totalSupplyLocked()"
            ],
            "block9855": [
                "lockedTokens.balanceOfLocked2Y(account)"
            ],
            "jump4207_1": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "jump9855": [
                "lockedTokens.balanceOfLocked2Y(account)",
                "lockedTokens.balanceOfLocked2Y(account)"
            ],
            "block4207_0": [
                "wallet.send(msg.value)"
            ],
            "block4207_1": [
                "wallet.send(msg.value)"
            ],
            "block6810": [
                "lockedTokens.totalSupplyLocked2Y()"
            ],
            "jump4207_0": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "jump5714": [
                "lockedTokens.balanceOfLocked1Y(account)",
                "lockedTokens.balanceOfLocked1Y(account)"
            ],
            "jump10938": [
                "ERC20Interface(tokenAddress).transfer(owner, amount)",
                "ERC20Interface(tokenAddress).transfer(owner, amount)"
            ],
            "block10938": [
                "ERC20Interface(tokenAddress).transfer(owner, amount)"
            ],
            "jump6810": [
                "lockedTokens.totalSupplyLocked2Y()",
                "lockedTokens.totalSupplyLocked2Y()"
            ],
            "jump8809": [
                "lockedTokens.addRemainingTokens()",
                "lockedTokens.addRemainingTokens()"
            ],
            "jump11624": [
                "lockedTokens.balanceOfLocked(account)",
                "lockedTokens.balanceOfLocked(account)"
            ],
            "jump9379": [
                "lockedTokens.totalSupplyLocked()",
                "lockedTokens.totalSupplyLocked()"
            ],
            "block6579": [
                "lockedTokens.totalSupplyLocked()"
            ],
            "jump10078": [
                "lockedTokens.totalSupplyLocked1Y()",
                "lockedTokens.totalSupplyLocked1Y()"
            ],
            "block8970": [
                "lockedTokens.totalSupplyLocked()"
            ],
            "jump10518": [
                "lockedTokens.totalSupplyLocked()",
                "lockedTokens.totalSupplyLocked()"
            ],
            "jump6579": [
                "lockedTokens.totalSupplyLocked()",
                "lockedTokens.totalSupplyLocked()"
            ],
            "jump4207": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "block10518": [
                "lockedTokens.totalSupplyLocked()"
            ],
            "block11624": [
                "lockedTokens.balanceOfLocked(account)"
            ],
            "block4207": [
                "wallet.send(msg.value)"
            ],
            "block9379": [
                "lockedTokens.totalSupplyLocked()"
            ],
            "block10311": [
                "lockedTokens.totalSupplyLocked()"
            ],
            "block10078": [
                "lockedTokens.totalSupplyLocked1Y()"
            ],
            "block8809": [
                "lockedTokens.addRemainingTokens()"
            ],
            "block5714": [
                "lockedTokens.balanceOfLocked1Y(account)"
            ]
        }
    }
}