{
    "token": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                807,
                207
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3650": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3650": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(address,address,uint256)",
            "fallback()",
            "unsoldTokensBack()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,address,uint256)": {
                "argument": {
                    "_timePeriod": "uint256"
                },
                "contract": {
                    "startICO": "uint256",
                    "periodICO": "uint256",
                    "stopICO": "uint256",
                    "price": "uint256",
                    "coeff": "uint256",
                    "tokenSold": "uint256",
                    "tokenFree": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startICO": "uint256",
                    "periodICO": "uint256",
                    "stopICO": "uint256",
                    "price": "uint256",
                    "coeff": "uint256",
                    "tokenSold": "uint256",
                    "tokenFree": "uint256"
                }
            },
            "unsoldTokensBack()": {
                "argument": {},
                "contract": {
                    "startICO": "uint256",
                    "periodICO": "uint256",
                    "stopICO": "uint256",
                    "price": "uint256",
                    "coeff": "uint256",
                    "tokenSold": "uint256",
                    "tokenFree": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "unsoldTokensBack()": [
                1885,
                75
            ]
        },
        "block_CALL_mapping": {
            "block522": [
                "msg.sender.transfer(msg.value)"
            ],
            "block2982": [
                "sharesTokenAddress.transfer(owner, sharesTokenAddress.balanceOf(this))"
            ],
            "jump901_0": [
                "msg.sender.transfer(msg.value - actualETHTransfer)",
                "msg.sender.transfer(msg.value - actualETHTransfer)"
            ],
            "jump901": [
                "msg.sender.transfer(msg.value - actualETHTransfer)",
                "msg.sender.transfer(msg.value - actualETHTransfer)"
            ],
            "block1595": [
                "sharesTokenAddress.transfer(msg.sender, tokenFree)"
            ],
            "jump1595": [
                "sharesTokenAddress.transfer(msg.sender, tokenFree)",
                "sharesTokenAddress.transfer(msg.sender, tokenFree)"
            ],
            "block1170": [
                "sharesTokenAddress.transfer(msg.sender, tokenToBuy)"
            ],
            "block646_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block357_0": [
                "sharesTokenAddress.balanceOf(this)"
            ],
            "block1595_0": [
                "sharesTokenAddress.transfer(msg.sender, tokenFree)"
            ],
            "jump1615_0": [
                "msg.sender.transfer(msg.value - sendETH)",
                "msg.sender.transfer(msg.value - sendETH)"
            ],
            "block1289_0": [
                "owner.transfer(sendETH)"
            ],
            "block788_0": [
                "owner.transfer(actualETHTransfer)"
            ],
            "jump1289_0": [
                "owner.transfer(sendETH)",
                "owner.transfer(sendETH)"
            ],
            "block522_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block2790": [
                "sharesTokenAddress.balanceOf(this)"
            ],
            "jump2790": [
                "sharesTokenAddress.balanceOf(this)",
                "sharesTokenAddress.balanceOf(this)"
            ],
            "jump357": [
                "sharesTokenAddress.balanceOf(this)",
                "sharesTokenAddress.balanceOf(this)"
            ],
            "jump2982": [
                "sharesTokenAddress.transfer(owner, sharesTokenAddress.balanceOf(this))",
                "sharesTokenAddress.transfer(owner, sharesTokenAddress.balanceOf(this))"
            ],
            "block1289": [
                "owner.transfer(sendETH)"
            ],
            "jump1615": [
                "msg.sender.transfer(msg.value - sendETH)",
                "msg.sender.transfer(msg.value - sendETH)"
            ],
            "jump1595_0": [
                "sharesTokenAddress.transfer(msg.sender, tokenFree)",
                "sharesTokenAddress.transfer(msg.sender, tokenFree)"
            ],
            "block901": [
                "msg.sender.transfer(msg.value - actualETHTransfer)"
            ],
            "block1615": [
                "msg.sender.transfer(msg.value - sendETH)"
            ],
            "block1615_0": [
                "msg.sender.transfer(msg.value - sendETH)"
            ],
            "jump1170_0": [
                "sharesTokenAddress.transfer(msg.sender, tokenToBuy)",
                "sharesTokenAddress.transfer(msg.sender, tokenToBuy)"
            ],
            "jump522": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block433": [
                "msg.sender.transfer(msg.value)"
            ],
            "block788": [
                "owner.transfer(actualETHTransfer)"
            ],
            "block433_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block1170_0": [
                "sharesTokenAddress.transfer(msg.sender, tokenToBuy)"
            ],
            "jump646": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block646": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump357_0": [
                "sharesTokenAddress.balanceOf(this)",
                "sharesTokenAddress.balanceOf(this)"
            ],
            "jump433_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump1289": [
                "owner.transfer(sendETH)",
                "owner.transfer(sendETH)"
            ],
            "block357": [
                "sharesTokenAddress.balanceOf(this)"
            ],
            "jump1170": [
                "sharesTokenAddress.transfer(msg.sender, tokenToBuy)",
                "sharesTokenAddress.transfer(msg.sender, tokenToBuy)"
            ],
            "jump788_0": [
                "owner.transfer(actualETHTransfer)",
                "owner.transfer(actualETHTransfer)"
            ],
            "jump646_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump788": [
                "owner.transfer(actualETHTransfer)",
                "owner.transfer(actualETHTransfer)"
            ],
            "jump433": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block901_0": [
                "msg.sender.transfer(msg.value - actualETHTransfer)"
            ],
            "jump522_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ]
        }
    }
}