{
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "StandardToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "StandardToken()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "EventInfo": {
        "function_list": [
            "getEventStart()",
            "getEventEnd()",
            "getVotingStart()",
            "getTradingStart()",
            "getNow()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "getEventStart()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getEventEnd()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getVotingStart()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getTradingStart()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getNow()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getVotingStart()": [
                157,
                97
            ],
            "getEventEnd()": [
                286,
                163
            ],
            "getNow()": [
                200,
                119
            ],
            "getEventStart()": [
                114,
                75
            ],
            "getTradingStart()": [
                243,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "HackerGold": {
        "function_list": [
            "StandardToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "HackerGold(address)",
            "fallback()",
            "createHKG(address)",
            "getPrice()",
            "getTotalSupply()",
            "getNow()",
            "getTotalValue()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "HackerGold(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "createHKG(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getPrice()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getTotalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getNow()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getTotalValue()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                363,
                97
            ],
            "getTotalSupply()": [
                1161,
                317
            ],
            "createHKG(address)": [
                689,
                185
            ],
            "totalSupply()": [
                464,
                119
            ],
            "getPrice()": [
                974,
                251
            ],
            "allowance(address,address)": [
                1247,
                361
            ],
            "getTotalValue()": [
                1204,
                339
            ],
            "balanceOf(address)": [
                743,
                207
            ],
            "transferFrom(address,address,uint256)": [
                507,
                141
            ],
            "getNow()": [
                1118,
                295
            ],
            "transfer(address,uint256)": [
                1017,
                273
            ]
        },
        "block_CALL_mapping": {
            "block1475": [
                "wallet.send(msg.value)"
            ],
            "block1475_0": [
                "wallet.send(msg.value)"
            ],
            "block1475_1": [
                "wallet.send(msg.value)"
            ],
            "jump1475": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "jump1475_0": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "jump1475_1": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ]
        }
    },
    "DSTContract": {
        "function_list": [
            "StandardToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "DSTContract(EventInfo,HackerGold,string,string)",
            "fallback()",
            "setHKGPrice(uint256)",
            "issuePreferedTokens(uint256,uint256)",
            "buyForHackerGold(uint256)",
            "issueTokens(uint256,uint256)",
            "setEtherPrice(uint256)",
            "disableTokenIssuance()",
            "burnRemainToken()",
            "submitEtherProposal(uint256,string)",
            "submitHKGProposal(uint256,string)",
            "objectProposal(bytes32)",
            "getIndexByProposalId(bytes32)",
            "redeemProposalFunds(bytes32)",
            "getAllTheFunds()",
            "submitImpeachmentProposal(string,address)",
            "supportImpeachment()",
            "votingRightsOf(address)",
            "getPreferedQtySold()",
            "setVirtualExchange(address)",
            "getHKGOwned()",
            "getEtherValue()",
            "getExecutive()",
            "getHKGPrice()",
            "getEtherPrice()",
            "getDSTName()",
            "getDSTNameBytes()",
            "getDSTSymbol()",
            "getDSTSymbolBytes()",
            "getAddress()",
            "getTotalSupply()",
            "getCollectedEther()",
            "getCounterProposals()",
            "getProposalIdByIndex(uint256)",
            "getProposalObjectionByIndex(uint256)",
            "getProposalValueByIndex(uint256)",
            "getCurrentImpeachmentUrlDetails()",
            "getCurrentImpeachmentVotesSupporting()",
            "convert(string)",
            "setVoteRight(address,uint256)",
            "setBalance(address,uint256)",
            "setInternalInfo(address,uint256,uint256,uint256,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "DSTContract(EventInfo,HackerGold,string,string)": {
                "argument": {
                    "dstName": "string",
                    "dstSymbol": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setHKGPrice(uint256)": {
                "argument": {
                    "qtyForOneHKG": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "issuePreferedTokens(uint256,uint256)": {
                "argument": {
                    "qtyForOneHKG": "uint256",
                    "qtyToEmit": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "buyForHackerGold(uint256)": {
                "argument": {
                    "hkgValue": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "issueTokens(uint256,uint256)": {
                "argument": {
                    "qtyForOneEther": "uint256",
                    "qtyToEmit": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setEtherPrice(uint256)": {
                "argument": {
                    "qtyForOneEther": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "disableTokenIssuance()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "burnRemainToken()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "submitEtherProposal(uint256,string)": {
                "argument": {
                    "requestValue": "uint256",
                    "url": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "submitHKGProposal(uint256,string)": {
                "argument": {
                    "requestValue": "uint256",
                    "url": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "objectProposal(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getIndexByProposalId(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "redeemProposalFunds(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getAllTheFunds()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "submitImpeachmentProposal(string,address)": {
                "argument": {
                    "urlDetails": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "supportImpeachment()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "votingRightsOf(address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getPreferedQtySold()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setVirtualExchange(address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getHKGOwned()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getEtherValue()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getExecutive()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getHKGPrice()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getEtherPrice()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTName()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTNameBytes()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTSymbol()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTSymbolBytes()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getAddress()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getTotalSupply()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCollectedEther()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCounterProposals()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getProposalIdByIndex(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getProposalObjectionByIndex(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getProposalValueByIndex(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCurrentImpeachmentUrlDetails()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCurrentImpeachmentVotesSupporting()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "convert(string)": {
                "argument": {
                    "key": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setVoteRight(address,uint256)": {
                "argument": {
                    "ammount": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setBalance(address,uint256)": {
                "argument": {
                    "ammount": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setInternalInfo(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "fixTotalSupply": "uint256",
                    "fixPreferedQtySold": "uint256",
                    "fixCollectedHKG": "uint256",
                    "fixCollectedEther": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            }
        },
        "function_block_mapping": {
            "setInternalInfo(address,uint256,uint256,uint256,uint256)": [
                3324,
                669
            ],
            "balanceOf(address)": [
                19825,
                928
            ],
            "issuePreferedTokens(uint256,uint256)": [
                3498,
                713
            ],
            "convert(string)": [
                4112,
                889
            ],
            "issueTokens(uint256,uint256)": [
                2808,
                537
            ],
            "getEtherPrice()": [
                4764,
                1065
            ],
            "totalSupply()": [
                1618,
                141
            ],
            "getHKGOwned()": [
                4678,
                1021
            ],
            "getProposalObjectionByIndex(uint256)": [
                2120,
                295
            ],
            "allowance(address,address)": [
                4894,
                1109
            ],
            "objectProposal(bytes32)": [
                3553,
                735
            ],
            "getCounterProposals()": [
                3040,
                603
            ],
            "transferFrom(address,address,uint256)": [
                1856,
                207
            ],
            "getCurrentImpeachmentUrlDetails()": [
                3781,
                823
            ],
            "setHKGPrice(uint256)": [
                4633,
                999
            ],
            "approve(address,uint256)": [
                1494,
                97
            ],
            "buyForHackerGold(uint256)": [
                2595,
                493
            ],
            "getCurrentImpeachmentVotesSupporting()": [
                2429,
                405
            ],
            "getHKGPrice()": [
                2077,
                273
            ],
            "setBalance(address,uint256)": [
                5013,
                1131
            ],
            "getDSTNameBytes()": [
                2472,
                427
            ],
            "getIndexByProposalId(bytes32)": [
                3602,
                757
            ],
            "setEtherPrice(uint256)": [
                2032,
                251
            ],
            "redeemProposalFunds(bytes32)": [
                2523,
                449
            ],
            "getPreferedQtySold()": [
                3925,
                845
            ],
            "submitEtherProposal(uint256,string)": [
                3083,
                625
            ],
            "votingRightsOf(address)": [
                4807,
                1087
            ],
            "disableTokenIssuance()": [
                2572,
                471
            ],
            "getDSTSymbol()": [
                2664,
                515
            ],
            "supportImpeachment()": [
                1595,
                119
            ],
            "getCollectedEther()": [
                2386,
                383
            ],
            "getExecutive()": [
                3237,
                647
            ],
            "getAllTheFunds()": [
                3017,
                581
            ],
            "setVirtualExchange(address)": [
                3431,
                691
            ],
            "submitHKGProposal(uint256,string)": [
                2863,
                559
            ],
            "submitImpeachmentProposal(string,address)": [
                4496,
                977
            ],
            "setVoteRight(address,uint256)": [
                4318,
                933
            ],
            "getProposalValueByIndex(uint256)": [
                2185,
                317
            ],
            "burnRemainToken()": [
                3758,
                801
            ],
            "getAddress()": [
                2299,
                361
            ],
            "getTotalSupply()": [
                4721,
                1043
            ],
            "getProposalIdByIndex(uint256)": [
                4245,
                911
            ],
            "getDSTSymbolBytes()": [
                1805,
                185
            ],
            "getEtherValue()": [
                1989,
                229
            ],
            "getDSTName()": [
                1661,
                163
            ],
            "transfer(address,uint256)": [
                4395,
                955
            ]
        },
        "block_CALL_mapping": {
            "block12869": [
                "hackerGold.transfer(msg.sender, getHKGOwned())"
            ],
            "block19825_2": [
                "hackerGold.balanceOf(this)"
            ],
            "block11167": [
                "eventInfo.getEventEnd()"
            ],
            "jump15160": [
                "eventInfo.getTradingStart()",
                "eventInfo.getTradingStart()"
            ],
            "block9620": [
                "eventInfo.getEventEnd()"
            ],
            "block19825_1": [
                "hackerGold.balanceOf(this)"
            ],
            "block19825_0": [
                "hackerGold.balanceOf(this)"
            ],
            "jump18751": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump10361": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block730": [
                "eventInfo.getEventEnd()"
            ],
            "jump7513": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block10361": [
                "eventInfo.getEventEnd()"
            ],
            "block1009_0": [
                "msg.sender.send(retEther)"
            ],
            "jump1009": [
                "msg.sender.send(retEther)",
                "msg.sender.send(retEther)"
            ],
            "jump9620": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump730_0": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block7513": [
                "eventInfo.getEventEnd()"
            ],
            "jump19825": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "jump730": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block18751": [
                "eventInfo.getEventEnd()"
            ],
            "jump8844": [
                "hackerGold.transfer(proposals[id].submitter, proposals[id].value)",
                "hackerGold.transfer(proposals[id].submitter, proposals[id].value)"
            ],
            "block730_0": [
                "eventInfo.getEventEnd()"
            ],
            "jump19825_0": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "block12587": [
                "msg.sender.send(this.balance)"
            ],
            "block1009": [
                "msg.sender.send(retEther)"
            ],
            "jump11167": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block15160": [
                "eventInfo.getTradingStart()"
            ],
            "block10866": [
                "eventInfo.getEventEnd()"
            ],
            "jump12869": [
                "hackerGold.transfer(msg.sender, getHKGOwned())",
                "hackerGold.transfer(msg.sender, getHKGOwned())"
            ],
            "block19825": [
                "hackerGold.balanceOf(this)"
            ],
            "jump14954": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block8844": [
                "hackerGold.transfer(proposals[id].submitter, proposals[id].value)"
            ],
            "jump13092": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block14954": [
                "eventInfo.getEventEnd()"
            ],
            "jump12515": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block8909": [
                "proposals[id].submitter.send(proposals[id].value)"
            ],
            "jump19825_2": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "jump19825_1": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "block12515": [
                "eventInfo.getEventEnd()"
            ],
            "jump10866": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump1009_0": [
                "msg.sender.send(retEther)",
                "msg.sender.send(retEther)"
            ],
            "block13092": [
                "eventInfo.getEventEnd()"
            ]
        }
    }
}