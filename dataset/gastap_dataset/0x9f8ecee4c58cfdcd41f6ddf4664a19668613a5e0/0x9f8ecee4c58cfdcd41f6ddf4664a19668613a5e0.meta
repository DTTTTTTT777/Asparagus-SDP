{
    "SMEBankingPlatformToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                805,
                229
            ],
            "transfer(address,uint256)": [
                1036,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Airdrop": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Airdrop(address)",
            "fallback()",
            "setAirdropAmount(uint256)",
            "getTokens(address)",
            "whitelistAddresses(address[])",
            "validPurchase(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "airdropAmount": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "airdropAmount": "uint256"
                }
            },
            "Airdrop(address)": {
                "argument": {},
                "contract": {
                    "airdropAmount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "airdropAmount": "uint256"
                }
            },
            "setAirdropAmount(uint256)": {
                "argument": {
                    "_airdropAmount": "uint256"
                },
                "contract": {
                    "airdropAmount": "uint256"
                }
            },
            "getTokens(address)": {
                "argument": {},
                "contract": {
                    "airdropAmount": "uint256"
                }
            },
            "whitelistAddresses(address[])": {
                "argument": {
                    "beneficiaries": "address[]"
                },
                "contract": {
                    "airdropAmount": "uint256"
                }
            },
            "validPurchase(address)": {
                "argument": {},
                "contract": {
                    "airdropAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getTokens(address)": [
                255,
                97
            ],
            "whitelistAddresses(address[])": [
                153,
                75
            ],
            "setAirdropAmount(uint256)": [
                396,
                141
            ],
            "transferOwnership(address)": [
                623,
                207
            ]
        },
        "block_CALL_mapping": {
            "block1034_1": [
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "block1034_0": [
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "jump1034_1": [
                "token.transfer(beneficiary, airdropAmount)",
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "jump1034_0": [
                "token.transfer(beneficiary, airdropAmount)",
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "block1034": [
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "jump1034": [
                "token.transfer(beneficiary, airdropAmount)",
                "token.transfer(beneficiary, airdropAmount)"
            ]
        }
    },
    "SMEBankingPlatformAirdrop": {
        "function_list": [
            "Airdrop(address)",
            "fallback()",
            "setAirdropAmount(uint256)",
            "getTokens(address)",
            "whitelistAddresses(address[])",
            "validPurchase(address)",
            "Ownable()",
            "transferOwnership(address)",
            "SMEBankingPlatformAirdrop(address)",
            "drainRemainingTokens()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Airdrop(address)": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "setAirdropAmount(uint256)": {
                "argument": {
                    "_airdropAmount": "uint256"
                },
                "contract": {}
            },
            "getTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "whitelistAddresses(address[])": {
                "argument": {
                    "beneficiaries": "address[]"
                },
                "contract": {}
            },
            "validPurchase(address)": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "SMEBankingPlatformAirdrop(address)": {
                "argument": {},
                "contract": {}
            },
            "drainRemainingTokens()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "getTokens(address)": [
                266,
                97
            ],
            "drainRemainingTokens()": [
                407,
                141
            ],
            "whitelistAddresses(address[])": [
                164,
                75
            ],
            "setAirdropAmount(uint256)": [
                430,
                163
            ],
            "transferOwnership(address)": [
                657,
                229
            ]
        },
        "block_CALL_mapping": {
            "block1068": [
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "block2057": [
                "token.balanceOf(this)"
            ],
            "jump2249": [
                "token.transfer(owner, token.balanceOf(this))",
                "token.transfer(owner, token.balanceOf(this))"
            ],
            "jump1068": [
                "token.transfer(beneficiary, airdropAmount)",
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "jump2057": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump1068_1": [
                "token.transfer(beneficiary, airdropAmount)",
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "jump1068_0": [
                "token.transfer(beneficiary, airdropAmount)",
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "block1068_0": [
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "block1068_1": [
                "token.transfer(beneficiary, airdropAmount)"
            ],
            "block2249": [
                "token.transfer(owner, token.balanceOf(this))"
            ]
        }
    }
}