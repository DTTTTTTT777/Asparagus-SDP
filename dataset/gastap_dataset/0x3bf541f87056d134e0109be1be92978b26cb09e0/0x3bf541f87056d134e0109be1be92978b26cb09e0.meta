{
    "Assertive": {
        "function_list": [
            "assert(bool)"
        ],
        "initial_state": {
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "assert(bool)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Protocol": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "MelonToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "lockedBalanceOf(address)",
            "MelonToken(address,address,uint256,uint256)",
            "mintLiquidToken(address,uint256)",
            "mintIcedToken(address,uint256)",
            "unlockBalance(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "changeMintingAddress(address)",
            "changeMelonportAddress(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "lockedBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "MelonToken(address,address,uint256,uint256)": {
                "argument": {
                    "setStartTime": "uint256",
                    "setEndTime": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "mintLiquidToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "mintIcedToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "unlockBalance(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "changeMintingAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "changeMelonportAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "THAWING_DURATION": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT_OFFERED_TO_PUBLIC": "uint256",
                    "MAX_TOTAL_TOKEN_AMOUNT": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeMelonportAddress(address)": [
                676,
                163
            ],
            "totalSupply()": [
                633,
                141
            ],
            "allowance(address,address)": [
                1798,
                493
            ],
            "transferFrom(address,address,uint256)": [
                743,
                185
            ],
            "approve(address,uint256)": [
                532,
                119
            ],
            "changeMintingAddress(address)": [
                1005,
                273
            ],
            "unlockBalance(address)": [
                1731,
                471
            ],
            "lockedBalanceOf(address)": [
                1072,
                295
            ],
            "mintIcedToken(address,uint256)": [
                1289,
                361
            ],
            "balanceOf(address)": [
                1159,
                317
            ],
            "transfer(address,uint256)": [
                1630,
                449
            ],
            "mintLiquidToken(address,uint256)": [
                1366,
                383
            ]
        },
        "block_CALL_mapping": {}
    },
    "Contribution": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "priceRate()",
            "Contribution(address,address,address,uint256)",
            "buy(uint8,bytes32,bytes32)",
            "buyRecipient(address,uint8,bytes32,bytes32)",
            "btcsBuyRecipient(address)",
            "halt()",
            "unhalt()",
            "changeMelonportAddress(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "priceRate()": {
                "argument": {},
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "Contribution(address,address,address,uint256)": {
                "argument": {
                    "setStartTime": "uint256"
                },
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "buy(uint8,bytes32,bytes32)": {
                "argument": {
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "buyRecipient(address,uint8,bytes32,bytes32)": {
                "argument": {
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "btcsBuyRecipient(address)": {
                "argument": {},
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "changeMelonportAddress(address)": {
                "argument": {},
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "ETHER_CAP": "uint256",
                    "MAX_CONTRIBUTION_DURATION": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "PRICE_RATE_FIRST": "uint256",
                    "PRICE_RATE_SECOND": "uint256",
                    "PRICE_RATE_THIRD": "uint256",
                    "PRICE_RATE_FOURTH": "uint256",
                    "DIVISOR_PRICE": "uint256",
                    "MELONPORT_COMPANY_STAKE": "uint256",
                    "FOUNDER_STAKE": "uint256",
                    "EXT_COMPANY_STAKE_ONE": "uint256",
                    "EXT_COMPANY_STAKE_TWO": "uint256",
                    "EXT_COMPANY_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_ONE": "uint256",
                    "ADVISOR_STAKE_TWO": "uint256",
                    "ADVISOR_STAKE_THREE": "uint256",
                    "ADVISOR_STAKE_FOUR": "uint256",
                    "AMBASSADOR_STAKE": "uint256",
                    "SPECIALIST_STAKE_ONE": "uint256",
                    "SPECIALIST_STAKE_TWO": "uint256",
                    "SPECIALIST_STAKE_THREE": "uint256",
                    "DIVISOR_STAKE": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "etherRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buyRecipient(address,uint8,bytes32,bytes32)": [
                3314,
                1043
            ],
            "changeMelonportAddress(address)": [
                804,
                141
            ],
            "priceRate()": [
                3130,
                977
            ],
            "btcsBuyRecipient(address)": [
                3173,
                999
            ],
            "unhalt()": [
                3064,
                933
            ],
            "halt()": [
                1563,
                427
            ],
            "buy(uint8,bytes32,bytes32)": [
                3583,
                1109
            ]
        },
        "block_CALL_mapping": {
            "block5971": [
                "sha256(msg.sender)"
            ],
            "block6657": [
                "melonToken.mintLiquidToken(recipient, amount)"
            ],
            "block6105": [
                "ecrecover(hash, v, r, s)"
            ],
            "jump5971": [
                "sha256(msg.sender)",
                "sha256(msg.sender)"
            ],
            "jump6657_0": [
                "melonToken.mintLiquidToken(recipient, amount)",
                "melonToken.mintLiquidToken(recipient, amount)"
            ],
            "block6693": [
                "melonport.send(msg.value)"
            ],
            "jump6105_0": [
                "ecrecover(hash, v, r, s)",
                "ecrecover(hash, v, r, s)"
            ],
            "block5720": [
                "melonToken.mintLiquidToken(recipient, amount)"
            ],
            "jump5971_0": [
                "sha256(msg.sender)",
                "sha256(msg.sender)"
            ],
            "block5756": [
                "melonport.send(msg.value)"
            ],
            "block6693_0": [
                "melonport.send(msg.value)"
            ],
            "block5971_0": [
                "sha256(msg.sender)"
            ],
            "jump6657": [
                "melonToken.mintLiquidToken(recipient, amount)",
                "melonToken.mintLiquidToken(recipient, amount)"
            ],
            "block6657_0": [
                "melonToken.mintLiquidToken(recipient, amount)"
            ],
            "jump5720": [
                "melonToken.mintLiquidToken(recipient, amount)",
                "melonToken.mintLiquidToken(recipient, amount)"
            ],
            "block6105_0": [
                "ecrecover(hash, v, r, s)"
            ],
            "jump6105": [
                "ecrecover(hash, v, r, s)",
                "ecrecover(hash, v, r, s)"
            ]
        }
    }
}