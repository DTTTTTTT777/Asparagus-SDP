{
    "PresaleToken": {
        "function_list": [
            "PresaleToken(address,address)",
            "buyTokens(address)",
            "burnTokens(address)",
            "balanceOf(address)",
            "setPresaleState(PresaleToken.State)",
            "withdrawEther()",
            "setTokenManager(address)",
            "setCrowdsaleManager(address)",
            "getTokenManager()",
            "getCrowdsaleManager()",
            "getCurrentState()",
            "getPrice()",
            "getTotalSupply()",
            "getNumberOfPurchases()",
            "getPurchaseAddress(uint256)",
            "getPurchaseAmount(uint256)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PresaleToken(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "burnTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "setPresaleState(PresaleToken.State)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "withdrawEther()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "setTokenManager(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "setCrowdsaleManager(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getTokenManager()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getCrowdsaleManager()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getCurrentState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getPrice()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getTotalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getNumberOfPurchases()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getPurchaseAddress(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "getPurchaseAmount(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "purchases": "PresaleToken.Purchase[]"
                }
            }
        },
        "function_block_mapping": {
            "setTokenManager(address)": [
                1165,
                339
            ],
            "getCurrentState()": [
                844,
                229
            ],
            "getPurchaseAmount(uint256)": [
                1750,
                537
            ],
            "getCrowdsaleManager()": [
                968,
                273
            ],
            "getNumberOfPurchases()": [
                1232,
                361
            ],
            "getPrice()": [
                1462,
                427
            ],
            "burnTokens(address)": [
                1640,
                493
            ],
            "withdrawEther()": [
                1142,
                317
            ],
            "getPurchaseAddress(uint256)": [
                1815,
                559
            ],
            "balanceOf(address)": [
                1055,
                295
            ],
            "setCrowdsaleManager(address)": [
                901,
                251
            ],
            "getTotalSupply()": [
                1707,
                515
            ],
            "getTokenManager()": [
                1553,
                471
            ],
            "buyTokens(address)": [
                2011,
                603
            ]
        },
        "block_CALL_mapping": {
            "block3204": [
                "escrow.send(this.balance)"
            ],
            "jump3204": [
                "escrow.send(this.balance)",
                "escrow.send(this.balance)"
            ]
        }
    }
}