{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(address,uint256,uint256,uint256,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds(uint256)",
            "validPurchase()",
            "hasEnded()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_endTime": "uint256",
                    "_startRate": "uint256",
                    "_minThreshold": "uint256"
                },
                "contract": {
                    "RATE_CHANGE_THRESHOLD": "uint256",
                    "endTime": "uint256",
                    "startRate": "uint256",
                    "currentRate": "uint256",
                    "maxRate": "uint256",
                    "minThreshold": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "RATE_CHANGE_THRESHOLD": "uint256",
                    "endTime": "uint256",
                    "startRate": "uint256",
                    "currentRate": "uint256",
                    "maxRate": "uint256",
                    "minThreshold": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "RATE_CHANGE_THRESHOLD": "uint256",
                    "endTime": "uint256",
                    "startRate": "uint256",
                    "currentRate": "uint256",
                    "maxRate": "uint256",
                    "minThreshold": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "RATE_CHANGE_THRESHOLD": "uint256",
                    "endTime": "uint256",
                    "startRate": "uint256",
                    "currentRate": "uint256",
                    "maxRate": "uint256",
                    "minThreshold": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "RATE_CHANGE_THRESHOLD": "uint256",
                    "endTime": "uint256",
                    "startRate": "uint256",
                    "currentRate": "uint256",
                    "maxRate": "uint256",
                    "minThreshold": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "RATE_CHANGE_THRESHOLD": "uint256",
                    "endTime": "uint256",
                    "startRate": "uint256",
                    "currentRate": "uint256",
                    "maxRate": "uint256",
                    "minThreshold": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "RATE_CHANGE_THRESHOLD": "uint256",
                    "endTime": "uint256",
                    "startRate": "uint256",
                    "currentRate": "uint256",
                    "maxRate": "uint256",
                    "minThreshold": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                596,
                251
            ],
            "buyTokens(address)": [
                542,
                229
            ]
        },
        "block_CALL_mapping": {
            "block1466": [
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "jump1971_1": [
                "wallet.transfer(amount)",
                "wallet.transfer(amount)"
            ],
            "block1971_1": [
                "wallet.transfer(amount)"
            ],
            "block1971_0": [
                "wallet.transfer(amount)"
            ],
            "block1971": [
                "wallet.transfer(amount)"
            ],
            "jump1971_0": [
                "wallet.transfer(amount)",
                "wallet.transfer(amount)"
            ],
            "block1466_0": [
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "block1466_1": [
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "jump1466_0": [
                "token.transfer(beneficiary, tokensTotal)",
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "jump1466_1": [
                "token.transfer(beneficiary, tokensTotal)",
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "jump1466": [
                "token.transfer(beneficiary, tokensTotal)",
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "jump1971": [
                "wallet.transfer(amount)",
                "wallet.transfer(amount)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(address,uint256,uint256,uint256,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds(uint256)",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_endTime": "uint256",
                    "_startRate": "uint256",
                    "_minThreshold": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                574,
                251
            ],
            "buyTokens(address)": [
                520,
                229
            ]
        },
        "block_CALL_mapping": {
            "block1034_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1034_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2091_1": [
                "wallet.transfer(msg.value)"
            ],
            "block2091_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1607": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1607_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1034_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1034_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block2091": [
                "wallet.transfer(msg.value)"
            ],
            "block1607_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump2091_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2091_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1034": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1607_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1607": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1607_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2091": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1034": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ]
        }
    },
    "ELTCoinCrowdsale": {
        "function_list": [
            "IndividualCappedCrowdsale(uint256)",
            "validPurchase()",
            "Crowdsale(address,uint256,uint256,uint256,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds(uint256)",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "Ownable()",
            "transferOwnership(address)",
            "ELTCoinCrowdsale(address,uint256,uint256,uint256,uint256,uint256,address)",
            "drainRemainingToken()",
            "setMaxRate(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "IndividualCappedCrowdsale(uint256)": {
                "argument": {
                    "_capPerAddress": "uint256"
                },
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_endTime": "uint256",
                    "_startRate": "uint256",
                    "_minThreshold": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "ELTCoinCrowdsale(address,uint256,uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_cap": "uint256",
                    "_minThreshold": "uint256",
                    "_capPerAddress": "uint256"
                },
                "contract": {}
            },
            "drainRemainingToken()": {
                "argument": {},
                "contract": {}
            },
            "setMaxRate(uint256)": {
                "argument": {
                    "_maxRate": "uint256"
                },
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setMaxRate(uint256)": [
                826,
                317
            ],
            "hasEnded()": [
                1055,
                405
            ],
            "drainRemainingToken()": [
                630,
                229
            ],
            "buyTokens(address)": [
                1001,
                383
            ],
            "transferOwnership(address)": [
                1145,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump3896_1": [
                "wallet.transfer(amount)",
                "wallet.transfer(amount)"
            ],
            "jump3896_0": [
                "wallet.transfer(amount)",
                "wallet.transfer(amount)"
            ],
            "jump1993_1": [
                "token.transfer(beneficiary, tokensTotal)",
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "jump3896": [
                "wallet.transfer(amount)",
                "wallet.transfer(amount)"
            ],
            "block1993_1": [
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "block1993_0": [
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "block1993": [
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "block2854": [
                "token.transfer(owner, token.balanceOf(this))"
            ],
            "jump1993": [
                "token.transfer(beneficiary, tokensTotal)",
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "jump2854": [
                "token.transfer(owner, token.balanceOf(this))",
                "token.transfer(owner, token.balanceOf(this))"
            ],
            "block3896": [
                "wallet.transfer(amount)"
            ],
            "jump1993_0": [
                "token.transfer(beneficiary, tokensTotal)",
                "token.transfer(beneficiary, tokensTotal)"
            ],
            "block2662": [
                "token.balanceOf(this)"
            ],
            "jump2662": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block3896_0": [
                "wallet.transfer(amount)"
            ],
            "block3896_1": [
                "wallet.transfer(amount)"
            ]
        }
    }
}