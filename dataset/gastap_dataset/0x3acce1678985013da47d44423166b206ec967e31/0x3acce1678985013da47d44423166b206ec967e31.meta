{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                514,
                163
            ],
            "totalSupply()": [
                338,
                119
            ],
            "allowance(address,address)": [
                702,
                207
            ],
            "transferFrom(address,address,uint256)": [
                381,
                141
            ],
            "transfer(address,uint256)": [
                601,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "ReserveToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ReserveToken()",
            "create(address,uint256)",
            "destroy(address,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "ReserveToken()": {
                "argument": {},
                "contract": {}
            },
            "create(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "destroy(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                411,
                119
            ],
            "totalSupply()": [
                589,
                163
            ],
            "destroy(address,uint256)": [
                895,
                251
            ],
            "balanceOf(address)": [
                808,
                229
            ],
            "transferFrom(address,address,uint256)": [
                632,
                185
            ],
            "create(address,uint256)": [
                512,
                141
            ],
            "allowance(address,address)": [
                1073,
                295
            ],
            "transfer(address,uint256)": [
                972,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "AccountLevels": {
        "function_list": [
            "accountLevel(address)"
        ],
        "initial_state": {
            "accountLevel(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "accountLevel(address)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "AccountLevelsTest": {
        "function_list": [
            "accountLevel(address)",
            "setAccountLevel(address,uint256)",
            "accountLevel(address)"
        ],
        "initial_state": {
            "accountLevel(address)": {
                "argument": {},
                "contract": {}
            },
            "setAccountLevel(address,uint256)": {
                "argument": {
                    "level": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setAccountLevel(address,uint256)": [
                266,
                119
            ],
            "accountLevel(address)": [
                179,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "AdexContract": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "AdexContract(address,address,address,uint256,uint256,uint256)",
            "fallback()",
            "changeAdmin(address)",
            "changeAccountLevelsAddr(address)",
            "changeFeeAccount(address)",
            "changeFeeMake(uint256)",
            "changeFeeTake(uint256)",
            "changeFeeRebate(uint256)",
            "deposit()",
            "withdraw(uint256)",
            "depositToken(address,uint256)",
            "withdrawToken(address,uint256)",
            "balanceOf(address,address)",
            "order(address,uint256,address,uint256,uint256,uint256)",
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)",
            "tradeBalances(address,uint256,address,uint256,address,uint256)",
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)",
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)",
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)",
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "AdexContract(address,address,address,uint256,uint256,uint256)": {
                "argument": {
                    "feeMake_": "uint256",
                    "feeTake_": "uint256",
                    "feeRebate_": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "changeAccountLevelsAddr(address)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "changeFeeAccount(address)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "changeFeeMake(uint256)": {
                "argument": {
                    "feeMake_": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "changeFeeTake(uint256)": {
                "argument": {
                    "feeTake_": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "changeFeeRebate(uint256)": {
                "argument": {
                    "feeRebate_": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "depositToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "withdrawToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "balanceOf(address,address)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "order(address,uint256,address,uint256,uint256,uint256)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32",
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "tradeBalances(address,uint256,address,uint256,address,uint256)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32",
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            },
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256",
                    "feeRebate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeFeeAccount(address)": [
                1930,
                361
            ],
            "changeFeeMake(uint256)": [
                1432,
                251
            ],
            "balanceOf(address,address)": [
                2541,
                581
            ],
            "changeAdmin(address)": [
                2085,
                427
            ],
            "order(address,uint256,address,uint256,uint256,uint256)": [
                580,
                97
            ],
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)": [
                1652,
                339
            ],
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)": [
                2747,
                625
            ],
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)": [
                358,
                75
            ],
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)": [
                1000,
                163
            ],
            "withdraw(uint256)": [
                1191,
                185
            ],
            "changeFeeTake(uint256)": [
                2040,
                405
            ],
            "withdrawToken(address,uint256)": [
                2152,
                449
            ],
            "deposit()": [
                2377,
                515
            ],
            "changeFeeRebate(uint256)": [
                1520,
                295
            ],
            "changeAccountLevelsAddr(address)": [
                2387,
                537
            ],
            "depositToken(address,uint256)": [
                1236,
                207
            ],
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)": [
                820,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump3401": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump12184": [
                "AccountLevels(accountLevelsAddr).accountLevel(user)",
                "AccountLevels(accountLevelsAddr).accountLevel(user)"
            ],
            "jump5410": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "block10829_0": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block10829": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block11255_0": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump11255": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump4988": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block5410": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump6699": [
                "msg.sender.call.value(amount)()",
                "msg.sender.call.value(amount)()"
            ],
            "block6052": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block11255": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "block4988": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block6699": [
                "msg.sender.call.value(amount)()"
            ],
            "block7364": [
                "Token(token).transferFrom(msg.sender, this, amount)"
            ],
            "block2979": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "jump6052": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "jump11255_0": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "block3401": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump10829_0": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block4280": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block12184": [
                "AccountLevels(accountLevelsAddr).accountLevel(user)"
            ],
            "jump2979": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "jump4280": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block9574": [
                "Token(token).transfer(msg.sender, amount)"
            ],
            "jump9574": [
                "Token(token).transfer(msg.sender, amount)",
                "Token(token).transfer(msg.sender, amount)"
            ],
            "jump7364": [
                "Token(token).transferFrom(msg.sender, this, amount)",
                "Token(token).transferFrom(msg.sender, this, amount)"
            ],
            "jump10829": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ]
        }
    }
}