{
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "PrivateCityTokens": {
        "function_list": [
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                457,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "PCICO": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "PCICO()",
            "fallback()",
            "getCurrentTokenPrice()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "decimals": "uint256",
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "TOKEN_MIN": "uint256",
                    "totalReceivedEth": "uint256"
                }
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "decimals": "uint256",
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "TOKEN_MIN": "uint256",
                    "totalReceivedEth": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "decimals": "uint256",
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "TOKEN_MIN": "uint256",
                    "totalReceivedEth": "uint256"
                }
            },
            "PCICO()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "decimals": "uint256",
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "TOKEN_MIN": "uint256",
                    "totalReceivedEth": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "decimals": "uint256",
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "TOKEN_MIN": "uint256",
                    "totalReceivedEth": "uint256"
                }
            },
            "getCurrentTokenPrice()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "decimals": "uint256",
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "TOKEN_MIN": "uint256",
                    "totalReceivedEth": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "decimals": "uint256",
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "TOKEN_MIN": "uint256",
                    "totalReceivedEth": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump301": [
                "ethFundDeposit.transfer(msg.value)",
                "ethFundDeposit.transfer(msg.value)"
            ],
            "jump695_0": [
                "tokenExchange.transferFrom(tokenAccountAddress, msg.sender, tokens)",
                "tokenExchange.transferFrom(tokenAccountAddress, msg.sender, tokens)"
            ],
            "jump695": [
                "tokenExchange.transferFrom(tokenAccountAddress, msg.sender, tokens)",
                "tokenExchange.transferFrom(tokenAccountAddress, msg.sender, tokens)"
            ],
            "block301_0": [
                "ethFundDeposit.transfer(msg.value)"
            ],
            "block695_0": [
                "tokenExchange.transferFrom(tokenAccountAddress, msg.sender, tokens)"
            ],
            "block695": [
                "tokenExchange.transferFrom(tokenAccountAddress, msg.sender, tokens)"
            ],
            "block301": [
                "ethFundDeposit.transfer(msg.value)"
            ],
            "jump301_0": [
                "ethFundDeposit.transfer(msg.value)",
                "ethFundDeposit.transfer(msg.value)"
            ]
        }
    }
}