{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                466,
                207
            ],
            "buyTokens(address)": [
                412,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump909_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump909_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334": [
                "wallet.transfer(msg.value)"
            ],
            "jump1334_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1334_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block909": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1334": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump909": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1334_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                574,
                251
            ],
            "buyTokens(address)": [
                520,
                229
            ]
        },
        "block_CALL_mapping": {
            "block1034_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1034_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2091_1": [
                "wallet.transfer(msg.value)"
            ],
            "block2091_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1607": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1607_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1034_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1034_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block2091": [
                "wallet.transfer(msg.value)"
            ],
            "block1607_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump2091_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2091_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1034": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1607_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1607": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1607_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2091": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1034": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ]
        }
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "transfer(address,uint256)": [
                717,
                207
            ],
            "balanceOf(address)": [
                630,
                185
            ],
            "allowance(address,address)": [
                818,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump2095": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "block2095": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                326,
                141
            ],
            "hasEnded()": [
                710,
                295
            ],
            "buyTokens(address)": [
                656,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2472_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2472_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1170_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2472_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2472_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1743_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1743": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1743_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1170_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2472": [
                "wallet.transfer(msg.value)"
            ],
            "jump1743_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2472": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "RefundableCrowdsale": {
        "function_list": [
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "finalize()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                790,
                317
            ],
            "finalize()": [
                413,
                163
            ],
            "hasEnded()": [
                867,
                361
            ],
            "buyTokens(address)": [
                813,
                339
            ],
            "goalReached()": [
                609,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3563": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block1987": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3400": [
                "vault.close()",
                "vault.close()"
            ],
            "jump1987": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2765": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump1414": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1987_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3563": [
                "vault.enableRefunds()"
            ],
            "block3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3400": [
                "vault.close()"
            ],
            "block2765": [
                "vault.refund(msg.sender)"
            ],
            "block1987_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1414_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1414_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1414": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1987_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1987_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ]
        }
    },
    "AmpleCoinCrowdsale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "finalize()",
            "finalization()",
            "AmpleCoinCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,uint256)",
            "createTokenContract()",
            "validPurchase()",
            "hasEnded()",
            "finalization()",
            "buyTokens(address)",
            "getRate()",
            "isPresale()",
            "isTokensale()",
            "saleAccepting()",
            "isDowntime()",
            "isVolumeDiscountFirst()",
            "isVolumeDiscountSecond()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "AmpleCoinCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_presaleStartTime": "uint256",
                    "_presaleEndTime": "uint256",
                    "_tokensaleStartTime": "uint256",
                    "_tokensaleEndTime": "uint256",
                    "_baseRate": "uint256",
                    "_cap": "uint256",
                    "_tokenCap": "uint256",
                    "_initialAmpleCoinFundBalance": "uint256",
                    "_initialPremiumWalletBalance": "uint256",
                    "_goal": "uint256"
                },
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "getRate()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "isPresale()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "isTokensale()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "saleAccepting()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "isDowntime()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "isVolumeDiscountFirst()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "isVolumeDiscountSecond()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "RATE_PRE_SALE": "uint256",
                    "VOLUME_DISCOUNT_FIRST": "uint256",
                    "VOLUME_DISCOUNT_SECOND": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleEndTime": "uint256",
                    "tokensaleStartTime": "uint256",
                    "tokensaleEndTime": "uint256",
                    "tokenCap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1328,
                559
            ],
            "claimRefund()": [
                1208,
                493
            ],
            "pause()": [
                1008,
                405
            ],
            "getRate()": [
                875,
                339
            ],
            "unpause()": [
                523,
                163
            ],
            "goalReached()": [
                961,
                383
            ],
            "transferOwnership(address)": [
                1375,
                581
            ],
            "finalize()": [
                675,
                251
            ],
            "buyTokens(address)": [
                1274,
                537
            ]
        },
        "block_CALL_mapping": {
            "block3374": [
                "vault.refund(msg.sender)"
            ],
            "jump3545": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block4852": [
                "token.transferOwnership(wallet)"
            ],
            "block5186": [
                "vault.enableRefunds()"
            ],
            "jump4603": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump4852": [
                "token.transferOwnership(wallet)",
                "token.transferOwnership(wallet)"
            ],
            "block3545_0": [
                "token.totalSupply()"
            ],
            "block5023": [
                "vault.close()"
            ],
            "block1977": [
                "token.mint(beneficiary, tokens)"
            ],
            "block4603": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4217": [
                "token.totalSupply()"
            ],
            "block3545": [
                "token.totalSupply()"
            ],
            "jump4217_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump4217_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump4603_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4603_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4603_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump5186": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump1977_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1977_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1977_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1977_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump5023": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4603_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4217_1": [
                "token.totalSupply()"
            ],
            "block4217_0": [
                "token.totalSupply()"
            ],
            "jump4217": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump3545_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump1977": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump3374": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "BurnableToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "burn(uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                158,
                75
            ],
            "increaseApproval(address,uint256)": [
                769,
                229
            ],
            "balanceOf(address)": [
                581,
                185
            ],
            "burn(uint256)": [
                435,
                141
            ],
            "allowance(address,address)": [
                870,
                251
            ],
            "decreaseApproval(address,uint256)": [
                480,
                163
            ],
            "transferFrom(address,address,uint256)": [
                302,
                119
            ],
            "transfer(address,uint256)": [
                668,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "AmpleCoinToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "burn(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                437,
                119
            ],
            "increaseApproval(address,uint256)": [
                1470,
                383
            ],
            "mint(address,uint256)": [
                757,
                207
            ],
            "finishMinting()": [
                1091,
                295
            ],
            "burn(uint256)": [
                858,
                229
            ],
            "balanceOf(address)": [
                1004,
                273
            ],
            "decreaseApproval(address,uint256)": [
                903,
                251
            ],
            "transferFrom(address,address,uint256)": [
                581,
                163
            ],
            "transferOwnership(address)": [
                1690,
                427
            ],
            "allowance(address,address)": [
                1571,
                405
            ],
            "transfer(address,uint256)": [
                1369,
                361
            ]
        },
        "block_CALL_mapping": {}
    }
}