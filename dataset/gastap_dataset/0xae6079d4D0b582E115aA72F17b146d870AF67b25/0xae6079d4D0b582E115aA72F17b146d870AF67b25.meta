{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "makeAdmin(address,bool)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "makeAdmin(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "makeAdmin(address,bool)": [
                103,
                75
            ],
            "transferOwnership(address)": [
                360,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "Sivalicoin": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "makeAdmin(address,bool)",
            "Sivalicoin()",
            "increaseTotalSupply(address,uint256)",
            "usersCanUnFreeze(bool)",
            "setMinBalance(uint256)",
            "transferAndFreeze(address,uint256)",
            "_freeze(address,bool)",
            "freeze(address,bool)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "setPrices(uint256,uint256)",
            "setUsersCanTrade(bool)",
            "setCanTrade(address,bool)",
            "buy()",
            "sell(uint256)",
            "fallback()",
            "withdraw(address,uint256)",
            "setAdmin(address,bool)",
            "setICO(bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "makeAdmin(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "Sivalicoin()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "increaseTotalSupply(address,uint256)": {
                "argument": {
                    "increaseBy": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "usersCanUnFreeze(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setMinBalance(uint256)": {
                "argument": {
                    "minimumBalanceInWei": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transferAndFreeze(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "_freeze(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "freeze(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setPrices(uint256,uint256)": {
                "argument": {
                    "newSellPrice": "uint256",
                    "newBuyPrice": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setUsersCanTrade(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setCanTrade(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "withdraw(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setAdmin(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setICO(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "usersCanUnFreeze(bool)": [
                3282,
                867
            ],
            "setCanTrade(address,bool)": [
                763,
                141
            ],
            "increaseTotalSupply(address,uint256)": [
                2397,
                625
            ],
            "makeAdmin(address,bool)": [
                1067,
                229
            ],
            "buy()": [
                2290,
                581
            ],
            "transferAndFreeze(address,uint256)": [
                1982,
                515
            ],
            "transferFrom(address,address,uint256)": [
                885,
                185
            ],
            "sell(uint256)": [
                3026,
                779
            ],
            "approve(address,uint256)": [
                662,
                119
            ],
            "freeze(address,bool)": [
                2474,
                647
            ],
            "withdraw(address,uint256)": [
                3205,
                845
            ],
            "burnFrom(address,uint256)": [
                1838,
                471
            ],
            "setPrices(uint256,uint256)": [
                463,
                75
            ],
            "setUsersCanTrade(bool)": [
                2860,
                735
            ],
            "setMinBalance(uint256)": [
                2553,
                669
            ],
            "approveAndCall(address,uint256,bytes)": [
                2598,
                691
            ],
            "transfer(address,uint256)": [
                2320,
                603
            ],
            "transferOwnership(address)": [
                3138,
                823
            ],
            "setAdmin(address,bool)": [
                1353,
                317
            ],
            "burn(uint256)": [
                1193,
                273
            ],
            "setICO(bool)": [
                3091,
                801
            ]
        },
        "block_CALL_mapping": {
            "block9134": [
                "target.transfer(amount)"
            ],
            "block8589": [
                "msg.sender.send(revenue)"
            ],
            "jump9134": [
                "target.transfer(amount)",
                "target.transfer(amount)"
            ],
            "jump8589": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "block7884": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump7884": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    }
}