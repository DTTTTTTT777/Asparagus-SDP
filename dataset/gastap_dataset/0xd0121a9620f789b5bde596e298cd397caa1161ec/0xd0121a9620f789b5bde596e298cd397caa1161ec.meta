{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "transfer(address,uint256)": [
                717,
                207
            ],
            "balanceOf(address)": [
                630,
                185
            ],
            "allowance(address,address)": [
                818,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "PausableToken": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                737,
                229
            ],
            "approve(address,uint256)": [
                202,
                75
            ],
            "unpause()": [
                479,
                141
            ],
            "increaseApproval(address,uint256)": [
                948,
                295
            ],
            "balanceOf(address)": [
                650,
                207
            ],
            "allowance(address,address)": [
                1049,
                317
            ],
            "decreaseApproval(address,uint256)": [
                549,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "transferOwnership(address)": [
                1168,
                339
            ],
            "transfer(address,uint256)": [
                847,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "WELToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "pause()": [
                1191,
                339
            ],
            "approve(address,uint256)": [
                459,
                119
            ],
            "increaseApproval(address,uint256)": [
                1546,
                427
            ],
            "unpause()": [
                785,
                207
            ],
            "mint(address,uint256)": [
                808,
                229
            ],
            "finishMinting()": [
                1144,
                317
            ],
            "balanceOf(address)": [
                1057,
                295
            ],
            "decreaseApproval(address,uint256)": [
                956,
                273
            ],
            "transferFrom(address,address,uint256)": [
                603,
                163
            ],
            "allowance(address,address)": [
                1647,
                449
            ],
            "transfer(address,uint256)": [
                1445,
                405
            ],
            "transferOwnership(address)": [
                1766,
                471
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump2095": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "block2095": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "WelCoinCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "WelCoinCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address)",
            "fallback()",
            "buyTokens(address)",
            "mintTokens(address,uint256,uint256)",
            "setPreSaleParameters(uint256,uint256,uint256,uint256)",
            "setMainSaleParameters(uint256,uint256,uint256,uint256)",
            "setWallets(address,address)",
            "setRate(uint256)",
            "setGoal(uint256)",
            "pauseToken()",
            "unpauseToken()",
            "transferTokenOwnership(address)",
            "mainSaleHasEnded()",
            "preSaleHasEnded()",
            "forwardFunds()",
            "getBonusPercent(uint256,uint256)",
            "applyBonus(uint256,uint256)",
            "validateWithinPeriods()",
            "validateWithinCaps(uint256)",
            "claimRefund()",
            "goalReached()",
            "finaliseCrowdsale()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "WelCoinCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_preSaleStartTime": "uint256",
                    "_preSaleEndTime": "uint256",
                    "_preSaleWeiCap": "uint256",
                    "_mainSaleStartTime": "uint256",
                    "_mainSaleEndTime": "uint256",
                    "_mainSaleWeiCap": "uint256",
                    "_goal": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "mintTokens(address,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "forcePercent": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setPreSaleParameters(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_preSaleStartTime": "uint256",
                    "_preSaleEndTime": "uint256",
                    "_preSaleWeiCap": "uint256",
                    "_preSaleMinimumWei": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setMainSaleParameters(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_mainSaleStartTime": "uint256",
                    "_mainSaleEndTime": "uint256",
                    "_mainSaleWeiCap": "uint256",
                    "_mainSaleMinimumWei": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setWallets(address,address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setRate(uint256)": {
                "argument": {
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setGoal(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "pauseToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "unpauseToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "mainSaleHasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "preSaleHasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "getBonusPercent(uint256,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "currentTime": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "applyBonus(uint256,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "percent": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "validateWithinPeriods()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "validateWithinCaps(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "finaliseCrowdsale()": {
                "argument": {},
                "contract": {
                    "goal": "uint256",
                    "tokenEmission": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "mainSaleStartTime": "uint256",
                    "mainSaleEndTime": "uint256",
                    "preSaleWeiCap": "uint256",
                    "mainSaleWeiCap": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "preSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "mainSaleBonuses": "WelCoinCrowdsale.Bonus[]",
                    "preSaleMinimumWei": "uint256",
                    "mainSaleMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                1990,
                691
            ],
            "setRate(uint256)": [
                796,
                229
            ],
            "mainSaleHasEnded()": [
                1750,
                603
            ],
            "transferTokenOwnership(address)": [
                526,
                97
            ],
            "goalReached()": [
                1440,
                493
            ],
            "setMainSaleParameters(uint256,uint256,uint256,uint256)": [
                1797,
                625
            ],
            "preSaleHasEnded()": [
                749,
                207
            ],
            "setWallets(address,address)": [
                2186,
                779
            ],
            "getBonusPercent(uint256,uint256)": [
                1193,
                383
            ],
            "finaliseCrowdsale()": [
                636,
                141
            ],
            "pauseToken()": [
                683,
                163
            ],
            "transferOwnership(address)": [
                2339,
                823
            ],
            "unpauseToken()": [
                972,
                317
            ],
            "setPreSaleParameters(uint256,uint256,uint256,uint256)": [
                1915,
                669
            ],
            "mintTokens(address,uint256,uint256)": [
                1082,
                361
            ],
            "setGoal(uint256)": [
                927,
                295
            ],
            "buyTokens(address)": [
                2285,
                801
            ]
        },
        "block_CALL_mapping": {
            "block5998": [
                "token.mint(beneficiary, bonusedTokens)"
            ],
            "block3515": [
                "WELToken(token).transferOwnership(newOwner)"
            ],
            "jump5437": [
                "WELToken(token).unpause()",
                "WELToken(token).unpause()"
            ],
            "jump8975_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump8975_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3045_1": [
                "token.mint(beneficiary, bonusedTokens)",
                "token.mint(beneficiary, bonusedTokens)"
            ],
            "jump3045_0": [
                "token.mint(beneficiary, bonusedTokens)",
                "token.mint(beneficiary, bonusedTokens)"
            ],
            "jump8975": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4491": [
                "vault.enableRefunds()"
            ],
            "block3806": [
                "token.totalSupply()"
            ],
            "jump4134": [
                "token.mint(tokenWallet, minterBenefit)",
                "token.mint(tokenWallet, minterBenefit)"
            ],
            "block4134": [
                "token.mint(tokenWallet, minterBenefit)"
            ],
            "jump4328": [
                "vault.close()",
                "vault.close()"
            ],
            "jump5998": [
                "token.mint(beneficiary, bonusedTokens)",
                "token.mint(beneficiary, bonusedTokens)"
            ],
            "block5437": [
                "WELToken(token).unpause()"
            ],
            "jump4868": [
                "WELToken(token).pause()",
                "WELToken(token).pause()"
            ],
            "block4868": [
                "WELToken(token).pause()"
            ],
            "jump4491": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block8975": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3806": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump3045": [
                "token.mint(beneficiary, bonusedTokens)",
                "token.mint(beneficiary, bonusedTokens)"
            ],
            "block3045_0": [
                "token.mint(beneficiary, bonusedTokens)"
            ],
            "jump3515": [
                "WELToken(token).transferOwnership(newOwner)",
                "WELToken(token).transferOwnership(newOwner)"
            ],
            "block8975_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block8975_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump7540": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block4328": [
                "vault.close()"
            ],
            "block3045_1": [
                "token.mint(beneficiary, bonusedTokens)"
            ],
            "block7540": [
                "vault.refund(msg.sender)"
            ],
            "block3045": [
                "token.mint(beneficiary, bonusedTokens)"
            ]
        }
    }
}