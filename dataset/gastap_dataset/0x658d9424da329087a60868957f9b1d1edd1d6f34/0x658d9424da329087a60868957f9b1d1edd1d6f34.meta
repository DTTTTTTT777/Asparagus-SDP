{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "FornicoinToken": {
        "function_list": [
            "Ownable()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "FornicoinToken(address)",
            "setSellPrice(uint256)",
            "updateTotalSupply(uint256)",
            "setMinTxFee(uint256)",
            "refillTxFeeMinimum()",
            "transfer(address,uint256)",
            "sellFXX(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "FornicoinToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "setSellPrice(uint256)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "updateTotalSupply(uint256)": {
                "argument": {
                    "additions": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "setMinTxFee(uint256)": {
                "argument": {
                    "_balance": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "refillTxFeeMinimum()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "sellFXX(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "MAX_SUPPLY": "uint256",
                    "teamTokens": "uint256",
                    "minBalanceForTxFee": "uint256",
                    "sellPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "setSellPrice(uint256)": [
                1635,
                471
            ],
            "updateTotalSupply(uint256)": [
                869,
                251
            ],
            "balanceOf(address)": [
                914,
                273
            ],
            "setMinTxFee(uint256)": [
                556,
                141
            ],
            "refillTxFeeMinimum()": [
                1538,
                427
            ],
            "transferFrom(address,address,uint256)": [
                601,
                163
            ],
            "allowance(address,address)": [
                1419,
                405
            ],
            "transfer(address,uint256)": [
                1232,
                339
            ]
        },
        "block_CALL_mapping": {
            "block5005": [
                "msg.sender.transfer(revenue)"
            ],
            "jump5005": [
                "msg.sender.transfer(revenue)",
                "msg.sender.transfer(revenue)"
            ]
        }
    },
    "FornicoinCrowdsale": {
        "function_list": [
            "FornicoinCrowdsale(uint256,address,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "currentRate()",
            "withdrawTeamTokens()",
            "distPresale(address,uint256)",
            "finalizeSale()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "FornicoinCrowdsale(uint256,address,address)": {
                "argument": {
                    "_startTime": "uint256"
                },
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "currentRate()": {
                "argument": {},
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "withdrawTeamTokens()": {
                "argument": {},
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "distPresale(address,uint256)": {
                "argument": {
                    "_tokens": "uint256"
                },
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            },
            "finalizeSale()": {
                "argument": {},
                "contract": {
                    "startICOPhaseOne": "uint256",
                    "startICOPhaseTwo": "uint256",
                    "startICOPhaseThree": "uint256",
                    "endICO": "uint256",
                    "phaseOneRate": "uint256",
                    "phaseTwoRate": "uint256",
                    "phaseThreeRate": "uint256",
                    "weiRaised": "uint256",
                    "teamTokens": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawTeamTokens()": [
                856,
                339
            ],
            "currentRate()": [
                1130,
                449
            ],
            "distPresale(address,uint256)": [
                450,
                163
            ],
            "finalizeSale()": [
                657,
                229
            ],
            "buyTokens(address)": [
                989,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump4831": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block2984": [
                "token.MAX_SUPPLY()"
            ],
            "block3377": [
                "token.totalSupply()"
            ],
            "block1844_1": [
                "token.transfer(beneficiary, tokens)"
            ],
            "block1597_1": [
                "token.updateTotalSupply(tokens)"
            ],
            "jump3569": [
                "token.MAX_SUPPLY()",
                "token.MAX_SUPPLY()"
            ],
            "block1597": [
                "token.updateTotalSupply(tokens)"
            ],
            "jump1597": [
                "token.updateTotalSupply(tokens)",
                "token.updateTotalSupply(tokens)"
            ],
            "jump2723": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump3176": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump4831_0": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump4078": [
                "token.updateTotalSupply(difference)",
                "token.updateTotalSupply(difference)"
            ],
            "block4492": [
                "token.transfer(wallet, teamTokens)"
            ],
            "jump3874": [
                "token.transfer(wallet, difference)",
                "token.transfer(wallet, difference)"
            ],
            "block1844_0": [
                "token.transfer(beneficiary, tokens)"
            ],
            "jump4831_1": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block4078": [
                "token.updateTotalSupply(difference)"
            ],
            "jump1597_0": [
                "token.updateTotalSupply(tokens)",
                "token.updateTotalSupply(tokens)"
            ],
            "block2472": [
                "token.transfer(_presale, _tokens)"
            ],
            "block3569": [
                "token.MAX_SUPPLY()"
            ],
            "jump2984": [
                "token.MAX_SUPPLY()",
                "token.MAX_SUPPLY()"
            ],
            "block1597_0": [
                "token.updateTotalSupply(tokens)"
            ],
            "jump1844": [
                "token.transfer(beneficiary, tokens)",
                "token.transfer(beneficiary, tokens)"
            ],
            "jump1597_1": [
                "token.updateTotalSupply(tokens)",
                "token.updateTotalSupply(tokens)"
            ],
            "block3176": [
                "token.totalSupply()"
            ],
            "jump4492": [
                "token.transfer(wallet, teamTokens)",
                "token.transfer(wallet, teamTokens)"
            ],
            "block3874": [
                "token.transfer(wallet, difference)"
            ],
            "block2723": [
                "wallet.transfer(this.balance)"
            ],
            "block4831_1": [
                "wallet.transfer(this.balance)"
            ],
            "block1844": [
                "token.transfer(beneficiary, tokens)"
            ],
            "jump1844_0": [
                "token.transfer(beneficiary, tokens)",
                "token.transfer(beneficiary, tokens)"
            ],
            "jump1844_1": [
                "token.transfer(beneficiary, tokens)",
                "token.transfer(beneficiary, tokens)"
            ],
            "jump2472": [
                "token.transfer(_presale, _tokens)",
                "token.transfer(_presale, _tokens)"
            ],
            "block4831_0": [
                "wallet.transfer(this.balance)"
            ],
            "jump3377": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block4831": [
                "wallet.transfer(this.balance)"
            ]
        }
    }
}