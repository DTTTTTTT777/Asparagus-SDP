{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                208,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                342,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                227,
                97
            ],
            "mint(address,uint256)": [
                504,
                163
            ],
            "balanceOf(address)": [
                605,
                185
            ],
            "finishMinting()": [
                692,
                207
            ],
            "allowance(address,address)": [
                927,
                273
            ],
            "transferFrom(address,address,uint256)": [
                371,
                141
            ],
            "transfer(address,uint256)": [
                826,
                251
            ],
            "transferOwnership(address)": [
                1046,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "HydroCoin": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "mint(address,uint256)",
            "finishMinting()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "startQueueing()",
            "stopQueueing(uint256)",
            "queueLength()",
            "addRecToQueue(address,uint256)",
            "add(address,uint256)",
            "remove(address)",
            "update(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "mint(address,uint256)",
            "emergencyERC20Drain(ERC20,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "startQueueing()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "stopQueueing(uint256)": {
                "argument": {
                    "num": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "queueLength()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "addRecToQueue(address,uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "add(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "remove(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "update(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            },
            "emergencyERC20Drain(ERC20,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "pos": "uint256",
                    "theQueue": "HydroCoin.QueueRecord[]"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                2216,
                603
            ],
            "transferFrom(address,address,uint256)": [
                680,
                163
            ],
            "pause()": [
                1627,
                427
            ],
            "approve(address,uint256)": [
                536,
                119
            ],
            "unpause()": [
                943,
                229
            ],
            "finishMinting()": [
                1535,
                383
            ],
            "balanceOf(address)": [
                1448,
                361
            ],
            "transferOwnership(address)": [
                2335,
                625
            ],
            "startQueueing()": [
                1178,
                295
            ],
            "mint(address,uint256)": [
                990,
                251
            ],
            "stopQueueing(uint256)": [
                1582,
                405
            ],
            "queueLength()": [
                2053,
                537
            ],
            "transfer(address,uint256)": [
                5366,
                946
            ]
        },
        "block_CALL_mapping": {
            "jump5366": [
                "token.transfer(owner, amount)",
                "token.transfer(owner, amount)"
            ],
            "block5366": [
                "token.transfer(owner, amount)"
            ]
        }
    },
    "HydroCoinPresale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "setWallet(address)",
            "HydroCoinPresale()",
            "hasEnded()",
            "buyTokens(address)",
            "finishPresale()",
            "fallback()",
            "emergencyERC20Drain(ERC20,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "HydroCoinPresale()": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "finishPresale()": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            },
            "emergencyERC20Drain(ERC20,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "minContribution": "uint256",
                    "hardcap": "uint256",
                    "vendorAllocation": "uint256",
                    "numberOfPurchasers": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "pause()": [
                530,
                185
            ],
            "unpause()": [
                350,
                97
            ],
            "hasEnded()": [
                1274,
                471
            ],
            "finishPresale()": [
                794,
                273
            ],
            "setWallet(address)": [
                1023,
                383
            ],
            "transferOwnership(address)": [
                1321,
                493
            ],
            "buyTokens(address)": [
                1220,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump3306": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "jump2181": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2223_1": [
                "hardwareWallet.transfer(msg.value)",
                "hardwareWallet.transfer(msg.value)"
            ],
            "block2181": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2223_1": [
                "hardwareWallet.transfer(msg.value)"
            ],
            "jump3590": [
                "theToken.transfer(owner, amount)",
                "theToken.transfer(owner, amount)"
            ],
            "jump2223_0": [
                "hardwareWallet.transfer(msg.value)",
                "hardwareWallet.transfer(msg.value)"
            ],
            "block2181_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2181_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2223_0": [
                "hardwareWallet.transfer(msg.value)"
            ],
            "block3306": [
                "token.transferOwnership(owner)"
            ],
            "block2223": [
                "hardwareWallet.transfer(msg.value)"
            ],
            "jump2223": [
                "hardwareWallet.transfer(msg.value)",
                "hardwareWallet.transfer(msg.value)"
            ],
            "jump2181_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2181_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3590": [
                "theToken.transfer(owner, amount)"
            ]
        }
    }
}