{
    "PoolAllocations": {
        "function_list": [
            "PoolAllocations(ERC20Basic)",
            "claim()",
            "getPayoutCycles(uint256)",
            "createAllocationEntry(uint256,uint256,uint256,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "PoolAllocations(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "maxNumOfPayoutCycles": "uint256",
                    "startDay": "uint256",
                    "cyclesStartFrom": "uint256",
                    "payoutCycleInDays": "uint256"
                }
            },
            "claim()": {
                "argument": {},
                "contract": {
                    "maxNumOfPayoutCycles": "uint256",
                    "startDay": "uint256",
                    "cyclesStartFrom": "uint256",
                    "payoutCycleInDays": "uint256"
                }
            },
            "getPayoutCycles(uint256)": {
                "argument": {
                    "payoutCyclesLeft": "uint256"
                },
                "contract": {
                    "maxNumOfPayoutCycles": "uint256",
                    "startDay": "uint256",
                    "cyclesStartFrom": "uint256",
                    "payoutCycleInDays": "uint256"
                }
            },
            "createAllocationEntry(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "first": "uint256",
                    "next": "uint256",
                    "rest": "uint256"
                },
                "contract": {
                    "maxNumOfPayoutCycles": "uint256",
                    "startDay": "uint256",
                    "cyclesStartFrom": "uint256",
                    "payoutCycleInDays": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claim()": [
                222,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump997": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ],
            "block997": [
                "token.transfer(msg.sender, tokens)"
            ]
        }
    },
    "PoolBLock": {
        "function_list": [
            "PoolAllocations(ERC20Basic)",
            "claim()",
            "getPayoutCycles(uint256)",
            "createAllocationEntry(uint256,uint256,uint256,uint256)",
            "PoolBLock(ERC20Basic)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PoolAllocations(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "claim()": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "getPayoutCycles(uint256)": {
                "argument": {
                    "payoutCyclesLeft": "uint256"
                },
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "createAllocationEntry(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "first": "uint256",
                    "next": "uint256",
                    "rest": "uint256"
                },
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "PoolBLock(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claim()": [
                276,
                141
            ]
        },
        "block_CALL_mapping": {
            "block1067": [
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1067": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ]
        }
    },
    "PoolCLock": {
        "function_list": [
            "PoolAllocations(ERC20Basic)",
            "claim()",
            "getPayoutCycles(uint256)",
            "createAllocationEntry(uint256,uint256,uint256,uint256)",
            "PoolCLock(ERC20Basic)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PoolAllocations(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "claim()": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "getPayoutCycles(uint256)": {
                "argument": {
                    "payoutCyclesLeft": "uint256"
                },
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "createAllocationEntry(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "first": "uint256",
                    "next": "uint256",
                    "rest": "uint256"
                },
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "PoolCLock(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claim()": [
                276,
                141
            ]
        },
        "block_CALL_mapping": {
            "block1067": [
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1067": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ]
        }
    },
    "PoolDLock": {
        "function_list": [
            "PoolAllocations(ERC20Basic)",
            "claim()",
            "getPayoutCycles(uint256)",
            "createAllocationEntry(uint256,uint256,uint256,uint256)",
            "PoolDLock(ERC20Basic)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PoolAllocations(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "claim()": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "getPayoutCycles(uint256)": {
                "argument": {
                    "payoutCyclesLeft": "uint256"
                },
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "createAllocationEntry(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "first": "uint256",
                    "next": "uint256",
                    "rest": "uint256"
                },
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "PoolDLock(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claim()": [
                276,
                141
            ]
        },
        "block_CALL_mapping": {
            "block1067": [
                "token.transfer(msg.sender, tokens)"
            ],
            "jump1067": [
                "token.transfer(msg.sender, tokens)",
                "token.transfer(msg.sender, tokens)"
            ]
        }
    },
    "Pausable": {
        "function_list": [
            "Pausable(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Pausable(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                197,
                119
            ],
            "unpause()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BlockvPublicLedger": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "BlockvPublicLedger()",
            "appendToDistributionList(string,address,uint256,uint8)",
            "fixDistribution(uint8,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "txCount": "uint256",
                    "distributionEntryCount": "uint256",
                    "transactionLog": "BlockvPublicLedger.logEntry[]",
                    "distributionList": "BlockvPublicLedger.distributionEntry[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "txCount": "uint256",
                    "distributionEntryCount": "uint256",
                    "transactionLog": "BlockvPublicLedger.logEntry[]",
                    "distributionList": "BlockvPublicLedger.distributionEntry[]"
                }
            },
            "BlockvPublicLedger()": {
                "argument": {},
                "contract": {
                    "txCount": "uint256",
                    "distributionEntryCount": "uint256",
                    "transactionLog": "BlockvPublicLedger.logEntry[]",
                    "distributionList": "BlockvPublicLedger.distributionEntry[]"
                }
            },
            "appendToDistributionList(string,address,uint256,uint8)": {
                "argument": {
                    "_tx_id": "string",
                    "_amount": "uint256",
                    "_discount": "uint8"
                },
                "contract": {
                    "txCount": "uint256",
                    "distributionEntryCount": "uint256",
                    "transactionLog": "BlockvPublicLedger.logEntry[]",
                    "distributionList": "BlockvPublicLedger.distributionEntry[]"
                }
            },
            "fixDistribution(uint8,uint256)": {
                "argument": {
                    "_tokenPrice": "uint8",
                    "_usdToEthConversionRate": "uint256"
                },
                "contract": {
                    "txCount": "uint256",
                    "distributionEntryCount": "uint256",
                    "transactionLog": "BlockvPublicLedger.logEntry[]",
                    "distributionList": "BlockvPublicLedger.distributionEntry[]"
                }
            }
        },
        "function_block_mapping": {
            "fixDistribution(uint8,uint256)": [
                1158,
                229
            ],
            "appendToDistributionList(string,address,uint256,uint8)": [
                600,
                141
            ],
            "transferOwnership(address)": [
                1216,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "PoolAContract": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "PoolAContract(address,address,uint256)",
            "distribution()",
            "setChunkSize(uint256)",
            "getTokenAmount(uint256,uint8)",
            "getTokenDiscount(uint8)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            },
            "PoolAContract(address,address,uint256)": {
                "argument": {
                    "_chunkSize": "uint256"
                },
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            },
            "distribution()": {
                "argument": {},
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            },
            "setChunkSize(uint256)": {
                "argument": {
                    "_chunkSize": "uint256"
                },
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            },
            "getTokenAmount(uint256,uint8)": {
                "argument": {
                    "amount": "uint256",
                    "discountGroup": "uint8"
                },
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            },
            "getTokenDiscount(uint8)": {
                "argument": {
                    "discount": "uint8"
                },
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "ledgerContractSize": "uint256",
                    "currentIndex": "uint256",
                    "chunkSize": "uint256",
                    "decimals": "uint256",
                    "oneTokenInWei": "uint256",
                    "defaultDiscount": "uint256",
                    "discountMultiplier": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "distribution()": [
                386,
                141
            ],
            "setChunkSize(uint256)": [
                629,
                251
            ],
            "transferOwnership(address)": [
                674,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump1128": [
                "ledgerContract.distributionList(i)",
                "ledgerContract.distributionList(i)"
            ],
            "block1585": [
                "blockVContract.transferFrom(msg.sender, to, tokenAmount)"
            ],
            "block1128": [
                "ledgerContract.distributionList(i)"
            ],
            "jump1585": [
                "blockVContract.transferFrom(msg.sender, to, tokenAmount)",
                "blockVContract.transferFrom(msg.sender, to, tokenAmount)"
            ]
        }
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BlockvToken": {
        "function_list": [
            "Pausable(address)",
            "pause()",
            "unpause()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "BlockvToken(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "migrate(uint256)",
            "setMigrationAgent(address)",
            "setMigrationMaster(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Pausable(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "BlockvToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "migrate(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "setMigrationMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalAmountOfTokens": "uint256",
                    "amountOfTokensPoolA": "uint256",
                    "amountOfTokensPoolB": "uint256",
                    "amountOfTokensPoolC": "uint256",
                    "amountOfTokensPoolD": "uint256",
                    "totalMigrated": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                731,
                163
            ],
            "pause()": [
                1707,
                471
            ],
            "approve(address,uint256)": [
                500,
                97
            ],
            "setMigrationMaster(address)": [
                864,
                185
            ],
            "unpause()": [
                1110,
                273
            ],
            "setMigrationAgent(address)": [
                1553,
                427
            ],
            "balanceOf(address)": [
                1466,
                405
            ],
            "transfer(address,uint256)": [
                2071,
                581
            ],
            "migrate(uint256)": [
                1157,
                295
            ],
            "allowance(address,address)": [
                2258,
                647
            ]
        },
        "block_CALL_mapping": {
            "block3895": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value)"
            ],
            "jump3895": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value)"
            ]
        }
    }
}