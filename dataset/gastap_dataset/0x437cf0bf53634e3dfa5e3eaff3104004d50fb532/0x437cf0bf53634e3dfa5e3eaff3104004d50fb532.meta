{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                354,
                141
            ],
            "allowance(address,address)": [
                518,
                185
            ],
            "transferFrom(address,address,uint256)": [
                245,
                119
            ],
            "transfer(address,uint256)": [
                441,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "VestedToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferableTokens(address,uint64)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)",
            "revokeTokenGrant(address,uint256)",
            "transferableTokens(address,uint64)",
            "tokenGrantsCount(address)",
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)",
            "tokenGrant(address,uint256)",
            "vestedTokens(VestedToken.TokenGrant,uint64)",
            "nonVestedTokens(VestedToken.TokenGrant,uint64)",
            "lastTokenIsTransferableDate(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "transferableTokens(address,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": {
                "argument": {
                    "_value": "uint256",
                    "_start": "uint64",
                    "_cliff": "uint64",
                    "_vesting": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "revokeTokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "tokenGrantsCount(address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "time": "uint256",
                    "start": "uint256",
                    "cliff": "uint256",
                    "vesting": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "tokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "vestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "nonVestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "lastTokenIsTransferableDate(address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                300,
                97
            ],
            "tokenGrant(address,uint256)": [
                780,
                185
            ],
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": [
                1232,
                251
            ],
            "tokenGrantsCount(address)": [
                213,
                75
            ],
            "revokeTokenGrant(address,uint256)": [
                1801,
                361
            ],
            "balanceOf(address)": [
                1145,
                229
            ],
            "allowance(address,address)": [
                1577,
                317
            ],
            "transferableTokens(address,uint64)": [
                1470,
                295
            ],
            "lastTokenIsTransferableDate(address)": [
                1038,
                207
            ],
            "transferFrom(address,address,uint256)": [
                420,
                141
            ],
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": [
                1696,
                339
            ],
            "transfer(address,uint256)": [
                1393,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "BTN": {
        "function_list": [
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)",
            "revokeTokenGrant(address,uint256)",
            "transferableTokens(address,uint64)",
            "tokenGrantsCount(address)",
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)",
            "tokenGrant(address,uint256)",
            "vestedTokens(VestedToken.TokenGrant,uint64)",
            "nonVestedTokens(VestedToken.TokenGrant,uint64)",
            "lastTokenIsTransferableDate(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferableTokens(address,uint64)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "isCrowdfundCompleted()",
            "BTN()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "getPriceRate()",
            "calcAmount(uint256,uint256)",
            "processPurchase(uint256,uint256)",
            "fallback()",
            "grantVested(address,address)",
            "toggleHalt(bool)",
            "drain()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": {
                "argument": {
                    "_value": "uint256",
                    "_start": "uint64",
                    "_cliff": "uint64",
                    "_vesting": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "revokeTokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "transferableTokens(address,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "tokenGrantsCount(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "time": "uint256",
                    "start": "uint256",
                    "cliff": "uint256",
                    "vesting": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "tokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "vestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "nonVestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "lastTokenIsTransferableDate(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "isCrowdfundCompleted()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "BTN()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "getPriceRate()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "calcAmount(uint256,uint256)": {
                "argument": {
                    "_wei": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "processPurchase(uint256,uint256)": {
                "argument": {
                    "_rate": "uint256",
                    "_remaining": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "grantVested(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "toggleHalt(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "drain()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "STAGE_PRESALE_ETHRaised": "uint256",
                    "STAGE_TWO_ETHRaised": "uint256",
                    "STAGE_THREE_ETHRaised": "uint256",
                    "STAGE_FOUR_ETHRaised": "uint256",
                    "DECIMALS": "uint256",
                    "PRICE_STANDARD": "uint256",
                    "PRICE_STAGE_PRESALE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "ALLOC_TEAM": "uint256",
                    "ALLOC_RES": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "publicStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "hardcapInEth": "uint256",
                    "etherRaised": "uint256",
                    "BTNSold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "tokenGrantsCount(address)": [
                707,
                75
            ],
            "balanceOf(address)": [
                2171,
                427
            ],
            "grantVested(address,address)": [
                3767,
                933
            ],
            "allowance(address,address)": [
                3500,
                867
            ],
            "transferFrom(address,address,uint256)": [
                1144,
                207
            ],
            "transferableTokens(address,uint64)": [
                3393,
                845
            ],
            "approve(address,uint256)": [
                981,
                141
            ],
            "getPriceRate()": [
                2376,
                493
            ],
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": [
                3619,
                889
            ],
            "toggleHalt(bool)": [
                2462,
                537
            ],
            "tokenGrant(address,uint256)": [
                1806,
                383
            ],
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": [
                2740,
                603
            ],
            "revokeTokenGrant(address,uint256)": [
                3866,
                955
            ],
            "calcAmount(uint256,uint256)": [
                2258,
                449
            ],
            "drain()": [
                2901,
                625
            ],
            "lastTokenIsTransferableDate(address)": [
                2064,
                405
            ],
            "transfer(address,uint256)": [
                3010,
                691
            ]
        },
        "block_CALL_mapping": {
            "jump4355": [
                "multisigAddress.send(msg.value)",
                "multisigAddress.send(msg.value)"
            ],
            "block7984": [
                "ownerAddress.send(this.balance)"
            ],
            "jump7984": [
                "ownerAddress.send(this.balance)",
                "ownerAddress.send(this.balance)"
            ],
            "block4355_0": [
                "multisigAddress.send(msg.value)"
            ],
            "jump4355_0": [
                "multisigAddress.send(msg.value)",
                "multisigAddress.send(msg.value)"
            ],
            "block4355": [
                "multisigAddress.send(msg.value)"
            ]
        }
    }
}