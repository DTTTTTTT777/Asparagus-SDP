{
    "owned": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "changeServer(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "changeServer(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeServer(address)": [
                103,
                75
            ],
            "changeOwner(address)": [
                257,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "KickicoCrowdsale": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "changeServer(address)",
            "KickicoCrowdsale(address,address,address,address,address,address,address,address,address)",
            "setParams()",
            "mint(uint256,uint256,address)",
            "contractBalance()",
            "processPayment(address,uint256,bool)",
            "getBonusByRaised()",
            "closeICO()",
            "safeWithdrawal(uint256)",
            "isReachedThreshold()",
            "isIcoClosed()",
            "mintTokens(address[])",
            "disableManuallyMintTokens()",
            "fallback()",
            "changeTokenOwner(address)",
            "changeOldTokenReward(address)",
            "kill()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "changeServer(address)": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "KickicoCrowdsale(address,address,address,address,address,address,address,address,address)": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "setParams()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "mint(uint256,uint256,address)": {
                "argument": {
                    "amount": "uint256",
                    "tokens": "uint256"
                },
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "contractBalance()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "processPayment(address,uint256,bool)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "getBonusByRaised()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "closeICO()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "safeWithdrawal(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "isReachedThreshold()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "isIcoClosed()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "mintTokens(address[])": {
                "argument": {
                    "recipients": "address[]"
                },
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "disableManuallyMintTokens()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "changeTokenOwner(address)": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "changeOldTokenReward(address)": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "IcoStagePeriod": "uint256[]",
                    "threshold": "uint256",
                    "goal": "uint256",
                    "totalCollected": "uint256",
                    "pricePerTokenInWei": "uint256",
                    "agingTime": "uint256",
                    "prPoolAgingTime": "uint256",
                    "advisoryPoolAgingTime": "uint256",
                    "bountiesPoolAgingTime": "uint256",
                    "lotteryPoolAgingTime": "uint256",
                    "angelInvestorsPoolAgingTime": "uint256",
                    "foundersPoolAgingTime": "uint256",
                    "chinaPoolAgingTime": "uint256",
                    "bonuses": "uint256[]",
                    "bonusesAfterClose": "uint256[]",
                    "tokenMultiplier": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeTokenOwner(address)": [
                684,
                97
            ],
            "changeServer(address)": [
                617,
                75
            ],
            "disableManuallyMintTokens()": [
                2345,
                669
            ],
            "closeICO()": [
                1244,
                295
            ],
            "safeWithdrawal(uint256)": [
                1314,
                339
            ],
            "changeOwner(address)": [
                1862,
                515
            ],
            "changeOldTokenReward(address)": [
                2278,
                647
            ],
            "isIcoClosed()": [
                1267,
                317
            ],
            "mintTokens(address[])": [
                903,
                163
            ],
            "kill()": [
                1178,
                251
            ],
            "contractBalance()": [
                1598,
                427
            ],
            "setParams()": [
                2081,
                581
            ]
        },
        "block_CALL_mapping": {
            "block7230": [
                "tokenReward.addAgingTimesForPool(bounties, bountiesPoolAgingTime)"
            ],
            "jump9815": [
                "tokenReward.addAgingTime(agingTime)",
                "tokenReward.addAgingTime(agingTime)"
            ],
            "jump13757": [
                "tokenReward.mintToken(sender, tokens, agingTime)",
                "tokenReward.mintToken(sender, tokens, agingTime)"
            ],
            "jump14034": [
                "tokenReward.mintToken(founders, tokens / 10, foundersPoolAgingTime)",
                "tokenReward.mintToken(founders, tokens / 10, foundersPoolAgingTime)"
            ],
            "jump3923_0": [
                "tokenReward.changeOwner(_owner)",
                "tokenReward.changeOwner(_owner)"
            ],
            "block9644": [
                "tokenReward.mintToken(founders, 5000000 * tokenMultiplier, 0)"
            ],
            "block8015": [
                "tokenReward.mintToken(advisory, 10000000 * tokenMultiplier, 0)"
            ],
            "jump14034_0": [
                "tokenReward.mintToken(founders, tokens / 10, foundersPoolAgingTime)",
                "tokenReward.mintToken(founders, tokens / 10, foundersPoolAgingTime)"
            ],
            "jump4660": [
                "tokenReward.mintToken(recipients[i], oldTokenReward.balanceOf(recipients[i]), 1538902800)",
                "tokenReward.mintToken(recipients[i], oldTokenReward.balanceOf(recipients[i]), 1538902800)"
            ],
            "block14034_0": [
                "tokenReward.mintToken(founders, tokens / 10, foundersPoolAgingTime)"
            ],
            "jump11012": [
                "tokenReward.addAgingTime(chinaPoolAgingTime)",
                "tokenReward.addAgingTime(chinaPoolAgingTime)"
            ],
            "block9815": [
                "tokenReward.addAgingTime(agingTime)"
            ],
            "jump3284_0": [
                "from.send(change)",
                "from.send(change)"
            ],
            "block9986": [
                "tokenReward.addAgingTime(prPoolAgingTime)"
            ],
            "block10499": [
                "tokenReward.addAgingTime(lotteryPoolAgingTime)"
            ],
            "block3923": [
                "tokenReward.changeOwner(_owner)"
            ],
            "block10328": [
                "tokenReward.addAgingTime(bountiesPoolAgingTime)"
            ],
            "jump7744": [
                "tokenReward.addAgingTimesForPool(angelInvestors, angelInvestorsPoolAgingTime)",
                "tokenReward.addAgingTimesForPool(angelInvestors, angelInvestorsPoolAgingTime)"
            ],
            "jump6716": [
                "tokenReward.addAgingTimesForPool(prPool, prPoolAgingTime)",
                "tokenReward.addAgingTimesForPool(prPool, prPoolAgingTime)"
            ],
            "jump9644": [
                "tokenReward.mintToken(founders, 5000000 * tokenMultiplier, 0)",
                "tokenReward.mintToken(founders, 5000000 * tokenMultiplier, 0)"
            ],
            "block6973": [
                "tokenReward.addAgingTimesForPool(advisory, advisoryPoolAgingTime)"
            ],
            "jump7230": [
                "tokenReward.addAgingTimesForPool(bounties, bountiesPoolAgingTime)",
                "tokenReward.addAgingTimesForPool(bounties, bountiesPoolAgingTime)"
            ],
            "jump8558": [
                "tokenReward.mintToken(lottery, 1000000 * tokenMultiplier, 0)",
                "tokenReward.mintToken(lottery, 1000000 * tokenMultiplier, 0)"
            ],
            "block7744": [
                "tokenReward.addAgingTimesForPool(angelInvestors, angelInvestorsPoolAgingTime)"
            ],
            "block4660": [
                "tokenReward.mintToken(recipients[i], oldTokenReward.balanceOf(recipients[i]), 1538902800)"
            ],
            "jump11170": [
                "tokenReward.allAgingTimesAdded()",
                "tokenReward.allAgingTimesAdded()"
            ],
            "jump9986": [
                "tokenReward.addAgingTime(prPoolAgingTime)",
                "tokenReward.addAgingTime(prPoolAgingTime)"
            ],
            "jump9373": [
                "tokenReward.mintToken(china, 8000000 * tokenMultiplier, 0)",
                "tokenReward.mintToken(china, 8000000 * tokenMultiplier, 0)"
            ],
            "block4456": [
                "oldTokenReward.balanceOf(recipients[i])"
            ],
            "block10670": [
                "tokenReward.addAgingTime(angelInvestorsPoolAgingTime)"
            ],
            "block8287": [
                "tokenReward.mintToken(bounties, 25000000 * tokenMultiplier, 0)"
            ],
            "jump8287": [
                "tokenReward.mintToken(bounties, 25000000 * tokenMultiplier, 0)",
                "tokenReward.mintToken(bounties, 25000000 * tokenMultiplier, 0)"
            ],
            "block6716": [
                "tokenReward.addAgingTimesForPool(prPool, prPoolAgingTime)"
            ],
            "jump6973": [
                "tokenReward.addAgingTimesForPool(advisory, advisoryPoolAgingTime)",
                "tokenReward.addAgingTimesForPool(advisory, advisoryPoolAgingTime)"
            ],
            "block13757_0": [
                "tokenReward.mintToken(sender, tokens, agingTime)"
            ],
            "jump10670": [
                "tokenReward.addAgingTime(angelInvestorsPoolAgingTime)",
                "tokenReward.addAgingTime(angelInvestorsPoolAgingTime)"
            ],
            "jump10328": [
                "tokenReward.addAgingTime(bountiesPoolAgingTime)",
                "tokenReward.addAgingTime(bountiesPoolAgingTime)"
            ],
            "jump10157": [
                "tokenReward.addAgingTime(advisoryPoolAgingTime)",
                "tokenReward.addAgingTime(advisoryPoolAgingTime)"
            ],
            "block11170": [
                "tokenReward.allAgingTimesAdded()"
            ],
            "block8558": [
                "tokenReward.mintToken(lottery, 1000000 * tokenMultiplier, 0)"
            ],
            "block8830": [
                "tokenReward.mintToken(angelInvestors, 30000000 * tokenMultiplier, 0)"
            ],
            "jump10499": [
                "tokenReward.addAgingTime(lotteryPoolAgingTime)",
                "tokenReward.addAgingTime(lotteryPoolAgingTime)"
            ],
            "jump3923": [
                "tokenReward.changeOwner(_owner)",
                "tokenReward.changeOwner(_owner)"
            ],
            "jump3284": [
                "from.send(change)",
                "from.send(change)"
            ],
            "block9373": [
                "tokenReward.mintToken(china, 8000000 * tokenMultiplier, 0)"
            ],
            "block3923_0": [
                "tokenReward.changeOwner(_owner)"
            ],
            "block9102": [
                "tokenReward.mintToken(prPool, 23000000 * tokenMultiplier, 0)"
            ],
            "block14034": [
                "tokenReward.mintToken(founders, tokens / 10, foundersPoolAgingTime)"
            ],
            "block10841": [
                "tokenReward.addAgingTime(foundersPoolAgingTime)"
            ],
            "block7487": [
                "tokenReward.addAgingTimesForPool(lottery, lotteryPoolAgingTime)"
            ],
            "jump5669": [
                "owner.send(amount)",
                "owner.send(amount)"
            ],
            "jump9102": [
                "tokenReward.mintToken(prPool, 23000000 * tokenMultiplier, 0)",
                "tokenReward.mintToken(prPool, 23000000 * tokenMultiplier, 0)"
            ],
            "block3284": [
                "from.send(change)"
            ],
            "block4894": [
                "owner.transfer(this.balance)"
            ],
            "jump7487": [
                "tokenReward.addAgingTimesForPool(lottery, lotteryPoolAgingTime)",
                "tokenReward.addAgingTimesForPool(lottery, lotteryPoolAgingTime)"
            ],
            "jump4456": [
                "oldTokenReward.balanceOf(recipients[i])",
                "oldTokenReward.balanceOf(recipients[i])"
            ],
            "jump10841": [
                "tokenReward.addAgingTime(foundersPoolAgingTime)",
                "tokenReward.addAgingTime(foundersPoolAgingTime)"
            ],
            "jump8015": [
                "tokenReward.mintToken(advisory, 10000000 * tokenMultiplier, 0)",
                "tokenReward.mintToken(advisory, 10000000 * tokenMultiplier, 0)"
            ],
            "block11012": [
                "tokenReward.addAgingTime(chinaPoolAgingTime)"
            ],
            "jump13757_0": [
                "tokenReward.mintToken(sender, tokens, agingTime)",
                "tokenReward.mintToken(sender, tokens, agingTime)"
            ],
            "jump8830": [
                "tokenReward.mintToken(angelInvestors, 30000000 * tokenMultiplier, 0)",
                "tokenReward.mintToken(angelInvestors, 30000000 * tokenMultiplier, 0)"
            ],
            "jump4894": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block5669": [
                "owner.send(amount)"
            ],
            "block13757": [
                "tokenReward.mintToken(sender, tokens, agingTime)"
            ],
            "block3284_0": [
                "from.send(change)"
            ],
            "block10157": [
                "tokenReward.addAgingTime(advisoryPoolAgingTime)"
            ]
        }
    }
}