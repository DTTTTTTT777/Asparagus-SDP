{
    "Ownable": {
        "function_list": [
            "Ownable()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC223": {
        "function_list": [
            "balanceOf(address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "value": "uint256",
                    "data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "symbol()": [
                1192,
                273
            ],
            "name()": [
                202,
                75
            ],
            "totalSupply()": [
                538,
                141
            ],
            "balanceOf(address)": [
                1105,
                251
            ],
            "transfer(address,uint256,bytes)": [
                1437,
                317
            ],
            "transfer(address,uint256)": [
                1336,
                295
            ],
            "decimals()": [
                714,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump4657": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)",
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "block4657": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "block4657_1": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "block4657_0": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "jump4657_1": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)",
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "jump4657_0": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)",
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ]
        }
    },
    "ContractReceiver": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "MAX_UINT256": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "MAX_UINT256": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "MAX_UINT256": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_UINT256": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC223Token_STA": {
        "function_list": [
            "Ownable()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "balanceOf(address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "ERC223Token_STA()",
            "claimMiningReward()",
            "selfDestroy()",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "minedTokenCount()",
            "icoAddress()",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "isContract(address)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "balanceOf(address)",
            "burn(address,uint256)",
            "setIcoAddress(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "ERC223Token_STA()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "claimMiningReward()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "selfDestroy()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "minedTokenCount()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "icoAddress()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "burn(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "setIcoAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoEndBlock": "uint256",
                    "maxSupply": "uint256",
                    "minedTokenCount": "uint256",
                    "multiplier": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "minedTokenCount()": [
                1513,
                427
            ],
            "icoAddress()": [
                666,
                207
            ],
            "symbol()": [
                840,
                251
            ],
            "selfDestroy()": [
                1186,
                317
            ],
            "transfer(address,uint256,bytes)": [
                1276,
                361
            ],
            "balanceOf(address)": [
                579,
                185
            ],
            "totalSupply()": [
                401,
                97
            ],
            "name()": [
                257,
                75
            ],
            "setIcoAddress(address)": [
                1209,
                339
            ],
            "burn(address,uint256)": [
                984,
                273
            ],
            "transfer(address,uint256)": [
                1085,
                295
            ],
            "claimMiningReward()": [
                1447,
                383
            ],
            "decimals()": [
                444,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump4610": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block4610_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump4610_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block4610": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "ERC223Token_STB": {
        "function_list": [
            "Ownable()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "balanceOf(address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "ERC223Token_STB()",
            "maxSupply()",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "icoAddress()",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "isContract(address)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "balanceOf(address)",
            "setIcoAddress(address)",
            "mint(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "ERC223Token_STB()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "maxSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "icoAddress()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "setIcoAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "icoEndBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "icoAddress()": [
                699,
                229
            ],
            "symbol()": [
                873,
                273
            ],
            "transfer(address,uint256,bytes)": [
                1185,
                339
            ],
            "maxSupply()": [
                1356,
                361
            ],
            "mint(address,uint256)": [
                492,
                163
            ],
            "name()": [
                213,
                75
            ],
            "totalSupply()": [
                357,
                97
            ],
            "balanceOf(address)": [
                612,
                207
            ],
            "setIcoAddress(address)": [
                1118,
                317
            ],
            "transfer(address,uint256)": [
                1017,
                295
            ],
            "decimals()": [
                400,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump3598_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3598": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump3598": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3598_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "StableICO": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Ownable()",
            "StableICO()",
            "claimMiningReward()",
            "tokenFallback(address,uint256,bytes)",
            "fallback()",
            "exchangeStaStb(uint256,uint256)",
            "exchangeEthStb(uint256,uint256)",
            "drawdown()",
            "refund(uint256,uint256)",
            "transferEthToOwner(uint256)",
            "transferStbToOwner(uint256)",
            "backup_finishIcoVars()",
            "backup_exchangeStaStb(uint256,uint256)",
            "backup_exchangeEthStb(uint256,uint256)",
            "backup_drawdown()",
            "backup_drawdown_amount(uint256)",
            "backup_refund(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "StableICO()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "claimMiningReward()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "exchangeStaStb(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "exchangeEthStb(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "drawdown()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "refund(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "transferEthToOwner(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "transferStbToOwner(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "backup_finishIcoVars()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "backup_exchangeStaStb(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "backup_exchangeEthStb(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "backup_drawdown()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "backup_drawdown_amount(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "backup_refund(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "crowdfundingTarget": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "receivedStaAmount": "uint256",
                    "totalFunded": "uint256",
                    "ownersEth": "uint256",
                    "oneStaIsStb": "uint256",
                    "donationNum": "uint256",
                    "minerNum": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "backup_refund(uint256,uint256)": [
                2585,
                427
            ],
            "tokenFallback(address,uint256,bytes)": [
                3064,
                581
            ],
            "claimMiningReward()": [
                10069,
                886
            ],
            "backup_finishIcoVars()": [
                3299,
                647
            ],
            "transferEthToOwner(uint256)": [
                3254,
                625
            ],
            "backup_drawdown_amount(uint256)": [
                2348,
                317
            ],
            "backup_exchangeEthStb(uint256,uint256)": [
                2116,
                229
            ],
            "transferStbToOwner(uint256)": [
                3345,
                691
            ],
            "backup_exchangeStaStb(uint256,uint256)": [
                2393,
                339
            ],
            "backup_drawdown()": [
                2640,
                449
            ]
        },
        "block_CALL_mapping": {
            "block7078_1": [
                "donations[i].donorAddress.transfer(donations[i].ethAmount)"
            ],
            "block7078_0": [
                "donations[i].donorAddress.transfer(donations[i].ethAmount)"
            ],
            "block7078": [
                "donations[i].donorAddress.transfer(donations[i].ethAmount)"
            ],
            "jump10069": [
                "sta.claimMiningReward()",
                "sta.claimMiningReward()"
            ],
            "jump7078_0": [
                "donations[i].donorAddress.transfer(donations[i].ethAmount)",
                "donations[i].donorAddress.transfer(donations[i].ethAmount)"
            ],
            "block6818": [
                "beneficiary.transfer(totalFunded)"
            ],
            "jump5706_0": [
                "stb.mint(address(this), _mintAmount)",
                "stb.mint(address(this), _mintAmount)"
            ],
            "jump6818_0": [
                "beneficiary.transfer(totalFunded)",
                "beneficiary.transfer(totalFunded)"
            ],
            "jump5005_1": [
                "sta.burn(address(this), _toBurn)",
                "sta.burn(address(this), _toBurn)"
            ],
            "jump3927_0": [
                "stb.mint(address(this), _mintAmount)",
                "stb.mint(address(this), _mintAmount)"
            ],
            "jump3927_1": [
                "stb.mint(address(this), _mintAmount)",
                "stb.mint(address(this), _mintAmount)"
            ],
            "jump4342": [
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)",
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)"
            ],
            "block1448_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block9521": [
                "owner.transfer(_amount)"
            ],
            "block7878": [
                "beneficiary.transfer(_amount)"
            ],
            "jump9521": [
                "owner.transfer(_amount)",
                "owner.transfer(_amount)"
            ],
            "block5005": [
                "sta.burn(address(this), _toBurn)"
            ],
            "block10069": [
                "sta.claimMiningReward()"
            ],
            "jump7078_1": [
                "donations[i].donorAddress.transfer(donations[i].ethAmount)",
                "donations[i].donorAddress.transfer(donations[i].ethAmount)"
            ],
            "block6313": [
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )"
            ],
            "block3927_1": [
                "stb.mint(address(this), _mintAmount)"
            ],
            "jump6818": [
                "beneficiary.transfer(totalFunded)",
                "beneficiary.transfer(totalFunded)"
            ],
            "block5706_1": [
                "stb.mint(address(this), _mintAmount)"
            ],
            "block5706_0": [
                "stb.mint(address(this), _mintAmount)"
            ],
            "block5706": [
                "stb.mint(address(this), _mintAmount)"
            ],
            "jump5005_0": [
                "sta.burn(address(this), _toBurn)",
                "sta.burn(address(this), _toBurn)"
            ],
            "jump7878": [
                "beneficiary.transfer(_amount)",
                "beneficiary.transfer(_amount)"
            ],
            "block3927_0": [
                "stb.mint(address(this), _mintAmount)"
            ],
            "block1448": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump10455": [
                "stb.transfer(owner, _amount)",
                "stb.transfer(owner, _amount)"
            ],
            "block6818_0": [
                "beneficiary.transfer(totalFunded)"
            ],
            "jump3927": [
                "stb.mint(address(this), _mintAmount)",
                "stb.mint(address(this), _mintAmount)"
            ],
            "jump1448": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump5706_1": [
                "stb.mint(address(this), _mintAmount)",
                "stb.mint(address(this), _mintAmount)"
            ],
            "jump6313": [
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )",
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )"
            ],
            "jump4342_1": [
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)",
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)"
            ],
            "block4342_0": [
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)"
            ],
            "block4342_1": [
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)"
            ],
            "jump5706": [
                "stb.mint(address(this), _mintAmount)",
                "stb.mint(address(this), _mintAmount)"
            ],
            "block5005_1": [
                "sta.burn(address(this), _toBurn)"
            ],
            "block6818_1": [
                "beneficiary.transfer(totalFunded)"
            ],
            "block6313_0": [
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )"
            ],
            "jump7078": [
                "donations[i].donorAddress.transfer(donations[i].ethAmount)",
                "donations[i].donorAddress.transfer(donations[i].ethAmount)"
            ],
            "block5005_0": [
                "sta.burn(address(this), _toBurn)"
            ],
            "jump6818_1": [
                "beneficiary.transfer(totalFunded)",
                "beneficiary.transfer(totalFunded)"
            ],
            "jump5005": [
                "sta.burn(address(this), _toBurn)",
                "sta.burn(address(this), _toBurn)"
            ],
            "jump1448_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4342_0": [
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)",
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)"
            ],
            "block3927": [
                "stb.mint(address(this), _mintAmount)"
            ],
            "block10455": [
                "stb.transfer(owner, _amount)"
            ],
            "block6313_1": [
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )"
            ],
            "block4342": [
                "stb.transfer(receivedSta[i].minerAddress, receivedSta[i].staAmount/_sta2stb * oneStaIsStb / 10**4)"
            ],
            "jump6313_0": [
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )",
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )"
            ],
            "jump6313_1": [
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )",
                "stb.transfer(donations[i].donorAddress, 10 * ( (100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100) )"
            ]
        }
    }
}