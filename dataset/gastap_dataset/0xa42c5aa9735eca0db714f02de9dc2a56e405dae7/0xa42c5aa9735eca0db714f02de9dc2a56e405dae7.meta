{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "makeAdmin(address,bool)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "makeAdmin(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "makeAdmin(address,bool)": [
                103,
                75
            ],
            "transferOwnership(address)": [
                360,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "BCT": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "makeAdmin(address,bool)",
            "BCT()",
            "increaseTotalSupply(address,uint256)",
            "usersCanUnFreeze(bool)",
            "setMinBalance(uint256)",
            "transferAndFreeze(address,uint256)",
            "_freeze(address,bool)",
            "freeze(address,bool)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "reward(address,uint256,bool,string)",
            "transferReward(address,uint256)",
            "unlockReward(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "setPrices(uint256,uint256)",
            "setUsersCanTrade(bool)",
            "setCanTrade(address,bool)",
            "buy()",
            "sell(uint256)",
            "fallback()",
            "withdraw(address,uint256)",
            "setAdmin(address,bool)",
            "setICO(bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "makeAdmin(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "BCT()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "increaseTotalSupply(address,uint256)": {
                "argument": {
                    "increaseBy": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "usersCanUnFreeze(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setMinBalance(uint256)": {
                "argument": {
                    "minimumBalanceInWei": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transferAndFreeze(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "_freeze(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "freeze(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "reward(address,uint256,bool,string)": {
                "argument": {
                    "_value": "uint256",
                    "data": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transferReward(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "unlockReward(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setPrices(uint256,uint256)": {
                "argument": {
                    "newSellPrice": "uint256",
                    "newBuyPrice": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setUsersCanTrade(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setCanTrade(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "withdraw(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setAdmin(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            },
            "setICO(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "minBalanceForAccounts": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "usersCanUnFreeze(bool)": [
                4364,
                1065
            ],
            "transferReward(address,uint256)": [
                862,
                141
            ],
            "setCanTrade(address,bool)": [
                939,
                163
            ],
            "increaseTotalSupply(address,uint256)": [
                3082,
                757
            ],
            "makeAdmin(address,bool)": [
                1320,
                273
            ],
            "buy()": [
                2888,
                691
            ],
            "transferAndFreeze(address,uint256)": [
                2481,
                603
            ],
            "transferFrom(address,address,uint256)": [
                1138,
                229
            ],
            "sell(uint256)": [
                4108,
                977
            ],
            "approve(address,uint256)": [
                761,
                119
            ],
            "setUsersCanTrade(bool)": [
                3811,
                911
            ],
            "freeze(address,bool)": [
                3278,
                801
            ],
            "withdraw(address,uint256)": [
                4287,
                1043
            ],
            "burnFrom(address,uint256)": [
                2178,
                537
            ],
            "reward(address,uint256,bool,string)": [
                2322,
                581
            ],
            "setPrices(uint256,uint256)": [
                562,
                75
            ],
            "unlockReward(address,uint256)": [
                1018,
                185
            ],
            "setMinBalance(uint256)": [
                3357,
                823
            ],
            "approveAndCall(address,uint256,bytes)": [
                3402,
                845
            ],
            "transfer(address,uint256)": [
                2918,
                713
            ],
            "transferOwnership(address)": [
                4220,
                1021
            ],
            "setAdmin(address,bool)": [
                1606,
                361
            ],
            "burn(uint256)": [
                1446,
                317
            ],
            "setICO(bool)": [
                4173,
                999
            ]
        },
        "block_CALL_mapping": {
            "block13495": [
                "msg.sender.send(revenue)"
            ],
            "block13495_2": [
                "msg.sender.send(revenue)"
            ],
            "block13495_3": [
                "msg.sender.send(revenue)"
            ],
            "block14040": [
                "target.transfer(amount)"
            ],
            "block13495_1": [
                "msg.sender.send(revenue)"
            ],
            "jump13495_0": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump13495_1": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump13495_2": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump13495_3": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump14040": [
                "target.transfer(amount)",
                "target.transfer(amount)"
            ],
            "jump12674": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block12674": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block13495_0": [
                "msg.sender.send(revenue)"
            ],
            "jump13495": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ]
        }
    }
}