{
    "Utils": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                126,
                97
            ],
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Managed": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {}
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptManagement()": [
                277,
                119
            ],
            "transferManagement(address)": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "IBancorGasPriceLimit": {
        "function_list": [
            "gasPrice()"
        ],
        "initial_state": {
            "gasPrice()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "gasPrice()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "IBancorConverterExtensions": {
        "function_list": [
            "formula()",
            "gasPriceLimit()",
            "quickConverter()"
        ],
        "initial_state": {
            "formula()": {
                "argument": {},
                "contract": {}
            },
            "gasPriceLimit()": {
                "argument": {},
                "contract": {}
            },
            "quickConverter()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "quickConverter()": [
                266,
                119
            ],
            "gasPriceLimit()": [
                179,
                97
            ],
            "formula()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptOwnership()": [
                223,
                97
            ],
            "transferOwnership(address)": [
                420,
                163
            ],
            "owner()": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump876": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block876": [
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "SmartTokenController": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {}
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {}
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "disableTokenTransfers(bool)": [
                500,
                185
            ],
            "transferTokenOwnership(address)": [
                169,
                75
            ],
            "owner()": [
                547,
                207
            ],
            "acceptTokenOwnership()": [
                236,
                97
            ],
            "transferOwnership(address)": [
                721,
                251
            ],
            "acceptOwnership()": [
                477,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2182": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump1401": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "block1764": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "block1152": [
                "token.transferOwnership(_newOwner)"
            ],
            "block2182": [
                "_token.transfer(_to, _amount)"
            ],
            "block2970": [
                "token.disableTransfers(_disable)"
            ],
            "jump1764": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)",
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "jump2970": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block1401": [
                "token.acceptOwnership()"
            ],
            "jump1152": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ]
        }
    },
    "BancorConverter": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "convertibleTokenCount()",
            "convertibleToken(uint16)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "convert(IERC20Token,IERC20Token,uint256,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "BancorConverter(ISmartToken,IBancorConverterExtensions,uint32,IERC20Token,uint32)",
            "connectorTokenCount()",
            "convertibleTokenCount()",
            "convertibleToken(uint16)",
            "setExtensions(IBancorConverterExtensions)",
            "setQuickBuyPath(IERC20Token[])",
            "clearQuickBuyPath()",
            "getQuickBuyPathLength()",
            "disableConversions(bool)",
            "setConversionFee(uint32)",
            "getConversionFeeAmount(uint256)",
            "addConnector(IERC20Token,uint32,bool)",
            "updateConnector(IERC20Token,uint32,bool,uint256)",
            "disableConnectorPurchases(IERC20Token,bool)",
            "getConnectorBalance(IERC20Token)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "getPurchaseReturn(IERC20Token,uint256)",
            "getSaleReturn(IERC20Token,uint256)",
            "convert(IERC20Token,IERC20Token,uint256,uint256)",
            "buy(IERC20Token,uint256,uint256)",
            "sell(IERC20Token,uint256,uint256)",
            "quickConvert(IERC20Token[],uint256,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "getSaleReturn(IERC20Token,uint256,uint256)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "Utils()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convertibleTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convertibleToken(uint16)": {
                "argument": {
                    "_tokenIndex": "uint16"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getReturn(IERC20Token,IERC20Token,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convert(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "change(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "BancorConverter(ISmartToken,IBancorConverterExtensions,uint32,IERC20Token,uint32)": {
                "argument": {
                    "_maxConversionFee": "uint32",
                    "_connectorWeight": "uint32"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "connectorTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setExtensions(IBancorConverterExtensions)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setQuickBuyPath(IERC20Token[])": {
                "argument": {
                    "_path": "IERC20Token[]"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "clearQuickBuyPath()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getQuickBuyPathLength()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableConversions(bool)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setConversionFee(uint32)": {
                "argument": {
                    "_conversionFee": "uint32"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getConversionFeeAmount(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "addConnector(IERC20Token,uint32,bool)": {
                "argument": {
                    "_weight": "uint32"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "updateConnector(IERC20Token,uint32,bool,uint256)": {
                "argument": {
                    "_weight": "uint32",
                    "_virtualBalance": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableConnectorPurchases(IERC20Token,bool)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getConnectorBalance(IERC20Token)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getPurchaseReturn(IERC20Token,uint256)": {
                "argument": {
                    "_depositAmount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256)": {
                "argument": {
                    "_sellAmount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "buy(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_depositAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "sell(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "quickConvert(IERC20Token[],uint256,uint256)": {
                "argument": {
                    "_path": "IERC20Token[]",
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "getConversionFeeAmount(uint256)": [
                1448,
                251
            ],
            "disableTokenTransfers(bool)": [
                3024,
                647
            ],
            "transferTokenOwnership(address)": [
                1180,
                163
            ],
            "transferManagement(address)": [
                3857,
                911
            ],
            "acceptTokenOwnership()": [
                1513,
                273
            ],
            "convertibleTokenCount()": [
                3460,
                779
            ],
            "clearQuickBuyPath()": [
                2058,
                405
            ],
            "acceptManagement()": [
                3558,
                823
            ],
            "connectorTokenCount()": [
                2714,
                559
            ],
            "owner()": [
                14581,
                912
            ],
            "convertibleToken(uint16)": [
                4213,
                999
            ],
            "transferOwnership(address)": [
                4326,
                1021
            ],
            "setConversionFee(uint32)": [
                4033,
                955
            ],
            "getQuickBuyPathLength()": [
                3158,
                691
            ],
            "disableConversions(bool)": [
                1247,
                185
            ],
            "acceptOwnership()": [
                3001,
                625
            ]
        },
        "block_CALL_mapping": {
            "block14991_1": [
                "token.totalSupply()"
            ],
            "jump19921": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump11269_1": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11269_0": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11269_3": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11269_2": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15422_0": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump15422_1": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump15422_2": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump15422_3": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block14581_1": [
                "token.owner()"
            ],
            "block14581_0": [
                "token.owner()"
            ],
            "block14581_3": [
                "token.owner()"
            ],
            "block14581_2": [
                "token.owner()"
            ],
            "jump11702_1": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump11702_0": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump11702_3": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block14581_6": [
                "token.owner()"
            ],
            "block14991_6": [
                "token.totalSupply()"
            ],
            "block14991_4": [
                "token.totalSupply()"
            ],
            "block18096_7": [
                "_connectorToken.balanceOf(this)"
            ],
            "block14991_2": [
                "token.totalSupply()"
            ],
            "block18096_0": [
                "_connectorToken.balanceOf(this)"
            ],
            "block14991_3": [
                "token.totalSupply()"
            ],
            "block18096_29": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_28": [
                "_connectorToken.balanceOf(this)"
            ],
            "block14991_0": [
                "token.totalSupply()"
            ],
            "jump15684_2": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block18096_22": [
                "_connectorToken.balanceOf(this)"
            ],
            "jump15684_0": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15684_1": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block18096_27": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_26": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_25": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_24": [
                "_connectorToken.balanceOf(this)"
            ],
            "block15422_6": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block15422_4": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block15422_5": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block15422_2": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block15422_3": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block15422_0": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block15422_1": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump5833_0": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block16745_1": [
                "token.totalSupply()"
            ],
            "block16745_0": [
                "token.totalSupply()"
            ],
            "block16745_3": [
                "token.totalSupply()"
            ],
            "block16745_2": [
                "token.totalSupply()"
            ],
            "block19921_4": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19921_5": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19921_6": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19921_0": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19921_1": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19921_2": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19921_3": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump15842_2": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15842_3": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15842_0": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15842_1": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11946": [
                "token.totalSupply()"
            ],
            "block12545": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump8535": [
                "token.owner()",
                "token.owner()"
            ],
            "block14316": [
                "token.disableTransfers(_disable)"
            ],
            "block19288_2": [
                "token.owner()"
            ],
            "block16291_3": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block16291_2": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block16291_1": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block16291_0": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block18096_8": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_9": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_4": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_5": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_6": [
                "_connectorToken.balanceOf(this)"
            ],
            "block14991_5": [
                "token.totalSupply()"
            ],
            "block11702": [
                "token.balanceOf(msg.sender)"
            ],
            "block18096_1": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_2": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_3": [
                "_connectorToken.balanceOf(this)"
            ],
            "block19288_3": [
                "token.owner()"
            ],
            "jump15422_4": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump15422_5": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump15422_6": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump5833_1": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block15842": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump12358_1": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12358_0": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12358_3": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12358_2": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump19288_6": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19288_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19288_5": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19288_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19288_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19288_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19288_1": [
                "token.owner()",
                "token.owner()"
            ],
            "block19696_5": [
                "extensions.formula()"
            ],
            "block19696_4": [
                "extensions.formula()"
            ],
            "block19696_6": [
                "extensions.formula()"
            ],
            "block19696_1": [
                "extensions.formula()"
            ],
            "block19696_0": [
                "extensions.formula()"
            ],
            "block19696_3": [
                "extensions.formula()"
            ],
            "block19696_2": [
                "extensions.formula()"
            ],
            "jump8106": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "jump4702": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "block18096": [
                "_connectorToken.balanceOf(this)"
            ],
            "block16745": [
                "token.totalSupply()"
            ],
            "block14581_5": [
                "token.owner()"
            ],
            "block14581_4": [
                "token.owner()"
            ],
            "jump11702_2": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block11946_3": [
                "token.totalSupply()"
            ],
            "block11946_2": [
                "token.totalSupply()"
            ],
            "jump19696": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block5055": [
                "token.destroy(msg.sender, _amount)"
            ],
            "jump18096_8": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_9": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_2": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_3": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_0": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_1": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_6": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_7": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_4": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_5": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "block8106": [
                "token.acceptOwnership()"
            ],
            "block15197": [
                "extensions.formula()"
            ],
            "block18096_30": [
                "_connectorToken.balanceOf(this)"
            ],
            "block5276": [
                "token.issue(quickConverter, _amount)"
            ],
            "jump14316": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block19921": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump14991_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14991_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14991_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14991_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14991_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14991_5": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14991_6": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump15842": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11427_1": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11427_0": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11427_3": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11427_2": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump19696_6": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19696_5": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19696_4": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19696_3": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19696_2": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19696_1": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19696_0": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block11702_3": [
                "token.balanceOf(msg.sender)"
            ],
            "block11702_2": [
                "token.balanceOf(msg.sender)"
            ],
            "block11702_1": [
                "token.balanceOf(msg.sender)"
            ],
            "block11702_0": [
                "token.balanceOf(msg.sender)"
            ],
            "block5055_0": [
                "token.destroy(msg.sender, _amount)"
            ],
            "block5055_1": [
                "token.destroy(msg.sender, _amount)"
            ],
            "jump7022": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block18096_23": [
                "_connectorToken.balanceOf(this)"
            ],
            "jump15684_3": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block11269_3": [
                "extensions.gasPriceLimit()"
            ],
            "block11269_2": [
                "extensions.gasPriceLimit()"
            ],
            "block11269_1": [
                "extensions.gasPriceLimit()"
            ],
            "block11269_0": [
                "extensions.gasPriceLimit()"
            ],
            "block18096_21": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_20": [
                "_connectorToken.balanceOf(this)"
            ],
            "block15684": [
                "extensions.gasPriceLimit()"
            ],
            "jump15197": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block16291": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump16555_2": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16555_3": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16555_0": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump15422": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block16555_0": [
                "token.issue(msg.sender, amount)"
            ],
            "block16555_1": [
                "token.issue(msg.sender, amount)"
            ],
            "block16555_2": [
                "token.issue(msg.sender, amount)"
            ],
            "block16555_3": [
                "token.issue(msg.sender, amount)"
            ],
            "block11001": [
                "_token.transfer(_to, _amount)"
            ],
            "jump12778_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12778_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12778_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12778_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block12545_2": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block15842_0": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block15842_1": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block15842_2": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block15842_3": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block4702_0": [
                "extensions.quickConverter()"
            ],
            "block4702_1": [
                "extensions.quickConverter()"
            ],
            "block16555": [
                "token.issue(msg.sender, amount)"
            ],
            "block13224_4": [
                "token.totalSupply()"
            ],
            "block13224_5": [
                "token.totalSupply()"
            ],
            "block13224_0": [
                "token.totalSupply()"
            ],
            "block13224_1": [
                "token.totalSupply()"
            ],
            "block13224_2": [
                "token.totalSupply()"
            ],
            "block13224_3": [
                "token.totalSupply()"
            ],
            "jump18096_30": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump5520": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block11427_3": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11427_2": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11427_1": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11427_0": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block5520": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5833": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump12545_3": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block12358_3": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block19288_0": [
                "token.owner()"
            ],
            "block19288_1": [
                "token.owner()"
            ],
            "jump11001": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump9945": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)",
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "jump12545_1": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump12545_0": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump12358": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12545_2": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump19921_1": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block12358_2": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block12358_1": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block12358_0": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block19288_4": [
                "token.owner()"
            ],
            "block19288_5": [
                "token.owner()"
            ],
            "block19288_6": [
                "token.owner()"
            ],
            "jump15197_1": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block19696": [
                "extensions.formula()"
            ],
            "jump16555": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "block11269": [
                "extensions.gasPriceLimit()"
            ],
            "block5833_0": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block5833_1": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block19288": [
                "token.owner()"
            ],
            "block7022": [
                "token.totalSupply()"
            ],
            "jump16745_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump16745_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump16745_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump16745_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14581": [
                "token.owner()",
                "token.owner()"
            ],
            "jump5276_1": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "jump5276_0": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "block12778_1": [
                "token.totalSupply()"
            ],
            "block12778_0": [
                "token.totalSupply()"
            ],
            "block12778_3": [
                "token.totalSupply()"
            ],
            "block12778_2": [
                "token.totalSupply()"
            ],
            "jump19921_2": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block15684_1": [
                "extensions.gasPriceLimit()"
            ],
            "block15684_2": [
                "extensions.gasPriceLimit()"
            ],
            "jump19288": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14581_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14581_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14581_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14581_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14581_6": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14581_5": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14581_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump5833": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump11702": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump14991": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block13224": [
                "token.totalSupply()"
            ],
            "jump12778": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump5520_1": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "jump5520_0": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block18096_18": [
                "_connectorToken.balanceOf(this)"
            ],
            "jump11427": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump16745": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block18096_14": [
                "_connectorToken.balanceOf(this)"
            ],
            "jump11946_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11946_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11946_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11946_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block11427": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15197_0": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15197_3": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15197_2": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15197_5": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15197_4": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15197_6": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump13224": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block9945": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "jump16291_1": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump16291_0": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump16291_3": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump16291_2": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump19921_6": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19921_4": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19921_5": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block15684_0": [
                "extensions.gasPriceLimit()"
            ],
            "jump19921_3": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19921_0": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block15684_3": [
                "extensions.gasPriceLimit()"
            ],
            "jump16291": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block18096_19": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_16": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_17": [
                "_connectorToken.balanceOf(this)"
            ],
            "jump5276": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "block18096_15": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_12": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_13": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_10": [
                "_connectorToken.balanceOf(this)"
            ],
            "block18096_11": [
                "_connectorToken.balanceOf(this)"
            ],
            "block15422": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump18096_25": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_24": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_27": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_26": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_21": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_20": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_23": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_22": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_29": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_28": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "block15197_3": [
                "extensions.formula()"
            ],
            "block15197_2": [
                "extensions.formula()"
            ],
            "block15197_1": [
                "extensions.formula()"
            ],
            "block15197_0": [
                "extensions.formula()"
            ],
            "block15197_6": [
                "extensions.formula()"
            ],
            "block15197_5": [
                "extensions.formula()"
            ],
            "block15197_4": [
                "extensions.formula()"
            ],
            "jump5055_0": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump5055_1": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "block7380": [
                "token.transferOwnership(_newOwner)"
            ],
            "jump13224_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13224_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13224_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13224_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13224_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13224_5": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5520_1": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5520_0": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block11946_1": [
                "token.totalSupply()"
            ],
            "block11946_0": [
                "token.totalSupply()"
            ],
            "jump4702_0": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump4702_1": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "block12778": [
                "token.totalSupply()"
            ],
            "jump5055": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump11946": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11269": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump7380": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "block12545_3": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump15684": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block12545_1": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block12545_0": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump16555_1": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "block14581": [
                "token.owner()"
            ],
            "block14991": [
                "token.totalSupply()"
            ],
            "jump18096": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "block8535": [
                "token.owner()"
            ],
            "block4702": [
                "extensions.quickConverter()"
            ],
            "jump18096_18": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_19": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_14": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_15": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_16": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_17": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_10": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_11": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_12": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump18096_13": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump12545": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block12358": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block5276_1": [
                "token.issue(quickConverter, _amount)"
            ],
            "block5276_0": [
                "token.issue(quickConverter, _amount)"
            ]
        }
    }
}