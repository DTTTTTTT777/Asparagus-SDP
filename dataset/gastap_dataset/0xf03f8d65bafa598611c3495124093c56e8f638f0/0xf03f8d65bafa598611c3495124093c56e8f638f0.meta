{
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1499_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSNote": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSStop": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "stop()",
            "start()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                159,
                97
            ],
            "start()": [
                427,
                185
            ],
            "stop()": [
                136,
                75
            ]
        },
        "block_CALL_mapping": {
            "block2161_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2161_2": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSTokenBase": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DSTokenBase(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "DSTokenBase(uint256)": {
                "argument": {
                    "supply": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSToken": {
        "function_list": [
            "stop()",
            "start()",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "DSTokenBase(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DSToken(bytes32)",
            "trusted(address,address)",
            "trust(address,bool)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "push(address,uint256)",
            "pull(address,uint256)",
            "move(address,address,uint256)",
            "mint(uint256)",
            "burn(uint256)",
            "mint(address,uint256)",
            "burn(address,uint256)",
            "setName(bytes32)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "stop()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSTokenBase(uint256)": {
                "argument": {
                    "supply": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSToken(bytes32)": {
                "argument": {
                    "symbol_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "trusted(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "trust(address,bool)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "push(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "pull(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "move(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mint(uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "burn(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setName(bytes32)": {
                "argument": {
                    "name_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                666,
                185
            ],
            "transferFrom(address,address,uint256)": [
                709,
                207
            ],
            "move(address,address,uint256)": [
                1818,
                537
            ],
            "trusted(address,address)": [
                1257,
                383
            ],
            "setName(bytes32)": [
                1007,
                295
            ],
            "approve(address,uint256)": [
                498,
                141
            ],
            "start()": [
                1927,
                559
            ],
            "trust(address,bool)": [
                345,
                75
            ],
            "setOwner(address)": [
                599,
                163
            ],
            "mint(uint256)": [
                1595,
                471
            ],
            "balanceOf(address)": [
                1056,
                317
            ],
            "pull(address,uint256)": [
                2156,
                625
            ],
            "push(address,uint256)": [
                1741,
                515
            ],
            "mint(address,uint256)": [
                885,
                251
            ],
            "burn(uint256)": [
                962,
                273
            ],
            "burn(address,uint256)": [
                1518,
                449
            ],
            "transfer(address,uint256)": [
                1640,
                493
            ],
            "stop()": [
                475,
                119
            ],
            "allowance(address,address)": [
                2037,
                603
            ]
        },
        "block_CALL_mapping": {
            "jump6744_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_6": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block6744_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744": [
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_7": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block6744_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump6744": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block6744_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_5": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_6": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_7": [
                "authority.canCall(src, this, sig)"
            ]
        }
    }
}