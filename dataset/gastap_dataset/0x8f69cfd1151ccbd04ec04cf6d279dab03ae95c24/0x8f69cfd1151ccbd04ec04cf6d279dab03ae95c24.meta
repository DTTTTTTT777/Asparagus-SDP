{
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                437,
                163
            ],
            "transfer(address,uint256)": [
                668,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump2540_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block2540": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump2540": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block2540_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "CryptiblesVendingContract": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "CryptiblesVendingContract()",
            "fallback()",
            "finalize()",
            "changeTokenExchangeRate(uint256)",
            "setETHAddress(address)",
            "getRemainingTokens(address)",
            "changeIsOpenFlag(bool)",
            "changeCrytiblesAddress(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "CryptiblesVendingContract()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "changeTokenExchangeRate(uint256)": {
                "argument": {
                    "_tokenExchangeRate": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "setETHAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "getRemainingTokens(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "changeIsOpenFlag(bool)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            },
            "changeCrytiblesAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ethDivisor": "uint256",
                    "version": "string",
                    "tokenExchangeRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                936,
                75
            ],
            "finalize()": [
                1482,
                251
            ],
            "changeCrytiblesAddress(address)": [
                1325,
                185
            ],
            "changeTokenExchangeRate(uint256)": [
                1280,
                163
            ],
            "balanceOf(address)": [
                477,
                928
            ],
            "allowance(address,address)": [
                2068,
                427
            ],
            "setETHAddress(address)": [
                1639,
                317
            ],
            "transfer(address,uint256)": [
                794,
                20956
            ],
            "getRemainingTokens(address)": [
                1037,
                97
            ],
            "transferFrom(address,address,uint256)": [
                1147,
                141
            ],
            "changeIsOpenFlag(bool)": [
                1505,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump3122": [
                "cryptiToken.transfer(_sendTokensTo, tokensLeft)",
                "cryptiToken.transfer(_sendTokensTo, tokensLeft)"
            ],
            "block477_0": [
                "cryptiToken.balanceOf(this)"
            ],
            "jump477_0": [
                "cryptiToken.balanceOf(this)",
                "cryptiToken.balanceOf(this)"
            ],
            "jump4306": [
                "ethFundDeposit.transfer(this.balance)",
                "ethFundDeposit.transfer(this.balance)"
            ],
            "jump477": [
                "cryptiToken.balanceOf(this)",
                "cryptiToken.balanceOf(this)"
            ],
            "block2864": [
                "cryptiToken.balanceOf(this)"
            ],
            "block4306": [
                "ethFundDeposit.transfer(this.balance)"
            ],
            "block477": [
                "cryptiToken.balanceOf(this)"
            ],
            "jump794_0": [
                "cryptiToken.transfer(msg.sender, tokens)",
                "cryptiToken.transfer(msg.sender, tokens)"
            ],
            "block794_0": [
                "cryptiToken.transfer(msg.sender, tokens)"
            ],
            "jump794": [
                "cryptiToken.transfer(msg.sender, tokens)",
                "cryptiToken.transfer(msg.sender, tokens)"
            ],
            "jump2864": [
                "cryptiToken.balanceOf(this)",
                "cryptiToken.balanceOf(this)"
            ],
            "block794": [
                "cryptiToken.transfer(msg.sender, tokens)"
            ],
            "block3122": [
                "cryptiToken.transfer(_sendTokensTo, tokensLeft)"
            ]
        }
    }
}