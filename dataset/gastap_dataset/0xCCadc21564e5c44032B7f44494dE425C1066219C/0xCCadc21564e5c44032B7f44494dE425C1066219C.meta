{
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "FluencePreSale": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "FluencePreSale(uint256,uint256,uint256)",
            "setBeneficiary(address)",
            "withdraw()",
            "contribute(address)",
            "fallback()",
            "refund()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "FluencePreSale(uint256,uint256,uint256)": {
                "argument": {
                    "_startAtBlock": "uint256",
                    "_endAtBlock": "uint256",
                    "softCapInEther": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "contribute(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256",
                    "softCap": "uint256",
                    "basicThreshold": "uint256",
                    "basicTokensPerEth": "uint256",
                    "advancedThreshold": "uint256",
                    "advancedTokensPerEth": "uint256",
                    "expertThreshold": "uint256",
                    "expertTokensPerEth": "uint256",
                    "etherCollected": "uint256",
                    "startAtBlock": "uint256",
                    "endAtBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "refund()": [
                1060,
                339
            ],
            "transferOwnership(address)": [
                1752,
                625
            ],
            "halt()": [
                1083,
                361
            ],
            "setBeneficiary(address)": [
                538,
                119
            ],
            "unhalt()": [
                1643,
                559
            ],
            "withdraw()": [
                821,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump3405": [
                "beneficiary.transfer(this.balance)",
                "beneficiary.transfer(this.balance)"
            ],
            "jump4070": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block3405": [
                "beneficiary.transfer(this.balance)"
            ],
            "block4070": [
                "msg.sender.transfer(amount)"
            ]
        }
    }
}