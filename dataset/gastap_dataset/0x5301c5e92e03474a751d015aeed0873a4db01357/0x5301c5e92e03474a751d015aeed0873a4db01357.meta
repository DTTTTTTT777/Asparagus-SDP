{
    "ReentrancyGuard": {
        "function_list": [
            "slitherConstructorVariables()"
        ],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Claimable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferOwnership(address)",
            "claimOwnership()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "claimOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "claimOwnership()": [
                103,
                75
            ],
            "transferOwnership(address)": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "HasNoContracts": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "reclaimContract(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "reclaimContract(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "reclaimContract(address)": [
                92,
                75
            ],
            "transferOwnership(address)": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "block597": [
                "contractInst.transferOwnership(owner)"
            ],
            "jump597": [
                "contractInst.transferOwnership(owner)",
                "contractInst.transferOwnership(owner)"
            ]
        }
    },
    "HasNoEther": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "HasNoEther()",
            "fallback()",
            "reclaimEther()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "HasNoEther()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "reclaimEther()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "reclaimEther()": [
                189,
                97
            ],
            "transferOwnership(address)": [
                212,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump407": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block407": [
                "owner.send(this.balance)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SafeERC20": {
        "function_list": [
            "safeTransfer(ERC20Basic,address,uint256)",
            "safeTransferFrom(ERC20,address,address,uint256)",
            "safeApprove(ERC20,address,uint256)"
        ],
        "initial_state": {
            "safeTransfer(ERC20Basic,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "safeTransferFrom(ERC20,address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "safeApprove(ERC20,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "CanReclaimToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "reclaimToken(ERC20Basic)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "reclaimToken(ERC20Basic)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump561": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump1243": [
                "token.transfer(to, value)",
                "token.transfer(to, value)"
            ],
            "block1243": [
                "token.transfer(to, value)"
            ],
            "block561": [
                "token.balanceOf(this)"
            ]
        }
    },
    "HasNoTokens": {
        "function_list": [
            "reclaimToken(ERC20Basic)",
            "Ownable()",
            "transferOwnership(address)",
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "reclaimToken(ERC20Basic)": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "value_": "uint256",
                    "data_": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                257,
                119
            ],
            "transferOwnership(address)": [
                358,
                141
            ]
        },
        "block_CALL_mapping": {
            "block1360": [
                "token.transfer(to, value)"
            ],
            "block673": [
                "token.balanceOf(this)"
            ],
            "jump1360": [
                "token.transfer(to, value)",
                "token.transfer(to, value)"
            ],
            "jump673": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "Campaign": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)",
            "reclaimToken(ERC20Basic)",
            "Ownable()",
            "transferOwnership(address)",
            "transferOwnership(address)",
            "claimOwnership()",
            "stage()",
            "Campaign(string,address,string,string,bytes32)",
            "setParams(uint256[],uint8[],uint256[],uint256[])",
            "createToken(string,string,uint8,address[],uint256[],uint256[])",
            "fallback()",
            "withdrawPayout()",
            "releaseTokens()",
            "withdrawRefund()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "value_": "uint256",
                    "data_": "bytes"
                },
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "reclaimToken(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "claimOwnership()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "stage()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "Campaign(string,address,string,string,bytes32)": {
                "argument": {
                    "_id": "string",
                    "_name": "string",
                    "_website": "string",
                    "_whitePaperHash": "bytes32"
                },
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "setParams(uint256[],uint8[],uint256[],uint256[])": {
                "argument": {
                    "_fundingThreshold_fundingGoal_tokenPrice_startTime_finishTime": "uint256[]",
                    "_timeMode_bonusMode": "uint8[]",
                    "_bonusLevels": "uint256[]",
                    "_bonusRates": "uint256[]"
                },
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "createToken(string,string,uint8,address[],uint256[],uint256[])": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string",
                    "_tokenDecimals": "uint8",
                    "_distributionRecipients": "address[]",
                    "_distributionAmounts": "uint256[]",
                    "_releaseTimes": "uint256[]"
                },
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "withdrawPayout()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "releaseTokens()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "withdrawRefund()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "id": "string",
                    "name": "string",
                    "website": "string",
                    "whitePaperHash": "bytes32",
                    "fundingThreshold": "uint256",
                    "fundingGoal": "uint256",
                    "tokenPrice": "uint256",
                    "startTime": "uint256",
                    "finishTime": "uint256",
                    "bonusLevels": "uint256[]",
                    "bonusRates": "uint256[]",
                    "amountRaised": "uint256",
                    "minContribution": "uint256",
                    "earlySuccessTimestamp": "uint256",
                    "earlySuccessBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump1937": [
                "tokenContract.generateTokens(_owner, msg.value)",
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "jump1937_1": [
                "tokenContract.generateTokens(_owner, msg.value)",
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "jump1937_0": [
                "tokenContract.generateTokens(_owner, msg.value)",
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "jump2701": [
                "tokenContract.generateTokens(dth, amount)",
                "tokenContract.generateTokens(dth, amount)"
            ],
            "block1626": [
                "vaultAddress.send(msg.value)"
            ],
            "block1626_0": [
                "vaultAddress.send(msg.value)"
            ],
            "block1626_1": [
                "vaultAddress.send(msg.value)"
            ],
            "jump1506_1": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "jump1506_0": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "block1506_1": [
                "tokenContract.controller()"
            ],
            "block1506_0": [
                "tokenContract.controller()"
            ],
            "block1506": [
                "tokenContract.controller()"
            ],
            "block1937": [
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "jump3047": [
                "tokenContract.changeController(0)",
                "tokenContract.changeController(0)"
            ],
            "block1937_1": [
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "block1937_0": [
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "block2701": [
                "tokenContract.generateTokens(dth, amount)"
            ],
            "jump1506": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "jump1626_0": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "jump1626_1": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "block3047": [
                "tokenContract.changeController(0)"
            ],
            "jump1626": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ]
        }
    },
    "Token": {
        "function_list": [
            "reclaimContract(address)",
            "Ownable()",
            "transferOwnership(address)",
            "tokenFallback(address,uint256,bytes)",
            "reclaimToken(ERC20Basic)",
            "HasNoEther()",
            "fallback()",
            "reclaimEther()",
            "mint(address,uint256)",
            "finishMinting()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Token(string,string,uint8,address[],uint256[],uint256[],uint8)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "timeLocked(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "reclaimContract(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "value_": "uint256",
                    "data_": "bytes"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "reclaimToken(ERC20Basic)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "HasNoEther()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "reclaimEther()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Token(string,string,uint8,address[],uint256[],uint256[],uint8)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_recipients": "address[]",
                    "_amounts": "uint256[]",
                    "_releaseTimes": "uint256[]",
                    "_timeMode": "uint8"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "timeLocked(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    }
}