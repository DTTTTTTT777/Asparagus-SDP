{
    "Utils": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                126,
                97
            ],
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Managed": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {}
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptManagement()": [
                277,
                119
            ],
            "transferManagement(address)": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptOwnership()": [
                223,
                97
            ],
            "transferOwnership(address)": [
                420,
                163
            ],
            "owner()": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump876": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block876": [
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "IBancorGasPriceLimit": {
        "function_list": [
            "gasPrice()"
        ],
        "initial_state": {
            "gasPrice()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "gasPrice()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "IBancorConverterExtensions": {
        "function_list": [
            "formula()",
            "gasPriceLimit()",
            "quickConverter()"
        ],
        "initial_state": {
            "formula()": {
                "argument": {},
                "contract": {}
            },
            "gasPriceLimit()": {
                "argument": {},
                "contract": {}
            },
            "quickConverter()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "quickConverter()": [
                266,
                119
            ],
            "gasPriceLimit()": [
                179,
                97
            ],
            "formula()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SmartTokenController": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {}
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {}
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "disableTokenTransfers(bool)": [
                500,
                185
            ],
            "transferTokenOwnership(address)": [
                169,
                75
            ],
            "owner()": [
                547,
                207
            ],
            "acceptTokenOwnership()": [
                236,
                97
            ],
            "transferOwnership(address)": [
                721,
                251
            ],
            "acceptOwnership()": [
                477,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2182": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump1401": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "block1764": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "block1152": [
                "token.transferOwnership(_newOwner)"
            ],
            "block2182": [
                "_token.transfer(_to, _amount)"
            ],
            "block2970": [
                "token.disableTransfers(_disable)"
            ],
            "jump1764": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)",
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "jump2970": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block1401": [
                "token.acceptOwnership()"
            ],
            "jump1152": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ]
        }
    },
    "BancorConverter": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "convertibleTokenCount()",
            "convertibleToken(uint16)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "convert(IERC20Token,IERC20Token,uint256,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "BancorConverter(ISmartToken,IBancorConverterExtensions,uint32,IERC20Token,uint32)",
            "connectorTokenCount()",
            "convertibleTokenCount()",
            "convertibleToken(uint16)",
            "setExtensions(IBancorConverterExtensions)",
            "setQuickBuyPath(IERC20Token[])",
            "clearQuickBuyPath()",
            "getQuickBuyPathLength()",
            "disableConversions(bool)",
            "setConversionFee(uint32)",
            "getConversionFeeAmount(uint256)",
            "addConnector(IERC20Token,uint32,bool)",
            "updateConnector(IERC20Token,uint32,bool,uint256)",
            "disableConnectorPurchases(IERC20Token,bool)",
            "getConnectorBalance(IERC20Token)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "getPurchaseReturn(IERC20Token,uint256)",
            "getSaleReturn(IERC20Token,uint256)",
            "convert(IERC20Token,IERC20Token,uint256,uint256)",
            "buy(IERC20Token,uint256,uint256)",
            "sell(IERC20Token,uint256,uint256)",
            "quickConvert(IERC20Token[],uint256,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "getSaleReturn(IERC20Token,uint256,uint256)",
            "dispatchConversionEvent(IERC20Token,uint256,uint256,bool)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "Utils()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convertibleTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convertibleToken(uint16)": {
                "argument": {
                    "_tokenIndex": "uint16"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getReturn(IERC20Token,IERC20Token,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convert(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "change(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "BancorConverter(ISmartToken,IBancorConverterExtensions,uint32,IERC20Token,uint32)": {
                "argument": {
                    "_maxConversionFee": "uint32",
                    "_connectorWeight": "uint32"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "connectorTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setExtensions(IBancorConverterExtensions)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setQuickBuyPath(IERC20Token[])": {
                "argument": {
                    "_path": "IERC20Token[]"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "clearQuickBuyPath()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getQuickBuyPathLength()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableConversions(bool)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setConversionFee(uint32)": {
                "argument": {
                    "_conversionFee": "uint32"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getConversionFeeAmount(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "addConnector(IERC20Token,uint32,bool)": {
                "argument": {
                    "_weight": "uint32"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "updateConnector(IERC20Token,uint32,bool,uint256)": {
                "argument": {
                    "_weight": "uint32",
                    "_virtualBalance": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableConnectorPurchases(IERC20Token,bool)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getConnectorBalance(IERC20Token)": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getPurchaseReturn(IERC20Token,uint256)": {
                "argument": {
                    "_depositAmount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256)": {
                "argument": {
                    "_sellAmount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "buy(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_depositAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "sell(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "quickConvert(IERC20Token[],uint256,uint256)": {
                "argument": {
                    "_path": "IERC20Token[]",
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "dispatchConversionEvent(IERC20Token,uint256,uint256,bool)": {
                "argument": {
                    "_amount": "uint256",
                    "_returnAmount": "uint256"
                },
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_WEIGHT": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "connectorTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalConnectorWeight": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "getConversionFeeAmount(uint256)": [
                1448,
                251
            ],
            "disableTokenTransfers(bool)": [
                3024,
                647
            ],
            "transferTokenOwnership(address)": [
                1180,
                163
            ],
            "transferManagement(address)": [
                3857,
                911
            ],
            "acceptTokenOwnership()": [
                1513,
                273
            ],
            "convertibleTokenCount()": [
                3460,
                779
            ],
            "clearQuickBuyPath()": [
                2058,
                405
            ],
            "acceptManagement()": [
                3558,
                823
            ],
            "connectorTokenCount()": [
                2714,
                559
            ],
            "owner()": [
                14148,
                912
            ],
            "convertibleToken(uint16)": [
                4213,
                999
            ],
            "transferOwnership(address)": [
                4326,
                1021
            ],
            "setConversionFee(uint32)": [
                4033,
                955
            ],
            "getQuickBuyPathLength()": [
                3158,
                691
            ],
            "disableConversions(bool)": [
                1247,
                185
            ],
            "acceptOwnership()": [
                3001,
                625
            ]
        },
        "block_CALL_mapping": {
            "jump17230_9": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_8": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "block15248_0": [
                "extensions.gasPriceLimit()"
            ],
            "block15248_1": [
                "extensions.gasPriceLimit()"
            ],
            "block15248_2": [
                "extensions.gasPriceLimit()"
            ],
            "block15248_3": [
                "extensions.gasPriceLimit()"
            ],
            "jump17230_1": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_0": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_3": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_2": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "block14558": [
                "token.totalSupply()"
            ],
            "jump11699": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump17230_5": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_4": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_7": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump5833_0": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump17230_6": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump15406": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump14764_6": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump14764_4": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump14764_5": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump14764_2": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump14764_3": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump14764_0": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump14764_1": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block19799_3": [
                "token.decimals()"
            ],
            "block19799_2": [
                "token.decimals()"
            ],
            "block19799_1": [
                "token.decimals()"
            ],
            "block19799_0": [
                "token.decimals()"
            ],
            "block19799_7": [
                "token.decimals()"
            ],
            "block19799_6": [
                "token.decimals()"
            ],
            "block19799_5": [
                "token.decimals()"
            ],
            "block19799_4": [
                "token.decimals()"
            ],
            "block19799_8": [
                "token.decimals()"
            ],
            "block14764_0": [
                "extensions.formula()"
            ],
            "block14764_1": [
                "extensions.formula()"
            ],
            "block14764_2": [
                "extensions.formula()"
            ],
            "block14764_3": [
                "extensions.formula()"
            ],
            "block14764_4": [
                "extensions.formula()"
            ],
            "block14764_5": [
                "extensions.formula()"
            ],
            "block14764_6": [
                "extensions.formula()"
            ],
            "block12542_0": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block12542_1": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block12542_2": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block12542_3": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block19572": [
                "token.totalSupply()"
            ],
            "block17230_7": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_6": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_5": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_4": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_3": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_2": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_1": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_0": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_9": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_8": [
                "_connectorToken.balanceOf(this)"
            ],
            "jump19960": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "block11943": [
                "token.totalSupply()"
            ],
            "block12542": [
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump17230_20": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_21": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_22": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_23": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_24": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_25": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_26": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_27": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_28": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_29": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump19960_5": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "jump19799_4": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block15855_0": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block15855_1": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block15855_2": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block15855_3": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump5833_1": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump14989_4": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block17230_13": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_12": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_11": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_10": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_17": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_16": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_15": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_14": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_19": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_18": [
                "_connectorToken.balanceOf(this)"
            ],
            "block14989": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump13883": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block15406": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15248_2": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15248_3": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15248_0": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15248_1": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block19960": [
                "_connectorToken.decimals()"
            ],
            "block16119_0": [
                "token.issue(msg.sender, amount)"
            ],
            "block16119_1": [
                "token.issue(msg.sender, amount)"
            ],
            "block16119_2": [
                "token.issue(msg.sender, amount)"
            ],
            "jump18935_5": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump18935_2": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump4702": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump18935_0": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump18935_1": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block11266_0": [
                "extensions.gasPriceLimit()"
            ],
            "block11266_1": [
                "extensions.gasPriceLimit()"
            ],
            "block11266_2": [
                "extensions.gasPriceLimit()"
            ],
            "block11266_3": [
                "extensions.gasPriceLimit()"
            ],
            "block18527_1": [
                "token.owner()"
            ],
            "block18527_0": [
                "token.owner()"
            ],
            "block18527_3": [
                "token.owner()"
            ],
            "block18527_2": [
                "token.owner()"
            ],
            "block18527_5": [
                "token.owner()"
            ],
            "block18527_4": [
                "token.owner()"
            ],
            "block7022": [
                "token.totalSupply()"
            ],
            "jump5833": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump15248": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block5055": [
                "token.destroy(msg.sender, _amount)"
            ],
            "block8106": [
                "token.acceptOwnership()"
            ],
            "block14764": [
                "extensions.formula()"
            ],
            "block11699": [
                "token.balanceOf(msg.sender)"
            ],
            "block5276": [
                "token.issue(quickConverter, _amount)"
            ],
            "jump19960_7": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "jump14764": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump18527_6": [
                "token.owner()",
                "token.owner()"
            ],
            "jump18527_5": [
                "token.owner()",
                "token.owner()"
            ],
            "jump18527_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump18527_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump18527_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump18527_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump18527_0": [
                "token.owner()",
                "token.owner()"
            ],
            "block12791_2": [
                "token.totalSupply()"
            ],
            "block12791_3": [
                "token.totalSupply()"
            ],
            "block12791_0": [
                "token.totalSupply()"
            ],
            "block12791_1": [
                "token.totalSupply()"
            ],
            "block12791_4": [
                "token.totalSupply()"
            ],
            "block12791_5": [
                "token.totalSupply()"
            ],
            "jump14148_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14148_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14148_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14148_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14148_6": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14148_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14148_5": [
                "token.owner()",
                "token.owner()"
            ],
            "jump12542_2": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump12542_3": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump19799": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump12542_1": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "block14148_4": [
                "token.owner()"
            ],
            "block14148_5": [
                "token.owner()"
            ],
            "block14148_6": [
                "token.owner()"
            ],
            "jump19160_3": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19160_2": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19160_1": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19160_0": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19160_6": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19160_5": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump19160_4": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block13883": [
                "token.disableTransfers(_disable)"
            ],
            "jump17230_30": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "block19572_8": [
                "token.totalSupply()"
            ],
            "block19572_4": [
                "token.totalSupply()"
            ],
            "block19572_5": [
                "token.totalSupply()"
            ],
            "block19572_6": [
                "token.totalSupply()"
            ],
            "block19572_7": [
                "token.totalSupply()"
            ],
            "block19572_0": [
                "token.totalSupply()"
            ],
            "block19572_1": [
                "token.totalSupply()"
            ],
            "block19572_2": [
                "token.totalSupply()"
            ],
            "block19572_3": [
                "token.totalSupply()"
            ],
            "jump14989": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block14148_0": [
                "token.owner()"
            ],
            "block14148_1": [
                "token.owner()"
            ],
            "block14148_2": [
                "token.owner()"
            ],
            "block14148_3": [
                "token.owner()"
            ],
            "block5055_0": [
                "token.destroy(msg.sender, _amount)"
            ],
            "block5055_1": [
                "token.destroy(msg.sender, _amount)"
            ],
            "block15248": [
                "extensions.gasPriceLimit()"
            ],
            "block11001": [
                "_token.transfer(_to, _amount)"
            ],
            "block19799": [
                "token.decimals()"
            ],
            "jump5520_0": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block18527": [
                "token.owner()"
            ],
            "jump18935": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block4702_0": [
                "extensions.quickConverter()"
            ],
            "block4702_1": [
                "extensions.quickConverter()"
            ],
            "jump18935_6": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19799_1": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump19799_0": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump19799_3": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump19799_2": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump19799_5": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump18935_4": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19799_7": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump19799_6": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump14558": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block16119_3": [
                "token.issue(msg.sender, amount)"
            ],
            "jump12542_0": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump18935_3": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump5520": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5520": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5833": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump11424_2": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11424_3": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11424_0": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11424_1": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump9945": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)",
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "jump12791_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12791_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12791_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12791_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12791_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12791_5": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11001": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump12355": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump7022": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block12791": [
                "token.totalSupply()"
            ],
            "block18935_4": [
                "extensions.formula()"
            ],
            "block15406_3": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block18935_6": [
                "extensions.formula()"
            ],
            "block18935_0": [
                "extensions.formula()"
            ],
            "block18935_1": [
                "extensions.formula()"
            ],
            "block18935_2": [
                "extensions.formula()"
            ],
            "block18935_3": [
                "extensions.formula()"
            ],
            "block11266": [
                "extensions.gasPriceLimit()"
            ],
            "block15406_0": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block15406_1": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump19572_8": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5833_0": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block15406_2": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump19572_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19572_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19572_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19572_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19572_6": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19572_7": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19572_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19572_5": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block17230_30": [
                "_connectorToken.balanceOf(this)"
            ],
            "block19160_1": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19160_0": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19160_3": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19160_2": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block19160_5": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump14989_2": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump14989_1": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump14989_0": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump14558_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14558_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14558_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14558_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14558_5": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14558_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14558_6": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block14989_4": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump15855": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump19799_8": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block18527_6": [
                "token.owner()"
            ],
            "jump5276_1": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "jump5276_0": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "jump17230": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump8106": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "block11699_2": [
                "token.balanceOf(msg.sender)"
            ],
            "block11699_3": [
                "token.balanceOf(msg.sender)"
            ],
            "block11699_0": [
                "token.balanceOf(msg.sender)"
            ],
            "block11699_1": [
                "token.balanceOf(msg.sender)"
            ],
            "block11424_0": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11424_1": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11424_2": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11424_3": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block18935_5": [
                "extensions.formula()"
            ],
            "block17230": [
                "_connectorToken.balanceOf(this)"
            ],
            "block16119": [
                "token.issue(msg.sender, amount)"
            ],
            "jump5520_1": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block19960_4": [
                "_connectorToken.decimals()"
            ],
            "jump11424": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump12791": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19160": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block11424": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11699_0": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump11699_1": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump11699_2": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump11699_3": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block14989_5": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block9945": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "block14989_6": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block14989_1": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block14989_0": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block14989_3": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block14989_2": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump11266_2": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11266_3": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11266_0": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11266_1": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block19960_1": [
                "_connectorToken.decimals()"
            ],
            "block19960_0": [
                "_connectorToken.decimals()"
            ],
            "block19960_3": [
                "_connectorToken.decimals()"
            ],
            "block19960_2": [
                "_connectorToken.decimals()"
            ],
            "block19960_5": [
                "_connectorToken.decimals()"
            ],
            "jump16119": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "block19960_7": [
                "_connectorToken.decimals()"
            ],
            "block19960_6": [
                "_connectorToken.decimals()"
            ],
            "block19960_8": [
                "_connectorToken.decimals()"
            ],
            "jump5276": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "block12355_2": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block12355_3": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block12355_0": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block12355_1": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block5833_1": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump5055_0": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump5055_1": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "block7380": [
                "token.transferOwnership(_newOwner)"
            ],
            "block19160_4": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump14148": [
                "token.owner()",
                "token.owner()"
            ],
            "block14558_6": [
                "token.totalSupply()"
            ],
            "block14558_5": [
                "token.totalSupply()"
            ],
            "block14558_4": [
                "token.totalSupply()"
            ],
            "block14558_3": [
                "token.totalSupply()"
            ],
            "block14558_2": [
                "token.totalSupply()"
            ],
            "block14558_1": [
                "token.totalSupply()"
            ],
            "block14558_0": [
                "token.totalSupply()"
            ],
            "jump15855_2": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump15855_3": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump15855_0": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump15855_1": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)",
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block5520_1": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5520_0": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block18935": [
                "extensions.formula()"
            ],
            "jump4702_0": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump4702_1": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "block19160": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "jump5055": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump11943": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump8535": [
                "token.owner()",
                "token.owner()"
            ],
            "jump11266": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump7380": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "jump14989_6": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "jump14989_5": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block17230_26": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_27": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_24": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_25": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_22": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_23": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_20": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_21": [
                "_connectorToken.balanceOf(this)"
            ],
            "jump14989_3": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, connectorBalance, connector.weight, _depositAmount)"
            ],
            "block17230_28": [
                "_connectorToken.balanceOf(this)"
            ],
            "block17230_29": [
                "_connectorToken.balanceOf(this)"
            ],
            "block19160_6": [
                "extensions.formula().calculateSaleReturn(_totalSupply, connectorBalance, connector.weight, _sellAmount)"
            ],
            "block15855": [
                "_connectorToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump15406_2": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15406_3": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15406_0": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15406_1": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block8535": [
                "token.owner()"
            ],
            "jump16119_2": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16119_3": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16119_0": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16119_1": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump18527": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19960_2": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "block14148": [
                "token.owner()"
            ],
            "block4702": [
                "extensions.quickConverter()"
            ],
            "jump11943_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11943_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11943_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11943_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump19960_6": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "jump12542": [
                "_connectorToken.transfer(msg.sender, amount)",
                "_connectorToken.transfer(msg.sender, amount)"
            ],
            "jump19960_4": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "jump19572": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12355_0": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12355_1": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12355_2": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12355_3": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump17230_19": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_18": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_11": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_10": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_13": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_12": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_15": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_14": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_17": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump17230_16": [
                "_connectorToken.balanceOf(this)",
                "_connectorToken.balanceOf(this)"
            ],
            "jump19960_3": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "block12355": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump19960_1": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "jump19960_0": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "block11943_0": [
                "token.totalSupply()"
            ],
            "block11943_1": [
                "token.totalSupply()"
            ],
            "block11943_2": [
                "token.totalSupply()"
            ],
            "block11943_3": [
                "token.totalSupply()"
            ],
            "jump19960_8": [
                "_connectorToken.decimals()",
                "_connectorToken.decimals()"
            ],
            "block5276_1": [
                "token.issue(quickConverter, _amount)"
            ],
            "block5276_0": [
                "token.issue(quickConverter, _amount)"
            ]
        }
    }
}