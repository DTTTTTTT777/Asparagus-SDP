{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "adminCreat(address)",
            "transferAdmin(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "adminCreat(address)": {
                "argument": {},
                "contract": {}
            },
            "transferAdmin(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferAdmin(address)": [
                181,
                97
            ],
            "adminCreat(address)": [
                114,
                75
            ],
            "transferOwnership(address)": [
                335,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "TokenERC20": {
        "function_list": [
            "TokenERC20(uint256,string,string)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "burn(uint256)",
            "burnFrom(address,uint256)"
        ],
        "initial_state": {
            "TokenERC20(uint256,string,string)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                335,
                97
            ],
            "burn(uint256)": [
                661,
                185
            ],
            "burnFrom(address,uint256)": [
                817,
                229
            ],
            "transferFrom(address,address,uint256)": [
                479,
                141
            ],
            "approveAndCall(address,uint256,bytes)": [
                1139,
                295
            ],
            "transfer(address,uint256)": [
                1062,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump3394": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3394": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Membership": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "adminCreat(address)",
            "transferAdmin(address)",
            "addMember(address,string)",
            "removeMember(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "members": "Membership.Member[]",
                    "totalSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "members": "Membership.Member[]",
                    "totalSupply": "uint256"
                }
            },
            "adminCreat(address)": {
                "argument": {},
                "contract": {
                    "members": "Membership.Member[]",
                    "totalSupply": "uint256"
                }
            },
            "transferAdmin(address)": {
                "argument": {},
                "contract": {
                    "members": "Membership.Member[]",
                    "totalSupply": "uint256"
                }
            },
            "addMember(address,string)": {
                "argument": {
                    "memberName": "string"
                },
                "contract": {
                    "members": "Membership.Member[]",
                    "totalSupply": "uint256"
                }
            },
            "removeMember(address)": {
                "argument": {},
                "contract": {
                    "members": "Membership.Member[]",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "adminCreat(address)": [
                279,
                119
            ],
            "removeMember(address)": [
                169,
                75
            ],
            "transferAdmin(address)": [
                657,
                185
            ],
            "addMember(address,string)": [
                811,
                229
            ],
            "transferOwnership(address)": [
                948,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "bonusToken": {
        "function_list": [
            "addMember(address,string)",
            "removeMember(address)",
            "owned()",
            "transferOwnership(address)",
            "adminCreat(address)",
            "transferAdmin(address)",
            "TokenERC20(uint256,string,string)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "bonusToken(uint256,string,string)",
            "_transfer(address,address,uint256)",
            "mintToken(address,uint256)",
            "_mintToken(address,uint256)",
            "freezeAccount(address,bool)",
            "setPrices(uint256,uint256)",
            "buy()",
            "sell(uint256)",
            "dividendDistribution()",
            "remainPantry()",
            "robPantry(address,uint256)",
            "mintToClient(address,uint256)",
            "robPantryT(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "addMember(address,string)": {
                "argument": {
                    "memberName": "string"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "removeMember(address)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "adminCreat(address)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "transferAdmin(address)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "TokenERC20(uint256,string,string)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "bonusToken(uint256,string,string)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "_mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "freezeAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "setPrices(uint256,uint256)": {
                "argument": {
                    "newSellPrice": "uint256",
                    "newBuyPrice": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "dividendDistribution()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "remainPantry()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "robPantry(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "mintToClient(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            },
            "robPantryT(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "dividend": "uint256",
                    "pantry": "uint256",
                    "pantryT": "uint256",
                    "stopSetPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "remainPantry()": [
                1455,
                361
            ],
            "buy()": [
                2478,
                625
            ],
            "transferAdmin(address)": [
                1859,
                449
            ],
            "transferFrom(address,address,uint256)": [
                973,
                229
            ],
            "sell(uint256)": [
                3246,
                823
            ],
            "approve(address,uint256)": [
                676,
                119
            ],
            "removeMember(address)": [
                820,
                163
            ],
            "burnFrom(address,uint256)": [
                2003,
                493
            ],
            "setPrices(uint256,uint256)": [
                477,
                75
            ],
            "adminCreat(address)": [
                1183,
                273
            ],
            "mintToClient(address,uint256)": [
                2147,
                537
            ],
            "robPantryT(address,uint256)": [
                2699,
                713
            ],
            "mintToken(address,uint256)": [
                1926,
                471
            ],
            "addMember(address,string)": [
                2776,
                735
            ],
            "approveAndCall(address,uint256,bytes)": [
                2956,
                779
            ],
            "transferOwnership(address)": [
                3370,
                867
            ],
            "dividendDistribution()": [
                2455,
                603
            ],
            "burn(uint256)": [
                1386,
                339
            ],
            "robPantry(address,uint256)": [
                1106,
                251
            ],
            "transfer(address,uint256)": [
                2488,
                647
            ],
            "freezeAccount(address,bool)": [
                3291,
                845
            ]
        },
        "block_CALL_mapping": {
            "block9346": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump5041": [
                "target.transfer(rob)",
                "target.transfer(rob)"
            ],
            "jump9552": [
                "msg.sender.transfer(amount / sellPrice)",
                "msg.sender.transfer(amount / sellPrice)"
            ],
            "block9552": [
                "msg.sender.transfer(amount / sellPrice)"
            ],
            "block5041": [
                "target.transfer(rob)"
            ],
            "jump9346": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    }
}