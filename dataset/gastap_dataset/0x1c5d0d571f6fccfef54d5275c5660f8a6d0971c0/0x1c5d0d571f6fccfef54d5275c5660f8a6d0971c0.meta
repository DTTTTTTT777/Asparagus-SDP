{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)",
            "fallback()"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "PornTokenV2": {
        "function_list": [
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                479,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump3394": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3394": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Congress": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)",
            "fallback()",
            "owned()",
            "transferOwnership(address)",
            "Congress(uint256,uint256,int256)",
            "addMember(address,string)",
            "removeMember(address)",
            "changeVotingRules(uint256,uint256,int256)",
            "newProposal(address,uint256,string,bytes)",
            "newProposalInEther(address,uint256,string,bytes)",
            "checkProposalCode(uint256,address,uint256,bytes)",
            "vote(uint256,bool,string)",
            "executeProposal(uint256,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "Congress(uint256,uint256,int256)": {
                "argument": {
                    "minimumQuorumForProposals": "uint256",
                    "minutesForDebate": "uint256"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "addMember(address,string)": {
                "argument": {
                    "memberName": "string"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "removeMember(address)": {
                "argument": {},
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "changeVotingRules(uint256,uint256,int256)": {
                "argument": {
                    "minimumQuorumForProposals": "uint256",
                    "minutesForDebate": "uint256"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "newProposal(address,uint256,string,bytes)": {
                "argument": {
                    "weiAmount": "uint256",
                    "jobDescription": "string",
                    "transactionBytecode": "bytes"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "newProposalInEther(address,uint256,string,bytes)": {
                "argument": {
                    "etherAmount": "uint256",
                    "jobDescription": "string",
                    "transactionBytecode": "bytes"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "checkProposalCode(uint256,address,uint256,bytes)": {
                "argument": {
                    "proposalNumber": "uint256",
                    "weiAmount": "uint256",
                    "transactionBytecode": "bytes"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "vote(uint256,bool,string)": {
                "argument": {
                    "proposalNumber": "uint256",
                    "justificationText": "string"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            },
            "executeProposal(uint256,bytes)": {
                "argument": {
                    "proposalNumber": "uint256",
                    "transactionBytecode": "bytes"
                },
                "contract": {
                    "minimumQuorum": "uint256",
                    "debatingPeriodInMinutes": "uint256",
                    "proposals": "Congress.Proposal[]",
                    "numProposals": "uint256",
                    "members": "Congress.Member[]"
                }
            }
        },
        "function_block_mapping": {
            "vote(uint256,bool,string)": [
                2250,
                405
            ],
            "newProposal(address,uint256,string,bytes)": [
                1574,
                317
            ],
            "checkProposalCode(uint256,address,uint256,bytes)": [
                2397,
                427
            ],
            "changeVotingRules(uint256,uint256,int256)": [
                2048,
                361
            ],
            "newProposalInEther(address,uint256,string,bytes)": [
                1811,
                339
            ],
            "removeMember(address)": [
                643,
                97
            ],
            "addMember(address,string)": [
                2113,
                383
            ],
            "executeProposal(uint256,bytes)": [
                710,
                119
            ],
            "transferOwnership(address)": [
                2578,
                449
            ],
            "receiveApproval(address,uint256,address,bytes)": [
                1352,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump4092": [
                "p.recipient.call.value(p.amount)(transactionBytecode)",
                "p.recipient.call.value(p.amount)(transactionBytecode)"
            ],
            "block4841": [
                "t.transferFrom(_from, this, _value)"
            ],
            "jump4841": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block4092": [
                "p.recipient.call.value(p.amount)(transactionBytecode)"
            ]
        }
    }
}