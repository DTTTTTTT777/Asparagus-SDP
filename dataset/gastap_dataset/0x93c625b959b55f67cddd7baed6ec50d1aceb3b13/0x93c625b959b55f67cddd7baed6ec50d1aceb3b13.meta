{
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                81,
                75
            ],
            "transfer(address,uint256)": [
                214,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "DeveryVesting": {
        "function_list": [
            "DeveryVesting(address)",
            "addEntryInDays(address,uint256,uint256)",
            "addEntryInMonths(address,uint256,uint256)",
            "addEntryInYears(address,uint256,uint256)",
            "addEntry(address,uint256,uint256,uint256)",
            "tokenShare(address)",
            "vested(address,uint256)",
            "withdrawable(address)",
            "withdraw()",
            "withdrawn(address)",
            "finalise()"
        ],
        "initial_state": {
            "DeveryVesting(address)": {
                "argument": {},
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "addEntryInDays(address,uint256,uint256)": {
                "argument": {
                    "proportion": "uint256",
                    "periods": "uint256"
                },
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "addEntryInMonths(address,uint256,uint256)": {
                "argument": {
                    "proportion": "uint256",
                    "periods": "uint256"
                },
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "addEntryInYears(address,uint256,uint256)": {
                "argument": {
                    "proportion": "uint256",
                    "periods": "uint256"
                },
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "addEntry(address,uint256,uint256,uint256)": {
                "argument": {
                    "proportion": "uint256",
                    "periods": "uint256",
                    "periodLength": "uint256"
                },
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "tokenShare(address)": {
                "argument": {},
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "vested(address,uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "withdrawable(address)": {
                "argument": {},
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "withdrawn(address)": {
                "argument": {},
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            },
            "finalise()": {
                "argument": {},
                "contract": {
                    "totalProportion": "uint256",
                    "totalTokens": "uint256",
                    "startDate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "addEntryInDays(address,uint256,uint256)": [
                833,
                295
            ],
            "finalise()": [
                810,
                273
            ],
            "withdrawn(address)": [
                506,
                185
            ],
            "addEntryInYears(address,uint256,uint256)": [
                396,
                141
            ],
            "vested(address,uint256)": [
                256,
                97
            ],
            "withdraw()": [
                483,
                163
            ],
            "withdrawable(address)": [
                1007,
                339
            ],
            "addEntryInMonths(address,uint256,uint256)": [
                723,
                251
            ],
            "tokenShare(address)": [
                920,
                317
            ]
        },
        "block_CALL_mapping": {
            "block3792": [
                "crowdsale.owner()"
            ],
            "block2737": [
                "crowdsale.bttsToken()"
            ],
            "jump1935": [
                "crowdsale.bttsToken()",
                "crowdsale.bttsToken()"
            ],
            "block2156": [
                "crowdsale.bttsToken().transfer(msg.sender, _withdrawable)"
            ],
            "block3792_0": [
                "crowdsale.owner()"
            ],
            "block3792_1": [
                "crowdsale.owner()"
            ],
            "jump2156": [
                "crowdsale.bttsToken().transfer(msg.sender, _withdrawable)",
                "crowdsale.bttsToken().transfer(msg.sender, _withdrawable)"
            ],
            "jump2737": [
                "crowdsale.bttsToken()",
                "crowdsale.bttsToken()"
            ],
            "block1935": [
                "crowdsale.bttsToken()"
            ],
            "jump3792_1": [
                "crowdsale.owner()",
                "crowdsale.owner()"
            ],
            "block2950": [
                "crowdsale.bttsToken().balanceOf(address(this))"
            ],
            "jump3792_0": [
                "crowdsale.owner()",
                "crowdsale.owner()"
            ],
            "jump2950": [
                "crowdsale.bttsToken().balanceOf(address(this))",
                "crowdsale.bttsToken().balanceOf(address(this))"
            ],
            "jump3792": [
                "crowdsale.owner()",
                "crowdsale.owner()"
            ]
        }
    },
    "DeveryCrowdsale": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "DeveryCrowdsale()",
            "setBTTSToken(address)",
            "setPICOPSCertifier(address)",
            "setWallet(address)",
            "setReserveWallet(address)",
            "setStartDate(uint256)",
            "setFirstPeriodEndDate(uint256)",
            "setEndDate(uint256)",
            "setUsdPerKEther(uint256)",
            "setFirstPeriodCap(uint256)",
            "capEth()",
            "presaleEth()",
            "crowdsaleEth()",
            "eveFromEth(uint256,uint256)",
            "evePerEth()",
            "usdPerEve()",
            "generateTokensForPresaleAccounts(address[])",
            "fallback()",
            "roundUp(uint256)",
            "finalise()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "DeveryCrowdsale()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setBTTSToken(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setPICOPSCertifier(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setReserveWallet(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setStartDate(uint256)": {
                "argument": {
                    "_startDate": "uint256"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setFirstPeriodEndDate(uint256)": {
                "argument": {
                    "_firstPeriodEndDate": "uint256"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setEndDate(uint256)": {
                "argument": {
                    "_endDate": "uint256"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setUsdPerKEther(uint256)": {
                "argument": {
                    "_usdPerKEther": "uint256"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "setFirstPeriodCap(uint256)": {
                "argument": {
                    "_firstPeriodCap": "uint256"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "capEth()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "presaleEth()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "crowdsaleEth()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "eveFromEth(uint256,uint256)": {
                "argument": {
                    "ethAmount": "uint256",
                    "bonusPercent": "uint256"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "evePerEth()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "usdPerEve()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "generateTokensForPresaleAccounts(address[])": {
                "argument": {
                    "accounts": "address[]"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "roundUp(uint256)": {
                "argument": {
                    "a": "uint256"
                },
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "finalise()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint8",
                    "presaleEthAmountsProcessed": "uint256",
                    "PRESALE_BONUS_PERCENT": "uint256",
                    "PER_ACCOUNT_ADDITIONAL_TOKENS": "uint256",
                    "TEAM_PERCENT_EVE": "uint256",
                    "RESERVE_PERCENT_EVE": "uint256",
                    "TARGET_EVE": "uint256",
                    "PRESALEPLUSCROWDSALE_EVE": "uint256",
                    "startDate": "uint256",
                    "firstPeriodEndDate": "uint256",
                    "endDate": "uint256",
                    "usdPerKEther": "uint256",
                    "CAP_USD": "uint256",
                    "MIN_CONTRIBUTION_ETH": "uint256",
                    "firstPeriodCap": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256",
                    "generatedEve": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "capEth()": [
                3279,
                317
            ],
            "finalise()": [
                8915,
                894
            ],
            "crowdsaleEth()": [
                3588,
                427
            ],
            "transferOwnership(address)": [
                5156,
                1065
            ],
            "presaleEth()": [
                4563,
                867
            ],
            "generateTokensForPresaleAccounts(address[])": [
                4329,
                801
            ],
            "eveFromEth(uint256,uint256)": [
                3006,
                207
            ],
            "evePerEth()": [
                3081,
                229
            ],
            "setReserveWallet(address)": [
                4892,
                977
            ],
            "setStartDate(uint256)": [
                3697,
                493
            ],
            "usdPerEve()": [
                3829,
                537
            ],
            "setFirstPeriodCap(uint256)": [
                4518,
                845
            ],
            "setWallet(address)": [
                5002,
                1021
            ],
            "setUsdPerKEther(uint256)": [
                4693,
                911
            ],
            "setFirstPeriodEndDate(uint256)": [
                2698,
                75
            ],
            "setBTTSToken(address)": [
                4825,
                955
            ],
            "setPICOPSCertifier(address)": [
                3169,
                273
            ],
            "setEndDate(uint256)": [
                3124,
                251
            ],
            "acceptOwnership()": [
                3674,
                471
            ]
        },
        "block_CALL_mapping": {
            "block2224_0": [
                "bttsToken.mint(msg.sender, eveAmount, false)"
            ],
            "block11261": [
                "presaleToken.totalSupply()"
            ],
            "jump10587": [
                "bttsToken.mint(account, eveAmount, false)",
                "bttsToken.mint(account, eveAmount, false)"
            ],
            "jump2224_0": [
                "bttsToken.mint(msg.sender, eveAmount, false)",
                "bttsToken.mint(msg.sender, eveAmount, false)"
            ],
            "jump2621": [
                "msg.sender.transfer(ethRefund)",
                "msg.sender.transfer(ethRefund)"
            ],
            "block1514_0": [
                "picopsCertifier.certified(msg.sender)"
            ],
            "jump2294_0": [
                "wallet.transfer(ethAmount)",
                "wallet.transfer(ethAmount)"
            ],
            "block2621_0": [
                "msg.sender.transfer(ethRefund)"
            ],
            "block9460": [
                "presaleToken.balanceOf(account)"
            ],
            "block1059": [
                "picopsCertifier.certified(msg.sender)"
            ],
            "block11261_3": [
                "presaleToken.totalSupply()"
            ],
            "block11261_2": [
                "presaleToken.totalSupply()"
            ],
            "block11261_1": [
                "presaleToken.totalSupply()"
            ],
            "block10795": [
                "presaleToken.totalSupply()"
            ],
            "block11261_7": [
                "presaleToken.totalSupply()"
            ],
            "block2294": [
                "wallet.transfer(ethAmount)"
            ],
            "block11261_5": [
                "presaleToken.totalSupply()"
            ],
            "block11261_4": [
                "presaleToken.totalSupply()"
            ],
            "jump1514": [
                "picopsCertifier.certified(msg.sender)",
                "picopsCertifier.certified(msg.sender)"
            ],
            "block11261_9": [
                "presaleToken.totalSupply()"
            ],
            "block11261_8": [
                "presaleToken.totalSupply()"
            ],
            "block1059_0": [
                "picopsCertifier.certified(msg.sender)"
            ],
            "block8757": [
                "bttsToken.disableMinting()"
            ],
            "jump2294": [
                "wallet.transfer(ethAmount)",
                "wallet.transfer(ethAmount)"
            ],
            "jump11261_9": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump10795": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump8757": [
                "bttsToken.disableMinting()",
                "bttsToken.disableMinting()"
            ],
            "block11261_12": [
                "presaleToken.totalSupply()"
            ],
            "block11261_11": [
                "presaleToken.totalSupply()"
            ],
            "block11261_10": [
                "presaleToken.totalSupply()"
            ],
            "block10587": [
                "bttsToken.mint(account, eveAmount, false)"
            ],
            "block8915": [
                "vestingTeamWallet.finalise()"
            ],
            "jump11261_3": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_2": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_5": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_4": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_7": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_6": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_8": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "block1514": [
                "picopsCertifier.certified(msg.sender)"
            ],
            "block9710": [
                "bttsToken.balanceOf(account)"
            ],
            "block8563": [
                "bttsToken.mint(reserveWallet, amountReserve, false)"
            ],
            "jump11261_1": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump2224": [
                "bttsToken.mint(msg.sender, eveAmount, false)",
                "bttsToken.mint(msg.sender, eveAmount, false)"
            ],
            "block11261_0": [
                "presaleToken.totalSupply()"
            ],
            "block2621": [
                "msg.sender.transfer(ethRefund)"
            ],
            "jump1059_0": [
                "picopsCertifier.certified(msg.sender)",
                "picopsCertifier.certified(msg.sender)"
            ],
            "jump11261_0": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "block8259": [
                "bttsToken.mint(address(vestingTeamWallet), amountTeam, false)"
            ],
            "jump8259": [
                "bttsToken.mint(address(vestingTeamWallet), amountTeam, false)",
                "bttsToken.mint(address(vestingTeamWallet), amountTeam, false)"
            ],
            "block11261_6": [
                "presaleToken.totalSupply()"
            ],
            "jump1059": [
                "picopsCertifier.certified(msg.sender)",
                "picopsCertifier.certified(msg.sender)"
            ],
            "jump11261_11": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_10": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump11261_12": [
                "presaleToken.totalSupply()",
                "presaleToken.totalSupply()"
            ],
            "jump1514_0": [
                "picopsCertifier.certified(msg.sender)",
                "picopsCertifier.certified(msg.sender)"
            ],
            "block2294_0": [
                "wallet.transfer(ethAmount)"
            ],
            "jump8563": [
                "bttsToken.mint(reserveWallet, amountReserve, false)",
                "bttsToken.mint(reserveWallet, amountReserve, false)"
            ],
            "jump9460": [
                "presaleToken.balanceOf(account)",
                "presaleToken.balanceOf(account)"
            ],
            "jump9710": [
                "bttsToken.balanceOf(account)",
                "bttsToken.balanceOf(account)"
            ],
            "block2224": [
                "bttsToken.mint(msg.sender, eveAmount, false)"
            ],
            "jump8915": [
                "vestingTeamWallet.finalise()",
                "vestingTeamWallet.finalise()"
            ],
            "jump2621_0": [
                "msg.sender.transfer(ethRefund)",
                "msg.sender.transfer(ethRefund)"
            ]
        }
    }
}