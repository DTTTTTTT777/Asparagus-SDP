{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ICO": {
        "function_list": [
            "ICO(string,token,uint256)",
            "contribute()",
            "checkIfFundingCompleteOrExpired()",
            "payOut()",
            "finished()",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "ICO(string,token,uint256)": {
                "argument": {
                    "_campaignUrl": "string",
                    "_delay": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "delay": "uint256",
                    "tablePrices": "uint256[2]",
                    "SoftCap": "uint256",
                    "HardCap": "uint256",
                    "totalRaised": "uint256",
                    "totalDistributed": "uint256",
                    "ICOdeadline": "uint256",
                    "completedAt": "uint256",
                    "closedAt": "uint256",
                    "campaignUrl": "string",
                    "version": "uint8"
                }
            },
            "contribute()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "delay": "uint256",
                    "tablePrices": "uint256[2]",
                    "SoftCap": "uint256",
                    "HardCap": "uint256",
                    "totalRaised": "uint256",
                    "totalDistributed": "uint256",
                    "ICOdeadline": "uint256",
                    "completedAt": "uint256",
                    "closedAt": "uint256",
                    "campaignUrl": "string",
                    "version": "uint8"
                }
            },
            "checkIfFundingCompleteOrExpired()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "delay": "uint256",
                    "tablePrices": "uint256[2]",
                    "SoftCap": "uint256",
                    "HardCap": "uint256",
                    "totalRaised": "uint256",
                    "totalDistributed": "uint256",
                    "ICOdeadline": "uint256",
                    "completedAt": "uint256",
                    "closedAt": "uint256",
                    "campaignUrl": "string",
                    "version": "uint8"
                }
            },
            "payOut()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "delay": "uint256",
                    "tablePrices": "uint256[2]",
                    "SoftCap": "uint256",
                    "HardCap": "uint256",
                    "totalRaised": "uint256",
                    "totalDistributed": "uint256",
                    "ICOdeadline": "uint256",
                    "completedAt": "uint256",
                    "closedAt": "uint256",
                    "campaignUrl": "string",
                    "version": "uint8"
                }
            },
            "finished()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "delay": "uint256",
                    "tablePrices": "uint256[2]",
                    "SoftCap": "uint256",
                    "HardCap": "uint256",
                    "totalRaised": "uint256",
                    "totalDistributed": "uint256",
                    "ICOdeadline": "uint256",
                    "completedAt": "uint256",
                    "closedAt": "uint256",
                    "campaignUrl": "string",
                    "version": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "delay": "uint256",
                    "tablePrices": "uint256[2]",
                    "SoftCap": "uint256",
                    "HardCap": "uint256",
                    "totalRaised": "uint256",
                    "totalDistributed": "uint256",
                    "ICOdeadline": "uint256",
                    "completedAt": "uint256",
                    "closedAt": "uint256",
                    "campaignUrl": "string",
                    "version": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "delay": "uint256",
                    "tablePrices": "uint256[2]",
                    "SoftCap": "uint256",
                    "HardCap": "uint256",
                    "totalRaised": "uint256",
                    "totalDistributed": "uint256",
                    "ICOdeadline": "uint256",
                    "completedAt": "uint256",
                    "closedAt": "uint256",
                    "campaignUrl": "string",
                    "version": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "contribute()": [
                1026,
                405
            ],
            "finished()": [
                880,
                317
            ],
            "payOut()": [
                960,
                361
            ],
            "checkIfFundingCompleteOrExpired()": [
                771,
                251
            ]
        },
        "block_CALL_mapping": {
            "block3366_0": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3813": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "block1689": [
                "tokenReward.transfer(msg.sender, tokenBought)"
            ],
            "block2995_7": [
                "beneficiary.send(this.balance)"
            ],
            "block2953_2": [
                "tokenReward.balanceOf(this)"
            ],
            "block2953_3": [
                "tokenReward.balanceOf(this)"
            ],
            "block2953_0": [
                "tokenReward.balanceOf(this)"
            ],
            "block2953_1": [
                "tokenReward.balanceOf(this)"
            ],
            "block2953_6": [
                "tokenReward.balanceOf(this)"
            ],
            "block2953_7": [
                "tokenReward.balanceOf(this)"
            ],
            "block2953_4": [
                "tokenReward.balanceOf(this)"
            ],
            "block2953_5": [
                "tokenReward.balanceOf(this)"
            ],
            "jump3366_1": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3366_0": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3366_3": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3366_2": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3366_5": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3366_4": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3366_7": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump3366_6": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "block3366_7": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "block3366_3": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump2995_4": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "jump3366": [
                "tokenReward.transfer(beneficiary,remanent)",
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "block3366": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "block2995": [
                "beneficiary.send(this.balance)"
            ],
            "block3366_6": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump1689": [
                "tokenReward.transfer(msg.sender, tokenBought)",
                "tokenReward.transfer(msg.sender, tokenBought)"
            ],
            "block3366_2": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "block3366_1": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "jump2995_5": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "block1689_1": [
                "tokenReward.transfer(msg.sender, tokenBought)"
            ],
            "block1689_0": [
                "tokenReward.transfer(msg.sender, tokenBought)"
            ],
            "block3366_5": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "block3366_4": [
                "tokenReward.transfer(beneficiary,remanent)"
            ],
            "block3813": [
                "beneficiary.send(this.balance)"
            ],
            "jump2953": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "block2995_4": [
                "beneficiary.send(this.balance)"
            ],
            "block2995_5": [
                "beneficiary.send(this.balance)"
            ],
            "block2995_6": [
                "beneficiary.send(this.balance)"
            ],
            "jump2995_1": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "block2995_0": [
                "beneficiary.send(this.balance)"
            ],
            "block2995_1": [
                "beneficiary.send(this.balance)"
            ],
            "block2995_2": [
                "beneficiary.send(this.balance)"
            ],
            "block2995_3": [
                "beneficiary.send(this.balance)"
            ],
            "jump2995_7": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "jump2953_4": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2953_5": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2953_6": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2953_7": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2953_0": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2953_1": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2953_2": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2953_3": [
                "tokenReward.balanceOf(this)",
                "tokenReward.balanceOf(this)"
            ],
            "jump2995_2": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "jump2995_3": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "jump2995_0": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "jump1689_0": [
                "tokenReward.transfer(msg.sender, tokenBought)",
                "tokenReward.transfer(msg.sender, tokenBought)"
            ],
            "jump2995_6": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "jump2995": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "jump1689_1": [
                "tokenReward.transfer(msg.sender, tokenBought)",
                "tokenReward.transfer(msg.sender, tokenBought)"
            ],
            "block2953": [
                "tokenReward.balanceOf(this)"
            ]
        }
    }
}