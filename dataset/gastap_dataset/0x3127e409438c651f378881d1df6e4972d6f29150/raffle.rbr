block0(g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize)=>
	lt(s(1), s(0))
	call(block87())

jump0(s(1), s(0), g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize)=>
	geq(s(1), s(0))
	call(block13(g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, caller, callvalue, returndatasize))

block13(g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, caller, callvalue, returndatasize)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1103159733
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block92(s(0),g(creatorAddress), caller, callvalue))

jump13(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(creatorAddress), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), calldataload, caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block65(s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump65(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block115(s(0), callvalue))

jump65(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block76(s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block65(s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3000348228
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3357120550
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block138(s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump76(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block87_0(s(0)))

block87()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block92(s(0), g(creatorAddress), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump92(s(2),s(1),s(0),g(creatorAddress), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump92(s(2), s(1), s(0), g(creatorAddress), caller, callvalue)=>
	eq(s(2), 0)
	call(block104(s(1), s(0),g(creatorAddress), caller))

jump92(s(2), s(1), s(0), g(creatorAddress), caller, callvalue)=>
	neq(s(2), 0)
	call(block100(s(1), s(0)))

block100(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block104(s(1), s(0), g(creatorAddress), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 113
	nop(PUSH2)
	s(2) = 148
	nop(PUSH2)
	call(block148(s(1),s(0),g(creatorAddress), caller))
	nop(JUMP)

block113(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump115(s(2), s(1), s(0), callvalue)=>
	eq(s(2), 0)
	call(block127(s(1), s(0)))

jump115(s(2), s(1), s(0), callvalue)=>
	neq(s(2), 0)
	call(block123(s(1), s(0)))

block115(s(0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump115(s(2),s(1),s(0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block123(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block127(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 136
	nop(PUSH2)
	s(2) = 295
	nop(PUSH2)
	call(block295(s(1),s(0)))
	nop(JUMP)

block136(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block138(s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 146
	nop(PUSH2)
	s(2) = 297
	nop(PUSH2)
	call(block297(s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block146(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump148(s(3), s(2), s(1), s(0), g(creatorAddress), caller)=>
	neq(s(3), s(2))
	call(block293(s(1), s(0)))

jump148(s(3), s(2), s(1), s(0), g(creatorAddress), caller)=>
	eq(s(3), s(2))
	call(block235(s(1), s(0),g(creatorAddress)))

block148(s(1), s(0), g(creatorAddress), caller)=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(creatorAddress)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump148(s(3),s(2),s(1),s(0),g(creatorAddress), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block235(s(1), s(0), g(creatorAddress))=>
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(creatorAddress)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	nop(SUICIDE)

block293(s(1), s(0))=>
	nop(JUMPDEST)
	call(block113(s(0)))
	nop(JUMP)

block295(s(1), s(0))=>
	nop(JUMPDEST)
	call(block136(s(0)))
	nop(JUMP)

block297(s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block303(s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))

block303(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(pricePerTicket)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(3) = lt(s(4), s(3))
	nop(LT)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump303(s(4),s(3),s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump303(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block325(s(3), s(2), s(1), s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))

jump303(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block316(s(3), s(2), s(1), s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))

block316(s(3), s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(3) = g(totalTickets)
	nop(SLOAD)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(nextTicket)
	nop(SLOAD)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block325(s(3),s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))

jump325(s(3), s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(3), 0)
	call(block444(s(2), s(1), s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))

jump325(s(3), s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(3), 0)
	call(block331(s(2), s(1), s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))

block325(s(3), s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	call(jump325(s(3),s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block331(s(2), s(1), s(0), g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(3) = caller
	nop(CALLER)
	s(4) = 7
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 6
	nop(PUSH1)
	s(6) = g(nextTicket)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(pricePerTicket)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 6
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(nextTicket)
	nop(SLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	g(nextTicket) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 303
	nop(PUSH2)
	call(block303(s(2),s(1),s(0),g(nextTicket), g(pricePerTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block444(s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump444(s(4),s(3),s(2),s(1),s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump444(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(4), s(3))
	call(block525(s(2), s(1), s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize))

jump444(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(4), s(3))
	call(block454(s(2), s(1), s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))

block454(s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump454(s(4),s(3),s(2),s(1),s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump454(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block523(s(3), s(2), s(1), s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize))

jump454(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block514(s(3), s(2), s(1), s(0), returndatasize))

block514(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block523(s(3), s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	call(block525(s(2),s(1),s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize))

block525(s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(3) = g(totalTickets)
	nop(SLOAD)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(nextTicket)
	nop(SLOAD)
	call(jump525(s(4),s(3),s(2),s(1),s(0),g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump525(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	leq(s(4), s(3))
	call(block546(s(2), s(1), s(0)))

jump525(s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(totalTickets), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	gt(s(4), s(3))
	call(block538(s(2), s(1), s(0),g(nextTicket), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize))

block538(s(2), s(1), s(0), g(nextTicket), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	s(3) = 545
	nop(PUSH2)
	s(4) = 549
	nop(PUSH2)
	call(block549(s(3),s(2),s(1),s(0),g(nextTicket), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize))
	nop(JUMP)

block545(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block546(s(2),s(1),s(0)))

block546(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block146(s(0)))
	nop(JUMP)

block549(s(3), s(2), s(1), s(0), g(nextTicket), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = 1
	nop(PUSH1)
	s(8) = g(prize)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump549(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nextTicket), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block682(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nextTicket), g(rake), g(rakeAddress), l(l0), returndatasize))

jump549(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(rake), g(prize), g(rakeAddress), l(l2), l(l1), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block673(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block673(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block682(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(rake), g(rakeAddress), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(rakeAddress)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = 2
	nop(PUSH1)
	s(8) = g(rake)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump682(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nextTicket), g(rake), g(rakeAddress), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump682(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(rake), g(rakeAddress), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block788(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nextTicket)))

jump682(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nextTicket), g(rake), g(rakeAddress), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block779(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block779(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block788(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nextTicket))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 797
	nop(PUSH2)
	s(7) = 801
	nop(PUSH2)
	call(block801(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nextTicket)))
	nop(JUMP)

block797(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block545(s(2),s(1),s(0)))
	nop(JUMP)

block801(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nextTicket))=>
	nop(JUMPDEST)
	s(7) = 1
	nop(PUSH1)
	s(8) = 6
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(nextTicket) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block797(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block87_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

