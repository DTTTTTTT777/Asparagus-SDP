{
    "SafeMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "parse(string)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "parse(string)": {
                "argument": {
                    "s": "string"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                481,
                119
            ],
            "allowance(address,address)": [
                1897,
                493
            ],
            "balanceOf(address)": [
                1140,
                317
            ],
            "transferFrom(address,address,uint256)": [
                672,
                185
            ],
            "transfer(address,uint256)": [
                1584,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "usingOraclize": {
        "function_list": [
            "oraclize_setNetwork(uint8)",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork(uint8)": {
                "argument": {
                    "networkID": "uint8"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string",
                    "proof": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            }
        },
        "function_block_mapping": {
            "__callback(bytes32,string,bytes)": [
                200,
                97
            ],
            "__callback(bytes32,string)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "EVNToken": {
        "function_list": [
            "oraclize_setNetwork(uint8)",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "EVNToken(uint256,uint256,uint256,uint256,uint256,address,address,address,uint256)",
            "__callback(bytes32,string)",
            "updatePrice()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "getBalanceOf(address)",
            "getPurchaseById(string)",
            "getHolderCount()",
            "getPurchaseCount()",
            "getHolder(uint256)",
            "trackHolder(address)",
            "createTokens()",
            "addToKycTeam(address)",
            "removeFromKycTeam(address)",
            "unlockKyc(address)",
            "refuseKyc(address)",
            "cancelDelivery(string)",
            "deliverTokens(address,uint256,string,bool)",
            "getCurrentDiscountRate()",
            "retrieveEth(uint256,address)",
            "finalize(address)",
            "pause()",
            "proceed()",
            "refund()",
            "deliverTeamTokens(address)",
            "safeMulPercentage(uint256,uint256)",
            "setOraclizeGas(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork(uint8)": {
                "argument": {
                    "networkID": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string",
                    "proof": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "EVNToken(uint256,uint256,uint256,uint256,uint256,address,address,address,uint256)": {
                "argument": {
                    "_fundingStartBlock": "uint256",
                    "_fundingEndBlock": "uint256",
                    "_roundTwoBlock": "uint256",
                    "_roundThreeBlock": "uint256",
                    "_roundFourBlock": "uint256",
                    "_ccReleaseBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "updatePrice()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "getBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "getPurchaseById(string)": {
                "argument": {
                    "_id": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "getHolderCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "getPurchaseCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "getHolder(uint256)": {
                "argument": {
                    "_index": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "trackHolder(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "addToKycTeam(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "removeFromKycTeam(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "unlockKyc(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "refuseKyc(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "cancelDelivery(string)": {
                "argument": {
                    "_purchaseID": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "deliverTokens(address,uint256,string,bool)": {
                "argument": {
                    "_tokens": "uint256",
                    "_purchaseId": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "getCurrentDiscountRate()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "retrieveEth(uint256,address)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "finalize(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "proceed()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "deliverTeamTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "safeMulPercentage(uint256,uint256)": {
                "argument": {
                    "value": "uint256",
                    "percentage": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "setOraclizeGas(uint256)": {
                "argument": {
                    "_option": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "TOKEN_CREATION_CAP": "uint256",
                    "TOKEN_CREATED_MIN": "uint256",
                    "ETH_RECEIVED_CAP": "uint256",
                    "ETH_RECEIVED_MIN": "uint256",
                    "TOKEN_MIN": "uint256",
                    "TOKEN_FIRST_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_SECOND_DISCOUNT_MULTIPLIER": "uint256",
                    "TOKEN_THIRD_DISCOUNT_MULTIPLIER": "uint256",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256",
                    "roundTwoBlock": "uint256",
                    "roundThreeBlock": "uint256",
                    "roundFourBlock": "uint256",
                    "ccReleaseBlock": "uint256",
                    "purchaseArray": "string[]",
                    "holders": "address[]",
                    "allReceivedEth": "uint256",
                    "allUnKycedEth": "uint256",
                    "ETH_USD_EXCHANGE_RATE_IN_CENTS": "uint256",
                    "oraclizeQueryCost": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "addToKycTeam(address)": [
                1139,
                163
            ],
            "finalize(address)": [
                2396,
                493
            ],
            "getHolderCount()": [
                2786,
                625
            ],
            "allowance(address,address)": [
                4527,
                1197
            ],
            "getPurchaseCount()": [
                3897,
                933
            ],
            "transferFrom(address,address,uint256)": [
                1537,
                295
            ],
            "cancelDelivery(string)": [
                2630,
                559
            ],
            "approve(address,uint256)": [
                1038,
                141
            ],
            "unlockKyc(address)": [
                4970,
                1351
            ],
            "createTokens()": [
                3721,
                889
            ],
            "__callback(bytes32,string,bytes)": [
                2051,
                427
            ],
            "deliverTeamTokens(address)": [
                3940,
                955
            ],
            "updatePrice()": [
                2689,
                581
            ],
            "pause()": [
                2872,
                669
            ],
            "getPurchaseById(string)": [
                3534,
                867
            ],
            "proceed()": [
                1898,
                361
            ],
            "setOraclizeGas(uint256)": [
                5080,
                1395
            ],
            "removeFromKycTeam(address)": [
                1470,
                273
            ],
            "balanceOf(address)": [
                2699,
                603
            ],
            "retrieveEth(uint256,address)": [
                730,
                75
            ],
            "refuseKyc(address)": [
                4150,
                1043
            ],
            "__callback(bytes32,string)": [
                1670,
                317
            ],
            "getBalanceOf(address)": [
                3125,
                757
            ],
            "getHolder(uint256)": [
                4732,
                1263
            ],
            "deliverTokens(address,uint256,string,bool)": [
                2283,
                471
            ],
            "refund()": [
                2607,
                537
            ],
            "transfer(address,uint256)": [
                3390,
                823
            ]
        },
        "block_CALL_mapping": {
            "block24060_0": [
                "oraclize.cbAddress()"
            ],
            "block24060_1": [
                "oraclize.cbAddress()"
            ],
            "jump13058": [
                "msg.sender.transfer(ethVal)",
                "msg.sender.transfer(ethVal)"
            ],
            "jump26083": [
                "oraclize.getPrice(datasource, gaslimit)",
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "jump25373_0": [
                "oraclize.getPrice(datasource)",
                "oraclize.getPrice(datasource)"
            ],
            "jump24060_0": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "jump24060_1": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "jump27929": [
                "oraclize.setCustomGasPrice(gasPrice)",
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "jump25004": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump25706_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block23803": [
                "OAR.getAddress()"
            ],
            "jump20111": [
                "_user.transfer(ethVal)",
                "_user.transfer(ethVal)"
            ],
            "jump24060": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "block11854": [
                "_safe.transfer(allReceivedEth)"
            ],
            "block25706_0": [
                "OAR.getAddress()"
            ],
            "block20111": [
                "_user.transfer(ethVal)"
            ],
            "block25373_0": [
                "oraclize.getPrice(datasource)"
            ],
            "jump11854": [
                "_safe.transfer(allReceivedEth)",
                "_safe.transfer(allReceivedEth)"
            ],
            "jump26083_0": [
                "oraclize.getPrice(datasource, gaslimit)",
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "block26547_0": [
                "oraclize.query_withGasLimit.value(price)(timestamp, datasource, arg, gaslimit)"
            ],
            "jump5754": [
                "_safe.transfer(_value)",
                "_safe.transfer(_value)"
            ],
            "block27661_2": [
                "OAR.getAddress()"
            ],
            "block26547": [
                "oraclize.query_withGasLimit.value(price)(timestamp, datasource, arg, gaslimit)"
            ],
            "jump27929_2": [
                "oraclize.setCustomGasPrice(gasPrice)",
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "jump27929_1": [
                "oraclize.setCustomGasPrice(gasPrice)",
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "jump25004_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump23803": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block27929": [
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "block26083_0": [
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "jump27661": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block25004": [
                "OAR.getAddress()"
            ],
            "jump25373": [
                "oraclize.getPrice(datasource)",
                "oraclize.getPrice(datasource)"
            ],
            "block27661": [
                "OAR.getAddress()"
            ],
            "block24060": [
                "oraclize.cbAddress()"
            ],
            "jump25706": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block25706": [
                "OAR.getAddress()"
            ],
            "block13058": [
                "msg.sender.transfer(ethVal)"
            ],
            "jump27661_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block25373": [
                "oraclize.getPrice(datasource)"
            ],
            "jump26547_0": [
                "oraclize.query_withGasLimit.value(price)(timestamp, datasource, arg, gaslimit)",
                "oraclize.query_withGasLimit.value(price)(timestamp, datasource, arg, gaslimit)"
            ],
            "block25004_0": [
                "OAR.getAddress()"
            ],
            "block27661_1": [
                "OAR.getAddress()"
            ],
            "block26083": [
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "jump27661_1": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump27661_2": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block27929_1": [
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "block27929_0": [
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "block27929_2": [
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "block23803_0": [
                "OAR.getAddress()"
            ],
            "block23803_1": [
                "OAR.getAddress()"
            ],
            "jump23803_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump23803_1": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block5754": [
                "_safe.transfer(_value)"
            ],
            "block27661_0": [
                "OAR.getAddress()"
            ],
            "jump26547": [
                "oraclize.query_withGasLimit.value(price)(timestamp, datasource, arg, gaslimit)",
                "oraclize.query_withGasLimit.value(price)(timestamp, datasource, arg, gaslimit)"
            ],
            "jump27929_0": [
                "oraclize.setCustomGasPrice(gasPrice)",
                "oraclize.setCustomGasPrice(gasPrice)"
            ]
        }
    }
}