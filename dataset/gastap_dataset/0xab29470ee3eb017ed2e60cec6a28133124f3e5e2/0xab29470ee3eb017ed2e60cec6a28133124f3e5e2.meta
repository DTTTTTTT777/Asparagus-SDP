{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "transfer(address,uint256)": [
                717,
                207
            ],
            "balanceOf(address)": [
                630,
                185
            ],
            "allowance(address,address)": [
                818,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                104,
                97
            ],
            "acceptOwnership()": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "patrons": "address[]",
                    "vips": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "patrons": "address[]",
                    "vips": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "patrons": "address[]",
                    "vips": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "patrons": "address[]",
                    "vips": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "patrons": "address[]",
                    "vips": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "LooksCoin": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "LooksCoin()",
            "name()",
            "symbol()",
            "setTokenSaleContract(address)",
            "getVIPRank(address)",
            "updateVIPRank(address)",
            "rewardTokens(address,uint256)",
            "spend(address,uint256)",
            "burnTokens(address,uint256)",
            "getVIPOwner(uint256)",
            "getVIPCount()",
            "getPatron(uint256)",
            "getPatronsCount()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "LooksCoin()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "setTokenSaleContract(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "getVIPRank(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "updateVIPRank(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "rewardTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "spend(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "getVIPOwner(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "getVIPCount()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "getPatron(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "getPatronsCount()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "VIP_MINIMUM": "uint256",
                    "INITIAL_TOKENS_COUNT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1074,
                273
            ],
            "setTokenSaleContract(address)": [
                920,
                229
            ],
            "name()": [
                312,
                75
            ],
            "allowance(address,address)": [
                1998,
                515
            ],
            "getVIPRank(address)": [
                1304,
                361
            ],
            "transferFrom(address,address,uint256)": [
                744,
                185
            ],
            "approve(address,uint256)": [
                456,
                97
            ],
            "burnTokens(address,uint256)": [
                557,
                119
            ],
            "symbol()": [
                1391,
                383
            ],
            "updateVIPRank(address)": [
                2184,
                559
            ],
            "spend(address,uint256)": [
                1636,
                427
            ],
            "getVIPOwner(uint256)": [
                1889,
                493
            ],
            "getPatronsCount()": [
                1846,
                471
            ],
            "transfer(address,uint256)": [
                1535,
                405
            ],
            "transferOwnership(address)": [
                2117,
                537
            ],
            "rewardTokens(address,uint256)": [
                1184,
                317
            ],
            "getVIPCount()": [
                1261,
                339
            ],
            "getPatron(uint256)": [
                1737,
                449
            ],
            "acceptOwnership()": [
                1161,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "LooksCoinCrowdSale": {
        "function_list": [
            "LooksCoinCrowdSale()",
            "setState(LooksCoinCrowdSale.State)",
            "setTokenContract(address)",
            "setMigrateTokenContract(address)",
            "setSaleController(address)",
            "setWallet(address)",
            "importTokens(address)",
            "fallback()",
            "buyTokens()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "LooksCoinCrowdSale()": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "setState(LooksCoinCrowdSale.State)": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "setTokenContract(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "setMigrateTokenContract(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "setSaleController(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "importTokens(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "importedTokens": "uint256",
                    "tokensSold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setSaleController(address)": [
                1090,
                383
            ],
            "importTokens(address)": [
                999,
                361
            ],
            "setWallet(address)": [
                932,
                339
            ],
            "setTokenContract(address)": [
                748,
                273
            ],
            "setMigrateTokenContract(address)": [
                681,
                251
            ],
            "buyTokens()": [
                902,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump1515_1": [
                "fundstorage.send(msg.value)",
                "fundstorage.send(msg.value)"
            ],
            "jump1515_0": [
                "fundstorage.send(msg.value)",
                "fundstorage.send(msg.value)"
            ],
            "jump1515": [
                "fundstorage.send(msg.value)",
                "fundstorage.send(msg.value)"
            ],
            "block1495_1": [
                "looksCoin.rewardTokens(msg.sender, tokens)"
            ],
            "block3157": [
                "preSaleToken.balanceOf(_account)"
            ],
            "block1515_0": [
                "fundstorage.send(msg.value)"
            ],
            "block1495_0": [
                "looksCoin.rewardTokens(msg.sender, tokens)"
            ],
            "jump3432": [
                "looksCoin.rewardTokens(_account, preSaleBalance)",
                "looksCoin.rewardTokens(_account, preSaleBalance)"
            ],
            "block1495": [
                "looksCoin.rewardTokens(msg.sender, tokens)"
            ],
            "block3432": [
                "looksCoin.rewardTokens(_account, preSaleBalance)"
            ],
            "block1515": [
                "fundstorage.send(msg.value)"
            ],
            "jump1495_0": [
                "looksCoin.rewardTokens(msg.sender, tokens)",
                "looksCoin.rewardTokens(msg.sender, tokens)"
            ],
            "jump1495_1": [
                "looksCoin.rewardTokens(msg.sender, tokens)",
                "looksCoin.rewardTokens(msg.sender, tokens)"
            ],
            "jump3157": [
                "preSaleToken.balanceOf(_account)",
                "preSaleToken.balanceOf(_account)"
            ],
            "jump1495": [
                "looksCoin.rewardTokens(msg.sender, tokens)",
                "looksCoin.rewardTokens(msg.sender, tokens)"
            ],
            "block1515_1": [
                "fundstorage.send(msg.value)"
            ]
        }
    }
}