{
    "SafeMath": {
        "function_list": [
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "allowance(address,address)": [
                1118,
                273
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "transfer(address,uint256)": [
                870,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "RoyalForkToken": {
        "function_list": [
            "DetailedERC20(string,string,uint8)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "recover(bytes32,bytes)",
            "newHodler(address,bytes16,uint64)",
            "setMinter(address)",
            "newPeriod()",
            "createHodler(address,bytes16,uint64)",
            "mint(address,uint64)",
            "create(bytes16,uint64,bytes)",
            "withdraw()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "approve(address,uint256)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transferFrom(address,address,uint256)",
            "RoyalForkToken()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "DetailedERC20(string,string,uint8)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "recover(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "newHodler(address,bytes16,uint64)": {
                "argument": {
                    "username": "bytes16",
                    "endowment": "uint64"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "setMinter(address)": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "newPeriod()": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "createHodler(address,bytes16,uint64)": {
                "argument": {
                    "username": "bytes16",
                    "amount": "uint64"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "mint(address,uint64)": {
                "argument": {
                    "amount": "uint64"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "create(bytes16,uint64,bytes)": {
                "argument": {
                    "username": "bytes16",
                    "endowment": "uint64",
                    "sig": "bytes"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "RoyalForkToken()": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "epoch": "uint256",
                    "currentPeriod": "uint16",
                    "numHodlers": "uint64",
                    "prevHodlers": "uint64",
                    "prevBalance": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                2147,
                515
            ],
            "decreaseApproval(address,uint256)": [
                1304,
                317
            ],
            "transferFrom(address,address,uint256)": [
                759,
                163
            ],
            "approve(address,uint256)": [
                615,
                119
            ],
            "setMinter(address)": [
                2504,
                603
            ],
            "increaseApproval(address,uint256)": [
                2046,
                493
            ],
            "balanceOf(address)": [
                1405,
                339
            ],
            "create(bytes16,uint64,bytes)": [
                2571,
                625
            ],
            "transferOwnership(address)": [
                2394,
                559
            ],
            "createHodler(address,bytes16,uint64)": [
                1492,
                361
            ],
            "newPeriod()": [
                1281,
                295
            ],
            "mint(address,uint64)": [
                892,
                185
            ],
            "transfer(address,uint256)": [
                1882,
                449
            ],
            "withdraw()": [
                1028,
                229
            ]
        },
        "block_CALL_mapping": {
            "block10420": [
                "ecrecover(hash, v, r, s)"
            ],
            "jump10420": [
                "ecrecover(hash, v, r, s)",
                "ecrecover(hash, v, r, s)"
            ],
            "block5260": [
                "msg.sender.send(payment)"
            ]
        }
    }
}