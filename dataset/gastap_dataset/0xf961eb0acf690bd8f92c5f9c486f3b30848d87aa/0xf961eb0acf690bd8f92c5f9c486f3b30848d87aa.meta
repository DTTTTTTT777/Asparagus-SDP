{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "allowance(address,address)": [
                1286,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                213,
                119
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addMintingFactory(address)",
            "exchangeTransfer(address,uint256)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "addMintingFactory(address)": {
                "argument": {},
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            },
            "exchangeTransfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "mintingFactories": "address[]",
                    "numFactories": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "SphereTokenFactory": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "SphereTokenFactory()",
            "mint(address,uint256)",
            "setExchange(address)",
            "setDAO(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "SphereTokenFactory()": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "setExchange(address)": {
                "argument": {},
                "contract": {}
            },
            "setDAO(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setDAO(address)": [
                740,
                251
            ],
            "mint(address,uint256)": [
                245,
                97
            ],
            "setExchange(address)": [
                322,
                119
            ],
            "changeOwner(address)": [
                586,
                207
            ],
            "acceptOwnership()": [
                389,
                141
            ]
        },
        "block_CALL_mapping": {
            "block1224": [
                "sphereToken.mintTokens(address(this), amount)"
            ],
            "jump1445": [
                "sphereToken.exchangeTransfer(target, amount)",
                "sphereToken.exchangeTransfer(target, amount)"
            ],
            "jump1224": [
                "sphereToken.mintTokens(address(this), amount)",
                "sphereToken.mintTokens(address(this), amount)"
            ],
            "block1445": [
                "sphereToken.exchangeTransfer(target, amount)"
            ]
        }
    }
}