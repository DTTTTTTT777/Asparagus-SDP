{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "CoinDashBuyer": {
        "function_list": [
            "set_addresses(address,address)",
            "activate_kill_switch(string)",
            "withdraw(address,bool)",
            "auto_withdraw(address)",
            "add_to_bounty()",
            "claim_bounty()",
            "default_helper()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "set_addresses(address,address)": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            },
            "activate_kill_switch(string)": {
                "argument": {
                    "password": "string"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            },
            "withdraw(address,bool)": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            },
            "auto_withdraw(address)": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            },
            "add_to_bounty()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            },
            "claim_bounty()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            },
            "default_helper()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "tokens_per_eth": "uint256",
                    "password_hash": "bytes32",
                    "earliest_buy_time": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claim_bounty()": [
                207,
                75
            ],
            "add_to_bounty()": [
                426,
                163
            ],
            "set_addresses(address,address)": [
                317,
                119
            ],
            "activate_kill_switch(string)": [
                770,
                317
            ],
            "default_helper()": [
                416,
                141
            ],
            "auto_withdraw(address)": [
                703,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump2424": [
                "user.transfer(eth_to_withdraw)",
                "user.transfer(eth_to_withdraw)"
            ],
            "jump3025_1": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump2424_2": [
                "user.transfer(eth_to_withdraw)",
                "user.transfer(eth_to_withdraw)"
            ],
            "jump2424_1": [
                "user.transfer(eth_to_withdraw)",
                "user.transfer(eth_to_withdraw)"
            ],
            "jump3025_2": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "block3025": [
                "token.transfer(developer, fee)"
            ],
            "block3025_0": [
                "token.transfer(developer, fee)"
            ],
            "jump3295": [
                "token.transfer(user, tokens_to_withdraw - fee)",
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "block3295": [
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "jump1412": [
                "msg.sender.transfer(bounty)",
                "msg.sender.transfer(bounty)"
            ],
            "block3025_2": [
                "token.transfer(developer, fee)"
            ],
            "block3025_1": [
                "token.transfer(developer, fee)"
            ],
            "jump2424_0": [
                "user.transfer(eth_to_withdraw)",
                "user.transfer(eth_to_withdraw)"
            ],
            "jump3295_2": [
                "token.transfer(user, tokens_to_withdraw - fee)",
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "jump3295_0": [
                "token.transfer(user, tokens_to_withdraw - fee)",
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "jump3295_1": [
                "token.transfer(user, tokens_to_withdraw - fee)",
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "block3295_0": [
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "block3295_1": [
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "block3295_2": [
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "jump3025": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump3025_0": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "block1262": [
                "sale.call.value(this.balance - bounty)()"
            ],
            "jump1262": [
                "sale.call.value(this.balance - bounty)()",
                "sale.call.value(this.balance - bounty)()"
            ],
            "block2424_1": [
                "user.transfer(eth_to_withdraw)"
            ],
            "block2424_0": [
                "user.transfer(eth_to_withdraw)"
            ],
            "block2424": [
                "user.transfer(eth_to_withdraw)"
            ],
            "block2424_2": [
                "user.transfer(eth_to_withdraw)"
            ],
            "block1412": [
                "msg.sender.transfer(bounty)"
            ]
        }
    }
}