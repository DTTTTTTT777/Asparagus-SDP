{
    "PlaykeyICO": {
        "function_list": [
            "PlaykeyICO(address)",
            "fallback()",
            "buyFor(address)",
            "getPresaleTotal(uint256)",
            "getTotal(uint256)",
            "getBonus(uint256,uint256)",
            "mintForEarlyInvestors(address[],uint256[])",
            "mintFor(address,uint256)",
            "withdrawEther(uint256)",
            "withdrawToken(address,uint256)",
            "withdrawTokenFromPkt(address,uint256)",
            "startIco()",
            "pauseIco()",
            "finishIco(address,address,address,address)",
            "mintPresaleTokens(address,uint256)",
            "calcPresaleDiscount(uint256,uint256)",
            "min(uint256,uint256)",
            "buy(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PlaykeyICO(address)": {
                "argument": {},
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "buyFor(address)": {
                "argument": {},
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "getPresaleTotal(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "getTotal(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "getBonus(uint256,uint256)": {
                "argument": {
                    "_pktValue": "uint256",
                    "_sold": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "mintForEarlyInvestors(address[],uint256[])": {
                "argument": {
                    "_investors": "address[]",
                    "_values": "uint256[]"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "mintFor(address,uint256)": {
                "argument": {
                    "_pktValue": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "withdrawEther(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "withdrawToken(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "withdrawTokenFromPkt(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "startIco()": {
                "argument": {},
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "pauseIco()": {
                "argument": {},
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "finishIco(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "mintPresaleTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "calcPresaleDiscount(uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_percent": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "buy(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "tokensPerEth": "uint256",
                    "tokenLimit": "uint256",
                    "tokensForSale": "uint256",
                    "presaleSold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishIco(address,address,address,address)": [
                1341,
                471
            ],
            "withdrawEther(uint256)": [
                447,
                141
            ],
            "buyFor(address)": [
                635,
                229
            ],
            "getBonus(uint256,uint256)": [
                799,
                295
            ],
            "startIco()": [
                776,
                273
            ],
            "pauseIco()": [
                1198,
                405
            ],
            "mintFor(address,uint256)": [
                1264,
                449
            ],
            "getPresaleTotal(uint256)": [
                274,
                75
            ],
            "getTotal(uint256)": [
                382,
                119
            ],
            "mintForEarlyInvestors(address[],uint256[])": [
                951,
                339
            ],
            "withdrawToken(address,uint256)": [
                874,
                317
            ],
            "withdrawTokenFromPkt(address,uint256)": [
                1034,
                361
            ]
        },
        "block_CALL_mapping": {
            "jump1950_2": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "block3161": [
                "_token.transfer(team, _value)"
            ],
            "jump1950_0": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "block5851": [
                "pkt.mint(_advisors, _teamFund * 1500 / _den)"
            ],
            "block4693": [
                "pkt.mint(_investor, _pktValue)"
            ],
            "jump5090": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "jump1950_1": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "block1950_1": [
                "pkt.totalSupply()"
            ],
            "block1950_0": [
                "pkt.totalSupply()"
            ],
            "jump4423": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "block1950_2": [
                "pkt.totalSupply()"
            ],
            "jump7575": [
                "pkt.mint(_investor, _pktValue)",
                "pkt.mint(_investor, _pktValue)"
            ],
            "jump5615": [
                "pkt.mint(_foundation, _teamFund * 3125 / _den)",
                "pkt.mint(_foundation, _teamFund * 3125 / _den)"
            ],
            "block3821": [
                "pkt.withdrawToken(_tokenContract, team, _value)"
            ],
            "block5615": [
                "pkt.mint(_foundation, _teamFund * 3125 / _den)"
            ],
            "block1950": [
                "pkt.totalSupply()"
            ],
            "jump6089": [
                "pkt.mint(_bounty, _teamFund - _teamFund * 9625 / _den)",
                "pkt.mint(_bounty, _teamFund - _teamFund * 9625 / _den)"
            ],
            "block6979": [
                "pkt.mint(_investor, _total)"
            ],
            "jump5851": [
                "pkt.mint(_advisors, _teamFund * 1500 / _den)",
                "pkt.mint(_advisors, _teamFund * 1500 / _den)"
            ],
            "jump6247": [
                "pkt.defrost()",
                "pkt.defrost()"
            ],
            "jump3821": [
                "pkt.withdrawToken(_tokenContract, team, _value)",
                "pkt.withdrawToken(_tokenContract, team, _value)"
            ],
            "block2121": [
                "team.transfer(_value)"
            ],
            "jump6979": [
                "pkt.mint(_investor, _total)",
                "pkt.mint(_investor, _total)"
            ],
            "block7575": [
                "pkt.mint(_investor, _pktValue)"
            ],
            "block6247": [
                "pkt.defrost()"
            ],
            "jump1950": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "block7305": [
                "pkt.totalSupply()"
            ],
            "block6979_0": [
                "pkt.mint(_investor, _total)"
            ],
            "block6979_1": [
                "pkt.mint(_investor, _total)"
            ],
            "jump6709": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "jump6979_0": [
                "pkt.mint(_investor, _total)",
                "pkt.mint(_investor, _total)"
            ],
            "jump5379": [
                "pkt.mint(_team, _teamFund * 5000 / _den)",
                "pkt.mint(_team, _teamFund * 5000 / _den)"
            ],
            "jump6979_1": [
                "pkt.mint(_investor, _total)",
                "pkt.mint(_investor, _total)"
            ],
            "block5090": [
                "pkt.totalSupply()"
            ],
            "jump3161": [
                "_token.transfer(team, _value)",
                "_token.transfer(team, _value)"
            ],
            "jump2121": [
                "team.transfer(_value)",
                "team.transfer(_value)"
            ],
            "jump4693": [
                "pkt.mint(_investor, _pktValue)",
                "pkt.mint(_investor, _pktValue)"
            ],
            "block5379": [
                "pkt.mint(_team, _teamFund * 5000 / _den)"
            ],
            "jump7305": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "block6709_1": [
                "pkt.totalSupply()"
            ],
            "block6709_0": [
                "pkt.totalSupply()"
            ],
            "block6709": [
                "pkt.totalSupply()"
            ],
            "block4423": [
                "pkt.totalSupply()"
            ],
            "block6089": [
                "pkt.mint(_bounty, _teamFund - _teamFund * 9625 / _den)"
            ],
            "jump6709_1": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ],
            "jump6709_0": [
                "pkt.totalSupply()",
                "pkt.totalSupply()"
            ]
        }
    },
    "Math": {
        "function_list": [
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "PKT": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "PKT(address,uint256)",
            "mint(address,uint256)",
            "defrost()",
            "withdrawToken(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "PKT(address,uint256)": {
                "argument": {
                    "_tokenLimit": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "defrost()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "withdrawToken(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenLimit": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                499,
                119
            ],
            "defrost()": [
                1732,
                427
            ],
            "withdrawToken(address,address,uint256)": [
                246,
                75
            ],
            "increaseApproval(address,uint256)": [
                1512,
                383
            ],
            "mint(address,uint256)": [
                825,
                207
            ],
            "balanceOf(address)": [
                1133,
                295
            ],
            "decreaseApproval(address,uint256)": [
                1032,
                273
            ],
            "transfer(address,uint256)": [
                1364,
                339
            ],
            "allowance(address,address)": [
                1613,
                405
            ],
            "transferFrom(address,address,uint256)": [
                643,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2015": [
                "_token.transfer(where, _value)",
                "_token.transfer(where, _value)"
            ],
            "block2015": [
                "_token.transfer(where, _value)"
            ]
        }
    }
}