{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "IsFreezedAccount(address)",
            "Token()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "FreezeAccount(address,bool)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "IsFreezedAccount(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "FreezeAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "FreezeAccount(address,bool)": [
                1273,
                317
            ],
            "totalSupply()": [
                447,
                119
            ],
            "allowance(address,address)": [
                1352,
                339
            ],
            "balanceOf(address)": [
                763,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "IsFreezedAccount(address)": [
                623,
                163
            ],
            "transfer(address,uint256)": [
                1081,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "LinkerCoin": {
        "function_list": [
            "IsFreezedAccount(address)",
            "Token()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "FreezeAccount(address,bool)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "LinkerCoin()",
            "burn(uint256)",
            "setBurnStart(bool)",
            "setPrices(uint256,uint256,uint256,uint256)",
            "setLpMaxVolume(uint256)",
            "setEdgePerPosition(uint256)",
            "setLPTargetPostion(uint256)",
            "setLpFee(uint256)",
            "setLpIsStart(bool)",
            "getLpBidPrice()",
            "getLpAskPrice()",
            "getLpIsWorking(int256)",
            "getAmountOfLinkerBuy(uint256)",
            "getAmountOfEtherSell(uint256)",
            "fallback()",
            "buy()",
            "sell(uint256)",
            "transferEther(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "IsFreezedAccount(address)": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "FreezeAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "LinkerCoin()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "setBurnStart(bool)": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "setPrices(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_lpBidPrice": "uint256",
                    "_lpAskPrice": "uint256",
                    "_lpBidVolume": "uint256",
                    "_lpAskVolume": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "setLpMaxVolume(uint256)": {
                "argument": {
                    "_lpMaxVolume": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "setEdgePerPosition(uint256)": {
                "argument": {
                    "_edgePerPosition": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "setLPTargetPostion(uint256)": {
                "argument": {
                    "_lpTargetPosition": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "setLpFee(uint256)": {
                "argument": {
                    "_lpFeeBp": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "setLpIsStart(bool)": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "getLpBidPrice()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "getLpAskPrice()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "getLpIsWorking(int256)": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "getAmountOfLinkerBuy(uint256)": {
                "argument": {
                    "etherAmountOfSell": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "getAmountOfEtherSell(uint256)": {
                "argument": {
                    "linkerAmountOfBuy": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "transferEther(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "decimalOfPrice": "uint8",
                    "multiplierOfPrice": "uint256",
                    "multiplier": "uint256",
                    "lpAskPrice": "uint256",
                    "lpBidPrice": "uint256",
                    "lpAskVolume": "uint256",
                    "lpBidVolume": "uint256",
                    "lpMaxVolume": "uint256",
                    "edgePerPosition": "uint256",
                    "lpTargetPosition": "uint256",
                    "lpFeeBp": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setLPTargetPostion(uint256)": [
                1646,
                449
            ],
            "getAmountOfLinkerBuy(uint256)": [
                1074,
                229
            ],
            "setLpIsStart(bool)": [
                1554,
                405
            ],
            "totalSupply()": [
                812,
                141
            ],
            "buy()": [
                2250,
                647
            ],
            "allowance(address,address)": [
                2802,
                845
            ],
            "transferFrom(address,address,uint256)": [
                941,
                207
            ],
            "FreezeAccount(address,bool)": [
                2562,
                757
            ],
            "setPrices(uint256,uint256,uint256,uint256)": [
                2727,
                823
            ],
            "approve(address,uint256)": [
                662,
                97
            ],
            "getLpBidPrice()": [
                2684,
                801
            ],
            "getLpAskPrice()": [
                2921,
                867
            ],
            "sell(uint256)": [
                2964,
                889
            ],
            "getLpIsWorking(int256)": [
                1230,
                273
            ],
            "getAmountOfEtherSell(uint256)": [
                1691,
                471
            ],
            "transferEther(uint256)": [
                1843,
                515
            ],
            "balanceOf(address)": [
                1756,
                493
            ],
            "IsFreezedAccount(address)": [
                1139,
                251
            ],
            "setBurnStart(bool)": [
                2472,
                713
            ],
            "setLpFee(uint256)": [
                1931,
                559
            ],
            "setLpMaxVolume(uint256)": [
                1601,
                427
            ],
            "burn(uint256)": [
                1485,
                383
            ],
            "transfer(address,uint256)": [
                2280,
                669
            ],
            "setEdgePerPosition(uint256)": [
                3115,
                955
            ]
        },
        "block_CALL_mapping": {
            "jump6253": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block6253": [
                "msg.sender.transfer(amount)"
            ],
            "block9822": [
                "msg.sender.transfer(linkerSendAmount)"
            ],
            "jump9822": [
                "msg.sender.transfer(linkerSendAmount)",
                "msg.sender.transfer(linkerSendAmount)"
            ]
        }
    }
}