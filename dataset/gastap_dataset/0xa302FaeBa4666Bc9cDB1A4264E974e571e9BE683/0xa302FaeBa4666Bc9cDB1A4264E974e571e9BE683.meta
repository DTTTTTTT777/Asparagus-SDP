{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                302,
                97
            ],
            "balanceOf(address)": [
                622,
                185
            ],
            "transferFrom(address,address,uint256)": [
                446,
                141
            ],
            "allowance(address,address)": [
                954,
                251
            ],
            "transfer(address,uint256)": [
                853,
                229
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "isToken()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isToken()": {
                "argument": {},
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                158,
                75
            ],
            "subApproval(address,uint256)": [
                843,
                229
            ],
            "balanceOf(address)": [
                435,
                141
            ],
            "addApproval(address,uint256)": [
                623,
                185
            ],
            "allowance(address,address)": [
                724,
                207
            ],
            "transferFrom(address,address,uint256)": [
                302,
                119
            ],
            "transfer(address,uint256)": [
                522,
                163
            ],
            "isToken()": [
                944,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "ReleasableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "isToken()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "isToken()": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                325,
                97
            ],
            "setTransferAgent(address,bool)": [
                246,
                75
            ],
            "releaseTokenTransfer()": [
                669,
                185
            ],
            "subApproval(address,uint256)": [
                1412,
                383
            ],
            "isToken()": [
                1513,
                405
            ],
            "balanceOf(address)": [
                692,
                207
            ],
            "addApproval(address,uint256)": [
                1105,
                317
            ],
            "transferFrom(address,address,uint256)": [
                469,
                141
            ],
            "setReleaseAgent(address)": [
                602,
                163
            ],
            "allowance(address,address)": [
                1293,
                361
            ],
            "transfer(address,uint256)": [
                1004,
                295
            ],
            "transferOwnership(address)": [
                1560,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "isToken()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "MintableToken(uint256,address,bool)",
            "mint(address,uint256)",
            "mintInternal(address,uint256)",
            "setMintAgent(address,bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "isToken()": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "MintableToken(uint256,address,bool)": {
                "argument": {
                    "_initialSupply": "uint256"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "mintInternal(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "UpgradeableToken": {
        "function_list": [
            "isToken()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "changeUpgradeMaster(address)",
            "setUpgradeMaster(address)",
            "canUpgrade()"
        ],
        "initial_state": {
            "isToken()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "changeUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                523,
                141
            ],
            "approve(address,uint256)": [
                246,
                75
            ],
            "setUpgradeAgent(address)": [
                1178,
                339
            ],
            "subApproval(address,uint256)": [
                1364,
                383
            ],
            "isToken()": [
                1532,
                427
            ],
            "changeUpgradeMaster(address)": [
                1465,
                405
            ],
            "balanceOf(address)": [
                742,
                207
            ],
            "canUpgrade()": [
                886,
                251
            ],
            "addApproval(address,uint256)": [
                1034,
                295
            ],
            "allowance(address,address)": [
                1245,
                361
            ],
            "transferFrom(address,address,uint256)": [
                390,
                119
            ],
            "transfer(address,uint256)": [
                933,
                273
            ],
            "getUpgradeState()": [
                829,
                229
            ]
        },
        "block_CALL_mapping": {
            "block3161": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump4931": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block4931": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump5138": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block5138": [
                "upgradeAgent.originalSupply()"
            ],
            "jump3161": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ]
        }
    },
    "CrowdsaleToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "changeUpgradeMaster(address)",
            "setUpgradeMaster(address)",
            "canUpgrade()",
            "isToken()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "MintableToken(uint256,address,bool)",
            "mint(address,uint256)",
            "mintInternal(address,uint256)",
            "setMintAgent(address,bool)",
            "Ownable()",
            "transferOwnership(address)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "CrowdsaleToken(string,string,uint256,uint8,address,bool)",
            "releaseTokenTransfer()",
            "canUpgrade()",
            "setTokenInformation(string,string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "changeUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "isToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "MintableToken(uint256,address,bool)": {
                "argument": {
                    "_initialSupply": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "mintInternal(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "CrowdsaleToken(string,string,uint256,uint8,address,bool)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_initialSupply": "uint256",
                    "_decimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            },
            "setTokenInformation(string,string)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string"
                }
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                1253,
                295
            ],
            "upgrade(uint256)": [
                1332,
                317
            ],
            "setTransferAgent(address,bool)": [
                422,
                75
            ],
            "setTokenInformation(string,string)": [
                1377,
                339
            ],
            "allowance(address,address)": [
                2708,
                691
            ],
            "transferFrom(address,address,uint256)": [
                836,
                185
            ],
            "subApproval(address,uint256)": [
                2827,
                713
            ],
            "approve(address,uint256)": [
                692,
                141
            ],
            "changeUpgradeMaster(address)": [
                2928,
                735
            ],
            "isToken()": [
                2995,
                757
            ],
            "addApproval(address,uint256)": [
                2410,
                603
            ],
            "balanceOf(address)": [
                1749,
                427
            ],
            "setUpgradeAgent(address)": [
                2641,
                669
            ],
            "setReleaseAgent(address)": [
                969,
                207
            ],
            "transferOwnership(address)": [
                3042,
                779
            ],
            "releaseTokenTransfer()": [
                1639,
                383
            ],
            "mint(address,uint256)": [
                1085,
                251
            ],
            "canUpgrade()": [
                2262,
                559
            ],
            "transfer(address,uint256)": [
                2309,
                581
            ],
            "getUpgradeState()": [
                1836,
                449
            ]
        },
        "block_CALL_mapping": {
            "block5205": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "block7608": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump7608": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block7815": [
                "upgradeAgent.originalSupply()"
            ],
            "jump7815": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "jump5205": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(address,uint256,uint256,uint256)",
            "fallback()",
            "investInternal(address,uint128)",
            "preallocate(address,uint256,uint256)",
            "updateInvestorFunds(uint256,uint256,address,uint128)",
            "setFundingCap(uint256)",
            "buyWithCustomerId(uint128)",
            "buy()",
            "finalize()",
            "setRequireCustomerId(bool)",
            "setEarlyParticipantWhitelist(address,bool)",
            "setPricingStrategy(PricingStrategy)",
            "setCeilingStrategy(CeilingStrategy)",
            "setFinalizeAgent(FinalizeAgent)",
            "setMultisig(address)",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isFinalizerSane()",
            "getState()",
            "setOwnerTestValue(uint8)",
            "assignTokens(address,uint256)",
            "isCrowdsale()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "halt()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "Crowdsale(address,uint256,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "investInternal(address,uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "preallocate(address,uint256,uint256)": {
                "argument": {
                    "fullTokens": "uint256",
                    "weiPrice": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "updateInvestorFunds(uint256,uint256,address,uint128)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "weiAmount": "uint256",
                    "customerId": "uint128"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setFundingCap(uint256)": {
                "argument": {
                    "newCap": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "buyWithCustomerId(uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setEarlyParticipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setPricingStrategy(PricingStrategy)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setCeilingStrategy(CeilingStrategy)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setFinalizeAgent(FinalizeAgent)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "isFinalizerSane()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "setOwnerTestValue(uint8)": {
                "argument": {
                    "val": "uint8"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            },
            "isCrowdsale()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "weiFundingCap": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint8"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump489_0": [
                "tokenReward.transfer(msg.sender, amount / price)",
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "jump2005": [
                "beneficiary.send(amountRaised)",
                "beneficiary.send(amountRaised)"
            ],
            "block2005": [
                "beneficiary.send(amountRaised)"
            ],
            "jump1642": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "block489": [
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "block1642": [
                "msg.sender.send(amount)"
            ],
            "block489_0": [
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "jump489": [
                "tokenReward.transfer(msg.sender, amount / price)",
                "tokenReward.transfer(msg.sender, amount / price)"
            ]
        }
    },
    "PricingStrategy": {
        "function_list": [
            "isPricingStrategy()",
            "calculatePrice(uint256,uint256,uint256,address,uint256)"
        ],
        "initial_state": {
            "isPricingStrategy()": {
                "argument": {},
                "contract": {}
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256",
                    "decimals": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump769": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block769": [
                "owner.send(this.balance)"
            ]
        }
    },
    "FlatPricing": {
        "function_list": [
            "isPricingStrategy()",
            "calculatePrice(uint256,uint256,uint256,address,uint256)",
            "FlatPricing(uint256)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)"
        ],
        "initial_state": {
            "isPricingStrategy()": {
                "argument": {},
                "contract": {
                    "oneTokenInWei": "uint256"
                }
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "": "uint256",
                    "decimals": "uint256"
                },
                "contract": {
                    "oneTokenInWei": "uint256"
                }
            },
            "FlatPricing(uint256)": {
                "argument": {
                    "_oneTokenInWei": "uint256"
                },
                "contract": {
                    "oneTokenInWei": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "calculatePrice(uint256,uint256,uint256,address,uint256)": [
                139,
                97
            ],
            "isPricingStrategy()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "FixedCeiling": {
        "function_list": [
            "isCeilingStrategy()",
            "weiAllowedToReceive(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull(uint256,uint256)",
            "relaxFundingCap(uint256,uint256)",
            "FixedCeiling(uint256,uint256)",
            "weiAllowedToReceive(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull(uint256,uint256)",
            "relaxFundingCap(uint256,uint256)"
        ],
        "initial_state": {
            "isCeilingStrategy()": {
                "argument": {},
                "contract": {
                    "chunkedWeiMultiple": "uint256",
                    "weiLimitPerAddress": "uint256"
                }
            },
            "weiAllowedToReceive(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tentativeAmount": "uint256",
                    "weiRaised": "uint256",
                    "weiInvestedBySender": "uint256",
                    "weiFundingCap": "uint256"
                },
                "contract": {
                    "chunkedWeiMultiple": "uint256",
                    "weiLimitPerAddress": "uint256"
                }
            },
            "isCrowdsaleFull(uint256,uint256)": {
                "argument": {
                    "weiRaised": "uint256",
                    "weiFundingCap": "uint256"
                },
                "contract": {
                    "chunkedWeiMultiple": "uint256",
                    "weiLimitPerAddress": "uint256"
                }
            },
            "relaxFundingCap(uint256,uint256)": {
                "argument": {
                    "newCap": "uint256",
                    "weiRaised": "uint256"
                },
                "contract": {
                    "chunkedWeiMultiple": "uint256",
                    "weiLimitPerAddress": "uint256"
                }
            },
            "FixedCeiling(uint256,uint256)": {
                "argument": {
                    "multiple": "uint256",
                    "limit": "uint256"
                },
                "contract": {
                    "chunkedWeiMultiple": "uint256",
                    "weiLimitPerAddress": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "weiAllowedToReceive(uint256,uint256,uint256,uint256)": [
                258,
                141
            ],
            "isCeilingStrategy()": [
                211,
                119
            ],
            "isCrowdsaleFull(uint256,uint256)": [
                428,
                185
            ],
            "relaxFundingCap(uint256,uint256)": [
                353,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BonusFinalizeAgent": {
        "function_list": [
            "isFinalizeAgent()",
            "isSane(CrowdsaleToken)",
            "finalizeCrowdsale(CrowdsaleToken)",
            "BonusFinalizeAgent(Crowdsale,uint256,address)",
            "isSane(CrowdsaleToken)",
            "finalizeCrowdsale(CrowdsaleToken)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "isFinalizeAgent()": {
                "argument": {},
                "contract": {
                    "bonusBasePoints": "uint256",
                    "basePointsDivisor": "uint256",
                    "allocatedBonus": "uint256"
                }
            },
            "isSane(CrowdsaleToken)": {
                "argument": {},
                "contract": {
                    "bonusBasePoints": "uint256",
                    "basePointsDivisor": "uint256",
                    "allocatedBonus": "uint256"
                }
            },
            "finalizeCrowdsale(CrowdsaleToken)": {
                "argument": {},
                "contract": {
                    "bonusBasePoints": "uint256",
                    "basePointsDivisor": "uint256",
                    "allocatedBonus": "uint256"
                }
            },
            "BonusFinalizeAgent(Crowdsale,uint256,address)": {
                "argument": {
                    "_bonusBasePoints": "uint256"
                },
                "contract": {
                    "bonusBasePoints": "uint256",
                    "basePointsDivisor": "uint256",
                    "allocatedBonus": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "bonusBasePoints": "uint256",
                    "basePointsDivisor": "uint256",
                    "allocatedBonus": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "isFinalizeAgent()": [
                203,
                97
            ]
        },
        "block_CALL_mapping": {
            "block1158": [
                "token.mint(teamMultisig, allocatedBonus)"
            ],
            "jump828": [
                "crowdsale.tokensSold()",
                "crowdsale.tokensSold()"
            ],
            "jump1678": [
                "token.releaseAgent()",
                "token.releaseAgent()"
            ],
            "block828": [
                "crowdsale.tokensSold()"
            ],
            "block1678": [
                "token.releaseAgent()"
            ],
            "jump1282": [
                "token.releaseTokenTransfer()",
                "token.releaseTokenTransfer()"
            ],
            "block1282": [
                "token.releaseTokenTransfer()"
            ],
            "jump1489": [
                "token.mintAgents(address(this))",
                "token.mintAgents(address(this))"
            ],
            "jump1158": [
                "token.mint(teamMultisig, allocatedBonus)",
                "token.mint(teamMultisig, allocatedBonus)"
            ],
            "block1489": [
                "token.mintAgents(address(this))"
            ]
        }
    }
}