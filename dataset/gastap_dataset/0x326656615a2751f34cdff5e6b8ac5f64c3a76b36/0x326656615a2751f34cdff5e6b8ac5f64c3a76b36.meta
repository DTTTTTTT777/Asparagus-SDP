{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                354,
                141
            ],
            "allowance(address,address)": [
                518,
                185
            ],
            "transferFrom(address,address,uint256)": [
                245,
                119
            ],
            "transfer(address,uint256)": [
                441,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BitnanRewardToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "fallback()",
            "issueToken(address)",
            "issueLeftToken()",
            "BitnanRewardToken(address)",
            "start(uint256)",
            "close()",
            "generateTokenAmount(uint256)",
            "saleInProgress()",
            "saleOver()",
            "saleOverInTime()",
            "saleOverReachMaxETH()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "issueToken(address)": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "issueLeftToken()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "BitnanRewardToken(address)": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "start(uint256)": {
                "argument": {
                    "_startBlock": "uint256"
                },
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "close()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "generateTokenAmount(uint256)": {
                "argument": {
                    "ethAmount": "uint256"
                },
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "saleInProgress()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "saleOver()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "saleOverInTime()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "saleOverReachMaxETH()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "NAME": "string",
                    "SYMBOL": "string",
                    "DECIMALS": "uint256",
                    "ETH_MIN_GOAL": "uint256",
                    "ETH_MAX_GOAL": "uint256",
                    "ORIGIN_ETH_BRT_RATIO": "uint256",
                    "UNSOLD_SOLD_RATIO": "uint256",
                    "PHASE_NUMBER": "uint256",
                    "BLOCKS_PER_PHASE": "uint256",
                    "bonusPercents": "uint8[5]",
                    "totalEthAmount": "uint256",
                    "tokenIssueIndex": "uint256",
                    "deadline": "uint256",
                    "durationInDays": "uint256",
                    "startBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "issueToken(address)": [
                1419,
                515
            ],
            "balanceOf(address)": [
                1246,
                449
            ],
            "saleOverInTime()": [
                644,
                185
            ],
            "allowance(address,address)": [
                1873,
                647
            ],
            "transferFrom(address,address,uint256)": [
                738,
                229
            ],
            "approve(address,uint256)": [
                438,
                97
            ],
            "start(uint256)": [
                1560,
                559
            ],
            "saleInProgress()": [
                1992,
                669
            ],
            "close()": [
                1066,
                361
            ],
            "saleOverReachMaxETH()": [
                847,
                251
            ],
            "saleOver()": [
                691,
                207
            ],
            "transfer(address,uint256)": [
                1796,
                625
            ]
        },
        "block_CALL_mapping": {
            "jump2424": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "jump2424_1": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "jump2424_0": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "block2424_1": [
                "owner.send(msg.value)"
            ],
            "block2424_0": [
                "owner.send(msg.value)"
            ],
            "block2424": [
                "owner.send(msg.value)"
            ]
        }
    }
}