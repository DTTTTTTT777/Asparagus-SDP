{
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1499_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSNote": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSThing": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "S(string)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {}
            },
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "S(string)": {
                "argument": {
                    "s": "string"
                },
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1499_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "SaiVox": {
        "function_list": [
            "S(string)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "SaiVox(uint256)",
            "era()",
            "mold(bytes32,uint256)",
            "par()",
            "way()",
            "tell(uint256)",
            "tune(uint256)",
            "prod()",
            "inj(int128)",
            "prj(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "S(string)": {
                "argument": {
                    "s": "string"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "SaiVox(uint256)": {
                "argument": {
                    "par_": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "era()": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "mold(bytes32,uint256)": {
                "argument": {
                    "param": "bytes32",
                    "val": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "par()": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "way()": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "tell(uint256)": {
                "argument": {
                    "ray": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "tune(uint256)": {
                "argument": {
                    "ray": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "prod()": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "inj(int128)": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "prj(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "_par": "uint256",
                    "_way": "uint256",
                    "fix": "uint256",
                    "how": "uint256",
                    "tau": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                236,
                97
            ],
            "way()": [
                477,
                207
            ],
            "par()": [
                389,
                163
            ],
            "mold(bytes32,uint256)": [
                674,
                273
            ],
            "prod()": [
                213,
                75
            ],
            "era()": [
                303,
                119
            ],
            "tune(uint256)": [
                776,
                317
            ],
            "tell(uint256)": [
                432,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump3605_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3605_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3605_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3605_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3605_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block3605_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block3605_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block3605_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block3605": [
                "authority.canCall(src, this, sig)"
            ],
            "jump3605": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ]
        }
    }
}