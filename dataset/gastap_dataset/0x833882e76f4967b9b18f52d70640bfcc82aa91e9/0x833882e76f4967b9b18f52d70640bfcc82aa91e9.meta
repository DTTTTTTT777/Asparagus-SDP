{
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "StandardToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "StandardToken()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                114,
                75
            ],
            "transferFrom(address,address,uint256)": [
                215,
                97
            ],
            "transfer(address,uint256)": [
                435,
                141
            ],
            "balanceOf(address)": [
                348,
                119
            ],
            "allowance(address,address)": [
                536,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "HackerGold": {
        "function_list": [
            "StandardToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "HackerGold(address)",
            "fallback()",
            "createHKG(address)",
            "getPrice()",
            "getTotalSupply()",
            "getNow()",
            "getTotalValue()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "HackerGold(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "createHKG(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getPrice()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getTotalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getNow()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            },
            "getTotalValue()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "BASE_PRICE": "uint256",
                    "MID_PRICE": "uint256",
                    "FIN_PRICE": "uint256",
                    "SAFETY_LIMIT": "uint256",
                    "DECIMAL_ZEROS": "uint256",
                    "totalValue": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                352,
                97
            ],
            "getTotalSupply()": [
                1107,
                295
            ],
            "createHKG(address)": [
                635,
                163
            ],
            "balanceOf(address)": [
                689,
                185
            ],
            "getPrice()": [
                920,
                229
            ],
            "allowance(address,address)": [
                1193,
                339
            ],
            "getTotalValue()": [
                1150,
                317
            ],
            "transferFrom(address,address,uint256)": [
                453,
                119
            ],
            "getNow()": [
                1064,
                273
            ],
            "transfer(address,uint256)": [
                963,
                251
            ]
        },
        "block_CALL_mapping": {
            "block1421_1": [
                "wallet.send(msg.value)"
            ],
            "block1421_0": [
                "wallet.send(msg.value)"
            ],
            "block1421": [
                "wallet.send(msg.value)"
            ],
            "jump1421_1": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "jump1421_0": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "jump1421": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ]
        }
    },
    "DSTContract": {
        "function_list": [
            "StandardToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "DSTContract(EventInfo,HackerGold,string,string)",
            "fallback()",
            "setHKGPrice(uint256)",
            "issuePreferedTokens(uint256,uint256)",
            "buyForHackerGold(uint256)",
            "issueTokens(uint256,uint256)",
            "setEtherPrice(uint256)",
            "disableTokenIssuance()",
            "burnRemainToken()",
            "submitEtherProposal(uint256,string)",
            "submitHKGProposal(uint256,string)",
            "objectProposal(bytes32)",
            "getIndexByProposalId(bytes32)",
            "redeemProposalFunds(bytes32)",
            "getAllTheFunds()",
            "submitImpeachmentProposal(string,address)",
            "supportImpeachment()",
            "votingRightsOf(address)",
            "getPreferedQtySold()",
            "setVirtualExchange(address)",
            "getHKGOwned()",
            "getEtherValue()",
            "getExecutive()",
            "getHKGPrice()",
            "getEtherPrice()",
            "getDSTName()",
            "getDSTNameBytes()",
            "getDSTSymbol()",
            "getDSTSymbolBytes()",
            "getAddress()",
            "getTotalSupply()",
            "getCollectedEther()",
            "getCounterProposals()",
            "getProposalIdByIndex(uint256)",
            "getProposalObjectionByIndex(uint256)",
            "getProposalValueByIndex(uint256)",
            "getCurrentImpeachmentUrlDetails()",
            "getCurrentImpeachmentVotesSupporting()",
            "convert(string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "DSTContract(EventInfo,HackerGold,string,string)": {
                "argument": {
                    "dstName": "string",
                    "dstSymbol": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setHKGPrice(uint256)": {
                "argument": {
                    "qtyForOneHKG": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "issuePreferedTokens(uint256,uint256)": {
                "argument": {
                    "qtyForOneHKG": "uint256",
                    "qtyToEmit": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "buyForHackerGold(uint256)": {
                "argument": {
                    "hkgValue": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "issueTokens(uint256,uint256)": {
                "argument": {
                    "qtyForOneEther": "uint256",
                    "qtyToEmit": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setEtherPrice(uint256)": {
                "argument": {
                    "qtyForOneEther": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "disableTokenIssuance()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "burnRemainToken()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "submitEtherProposal(uint256,string)": {
                "argument": {
                    "requestValue": "uint256",
                    "url": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "submitHKGProposal(uint256,string)": {
                "argument": {
                    "requestValue": "uint256",
                    "url": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "objectProposal(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getIndexByProposalId(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "redeemProposalFunds(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getAllTheFunds()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "submitImpeachmentProposal(string,address)": {
                "argument": {
                    "urlDetails": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "supportImpeachment()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "votingRightsOf(address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getPreferedQtySold()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "setVirtualExchange(address)": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getHKGOwned()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getEtherValue()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getExecutive()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getHKGPrice()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getEtherPrice()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTName()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTNameBytes()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTSymbol()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getDSTSymbolBytes()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getAddress()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getTotalSupply()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCollectedEther()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCounterProposals()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getProposalIdByIndex(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getProposalObjectionByIndex(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getProposalValueByIndex(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCurrentImpeachmentUrlDetails()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "getCurrentImpeachmentVotesSupporting()": {
                "argument": {},
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            },
            "convert(string)": {
                "argument": {
                    "key": "string"
                },
                "contract": {
                    "DECIMAL_ZEROS": "uint256",
                    "PROPOSAL_LIFETIME": "uint256",
                    "PROPOSAL_FUNDS_TH": "uint256",
                    "hkgPrice": "uint256",
                    "etherPrice": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "preferedQtySold": "uint256",
                    "collectedHKG": "uint256",
                    "collectedEther": "uint256",
                    "counterProposals": "uint256",
                    "timeOfLastProposal": "uint256",
                    "listProposals": "DSTContract.Proposal[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                19141,
                928
            ],
            "issuePreferedTokens(uint256,uint256)": [
                3304,
                669
            ],
            "convert(string)": [
                3918,
                845
            ],
            "issueTokens(uint256,uint256)": [
                2721,
                515
            ],
            "getEtherPrice()": [
                4493,
                999
            ],
            "getHKGOwned()": [
                4407,
                955
            ],
            "getProposalObjectionByIndex(uint256)": [
                2033,
                273
            ],
            "allowance(address,address)": [
                4623,
                1043
            ],
            "objectProposal(bytes32)": [
                3359,
                691
            ],
            "getCounterProposals()": [
                2953,
                581
            ],
            "transferFrom(address,address,uint256)": [
                1769,
                185
            ],
            "getCurrentImpeachmentUrlDetails()": [
                3587,
                779
            ],
            "setHKGPrice(uint256)": [
                4362,
                933
            ],
            "approve(address,uint256)": [
                1450,
                97
            ],
            "buyForHackerGold(uint256)": [
                2508,
                471
            ],
            "getCurrentImpeachmentVotesSupporting()": [
                2342,
                383
            ],
            "getHKGPrice()": [
                1990,
                251
            ],
            "getDSTNameBytes()": [
                2385,
                405
            ],
            "getIndexByProposalId(bytes32)": [
                3408,
                713
            ],
            "setEtherPrice(uint256)": [
                1945,
                229
            ],
            "redeemProposalFunds(bytes32)": [
                2436,
                427
            ],
            "getPreferedQtySold()": [
                3731,
                801
            ],
            "submitEtherProposal(uint256,string)": [
                2996,
                603
            ],
            "votingRightsOf(address)": [
                4536,
                1021
            ],
            "disableTokenIssuance()": [
                2485,
                449
            ],
            "getDSTSymbol()": [
                2577,
                493
            ],
            "supportImpeachment()": [
                1551,
                119
            ],
            "getCollectedEther()": [
                2299,
                361
            ],
            "getExecutive()": [
                3150,
                625
            ],
            "getAllTheFunds()": [
                2930,
                559
            ],
            "setVirtualExchange(address)": [
                3237,
                647
            ],
            "submitHKGProposal(uint256,string)": [
                2776,
                537
            ],
            "submitImpeachmentProposal(string,address)": [
                4225,
                911
            ],
            "getProposalValueByIndex(uint256)": [
                2098,
                295
            ],
            "burnRemainToken()": [
                3564,
                757
            ],
            "getAddress()": [
                2212,
                339
            ],
            "getTotalSupply()": [
                4450,
                977
            ],
            "getProposalIdByIndex(uint256)": [
                4051,
                867
            ],
            "getDSTSymbolBytes()": [
                1718,
                163
            ],
            "getEtherValue()": [
                1902,
                207
            ],
            "getDSTName()": [
                1574,
                141
            ],
            "transfer(address,uint256)": [
                4124,
                889
            ]
        },
        "block_CALL_mapping": {
            "jump686_0": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump19141_0": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "jump19141_1": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "jump19141_2": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "jump18067": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block19141": [
                "hackerGold.balanceOf(this)"
            ],
            "jump965": [
                "msg.sender.send(retEther)",
                "msg.sender.send(retEther)"
            ],
            "jump10500": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block9254": [
                "eventInfo.getEventEnd()"
            ],
            "block686_0": [
                "eventInfo.getEventEnd()"
            ],
            "block8478": [
                "hackerGold.transfer(proposals[id].submitter, proposals[id].value)"
            ],
            "block12221": [
                "msg.sender.send(this.balance)"
            ],
            "block14415": [
                "eventInfo.getEventEnd()"
            ],
            "block10500": [
                "eventInfo.getEventEnd()"
            ],
            "block7147": [
                "eventInfo.getEventEnd()"
            ],
            "jump8478": [
                "hackerGold.transfer(proposals[id].submitter, proposals[id].value)",
                "hackerGold.transfer(proposals[id].submitter, proposals[id].value)"
            ],
            "jump12503": [
                "hackerGold.transfer(msg.sender, getHKGOwned())",
                "hackerGold.transfer(msg.sender, getHKGOwned())"
            ],
            "block12503": [
                "hackerGold.transfer(msg.sender, getHKGOwned())"
            ],
            "block965": [
                "msg.sender.send(retEther)"
            ],
            "block686": [
                "eventInfo.getEventEnd()"
            ],
            "jump9254": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump14415": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block8543": [
                "proposals[id].submitter.send(proposals[id].value)"
            ],
            "jump12726": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump686": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block18067": [
                "eventInfo.getEventEnd()"
            ],
            "block12726": [
                "eventInfo.getEventEnd()"
            ],
            "block965_0": [
                "msg.sender.send(retEther)"
            ],
            "block14621": [
                "eventInfo.getTradingStart()"
            ],
            "block10801": [
                "eventInfo.getEventEnd()"
            ],
            "jump14621": [
                "eventInfo.getTradingStart()",
                "eventInfo.getTradingStart()"
            ],
            "jump12149": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump19141": [
                "hackerGold.balanceOf(this)",
                "hackerGold.balanceOf(this)"
            ],
            "jump9995": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump10801": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "block12149": [
                "eventInfo.getEventEnd()"
            ],
            "block9995": [
                "eventInfo.getEventEnd()"
            ],
            "jump7147": [
                "eventInfo.getEventEnd()",
                "eventInfo.getEventEnd()"
            ],
            "jump965_0": [
                "msg.sender.send(retEther)",
                "msg.sender.send(retEther)"
            ],
            "block19141_2": [
                "hackerGold.balanceOf(this)"
            ],
            "block19141_0": [
                "hackerGold.balanceOf(this)"
            ],
            "block19141_1": [
                "hackerGold.balanceOf(this)"
            ]
        }
    },
    "EventInfo": {
        "function_list": [
            "getEventStart()",
            "getEventEnd()",
            "getVotingStart()",
            "getTradingStart()",
            "getNow()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "getEventStart()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getEventEnd()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getVotingStart()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getTradingStart()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "getNow()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "HACKATHON_5_WEEKS": "uint256",
                    "T_1_WEEK": "uint256",
                    "eventStart": "uint256",
                    "eventEnd": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getVotingStart()": [
                157,
                97
            ],
            "getEventEnd()": [
                286,
                163
            ],
            "getNow()": [
                200,
                119
            ],
            "getEventStart()": [
                114,
                75
            ],
            "getTradingStart()": [
                243,
                141
            ]
        },
        "block_CALL_mapping": {}
    }
}