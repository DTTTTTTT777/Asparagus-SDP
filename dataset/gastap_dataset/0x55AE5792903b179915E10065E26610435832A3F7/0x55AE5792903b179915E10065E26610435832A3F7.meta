{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "CofounditICO": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "CofounditICO(uint256,uint256,address)",
            "fallback()",
            "claimEthIfFailed()",
            "addPresaleContributors(address[])",
            "batchIssueTokens(uint256)",
            "batchReturnEthIfFailed(uint256)",
            "changeMultisigAddress(address)",
            "claimReservedTokens(string,address,uint256,string)",
            "removePresaleContributor(address)",
            "setTokenContract(address)",
            "withdrawEth()",
            "withdrawRemainingBalanceForManualRecovery()",
            "getCfiEstimation(address)",
            "getCofounditTokenAddress()",
            "icoInProgress()",
            "isAddressAllowedInPresale(address)",
            "participantContributionInEth(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "CofounditICO(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "claimEthIfFailed()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "addPresaleContributors(address[])": {
                "argument": {
                    "_presaleContributors": "address[]"
                },
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "batchIssueTokens(uint256)": {
                "argument": {
                    "_numberOfIssuances": "uint256"
                },
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "batchReturnEthIfFailed(uint256)": {
                "argument": {
                    "_numberOfReturns": "uint256"
                },
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "changeMultisigAddress(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "claimReservedTokens(string,address,uint256,string)": {
                "argument": {
                    "_which": "string",
                    "_amount": "uint256",
                    "_reason": "string"
                },
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "removePresaleContributor(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "setTokenContract(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "withdrawRemainingBalanceForManualRecovery()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "getCfiEstimation(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "getCofounditTokenAddress()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "icoInProgress()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "isAddressAllowedInPresale(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            },
            "participantContributionInEth(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "minEthToRaise": "uint256",
                    "maxEthToRaise": "uint256",
                    "totalEthRaised": "uint256",
                    "icoSupply": "uint256",
                    "strategicReserveSupply": "uint256",
                    "cashilaTokenSupply": "uint256",
                    "iconomiTokenSupply": "uint256",
                    "coreTeamTokenSupply": "uint256",
                    "nextFreeParticipantIndex": "uint256",
                    "usedIcoSupply": "uint256",
                    "usedStrategicReserveSupply": "uint256",
                    "usedCashilaTokenSupply": "uint256",
                    "usedIconomiTokenSupply": "uint256",
                    "usedCoreTeamTokenSupply": "uint256",
                    "lastEthReturnIndex": "uint256",
                    "lastCfiIssuanceIndex": "uint256",
                    "icoStartedMessage": "string",
                    "icoMinTresholdReachedMessage": "string",
                    "icoEndedSuccessfulyMessage": "string",
                    "icoEndedSuccessfulyWithCapMessage": "string",
                    "icoFailedMessage": "string"
                }
            }
        },
        "function_block_mapping": {
            "claimReservedTokens(string,address,uint256,string)": [
                2344,
                273
            ],
            "changeMultisigAddress(address)": [
                1821,
                75
            ],
            "isAddressAllowedInPresale(address)": [
                2561,
                295
            ],
            "withdrawEth()": [
                3196,
                515
            ],
            "batchReturnEthIfFailed(uint256)": [
                2867,
                405
            ],
            "claimEthIfFailed()": [
                2844,
                383
            ],
            "participantContributionInEth(address)": [
                2084,
                185
            ],
            "withdrawRemainingBalanceForManualRecovery()": [
                2061,
                163
            ],
            "batchIssueTokens(uint256)": [
                3219,
                537
            ],
            "getCfiEstimation(address)": [
                1931,
                119
            ],
            "addPresaleContributors(address[])": [
                2652,
                317
            ],
            "icoInProgress()": [
                2797,
                361
            ],
            "getCofounditTokenAddress()": [
                3022,
                471
            ],
            "setTokenContract(address)": [
                3350,
                603
            ],
            "removePresaleContributor(address)": [
                2912,
                427
            ],
            "transferOwnership(address)": [
                3503,
                669
            ]
        },
        "block_CALL_mapping": {
            "jump4930": [
                "cofounditTokenContract.mintTokens(_to, _amount, _reason)",
                "cofounditTokenContract.mintTokens(_to, _amount, _reason)"
            ],
            "block4930": [
                "cofounditTokenContract.mintTokens(_to, _amount, _reason)"
            ],
            "jump6129": [
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for cofoundit team\")",
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for cofoundit team\")"
            ],
            "block8412": [
                "multisigAddress.send(this.balance)"
            ],
            "block9369": [
                "cofounditTokenContract.totalSupply()"
            ],
            "block9569": [
                "cofounditTokenContract.totalSupply()"
            ],
            "block1633_0": [
                "msg.sender.send(toReturn)"
            ],
            "jump1633_0": [
                "msg.sender.send(toReturn)",
                "msg.sender.send(toReturn)"
            ],
            "block4079": [
                "multisigAddress.send(this.balance)"
            ],
            "block6761": [
                "msg.sender.send(ethContributed)"
            ],
            "jump9091": [
                "cofounditTokenContract.mintTokens(currentParticipantAddress, tokensToBeIssued, \"Ico participation mint\")",
                "cofounditTokenContract.mintTokens(currentParticipantAddress, tokensToBeIssued, \"Ico participation mint\")"
            ],
            "jump9569": [
                "cofounditTokenContract.totalSupply()",
                "cofounditTokenContract.totalSupply()"
            ],
            "block9091": [
                "cofounditTokenContract.mintTokens(currentParticipantAddress, tokensToBeIssued, \"Ico participation mint\")"
            ],
            "block5704": [
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for iconomi\")"
            ],
            "block9922": [
                "cofounditTokenContract.mintTokens(multisigAddress, divisionDifference, \"Mint division error\")"
            ],
            "block1633": [
                "msg.sender.send(toReturn)"
            ],
            "jump9922": [
                "cofounditTokenContract.mintTokens(multisigAddress, divisionDifference, \"Mint division error\")",
                "cofounditTokenContract.mintTokens(multisigAddress, divisionDifference, \"Mint division error\")"
            ],
            "jump7400": [
                "currentParticipantAddress.send(contribution)",
                "currentParticipantAddress.send(contribution)"
            ],
            "block5317": [
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for cashila\")"
            ],
            "jump6761": [
                "msg.sender.send(ethContributed)",
                "msg.sender.send(ethContributed)"
            ],
            "jump5704": [
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for iconomi\")",
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for iconomi\")"
            ],
            "jump1633": [
                "msg.sender.send(toReturn)",
                "msg.sender.send(toReturn)"
            ],
            "jump5317": [
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for cashila\")",
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for cashila\")"
            ],
            "block6129": [
                "cofounditTokenContract.mintTokens(_to, _amount, \"Reserved tokens for cofoundit team\")"
            ],
            "jump9369": [
                "cofounditTokenContract.totalSupply()",
                "cofounditTokenContract.totalSupply()"
            ],
            "block7400": [
                "currentParticipantAddress.send(contribution)"
            ]
        }
    }
}