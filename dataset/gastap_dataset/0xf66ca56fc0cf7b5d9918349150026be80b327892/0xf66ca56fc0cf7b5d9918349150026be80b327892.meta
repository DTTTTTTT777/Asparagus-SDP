{
    "token": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "burn()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "burn()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "burn()": [
                208,
                97
            ],
            "transferFrom(address,address,uint256)": [
                78,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "Crowdsale()",
            "fallback()",
            "invest(address)",
            "getPrice()",
            "checkGoalReached()",
            "safeWithdrawal()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "getPrice()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            },
            "safeWithdrawal()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "tokensSold": "uint256",
                    "deadlines": "uint256[4]",
                    "prices": "uint256[4]"
                }
            }
        },
        "function_block_mapping": {
            "checkGoalReached()": [
                307,
                75
            ],
            "safeWithdrawal()": [
                1033,
                361
            ],
            "invest(address)": [
                330,
                97
            ],
            "getPrice()": [
                774,
                251
            ]
        },
        "block_CALL_mapping": {
            "block1162_1": [
                "msWallet.send(amount)"
            ],
            "block1716": [
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)"
            ],
            "jump1162_1": [
                "msWallet.send(amount)",
                "msWallet.send(amount)"
            ],
            "jump1162_0": [
                "msWallet.send(amount)",
                "msWallet.send(amount)"
            ],
            "jump1162": [
                "msWallet.send(amount)",
                "msWallet.send(amount)"
            ],
            "jump2826": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "block2125": [
                "tokenReward.burn()"
            ],
            "block1162_0": [
                "msWallet.send(amount)"
            ],
            "jump2125": [
                "tokenReward.burn()",
                "tokenReward.burn()"
            ],
            "block1716_1": [
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)"
            ],
            "block1716_0": [
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)"
            ],
            "block1162": [
                "msWallet.send(amount)"
            ],
            "jump1716_0": [
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)",
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)"
            ],
            "jump1716_1": [
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)",
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)"
            ],
            "block2826": [
                "msg.sender.send(amount)"
            ],
            "jump1716": [
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)",
                "tokenReward.transferFrom(beneficiary, receiver, numTokens)"
            ]
        }
    }
}