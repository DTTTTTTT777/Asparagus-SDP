{
    "ECVerify": {
        "function_list": [
            "ecrecovery(bytes32,uint8,bytes32,bytes32)",
            "ecverify(bytes32,uint8,bytes32,bytes32,address)"
        ],
        "initial_state": {
            "ecrecovery(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "_msgHash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {}
            },
            "ecverify(bytes32,uint8,bytes32,bytes32,address)": {
                "argument": {
                    "_msgHash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "ecrecovery(bytes32,uint8,bytes32,bytes32)": [
                81,
                75
            ],
            "ecverify(bytes32,uint8,bytes32,bytes32,address)": [
                235,
                97
            ]
        },
        "block_CALL_mapping": {
            "block453_0": [
                "ecrecover(_msgHash, v, r, s)"
            ],
            "jump601_0": [
                "ecrecover(_msgHash, v, r, s)",
                "ecrecover(_msgHash, v, r, s)"
            ],
            "jump453_0": [
                "ecrecover(_msgHash, v, r, s)",
                "ecrecover(_msgHash, v, r, s)"
            ],
            "jump453": [
                "ecrecover(_msgHash, v, r, s)",
                "ecrecover(_msgHash, v, r, s)"
            ],
            "block453": [
                "ecrecover(_msgHash, v, r, s)"
            ],
            "block601": [
                "ecrecover(_msgHash, v, r, s)"
            ],
            "jump601": [
                "ecrecover(_msgHash, v, r, s)",
                "ecrecover(_msgHash, v, r, s)"
            ],
            "block601_0": [
                "ecrecover(_msgHash, v, r, s)"
            ]
        }
    }
}