{
    "DSExec": {
        "function_list": [
            "tryExec(address,bytes,uint256)",
            "exec(address,bytes,uint256)",
            "exec(address,bytes)",
            "exec(address,uint256)",
            "tryExec(address,bytes)",
            "tryExec(address,uint256)"
        ],
        "initial_state": {
            "tryExec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {}
            },
            "exec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {}
            },
            "exec(address,bytes)": {
                "argument": {
                    "c": "bytes"
                },
                "contract": {}
            },
            "exec(address,uint256)": {
                "argument": {
                    "v": "uint256"
                },
                "contract": {}
            },
            "tryExec(address,bytes)": {
                "argument": {
                    "c": "bytes"
                },
                "contract": {}
            },
            "tryExec(address,uint256)": {
                "argument": {
                    "v": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1493_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1493": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSNote": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSTokenBase": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DSTokenBase(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "DSTokenBase(uint256)": {
                "argument": {
                    "supply": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSStop": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)",
            "stop()",
            "start()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                159,
                97
            ],
            "start()": [
                427,
                185
            ],
            "stop()": [
                136,
                75
            ]
        },
        "block_CALL_mapping": {
            "block2149": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2149_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2149_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2149_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2149_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block2149_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block2149_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2149": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSToken": {
        "function_list": [
            "stop()",
            "start()",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)",
            "DSTokenBase(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DSToken(bytes32)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "push(address,uint128)",
            "pull(address,uint128)",
            "mint(uint128)",
            "burn(uint128)",
            "generatorTransfer(address,uint256)",
            "setName(bytes32)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "stop()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSTokenBase(uint256)": {
                "argument": {
                    "supply": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSToken(bytes32)": {
                "argument": {
                    "symbol_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "push(address,uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "pull(address,uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mint(uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "burn(uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "generatorTransfer(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setName(bytes32)": {
                "argument": {
                    "name_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "push(address,uint128)": [
                773,
                229
            ],
            "totalSupply()": [
                554,
                163
            ],
            "transferFrom(address,address,uint256)": [
                597,
                185
            ],
            "mint(uint128)": [
                941,
                273
            ],
            "setName(bytes32)": [
                892,
                251
            ],
            "approve(address,uint256)": [
                386,
                119
            ],
            "start()": [
                1713,
                493
            ],
            "setOwner(address)": [
                487,
                141
            ],
            "burn(uint128)": [
                1498,
                427
            ],
            "balanceOf(address)": [
                1004,
                295
            ],
            "generatorTransfer(address,uint256)": [
                1942,
                559
            ],
            "pull(address,uint128)": [
                1292,
                383
            ],
            "transfer(address,uint256)": [
                1612,
                471
            ],
            "stop()": [
                363,
                97
            ],
            "allowance(address,address)": [
                1823,
                537
            ]
        },
        "block_CALL_mapping": {
            "block5918_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block5918_1": [
                "authority.canCall(src, this, sig)"
            ],
            "jump5918_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump5918_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block5918_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block5918_5": [
                "authority.canCall(src, this, sig)"
            ],
            "jump5918_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump5918_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump5918_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block5918_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block5918_3": [
                "authority.canCall(src, this, sig)"
            ],
            "jump5918": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block5918": [
                "authority.canCall(src, this, sig)"
            ],
            "jump5918_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "kkkTokenSale": {
        "function_list": [
            "tryExec(address,bytes,uint256)",
            "exec(address,bytes,uint256)",
            "exec(address,bytes)",
            "exec(address,uint256)",
            "tryExec(address,bytes)",
            "tryExec(address,uint256)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "stop()",
            "start()",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)",
            "kkkTokenSale(uint256,address)",
            "time()",
            "isContract(address)",
            "canBuy(uint256)",
            "fallback()",
            "setStartTime(uint256)",
            "finalize()",
            "transferTokens(address,uint256,address)",
            "summary()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "tryExec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "exec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "exec(address,bytes)": {
                "argument": {
                    "c": "bytes"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "exec(address,uint256)": {
                "argument": {
                    "v": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "tryExec(address,bytes)": {
                "argument": {
                    "c": "bytes"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "tryExec(address,uint256)": {
                "argument": {
                    "v": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "stop()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "kkkTokenSale(uint256,address)": {
                "argument": {
                    "startTime_": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "time()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "canBuy(uint256)": {
                "argument": {
                    "total": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "setStartTime(uint256)": {
                "argument": {
                    "startTime_": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "transferTokens(address,uint256,address)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "summary()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PUBLIC_SALE_PRICE": "uint128",
                    "TOTAL_SUPPLY": "uint128",
                    "SELL_SOFT_LIMIT": "uint128",
                    "SELL_HARD_LIMIT": "uint128",
                    "FUTURE_DISTRIBUTE_LIMIT": "uint128",
                    "USER_BUY_LIMIT": "uint128",
                    "MAX_GAS_PRICE": "uint128",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "sold": "uint128",
                    "soldByChannels": "uint128"
                }
            }
        },
        "function_block_mapping": {
            "time()": [
                2498,
                185
            ],
            "summary()": [
                3643,
                559
            ],
            "transferTokens(address,uint256,address)": [
                3030,
                361
            ],
            "canBuy(uint256)": [
                2829,
                295
            ],
            "start()": [
                1586,
                886
            ],
            "setOwner(address)": [
                7259,
                1059
            ],
            "finalize()": [
                3139,
                383
            ],
            "setStartTime(uint256)": [
                2898,
                317
            ],
            "stop()": [
                2019,
                933
            ]
        },
        "block_CALL_mapping": {
            "jump8665_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8665_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8665_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2019_0": [
                "kkk.stop()",
                "kkk.stop()"
            ],
            "jump8665_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8665_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2019": [
                "kkk.stop()",
                "kkk.stop()"
            ],
            "block7259": [
                "kkk.setOwner(destFoundation)"
            ],
            "jump8665_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6023": [
                "token.transfer(dst, wad)",
                "token.transfer(dst, wad)"
            ],
            "jump7259": [
                "kkk.setOwner(destFoundation)",
                "kkk.setOwner(destFoundation)"
            ],
            "jump1586_0": [
                "kkk.start()",
                "kkk.start()"
            ],
            "jump1825_0": [
                "kkk.transfer(msg.sender, requested)",
                "kkk.transfer(msg.sender, requested)"
            ],
            "block6976": [
                "kkk.transfer(destFoundation, kkk.balanceOf(this))"
            ],
            "jump6474": [
                "kkk.start()",
                "kkk.start()"
            ],
            "block8850": [
                "target.call.value(value)(calldata)"
            ],
            "jump1825": [
                "kkk.transfer(msg.sender, requested)",
                "kkk.transfer(msg.sender, requested)"
            ],
            "jump6976": [
                "kkk.transfer(destFoundation, kkk.balanceOf(this))",
                "kkk.transfer(destFoundation, kkk.balanceOf(this))"
            ],
            "block1586_0": [
                "kkk.start()"
            ],
            "block8665_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block8665_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block8665_2": [
                "authority.canCall(src, this, sig)"
            ],
            "jump8665": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block6474": [
                "kkk.start()"
            ],
            "block1586": [
                "kkk.start()"
            ],
            "block8665_4": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1586": [
                "kkk.start()",
                "kkk.start()"
            ],
            "block2019_0": [
                "kkk.stop()"
            ],
            "block8665_5": [
                "authority.canCall(src, this, sig)"
            ],
            "block8850_2": [
                "target.call.value(value)(calldata)"
            ],
            "block8850_0": [
                "target.call.value(value)(calldata)"
            ],
            "block8850_1": [
                "target.call.value(value)(calldata)"
            ],
            "block6784": [
                "kkk.balanceOf(this)"
            ],
            "block6023": [
                "token.transfer(dst, wad)"
            ],
            "block8665": [
                "authority.canCall(src, this, sig)"
            ],
            "block1825_0": [
                "kkk.transfer(msg.sender, requested)"
            ],
            "block1825": [
                "kkk.transfer(msg.sender, requested)"
            ],
            "jump6784": [
                "kkk.balanceOf(this)",
                "kkk.balanceOf(this)"
            ],
            "block8665_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block2019": [
                "kkk.stop()"
            ]
        }
    }
}