block0(g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	lt(s(1), s(0))
	call(block109())

jump0(s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	geq(s(1), s(0))
	call(block13(g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val))

block13(g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 845904404
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	eq(s(2), s(1))
	call(block114(s(0),g(creator), l(l0), addr, calldatasize, caller, returndatasize, val))

jump13(s(2), s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	neq(s(2), s(1))
	call(block65(s(0),g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldatasize, caller, callvalue, returndatasize, val))

jump65(s(2), s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldatasize, caller, callvalue, returndatasize, val)=>
	eq(s(2), s(1))
	call(block178(s(0),g(creator), l(l0), address, balance, caller, returndatasize))

jump65(s(2), s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldatasize, caller, callvalue, returndatasize, val)=>
	neq(s(2), s(1))
	call(block76(s(0),g(creator), g(owner), g(newOwner), l(l0), addr, calldatasize, caller, callvalue, returndatasize, val))

block65(s(0), g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldatasize, caller, callvalue, returndatasize, val)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1417542389
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(creator), g(owner), g(newOwner), l(l0), addr, address, balance, calldatasize, caller, callvalue, returndatasize, val))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(creator), g(owner), g(newOwner), l(l0), addr, calldatasize, caller, callvalue, returndatasize, val)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1895158750
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(creator), g(owner), g(newOwner), l(l0), addr, calldatasize, caller, callvalue, returndatasize, val))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, calldatasize, caller, callvalue, returndatasize, val)=>
	eq(s(2), s(1))
	call(block188(s(0),g(creator), l(l0), calldatasize, caller, returndatasize, val))

jump76(s(2), s(1), s(0), g(creator), g(owner), g(newOwner), l(l0), addr, calldatasize, caller, callvalue, returndatasize, val)=>
	neq(s(2), s(1))
	call(block87(s(0),g(owner), g(newOwner), addr, calldatasize, caller, callvalue))

jump87(s(2), s(1), s(0), g(owner), g(newOwner), addr, calldatasize, caller, callvalue)=>
	eq(s(2), s(1))
	call(block220(s(0),g(owner), g(newOwner), addr, calldatasize, caller, callvalue))

jump87(s(2), s(1), s(0), g(owner), g(newOwner), addr, calldatasize, caller, callvalue)=>
	neq(s(2), s(1))
	call(block98(s(0),g(owner), g(newOwner), caller, callvalue))

block87(s(0), g(owner), g(newOwner), addr, calldatasize, caller, callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(owner), g(newOwner), addr, calldatasize, caller, callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98(s(0), g(owner), g(newOwner), caller, callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3181079942
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(owner), g(newOwner), caller, callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(owner), g(newOwner), caller, callvalue)=>
	eq(s(2), s(1))
	call(block287(s(0),g(owner), g(newOwner), caller, callvalue))

jump98(s(2), s(1), s(0), g(owner), g(newOwner), caller, callvalue)=>
	neq(s(2), s(1))
	call(block109_0(s(0)))

block109()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block114(s(0), g(creator), l(l0), addr, calldatasize, caller, returndatasize, val)=>
	nop(JUMPDEST)
	s(1) = 176
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = addr
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = val
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 310
	nop(PUSH2)
	call(block310(s(3),s(2),s(1),s(0),g(creator), l(l0), caller, returndatasize))
	nop(JUMP)

block176(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block178(s(0), g(creator), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 186
	nop(PUSH2)
	s(2) = 472
	nop(PUSH2)
	call(block472(s(1),s(0),g(creator), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block186(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block188(s(0), g(creator), l(l0), calldatasize, caller, returndatasize, val)=>
	nop(JUMPDEST)
	s(1) = 218
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = val
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 689
	nop(PUSH2)
	call(block689(s(2),s(1),s(0),g(creator), l(l0), caller, returndatasize))
	nop(JUMP)

block218(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block220(s(0), g(owner), g(newOwner), addr, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump220(s(2),s(1),s(0),g(owner), g(newOwner), addr, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump220(s(2), s(1), s(0), g(owner), g(newOwner), addr, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block232(s(1), s(0),g(owner), g(newOwner), addr, calldatasize, caller))

jump220(s(2), s(1), s(0), g(owner), g(newOwner), addr, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block228(s(1), s(0)))

block228(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block232(s(1), s(0), g(owner), g(newOwner), addr, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 285
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = addr
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 884
	nop(PUSH2)
	call(block884(s(2),s(1),s(0),g(owner), g(newOwner), caller))
	nop(JUMP)

block285(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump287(s(2), s(1), s(0), g(owner), g(newOwner), caller, callvalue)=>
	eq(s(2), 0)
	call(block299(s(1), s(0),g(owner), g(newOwner), caller))

jump287(s(2), s(1), s(0), g(owner), g(newOwner), caller, callvalue)=>
	neq(s(2), 0)
	call(block295(s(1), s(0)))

block287(s(0), g(owner), g(newOwner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump287(s(2),s(1),s(0),g(owner), g(newOwner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block295(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block299(s(1), s(0), g(owner), g(newOwner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 308
	nop(PUSH2)
	s(2) = 965
	nop(PUSH2)
	call(block965(s(1),s(0),g(owner), g(newOwner), caller))
	nop(JUMP)

block308(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump310(s(5), s(4), s(3), s(2), s(1), s(0), g(creator), l(l0), caller, returndatasize)=>
	neq(s(5), s(4))
	call(block468(s(3), s(2), s(1), s(0)))

jump310(s(5), s(4), s(3), s(2), s(1), s(0), g(creator), l(l0), caller, returndatasize)=>
	eq(s(5), s(4))
	call(block397(s(3), s(2), s(1), s(0), l(l0), returndatasize))

block310(s(3), s(2), s(1), s(0), g(creator), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(creator)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump310(s(5),s(4),s(3),s(2),s(1),s(0),g(creator), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block397(s(3), s(2), s(1), s(0), l(l0), returndatasize)=>
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump397(s(5),s(4),s(3),s(2),s(1),s(0), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump397(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block466(s(4), s(3), s(2), s(1), s(0)))

jump397(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block457(s(4), s(3), s(2), s(1), s(0), returndatasize))

block457(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block466(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block468(s(3),s(2),s(1),s(0)))

block468(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block176(s(0)))
	nop(JUMP)

block472(s(1), s(0), g(creator), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(creator)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump472(s(3),s(2),s(1),s(0),g(creator), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump472(s(3), s(2), s(1), s(0), g(creator), l(l0), address, balance, caller, returndatasize)=>
	neq(s(3), s(2))
	call(block687(s(1), s(0)))

jump472(s(3), s(2), s(1), s(0), g(creator), l(l0), address, balance, caller, returndatasize)=>
	eq(s(3), s(2))
	call(block559(s(1), s(0),g(creator), l(l0), address, balance, returndatasize))

block559(s(1), s(0), g(creator), l(l0), address, balance, returndatasize)=>
	s(2) = 2
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(creator)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2300
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2)= eq(s(2), 0)
	nop(ISZERO)
	s(3) = s(2)
	nop(DUP1)
	call(jump559(s(3),s(2),s(1),s(0),g(creator), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump559(s(3), s(2), s(1), s(0), g(creator), l(l0), address, balance, returndatasize)=>
	eq(s(3), 0)
	call(block685(s(2), s(1), s(0)))

jump559(s(3), s(2), s(1), s(0), g(creator), l(l0), address, balance, returndatasize)=>
	neq(s(3), 0)
	call(block676(s(2), s(1), s(0), returndatasize))

block676(s(2), s(1), s(0), returndatasize)=>
	s(3) = returndatasize
	nop(RETURNDATASIZE)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	nop(REVERT)

block685(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block687(s(1),s(0)))

block687(s(1), s(0))=>
	nop(JUMPDEST)
	call(block186(s(0)))
	nop(JUMP)

block689(s(2), s(1), s(0), g(creator), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(creator)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump689(s(4),s(3),s(2),s(1),s(0),g(creator), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump689(s(4), s(3), s(2), s(1), s(0), g(creator), l(l0), caller, returndatasize)=>
	neq(s(4), s(3))
	call(block881(s(2), s(1), s(0)))

jump689(s(4), s(3), s(2), s(1), s(0), g(creator), l(l0), caller, returndatasize)=>
	eq(s(4), s(3))
	call(block776(s(2), s(1), s(0),g(creator), l(l0), returndatasize))

block776(s(2), s(1), s(0), g(creator), l(l0), returndatasize)=>
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(creator)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump776(s(4),s(3),s(2),s(1),s(0),g(creator), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump776(s(4), s(3), s(2), s(1), s(0), g(creator), l(l0), returndatasize)=>
	eq(s(4), 0)
	call(block879(s(3), s(2), s(1), s(0)))

jump776(s(4), s(3), s(2), s(1), s(0), g(creator), l(l0), returndatasize)=>
	neq(s(4), 0)
	call(block870(s(3), s(2), s(1), s(0), returndatasize))

block870(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block879(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block881(s(2),s(1),s(0)))

block881(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block218(s(0)))
	nop(JUMP)

block884(s(2), s(1), s(0), g(owner), g(newOwner), caller)=>
	nop(JUMPDEST)
	s(3) = 892
	nop(PUSH2)
	s(4) = 1151
	nop(PUSH2)
	call(block1151(s(3),s(2),s(1),s(0),g(owner), g(newOwner), caller))
	nop(JUMP)

block892(s(3), s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	call(jump892(s(3),s(2),s(1),s(0),g(newOwner)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump892(s(3), s(2), s(1), s(0), g(newOwner))=>
	eq(s(3), 0)
	call(block962(s(2), s(1), s(0)))

jump892(s(3), s(2), s(1), s(0), g(newOwner))=>
	neq(s(3), 0)
	call(block898(s(2), s(1), s(0),g(newOwner)))

block898(s(2), s(1), s(0), g(newOwner))=>
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(newOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(newOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block962(s(2),s(1),s(0)))

block962(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block285(s(0)))
	nop(JUMP)

jump965(s(3), s(2), s(1), s(0), g(owner), g(newOwner), caller)=>
	neq(s(3), s(2))
	call(block1149(s(1), s(0)))

jump965(s(3), s(2), s(1), s(0), g(owner), g(newOwner), caller)=>
	eq(s(3), s(2))
	call(block1051(s(1), s(0),g(owner), g(newOwner)))

block965(s(1), s(0), g(owner), g(newOwner), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump965(s(3),s(2),s(1),s(0),g(owner), g(newOwner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1051(s(1), s(0), g(owner), g(newOwner))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(owner) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block1149(s(1),s(0)))

block1149(s(1), s(0))=>
	nop(JUMPDEST)
	call(block308(s(0)))
	nop(JUMP)

block1151(s(3), s(2), s(1), s(0), g(owner), g(newOwner), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block892(s(3),s(2),s(1),s(0),g(newOwner)))
	nop(JUMP)

block109_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

