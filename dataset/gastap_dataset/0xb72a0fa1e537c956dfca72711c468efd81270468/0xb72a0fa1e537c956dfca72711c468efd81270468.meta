{
    "Utils": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                126,
                97
            ],
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Managed": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {}
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptManagement()": [
                277,
                119
            ],
            "transferManagement(address)": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptOwnership()": [
                223,
                97
            ],
            "transferOwnership(address)": [
                420,
                163
            ],
            "owner()": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump876": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block876": [
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "SmartTokenController": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {}
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {}
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "disableTokenTransfers(bool)": [
                500,
                185
            ],
            "transferTokenOwnership(address)": [
                169,
                75
            ],
            "owner()": [
                547,
                207
            ],
            "acceptTokenOwnership()": [
                236,
                97
            ],
            "transferOwnership(address)": [
                721,
                251
            ],
            "acceptOwnership()": [
                477,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2182": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump1401": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "block1764": [
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "block1152": [
                "token.transferOwnership(_newOwner)"
            ],
            "block2182": [
                "_token.transfer(_to, _amount)"
            ],
            "block2970": [
                "token.disableTransfers(_disable)"
            ],
            "jump1764": [
                "token.withdrawTokens(_token, _to, _amount)",
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "jump2970": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block1401": [
                "token.acceptOwnership()"
            ],
            "jump1152": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ]
        }
    },
    "IERC20Token": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ISmartToken": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "withdrawTokens(IERC20Token,address,uint256)",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "disableTransfers(bool)",
            "issue(address,uint256)",
            "destroy(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "disableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "issue(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "destroy(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BancorChanger": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "changeableTokenCount()",
            "changeableToken(uint16)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "BancorChanger(ISmartToken,IBancorFormula,uint32,IERC20Token,uint32)",
            "reserveTokenCount()",
            "changeableTokenCount()",
            "changeableToken(uint16)",
            "setFormula(IBancorFormula)",
            "setQuickBuyPath(IERC20Token[])",
            "clearQuickBuyPath()",
            "getQuickBuyPathLength()",
            "hasQuickBuyEtherToken()",
            "getQuickBuyEtherToken()",
            "disableChanging(bool)",
            "setChangeFee(uint32)",
            "getChangeFeeAmount(uint256)",
            "addReserve(IERC20Token,uint32,bool)",
            "updateReserve(IERC20Token,uint32,bool,uint256)",
            "disableReservePurchases(IERC20Token,bool)",
            "getReserveBalance(IERC20Token)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "getPurchaseReturn(IERC20Token,uint256)",
            "getSaleReturn(IERC20Token,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "buy(IERC20Token,uint256,uint256)",
            "sell(IERC20Token,uint256,uint256)",
            "quickChange(IERC20Token[],uint256,uint256)",
            "quickBuy(uint256)",
            "getSaleReturn(IERC20Token,uint256,uint256)",
            "ensureAllowance(IERC20Token,address,uint256)",
            "claimTokens(IERC20Token,address,uint256)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "Utils()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "changeableTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "changeableToken(uint16)": {
                "argument": {
                    "_tokenIndex": "uint16"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getReturn(IERC20Token,IERC20Token,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "change(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "BancorChanger(ISmartToken,IBancorFormula,uint32,IERC20Token,uint32)": {
                "argument": {
                    "_maxChangeFee": "uint32",
                    "_reserveRatio": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "reserveTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "setFormula(IBancorFormula)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "setQuickBuyPath(IERC20Token[])": {
                "argument": {
                    "_path": "IERC20Token[]"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "clearQuickBuyPath()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getQuickBuyPathLength()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "hasQuickBuyEtherToken()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getQuickBuyEtherToken()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "disableChanging(bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "setChangeFee(uint32)": {
                "argument": {
                    "_changeFee": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getChangeFeeAmount(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "addReserve(IERC20Token,uint32,bool)": {
                "argument": {
                    "_ratio": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "updateReserve(IERC20Token,uint32,bool,uint256)": {
                "argument": {
                    "_ratio": "uint32",
                    "_virtualBalance": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "disableReservePurchases(IERC20Token,bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getReserveBalance(IERC20Token)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getPurchaseReturn(IERC20Token,uint256)": {
                "argument": {
                    "_depositAmount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256)": {
                "argument": {
                    "_sellAmount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "buy(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_depositAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "sell(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "quickChange(IERC20Token[],uint256,uint256)": {
                "argument": {
                    "_path": "IERC20Token[]",
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "quickBuy(uint256)": {
                "argument": {
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "ensureAllowance(IERC20Token,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "claimTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "clearQuickBuyPath()": [
                1665,
                286
            ],
            "disableChanging(bool)": [
                638,
                22
            ],
            "changeableToken(uint16)": [
                1688,
                308
            ],
            "getQuickBuyEtherToken()": [
                3347,
                748
            ],
            "disableTokenTransfers(bool)": [
                2570,
                528
            ],
            "transferTokenOwnership(address)": [
                901,
                88
            ],
            "acceptTokenOwnership()": [
                1207,
                154
            ],
            "getChangeFeeAmount(uint256)": [
                1513,
                242
            ],
            "reserveTokenCount()": [
                2798,
                616
            ],
            "acceptManagement()": [
                3434,
                770
            ],
            "quickBuy(uint256)": [
                2495,
                484
            ],
            "owner()": [
                4796,
                939
            ],
            "setChangeFee(uint32)": [
                2617,
                550
            ],
            "transferOwnership(address)": [
                4271,
                990
            ],
            "getQuickBuyPathLength()": [
                2755,
                594
            ],
            "changeableTokenCount()": [
                1945,
                352
            ],
            "transferManagement(address)": [
                3949,
                902
            ],
            "hasQuickBuyEtherToken()": [
                3300,
                726
            ],
            "acceptOwnership()": [
                2547,
                506
            ]
        },
        "block_CALL_mapping": {
            "jump19569": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "block6428": [
                "token.totalSupply()"
            ],
            "block11343": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block5112_0": [
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block5112_1": [
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block8511": [
                "token.acceptOwnership()"
            ],
            "block14899": [
                "token.totalSupply()"
            ],
            "block13941_4": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block20310": [
                "_token.approve(_spender, _value)"
            ],
            "block13941_0": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block13941_1": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block13941_2": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump12812": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "jump16451": [
                "etherToken.withdrawTo(msg.sender, _amount)",
                "etherToken.withdrawTo(msg.sender, _amount)"
            ],
            "jump10500": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block20576_2": [
                "token.owner()"
            ],
            "jump10744": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block20576_4": [
                "token.owner()"
            ],
            "jump5370_0": [
                "token.transfer(msg.sender, returnAmount)",
                "token.transfer(msg.sender, returnAmount)"
            ],
            "jump5370_1": [
                "token.transfer(msg.sender, returnAmount)",
                "token.transfer(msg.sender, returnAmount)"
            ],
            "jump13258_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump13258_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump13258_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump13258_0": [
                "token.owner()",
                "token.owner()"
            ],
            "block13258": [
                "token.owner()"
            ],
            "jump13258_4": [
                "token.owner()",
                "token.owner()"
            ],
            "block21971": [
                "_token.transferFrom(_from, this, _amount)"
            ],
            "jump5927_15": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump20576_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump16197": [
                "changer.getQuickBuyEtherToken()",
                "changer.getQuickBuyEtherToken()"
            ],
            "block20079_2": [
                "_token.approve(_spender, 0)"
            ],
            "block20079_0": [
                "_token.approve(_spender, 0)"
            ],
            "block20079_1": [
                "_token.approve(_spender, 0)"
            ],
            "jump13941": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump12008_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12008_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12008_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11343": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump5927_18": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_19": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5370": [
                "token.transfer(msg.sender, returnAmount)",
                "token.transfer(msg.sender, returnAmount)"
            ],
            "jump5927_12": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_13": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_10": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_11": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_16": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_17": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_14": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block13258_0": [
                "token.owner()"
            ],
            "block13258_4": [
                "token.owner()"
            ],
            "block13258_1": [
                "token.owner()"
            ],
            "block6786": [
                "token.transferOwnership(_newOwner)"
            ],
            "jump12008": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block13258_2": [
                "token.owner()"
            ],
            "block5112": [
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block11156_0": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block11156_1": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block13258_3": [
                "token.owner()"
            ],
            "block12008": [
                "token.totalSupply()"
            ],
            "jump6786": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "block10744": [
                "token.totalSupply()"
            ],
            "jump14709": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump5927_0": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_1": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_2": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_3": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_4": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_5": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_6": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block13941": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump5927_8": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5927_9": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump14445_0": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block13941_3": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block5927_6": [
                "_reserveToken.balanceOf(this)"
            ],
            "block20576_0": [
                "token.owner()"
            ],
            "block5927_4": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5927_5": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5927_2": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump21971": [
                "_token.transferFrom(_from, this, _amount)",
                "_token.transferFrom(_from, this, _amount)"
            ],
            "block5927_0": [
                "_reserveToken.balanceOf(this)"
            ],
            "block20576_1": [
                "token.owner()"
            ],
            "block14899_1": [
                "token.totalSupply()"
            ],
            "block14899_0": [
                "token.totalSupply()"
            ],
            "block5927_8": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5927_9": [
                "_reserveToken.balanceOf(this)"
            ],
            "block16008": [
                "changer.hasQuickBuyEtherToken()"
            ],
            "block16643": [
                "toToken.transfer(msg.sender, _amount)"
            ],
            "block20576_3": [
                "token.owner()"
            ],
            "jump7216": [
                "token.owner()",
                "token.owner()"
            ],
            "block10500": [
                "token.balanceOf(msg.sender)"
            ],
            "jump20310": [
                "_token.approve(_spender, _value)",
                "_token.approve(_spender, _value)"
            ],
            "jump19569_2": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "jump19569_0": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "jump19569_1": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "block21727": [
                "token.issue(this, _amount)"
            ],
            "block21506": [
                "token.destroy(_from, _amount)"
            ],
            "block5927": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump10744_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump10744_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block13668": [
                "token.totalSupply()"
            ],
            "jump19849": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "jump4610": [
                "etherToken.deposit.value(msg.value)()",
                "etherToken.deposit.value(msg.value)()"
            ],
            "block21051": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20576_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump20310_0": [
                "_token.approve(_spender, _value)",
                "_token.approve(_spender, _value)"
            ],
            "jump20310_1": [
                "_token.approve(_spender, _value)",
                "_token.approve(_spender, _value)"
            ],
            "block10744_0": [
                "token.totalSupply()"
            ],
            "block10744_1": [
                "token.totalSupply()"
            ],
            "jump14709_1": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump13941_1": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block14445": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump14899": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5927_18": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5927_19": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5370": [
                "token.transfer(msg.sender, returnAmount)"
            ],
            "block5927_10": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5927_11": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5927_12": [
                "_reserveToken.balanceOf(this)"
            ],
            "block15833": [
                "changer.change(fromToken, toToken, _amount, i == pathLength - 2 ? _minReturn : 1)"
            ],
            "block5927_14": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump20310_2": [
                "_token.approve(_spender, _value)",
                "_token.approve(_spender, _value)"
            ],
            "block5927_16": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump15466": [
                "smartToken.owner()",
                "smartToken.owner()"
            ],
            "block11576": [
                "token.totalSupply()"
            ],
            "jump14899_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14899_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump20079_2": [
                "_token.approve(_spender, 0)",
                "_token.approve(_spender, 0)"
            ],
            "block4610": [
                "etherToken.deposit.value(msg.value)()"
            ],
            "jump14709_0": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump5927": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump13668": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5927_1": [
                "_reserveToken.balanceOf(this)"
            ],
            "block7216": [
                "token.owner()"
            ],
            "block12008_3": [
                "token.totalSupply()"
            ],
            "block12008_2": [
                "token.totalSupply()"
            ],
            "block12008_1": [
                "token.totalSupply()"
            ],
            "block12008_0": [
                "token.totalSupply()"
            ],
            "block4796_0": [
                "smartToken.owner()"
            ],
            "jump20079": [
                "_token.approve(_spender, 0)",
                "_token.approve(_spender, 0)"
            ],
            "block13668_4": [
                "token.totalSupply()"
            ],
            "block16451": [
                "etherToken.withdrawTo(msg.sender, _amount)"
            ],
            "block21051_0": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20310_2": [
                "_token.approve(_spender, _value)"
            ],
            "jump4796_0": [
                "smartToken.owner()",
                "smartToken.owner()"
            ],
            "jump21506": [
                "token.destroy(_from, _amount)",
                "token.destroy(_from, _amount)"
            ],
            "jump20576": [
                "token.owner()",
                "token.owner()"
            ],
            "jump9880": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block19849_2": [
                "_token.allowance(this, _spender)"
            ],
            "block19849_1": [
                "_token.allowance(this, _spender)"
            ],
            "block19849_0": [
                "_token.allowance(this, _spender)"
            ],
            "jump10500_0": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump10500_1": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block4796_1": [
                "smartToken.owner()"
            ],
            "jump8874": [
                "token.withdrawTokens(_token, _to, _amount)",
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "block20079": [
                "_token.approve(_spender, 0)"
            ],
            "jump14445_1": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block5370_0": [
                "token.transfer(msg.sender, returnAmount)"
            ],
            "block11156": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump11576": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block19569": [
                "_token.allowance(this, _spender)"
            ],
            "jump13668_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump6428": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block20310_0": [
                "_token.approve(_spender, _value)"
            ],
            "block20310_1": [
                "_token.approve(_spender, _value)"
            ],
            "jump4796_1": [
                "smartToken.owner()",
                "smartToken.owner()"
            ],
            "block15466": [
                "smartToken.owner()"
            ],
            "jump5927_7": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump11343_0": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump11343_1": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump13668_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block11576_0": [
                "token.totalSupply()"
            ],
            "block11576_1": [
                "token.totalSupply()"
            ],
            "jump20576_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump20576_1": [
                "token.owner()",
                "token.owner()"
            ],
            "block5370_1": [
                "token.transfer(msg.sender, returnAmount)"
            ],
            "jump20576_4": [
                "token.owner()",
                "token.owner()"
            ],
            "block5927_7": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump21051_1": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump21051_0": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump21051_3": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump21051_2": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump21051_4": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block13668_0": [
                "token.totalSupply()"
            ],
            "block13668_1": [
                "token.totalSupply()"
            ],
            "block13668_2": [
                "token.totalSupply()"
            ],
            "block13668_3": [
                "token.totalSupply()"
            ],
            "block10500_0": [
                "token.balanceOf(msg.sender)"
            ],
            "block10500_1": [
                "token.balanceOf(msg.sender)"
            ],
            "jump21051": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump11156": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump21727": [
                "token.issue(this, _amount)",
                "token.issue(this, _amount)"
            ],
            "block5927_3": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5927_13": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump14445": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump19849_1": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "jump16643": [
                "toToken.transfer(msg.sender, _amount)",
                "toToken.transfer(msg.sender, _amount)"
            ],
            "block4796": [
                "smartToken.owner()"
            ],
            "block5927_15": [
                "_reserveToken.balanceOf(this)"
            ],
            "block4610_0": [
                "etherToken.deposit.value(msg.value)()"
            ],
            "block4610_1": [
                "etherToken.deposit.value(msg.value)()"
            ],
            "jump16008": [
                "changer.hasQuickBuyEtherToken()",
                "changer.hasQuickBuyEtherToken()"
            ],
            "block5927_17": [
                "_reserveToken.balanceOf(this)"
            ],
            "block14709_1": [
                "token.issue(msg.sender, amount)"
            ],
            "block14709_0": [
                "token.issue(msg.sender, amount)"
            ],
            "block14709": [
                "token.issue(msg.sender, amount)"
            ],
            "block5927_20": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump13941_4": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump5927_20": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump13941_2": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump13941_3": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump13941_0": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block8874": [
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "block11343_0": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block11343_1": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump4610_0": [
                "etherToken.deposit.value(msg.value)()",
                "etherToken.deposit.value(msg.value)()"
            ],
            "jump4610_1": [
                "etherToken.deposit.value(msg.value)()",
                "etherToken.deposit.value(msg.value)()"
            ],
            "block9880": [
                "_token.transfer(_to, _amount)"
            ],
            "jump8511": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "jump20079_0": [
                "_token.approve(_spender, 0)",
                "_token.approve(_spender, 0)"
            ],
            "block20576": [
                "token.owner()"
            ],
            "jump5112_0": [
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)",
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "jump5112_1": [
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)",
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "jump20079_1": [
                "_token.approve(_spender, 0)",
                "_token.approve(_spender, 0)"
            ],
            "block19569_0": [
                "_token.allowance(this, _spender)"
            ],
            "block19569_1": [
                "_token.allowance(this, _spender)"
            ],
            "block19569_2": [
                "_token.allowance(this, _spender)"
            ],
            "block12812": [
                "token.disableTransfers(_disable)"
            ],
            "block19849": [
                "_token.allowance(this, _spender)"
            ],
            "jump5112": [
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)",
                "changer.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block21051_3": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block21051_2": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block21051_1": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump12008_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block21051_4": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump11156_0": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump11156_1": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump4796": [
                "smartToken.owner()",
                "smartToken.owner()"
            ],
            "jump13668_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11576_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13668_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13668_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11576_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13258": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19849_0": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "jump19849_2": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "jump15833": [
                "changer.change(fromToken, toToken, _amount, i == pathLength - 2 ? _minReturn : 1)",
                "changer.change(fromToken, toToken, _amount, i == pathLength - 2 ? _minReturn : 1)"
            ],
            "block14445_0": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block14445_1": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block16197": [
                "changer.getQuickBuyEtherToken()"
            ]
        }
    }
}