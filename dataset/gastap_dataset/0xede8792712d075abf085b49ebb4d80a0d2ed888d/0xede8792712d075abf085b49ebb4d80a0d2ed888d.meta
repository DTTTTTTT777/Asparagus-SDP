{
    "SafeMath": {
        "function_list": [
            "Mul(uint256,uint256)",
            "Div(uint256,uint256)",
            "Sub(uint256,uint256)",
            "Add(uint256,uint256)"
        ],
        "initial_state": {
            "Mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "Div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "Sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "Add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                390,
                97
            ],
            "transfer(address,uint256)": [
                1351,
                339
            ],
            "allowance(address,address)": [
                1670,
                405
            ],
            "balanceOf(address)": [
                1033,
                273
            ],
            "transferFrom(address,address,uint256)": [
                577,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3500": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3500": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "emergencyStop()",
            "release()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "emergencyStop()": {
                "argument": {},
                "contract": {}
            },
            "release()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "emergencyStop()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "release()": [
                184,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Injii": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "Injii()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "Injii()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "allowance(address,address)": [
                1282,
                317
            ],
            "balanceOf(address)": [
                816,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "transferOwnership(address)": [
                1401,
                339
            ],
            "transfer(address,uint256)": [
                1134,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "Metadata": {
        "function_list": [
            "Metadata()",
            "getAddress(uint256)",
            "addAddress(uint256,address)"
        ],
        "initial_state": {
            "Metadata()": {
                "argument": {},
                "contract": {}
            },
            "getAddress(uint256)": {
                "argument": {
                    "addressId": "uint256"
                },
                "contract": {}
            },
            "addAddress(uint256,address)": {
                "argument": {
                    "addressId": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "getAddress(uint256)": [
                179,
                97
            ],
            "addAddress(uint256,address)": [
                288,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ecosystem": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Ecosystem(address)",
            "SetCrowdsaleAddress()",
            "rewardUser(address,uint256)",
            "tokenFallback(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256"
                }
            },
            "Ecosystem(address)": {
                "argument": {},
                "contract": {
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256"
                }
            },
            "SetCrowdsaleAddress()": {
                "argument": {},
                "contract": {
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256"
                }
            },
            "rewardUser(address,uint256)": {
                "argument": {
                    "iacToSend": "uint256"
                },
                "contract": {
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256"
                }
            },
            "tokenFallback(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256)": [
                125,
                75
            ],
            "rewardUser(address,uint256)": [
                336,
                141
            ],
            "SetCrowdsaleAddress()": [
                413,
                163
            ],
            "transferOwnership(address)": [
                436,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump982": [
                "objCrowdsale.transfer(user, iacToSend)",
                "objCrowdsale.transfer(user, iacToSend)"
            ],
            "block982": [
                "objCrowdsale.transfer(user, iacToSend)"
            ],
            "jump1313": [
                "objMetadata.getAddress(crowdsaleContractID)",
                "objMetadata.getAddress(crowdsaleContractID)"
            ],
            "block1313": [
                "objMetadata.getAddress(crowdsaleContractID)"
            ]
        }
    },
    "CompanyInventory": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "CompanyInventory(address)",
            "initiateLocking(uint256)",
            "releaseTokens()",
            "TransferFromCompanyInventory(address,uint256,bytes32)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "unlockedTokens": "uint256",
                    "initialReleaseDone": "uint256",
                    "secondReleaseDone": "uint256",
                    "totalSuppliedAfterLock": "uint256",
                    "balance": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "unlockedTokens": "uint256",
                    "initialReleaseDone": "uint256",
                    "secondReleaseDone": "uint256",
                    "totalSuppliedAfterLock": "uint256",
                    "balance": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "CompanyInventory(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "unlockedTokens": "uint256",
                    "initialReleaseDone": "uint256",
                    "secondReleaseDone": "uint256",
                    "totalSuppliedAfterLock": "uint256",
                    "balance": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "initiateLocking(uint256)": {
                "argument": {
                    "_alreadyTransferredTokens": "uint256"
                },
                "contract": {
                    "startBlock": "uint256",
                    "unlockedTokens": "uint256",
                    "initialReleaseDone": "uint256",
                    "secondReleaseDone": "uint256",
                    "totalSuppliedAfterLock": "uint256",
                    "balance": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "releaseTokens()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "unlockedTokens": "uint256",
                    "initialReleaseDone": "uint256",
                    "secondReleaseDone": "uint256",
                    "totalSuppliedAfterLock": "uint256",
                    "balance": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "TransferFromCompanyInventory(address,uint256,bytes32)": {
                "argument": {
                    "iacToCredit": "uint256",
                    "comment": "bytes32"
                },
                "contract": {
                    "startBlock": "uint256",
                    "unlockedTokens": "uint256",
                    "initialReleaseDone": "uint256",
                    "secondReleaseDone": "uint256",
                    "totalSuppliedAfterLock": "uint256",
                    "balance": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "unlockedTokens": "uint256",
                    "initialReleaseDone": "uint256",
                    "secondReleaseDone": "uint256",
                    "totalSuppliedAfterLock": "uint256",
                    "balance": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "initiateLocking(uint256)": [
                379,
                141
            ],
            "releaseTokens()": [
                511,
                185
            ],
            "TransferFromCompanyInventory(address,uint256,bytes32)": [
                202,
                75
            ],
            "transferOwnership(address)": [
                749,
                317
            ]
        },
        "block_CALL_mapping": {
            "block2065": [
                "objCrowdsale.balanceOf(this)"
            ],
            "jump1731": [
                "objMetadata.getAddress(crowdsaleContractID)",
                "objMetadata.getAddress(crowdsaleContractID)"
            ],
            "jump2065": [
                "objCrowdsale.balanceOf(this)",
                "objCrowdsale.balanceOf(this)"
            ],
            "block1731": [
                "objMetadata.getAddress(crowdsaleContractID)"
            ],
            "block1244": [
                "objCrowdsale.transfer(beneficiary,iacToCredit)"
            ],
            "jump1244": [
                "objCrowdsale.transfer(beneficiary,iacToCredit)",
                "objCrowdsale.transfer(beneficiary,iacToCredit)"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "emergencyStop()",
            "release()",
            "Ownable()",
            "transferOwnership(address)",
            "Injii()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "Crowdsale()",
            "SetEcosystemContract()",
            "GetIACFundAccount()",
            "startSale()",
            "startSecondaryCrowdsale(uint256)",
            "setPrice(uint256)",
            "createTokens(address)",
            "MintAndTransferToken(address,uint256,bytes32)",
            "TransferFromCompanyInventory(address,uint256,bytes32)",
            "LockInventory()",
            "finalize()",
            "unlock()",
            "fallback()",
            "drain()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "emergencyStop()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "release()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "Injii()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "SetEcosystemContract()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "GetIACFundAccount()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "startSale()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "startSecondaryCrowdsale(uint256)": {
                "argument": {
                    "durationSecondaryCrowdSale": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "_tokensPerEther": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "createTokens(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "MintAndTransferToken(address,uint256,bytes32)": {
                "argument": {
                    "iacToCredit": "uint256",
                    "comment": "bytes32"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "TransferFromCompanyInventory(address,uint256,bytes32)": {
                "argument": {
                    "iacToCredit": "uint256",
                    "comment": "bytes32"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "LockInventory()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "unlock()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "drain()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "startBlock": "uint256",
                    "durationCrowdSale": "uint256",
                    "gapInPrimaryCrowdsaleAndSecondaryCrowdsale": "uint256",
                    "endBlock": "uint256",
                    "maxCapCompanyInventory": "uint256",
                    "maxCap": "uint256",
                    "maxCapEcosystem": "uint256",
                    "numberOfTokensToAvail50PercentDiscount": "uint256",
                    "numberOfTokensToAvail25percentDiscount": "uint256",
                    "minimumNumberOfTokens": "uint256",
                    "targetToAchieve": "uint256",
                    "totalSupplyForCrowdsaleAndMint": "uint256",
                    "ETHReceived": "uint256",
                    "totalSupplyFromInventory": "uint256",
                    "totalRemainInInventory": "uint256",
                    "getPrice": "uint256",
                    "crowdsaleStatus": "uint256",
                    "crowdSaleType": "uint8",
                    "ecosystemContractID": "uint256",
                    "crowdsaleContractID": "uint256",
                    "inventoryContractID": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1779,
                515
            ],
            "allowance(address,address)": [
                2982,
                999
            ],
            "transferFrom(address,address,uint256)": [
                1149,
                273
            ],
            "approve(address,uint256)": [
                758,
                119
            ],
            "LockInventory()": [
                2868,
                955
            ],
            "unlock()": [
                2409,
                757
            ],
            "setPrice(uint256)": [
                2154,
                669
            ],
            "MintAndTransferToken(address,uint256,bytes32)": [
                2891,
                977
            ],
            "transferOwnership(address)": [
                3187,
                1065
            ],
            "startSale()": [
                2706,
                867
            ],
            "emergencyStop()": [
                1756,
                493
            ],
            "startSecondaryCrowdsale(uint256)": [
                1956,
                581
            ],
            "release()": [
                2001,
                603
            ],
            "drain()": [
                2343,
                713
            ],
            "finalize()": [
                1503,
                405
            ],
            "SetEcosystemContract()": [
                1083,
                229
            ],
            "TransferFromCompanyInventory(address,uint256,bytes32)": [
                859,
                141
            ],
            "transfer(address,uint256)": [
                2519,
                801
            ]
        },
        "block_CALL_mapping": {
            "jump5996": [
                "objMetada.getAddress(ecosystemContractID)",
                "objMetada.getAddress(ecosystemContractID)"
            ],
            "block8987": [
                "GetIACFundAccount().transfer(this.balance)"
            ],
            "jump3853": [
                "coinbase.transfer(msg.value)",
                "coinbase.transfer(msg.value)"
            ],
            "block3970": [
                "GetIACFundAccount().transfer(msg.value)"
            ],
            "block3970_0": [
                "GetIACFundAccount().transfer(msg.value)"
            ],
            "jump8987": [
                "GetIACFundAccount().transfer(this.balance)",
                "GetIACFundAccount().transfer(this.balance)"
            ],
            "jump10551": [
                "objMetada.getAddress(inventoryContractID)",
                "objMetada.getAddress(inventoryContractID)"
            ],
            "block5996": [
                "objMetada.getAddress(ecosystemContractID)"
            ],
            "jump3970_0": [
                "GetIACFundAccount().transfer(msg.value)",
                "GetIACFundAccount().transfer(msg.value)"
            ],
            "block10983": [
                "objCompanyInventory.initiateLocking(totalSupplyFromInventory)"
            ],
            "jump3853_0": [
                "coinbase.transfer(msg.value)",
                "coinbase.transfer(msg.value)"
            ],
            "block3853_0": [
                "coinbase.transfer(msg.value)"
            ],
            "block10551": [
                "objMetada.getAddress(inventoryContractID)"
            ],
            "block3853": [
                "coinbase.transfer(msg.value)"
            ],
            "jump3970": [
                "GetIACFundAccount().transfer(msg.value)",
                "GetIACFundAccount().transfer(msg.value)"
            ],
            "jump10983": [
                "objCompanyInventory.initiateLocking(totalSupplyFromInventory)",
                "objCompanyInventory.initiateLocking(totalSupplyFromInventory)"
            ]
        }
    }
}