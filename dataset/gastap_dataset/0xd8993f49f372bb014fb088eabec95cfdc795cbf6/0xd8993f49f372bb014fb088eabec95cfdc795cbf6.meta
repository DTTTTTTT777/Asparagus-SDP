{
    "Gift_1_ETH": {
        "function_list": [
            "fallback()",
            "GetHash(bytes)",
            "SetPass(bytes32)",
            "GetGift(bytes)",
            "PassHasBeenSet(bytes32)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "fallback()": {
                "argument": {},
                "contract": {
                    "hashPass": "bytes32"
                }
            },
            "GetHash(bytes)": {
                "argument": {
                    "pass": "bytes"
                },
                "contract": {
                    "hashPass": "bytes32"
                }
            },
            "SetPass(bytes32)": {
                "argument": {
                    "hash": "bytes32"
                },
                "contract": {
                    "hashPass": "bytes32"
                }
            },
            "GetGift(bytes)": {
                "argument": {
                    "pass": "bytes"
                },
                "contract": {
                    "hashPass": "bytes32"
                }
            },
            "PassHasBeenSet(bytes32)": {
                "argument": {
                    "hash": "bytes32"
                },
                "contract": {
                    "hashPass": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "GetHash(bytes)": [
                352,
                163
            ],
            "GetGift(bytes)": [
                147,
                97
            ],
            "SetPass(bytes32)": [
                111,
                75
            ],
            "PassHasBeenSet(bytes32)": [
                252,
                119
            ]
        },
        "block_CALL_mapping": {
            "block658": [
                "msg.sender.transfer(this.balance)"
            ],
            "jump658": [
                "msg.sender.transfer(this.balance)",
                "msg.sender.transfer(this.balance)"
            ]
        }
    }
}