{
    "Owned": {
        "function_list": [
            "Owned()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Mortal": {
        "function_list": [
            "Owned()",
            "kill()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "kill()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "kill()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Lotthereum": {
        "function_list": [
            "kill()",
            "Owned()",
            "Lotthereum(uint256,uint256,uint256,uint256,bytes32)",
            "createRound()",
            "payout()",
            "closeRound()",
            "getBlockHash(uint256)",
            "getNumber(bytes32)",
            "bet(uint8)",
            "withdraw()",
            "getBalance()",
            "getCurrentRoundId()",
            "getRoundOpen(uint256)",
            "getRoundMaxNumberOfBets(uint256)",
            "getRoundMinAmountByBet(uint256)",
            "getRoundPrize(uint256)",
            "getRoundNumberOfBets(uint256)",
            "getRoundBetOrigin(uint256,uint256)",
            "getRoundBetAmount(uint256,uint256)",
            "getRoundBetNumber(uint256,uint256)",
            "getRoundNumber(uint256)",
            "getRoundBlockNumber(uint256)",
            "getBlockPointer()",
            "fallback()"
        ],
        "initial_state": {
            "kill()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "Lotthereum(uint256,uint256,uint256,uint256,bytes32)": {
                "argument": {
                    "_blockPointer": "uint256",
                    "_maxNumberOfBets": "uint256",
                    "_minAmountByBet": "uint256",
                    "_prize": "uint256",
                    "_hash": "bytes32"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "createRound()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "payout()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "closeRound()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getBlockHash(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getNumber(bytes32)": {
                "argument": {
                    "_a": "bytes32"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "bet(uint8)": {
                "argument": {
                    "bet": "uint8"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getBalance()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getCurrentRoundId()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundOpen(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundMaxNumberOfBets(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundMinAmountByBet(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundPrize(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundNumberOfBets(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundBetOrigin(uint256,uint256)": {
                "argument": {
                    "roundId": "uint256",
                    "betId": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundBetAmount(uint256,uint256)": {
                "argument": {
                    "roundId": "uint256",
                    "betId": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundBetNumber(uint256,uint256)": {
                "argument": {
                    "roundId": "uint256",
                    "betId": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundNumber(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getRoundBlockNumber(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "getBlockPointer()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "blockPointer": "uint256",
                    "maxNumberOfBets": "uint256",
                    "minAmountByBet": "uint256",
                    "prize": "uint256",
                    "currentRound": "uint256",
                    "hash": "bytes32",
                    "rounds": "Lotthereum.Round[]",
                    "bets": "mapping(uint256 => Lotthereum.Bet[])",
                    "winners": "mapping(uint256 => address[])"
                }
            }
        },
        "function_block_mapping": {
            "getNumber(bytes32)": [
                362,
                119
            ],
            "getRoundBlockNumber(uint256)": [
                1009,
                361
            ],
            "getBlockHash(uint256)": [
                1317,
                449
            ],
            "getBlockPointer()": [
                891,
                317
            ],
            "getRoundMaxNumberOfBets(uint256)": [
                643,
                229
            ],
            "kill()": [
                620,
                207
            ],
            "getRoundOpen(uint256)": [
                751,
                273
            ],
            "bet(uint8)": [
                1258,
                427
            ],
            "getRoundNumberOfBets(uint256)": [
                1074,
                383
            ],
            "getRoundBetAmount(uint256,uint256)": [
                934,
                339
            ],
            "getRoundBetOrigin(uint256,uint256)": [
                1139,
                405
            ],
            "withdraw()": [
                577,
                185
            ],
            "getRoundPrize(uint256)": [
                512,
                163
            ],
            "getRoundMinAmountByBet(uint256)": [
                254,
                75
            ],
            "getCurrentRoundId()": [
                708,
                251
            ],
            "getBalance()": [
                319,
                97
            ],
            "getRoundNumber(uint256)": [
                820,
                295
            ],
            "getRoundBetNumber(uint256,uint256)": [
                437,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump2293": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block2293": [
                "msg.sender.transfer(amount)"
            ]
        }
    }
}