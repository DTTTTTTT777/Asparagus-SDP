{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "allowance(address,address)": [
                1118,
                273
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "transfer(address,uint256)": [
                870,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "usingMyWillConsts": {
        "function_list": [
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS": "uint256",
                    "TOKEN_DECIMALS_UINT8": "uint8",
                    "TOKEN_DECIMAL_MULTIPLIER": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "MyWillToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "crowdsaleFinished()",
            "addExcluded(address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "crowdsaleFinished()": {
                "argument": {},
                "contract": {}
            },
            "addExcluded(address)": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                459,
                119
            ],
            "symbol()": [
                1255,
                339
            ],
            "increaseApproval(address,uint256)": [
                1474,
                405
            ],
            "addExcluded(address)": [
                1407,
                383
            ],
            "mint(address,uint256)": [
                785,
                207
            ],
            "name()": [
                315,
                97
            ],
            "finishMinting()": [
                1121,
                295
            ],
            "transferOwnership(address)": [
                1717,
                471
            ],
            "balanceOf(address)": [
                1034,
                273
            ],
            "decreaseApproval(address,uint256)": [
                933,
                251
            ],
            "transferFrom(address,address,uint256)": [
                603,
                163
            ],
            "allowance(address,address)": [
                1575,
                427
            ],
            "transfer(address,uint256)": [
                1306,
                361
            ],
            "crowdsaleFinished()": [
                1694,
                449
            ],
            "decimals()": [
                736,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint32,uint32,uint256,address)",
            "createTokenContract()",
            "getRate(uint256)",
            "getBaseRate()",
            "getRateScale()",
            "fallback()",
            "buyTokens(address,uint256)",
            "forwardFunds(uint256)",
            "validPurchase(uint256,uint256,uint256)",
            "hasEnded()",
            "hasStarted()",
            "hasEnded(uint256)"
        ],
        "initial_state": {
            "Crowdsale(uint32,uint32,uint256,address)": {
                "argument": {
                    "_startTime": "uint32",
                    "_endTime": "uint32",
                    "_hardCap": "uint256"
                },
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "getRate(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "getBaseRate()": {
                "argument": {},
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "getRateScale()": {
                "argument": {},
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "buyTokens(address,uint256)": {
                "argument": {
                    "amountWei": "uint256"
                },
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "amountWei": "uint256"
                },
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "validPurchase(uint256,uint256,uint256)": {
                "argument": {
                    "_amountWei": "uint256",
                    "_actualRate": "uint256",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "hasStarted()": {
                "argument": {},
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            },
            "hasEnded(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "startTime": "uint32",
                    "endTime": "uint32",
                    "weiRaised": "uint256",
                    "soldTokens": "uint256",
                    "hardCap": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block4816": [
                "token.totalSupply()"
            ],
            "jump2429": [
                "multisigWallet.transfer(msg.value)",
                "multisigWallet.transfer(msg.value)"
            ],
            "jump4816": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block2809": [
                "token.mint(msg.sender, tokens)"
            ],
            "block6936": [
                "token.balanceOf(this)"
            ],
            "jump5736": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block7128": [
                "alienToken.transfer(multisigWallet, token.balanceOf(this))"
            ],
            "jump2809": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump6936": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block6176": [
                "token.transferOwnership(owner)"
            ],
            "block2809_0": [
                "token.mint(msg.sender, tokens)"
            ],
            "block2809_1": [
                "token.mint(msg.sender, tokens)"
            ],
            "jump5542": [
                "token.mint(bountyTokensWallet, bountyTokens)",
                "token.mint(bountyTokensWallet, bountyTokens)"
            ],
            "jump5930": [
                "token.allowTransfer()",
                "token.allowTransfer()"
            ],
            "block2429_0": [
                "multisigWallet.transfer(msg.value)"
            ],
            "block2429_1": [
                "multisigWallet.transfer(msg.value)"
            ],
            "jump6176": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "jump5251": [
                "token.mint(foundersTokensWallet, foundersTokens)",
                "token.mint(foundersTokensWallet, foundersTokens)"
            ],
            "block5251": [
                "token.mint(foundersTokensWallet, foundersTokens)"
            ],
            "jump2809_0": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump2809_1": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "block5542": [
                "token.mint(bountyTokensWallet, bountyTokens)"
            ],
            "jump2429_0": [
                "multisigWallet.transfer(msg.value)",
                "multisigWallet.transfer(msg.value)"
            ],
            "jump2429_1": [
                "multisigWallet.transfer(msg.value)",
                "multisigWallet.transfer(msg.value)"
            ],
            "jump7128": [
                "alienToken.transfer(multisigWallet, token.balanceOf(this))",
                "alienToken.transfer(multisigWallet, token.balanceOf(this))"
            ],
            "block5736": [
                "token.finishMinting()"
            ],
            "block5930": [
                "token.allowTransfer()"
            ],
            "block2429": [
                "multisigWallet.transfer(msg.value)"
            ]
        }
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "jump2186": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block2186": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "MyWillRateProvider": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "getRate(address,uint256,uint256)",
            "getRateScale()",
            "getBaseRate()",
            "getRateScale()",
            "getBaseRate()",
            "getRate(address,uint256,uint256)",
            "setExclusiveRate(address,uint256,uint16,uint32)",
            "removeExclusiveRate(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            },
            "getRate(address,uint256,uint256)": {
                "argument": {
                    "totalSold": "uint256",
                    "amountWei": "uint256"
                },
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            },
            "getRateScale()": {
                "argument": {},
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            },
            "getBaseRate()": {
                "argument": {},
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            },
            "setExclusiveRate(address,uint256,uint16,uint32)": {
                "argument": {
                    "_rate": "uint256",
                    "_bonusPercent1000": "uint16",
                    "_workUntil": "uint32"
                },
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            },
            "removeExclusiveRate(address)": {
                "argument": {},
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "RATE_SCALE": "uint256",
                    "STEP_30": "uint256",
                    "STEP_20": "uint256",
                    "STEP_10": "uint256",
                    "RATE_30": "uint256",
                    "RATE_20": "uint256",
                    "RATE_10": "uint256",
                    "BASE_RATE": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "removeExclusiveRate(address)": [
                243,
                97
            ],
            "setExclusiveRate(address,uint256,uint16,uint32)": [
                310,
                119
            ],
            "getRateScale()": [
                547,
                185
            ],
            "getBaseRate()": [
                504,
                163
            ],
            "getRate(address,uint256,uint256)": [
                136,
                75
            ],
            "transferOwnership(address)": [
                590,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "MyWillCrowdsale": {
        "function_list": [
            "RefundableCrowdsale(uint32,uint32,uint256,address,uint256)",
            "forwardFunds(uint256)",
            "claimRefund()",
            "closeVault()",
            "finalization()",
            "goalReached()",
            "FinalizableCrowdsale(uint32,uint32,uint256,address)",
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint32,uint32,uint256,address)",
            "createTokenContract()",
            "getRate(uint256)",
            "getBaseRate()",
            "getRateScale()",
            "fallback()",
            "buyTokens(address,uint256)",
            "forwardFunds(uint256)",
            "validPurchase(uint256,uint256,uint256)",
            "hasEnded()",
            "hasStarted()",
            "hasEnded(uint256)",
            "MyWillCrowdsale(uint32,uint32,uint256,uint256)",
            "createTokenContract()",
            "getRate(uint256)",
            "getBaseRate()",
            "getRateScale()",
            "setRateProvider(address)",
            "setEndTime(uint32)",
            "validPurchase(uint256,uint256,uint256)",
            "finalization()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "RefundableCrowdsale(uint32,uint32,uint256,address,uint256)": {
                "argument": {
                    "_startTime": "uint32",
                    "_endTime": "uint32",
                    "_hardCap": "uint256",
                    "_goal": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "amountWei": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "closeVault()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "FinalizableCrowdsale(uint32,uint32,uint256,address)": {
                "argument": {
                    "_startTime": "uint32",
                    "_endTime": "uint32",
                    "_hardCap": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "Crowdsale(uint32,uint32,uint256,address)": {
                "argument": {
                    "_startTime": "uint32",
                    "_endTime": "uint32",
                    "_hardCap": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "getRate(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "getBaseRate()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "getRateScale()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "buyTokens(address,uint256)": {
                "argument": {
                    "amountWei": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "validPurchase(uint256,uint256,uint256)": {
                "argument": {
                    "_amountWei": "uint256",
                    "_actualRate": "uint256",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "hasStarted()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "hasEnded(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "MyWillCrowdsale(uint32,uint32,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint32",
                    "_endTime": "uint32",
                    "_softCapWei": "uint256",
                    "_hardCapTokens": "uint256"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "setRateProvider(address)": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "setEndTime(uint32)": {
                "argument": {
                    "_endTime": "uint32"
                },
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "teamTokens": "uint256",
                    "bountyTokens": "uint256",
                    "icoTokens": "uint256",
                    "minimalPurchase": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1205,
                449
            ],
            "hasStarted()": [
                472,
                163
            ],
            "claimRefund()": [
                1113,
                405
            ],
            "goalReached()": [
                778,
                295
            ],
            "hasEnded(uint256)": [
                1136,
                427
            ],
            "setRateProvider(address)": [
                1046,
                383
            ],
            "closeVault()": [
                308,
                75
            ],
            "setEndTime(uint32)": [
                672,
                251
            ],
            "transferOwnership(address)": [
                1252,
                471
            ],
            "finalize()": [
                519,
                185
            ]
        },
        "block_CALL_mapping": {
            "block7230": [
                "vault.enableRefunds()"
            ],
            "jump5543": [
                "wallet.transfer(amountWei)",
                "wallet.transfer(amountWei)"
            ],
            "jump2252_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2252": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block6469": [
                "token.transferOwnership(owner)"
            ],
            "jump4383": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block4119": [
                "token.totalSupply()"
            ],
            "jump2768": [
                "vault.close()",
                "vault.close()"
            ],
            "block6712_0": [
                "rateProvider.getRate(msg.sender, soldTokens, minimalPurchase)"
            ],
            "jump6223": [
                "MyWillToken(token).crowdsaleFinished()",
                "MyWillToken(token).crowdsaleFinished()"
            ],
            "block6223": [
                "MyWillToken(token).crowdsaleFinished()"
            ],
            "block5083": [
                "rateProvider.getRate(msg.sender, soldTokens, _value)"
            ],
            "block6011": [
                "token.finishMinting()"
            ],
            "jump6712": [
                "rateProvider.getRate(msg.sender, soldTokens, minimalPurchase)",
                "rateProvider.getRate(msg.sender, soldTokens, minimalPurchase)"
            ],
            "jump7230": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump3892": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block5285_0": [
                "rateProvider.getRateScale()"
            ],
            "jump4119": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump1717_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump5285": [
                "rateProvider.getRateScale()",
                "rateProvider.getRateScale()"
            ],
            "block5083_0": [
                "rateProvider.getRate(msg.sender, soldTokens, _value)"
            ],
            "block2252": [
                "token.mint(beneficiary, tokens)"
            ],
            "block5083_1": [
                "rateProvider.getRate(msg.sender, soldTokens, _value)"
            ],
            "block5285": [
                "rateProvider.getRateScale()"
            ],
            "jump5285_0": [
                "rateProvider.getRateScale()",
                "rateProvider.getRateScale()"
            ],
            "jump1717": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump5841_0": [
                "vault.deposit.value(amountWei)(msg.sender)",
                "vault.deposit.value(amountWei)(msg.sender)"
            ],
            "block6712": [
                "rateProvider.getRate(msg.sender, soldTokens, minimalPurchase)"
            ],
            "jump4383_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5841": [
                "vault.deposit.value(amountWei)(msg.sender)"
            ],
            "jump2432": [
                "msg.sender.transfer(change)",
                "msg.sender.transfer(change)"
            ],
            "block1717": [
                "token.totalSupply()"
            ],
            "block5543_0": [
                "wallet.transfer(amountWei)"
            ],
            "jump5543_0": [
                "wallet.transfer(amountWei)",
                "wallet.transfer(amountWei)"
            ],
            "jump6011": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block2432": [
                "msg.sender.transfer(change)"
            ],
            "block7067": [
                "vault.close()"
            ],
            "jump5083": [
                "rateProvider.getRate(msg.sender, soldTokens, _value)",
                "rateProvider.getRate(msg.sender, soldTokens, _value)"
            ],
            "jump5083_1": [
                "rateProvider.getRate(msg.sender, soldTokens, _value)",
                "rateProvider.getRate(msg.sender, soldTokens, _value)"
            ],
            "block2252_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2768": [
                "vault.close()"
            ],
            "block4383": [
                "token.totalSupply()"
            ],
            "block5543": [
                "wallet.transfer(amountWei)"
            ],
            "jump6469": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "jump6712_0": [
                "rateProvider.getRate(msg.sender, soldTokens, minimalPurchase)",
                "rateProvider.getRate(msg.sender, soldTokens, minimalPurchase)"
            ],
            "jump5841": [
                "vault.deposit.value(amountWei)(msg.sender)",
                "vault.deposit.value(amountWei)(msg.sender)"
            ],
            "jump7067": [
                "vault.close()",
                "vault.close()"
            ],
            "block3892": [
                "vault.refund(msg.sender)"
            ],
            "block4383_0": [
                "token.totalSupply()"
            ],
            "jump2432_0": [
                "msg.sender.transfer(change)",
                "msg.sender.transfer(change)"
            ],
            "block5841_0": [
                "vault.deposit.value(amountWei)(msg.sender)"
            ],
            "block2432_0": [
                "msg.sender.transfer(change)"
            ],
            "block1717_0": [
                "token.totalSupply()"
            ],
            "jump5083_0": [
                "rateProvider.getRate(msg.sender, soldTokens, _value)",
                "rateProvider.getRate(msg.sender, soldTokens, _value)"
            ]
        }
    }
}