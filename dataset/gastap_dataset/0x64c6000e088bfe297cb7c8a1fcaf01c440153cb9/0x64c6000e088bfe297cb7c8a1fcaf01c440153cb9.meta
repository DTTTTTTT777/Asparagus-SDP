{
    "DateTime": {
        "function_list": [
            "isLeapYear(uint16)",
            "leapYearsBefore(uint256)",
            "getDaysInMonth(uint8,uint16)",
            "parseTimestamp(uint256)",
            "getYear(uint256)",
            "getMonth(uint256)",
            "getDay(uint256)",
            "getHour(uint256)",
            "getMinute(uint256)",
            "getSecond(uint256)",
            "getWeekday(uint256)",
            "toTimestamp(uint16,uint8,uint8)",
            "toTimestamp(uint16,uint8,uint8,uint8)",
            "toTimestamp(uint16,uint8,uint8,uint8,uint8)",
            "toTimestamp(uint16,uint8,uint8,uint8,uint8,uint8)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "isLeapYear(uint16)": {
                "argument": {
                    "year": "uint16"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "leapYearsBefore(uint256)": {
                "argument": {
                    "year": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getDaysInMonth(uint8,uint16)": {
                "argument": {
                    "month": "uint8",
                    "year": "uint16"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "parseTimestamp(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getYear(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getMonth(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getDay(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getHour(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getMinute(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getSecond(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getWeekday(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8",
                    "hour": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8",
                    "hour": "uint8",
                    "minute": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8,uint8,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8",
                    "hour": "uint8",
                    "minute": "uint8",
                    "second": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            }
        },
        "function_block_mapping": {
            "getHour(uint256)": [
                213,
                75
            ],
            "getDaysInMonth(uint8,uint16)": [
                1237,
                339
            ],
            "getSecond(uint256)": [
                655,
                185
            ],
            "isLeapYear(uint16)": [
                1099,
                295
            ],
            "getWeekday(uint256)": [
                284,
                97
            ],
            "toTimestamp(uint16,uint8,uint8,uint8,uint8,uint8)": [
                821,
                229
            ],
            "toTimestamp(uint16,uint8,uint8,uint8)": [
                547,
                163
            ],
            "getDay(uint256)": [
                476,
                141
            ],
            "getMinute(uint256)": [
                1325,
                361
            ],
            "getMonth(uint256)": [
                1028,
                273
            ],
            "leapYearsBefore(uint256)": [
                1172,
                317
            ],
            "toTimestamp(uint16,uint8,uint8,uint8,uint8)": [
                355,
                119
            ],
            "getYear(uint256)": [
                955,
                251
            ],
            "toTimestamp(uint16,uint8,uint8)": [
                726,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "ProofOfExistence": {
        "function_list": [
            "uintToString(uint256)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "notarize(string)",
            "verify(string)"
        ],
        "initial_state": {
            "uintToString(uint256)": {
                "argument": {
                    "v": "uint256"
                },
                "contract": {
                    "result": "string"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "result": "string"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "result": "string"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "result": "string"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "result": "string"
                }
            },
            "notarize(string)": {
                "argument": {
                    "sha256": "string"
                },
                "contract": {
                    "result": "string"
                }
            },
            "verify(string)": {
                "argument": {
                    "sha256": "string"
                },
                "contract": {
                    "result": "string"
                }
            }
        },
        "function_block_mapping": {
            "notarize(string)": [
                247,
                97
            ],
            "verify(string)": [
                352,
                119
            ],
            "uintToString(uint256)": [
                578,
                141
            ]
        },
        "block_CALL_mapping": {
            "block1629": [
                "dt.getMonth(timestamp)"
            ],
            "block1453": [
                "dt.getYear(timestamp)"
            ],
            "block1979": [
                "dt.getHour(timestamp)"
            ],
            "block2154": [
                "dt.getMinute(timestamp)"
            ],
            "jump2154": [
                "dt.getMinute(timestamp)",
                "dt.getMinute(timestamp)"
            ],
            "jump1629": [
                "dt.getMonth(timestamp)",
                "dt.getMonth(timestamp)"
            ],
            "block1804": [
                "dt.getDay(timestamp)"
            ],
            "jump1979": [
                "dt.getHour(timestamp)",
                "dt.getHour(timestamp)"
            ],
            "block2329": [
                "dt.getSecond(timestamp)"
            ],
            "jump2329": [
                "dt.getSecond(timestamp)",
                "dt.getSecond(timestamp)"
            ],
            "jump1804": [
                "dt.getDay(timestamp)",
                "dt.getDay(timestamp)"
            ],
            "jump1453": [
                "dt.getYear(timestamp)",
                "dt.getYear(timestamp)"
            ]
        }
    }
}