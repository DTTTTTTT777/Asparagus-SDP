{
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {}
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {}
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeBtcOracle(address)": [
                147,
                75
            ],
            "changeOracle(address)": [
                301,
                119
            ],
            "confirmOwner()": [
                609,
                207
            ],
            "changeOwner(address)": [
                542,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Stateful": {
        "function_list": [
            "setState(Stateful.State)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "setState(Stateful.State)",
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)",
            "Crowdsale()",
            "emitTokens(address,uint256,uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "fallback()",
            "depositUSD(address,uint256)",
            "depositBTC(address,uint256,uint256,bytes32)",
            "emitTokensFor(address,uint256,uint256,uint256)",
            "getTokenPriceUSDWEI()",
            "startPreSale(address,uint256,uint256,uint256)",
            "finishPreSale()",
            "startSale(address,uint256,uint256,uint256,uint256)",
            "failSale(uint256)",
            "completeSale(uint256)",
            "setEtherPriceUSDWEI(uint256)",
            "setBeneficiary(address)",
            "withdrawBack()",
            "returnInvestments(uint256)",
            "returnInvestmentsTo(address)",
            "returnInvestmentsToInternal(address)",
            "withdrawFunds(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "emitTokens(address,uint256,uint256)": {
                "argument": {
                    "_tokenPriceUSDWEI": "uint256",
                    "_usdwei": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "emitAdditionalTokens()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_amountUSDWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "depositBTC(address,uint256,uint256,bytes32)": {
                "argument": {
                    "_amountBTCWEI": "uint256",
                    "_btcPriceUSDWEI": "uint256",
                    "_btcTxId": "bytes32"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "emitTokensFor(address,uint256,uint256,uint256)": {
                "argument": {
                    "_tokenPriceUSDWEI": "uint256",
                    "_valueUSDWEI": "uint256",
                    "_valueWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "getTokenPriceUSDWEI()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "startPreSale(address,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "finishPreSale()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "startSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256",
                    "_minimalSuccessUSDWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "failSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "completeSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "setEtherPriceUSDWEI(uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "returnInvestments(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "returnInvestmentsTo(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "returnInvestmentsToInternal(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "withdrawFunds(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block1356_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1356_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump931": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1356": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump931_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump931_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1356_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1356_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block931_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block931_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block931": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1356": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Crowdsale()",
            "emitTokens(address,uint256,uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "fallback()",
            "depositUSD(address,uint256)",
            "depositBTC(address,uint256,uint256,bytes32)",
            "emitTokensFor(address,uint256,uint256,uint256)",
            "getTokenPriceUSDWEI()",
            "startPreSale(address,uint256,uint256,uint256)",
            "finishPreSale()",
            "startSale(address,uint256,uint256,uint256,uint256)",
            "failSale(uint256)",
            "completeSale(uint256)",
            "setEtherPriceUSDWEI(uint256)",
            "setBeneficiary(address)",
            "withdrawBack()",
            "returnInvestments(uint256)",
            "returnInvestmentsTo(address)",
            "returnInvestmentsToInternal(address)",
            "withdrawFunds(uint256)",
            "setState(Stateful.State)",
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)",
            "Token()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "emitTokens(address,uint256,uint256)": {
                "argument": {
                    "_tokenPriceUSDWEI": "uint256",
                    "_usdwei": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "emitAdditionalTokens()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_amountUSDWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "depositBTC(address,uint256,uint256,bytes32)": {
                "argument": {
                    "_amountBTCWEI": "uint256",
                    "_btcPriceUSDWEI": "uint256",
                    "_btcTxId": "bytes32"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "emitTokensFor(address,uint256,uint256,uint256)": {
                "argument": {
                    "_tokenPriceUSDWEI": "uint256",
                    "_valueUSDWEI": "uint256",
                    "_valueWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "getTokenPriceUSDWEI()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "startPreSale(address,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "finishPreSale()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "startSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256",
                    "_minimalSuccessUSDWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "failSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "completeSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "setEtherPriceUSDWEI(uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "returnInvestments(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "returnInvestmentsTo(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "returnInvestmentsToInternal(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "withdrawFunds(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ArtexToken": {
        "function_list": [
            "MigratableToken()",
            "setMigrationHost(address)",
            "migrateInvestorFromHost(address)",
            "migrate()",
            "setMigrationAgent(address)",
            "Token()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Crowdsale()",
            "emitTokens(address,uint256,uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "fallback()",
            "depositUSD(address,uint256)",
            "depositBTC(address,uint256,uint256,bytes32)",
            "emitTokensFor(address,uint256,uint256,uint256)",
            "getTokenPriceUSDWEI()",
            "startPreSale(address,uint256,uint256,uint256)",
            "finishPreSale()",
            "startSale(address,uint256,uint256,uint256,uint256)",
            "failSale(uint256)",
            "completeSale(uint256)",
            "setEtherPriceUSDWEI(uint256)",
            "setBeneficiary(address)",
            "withdrawBack()",
            "returnInvestments(uint256)",
            "returnInvestmentsTo(address)",
            "returnInvestmentsToInternal(address)",
            "withdrawFunds(uint256)",
            "setState(Stateful.State)",
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)",
            "ArtexToken()",
            "emitTokens(address,uint256,uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "addAllowedContract(address)",
            "removeAllowedContract(address)",
            "transferToKnownContract(address,uint256,bytes32[])",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "MigratableToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setMigrationHost(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "migrateInvestorFromHost(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "migrate()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "emitTokens(address,uint256,uint256)": {
                "argument": {
                    "_tokenPriceUSDWEI": "uint256",
                    "_valueUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "emitAdditionalTokens()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_amountUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "depositBTC(address,uint256,uint256,bytes32)": {
                "argument": {
                    "_amountBTCWEI": "uint256",
                    "_btcPriceUSDWEI": "uint256",
                    "_btcTxId": "bytes32"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "emitTokensFor(address,uint256,uint256,uint256)": {
                "argument": {
                    "_tokenPriceUSDWEI": "uint256",
                    "_valueUSDWEI": "uint256",
                    "_valueWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "getTokenPriceUSDWEI()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "startPreSale(address,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "finishPreSale()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "startSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256",
                    "_minimalSuccessUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "failSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "completeSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setEtherPriceUSDWEI(uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "returnInvestments(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "returnInvestmentsTo(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "returnInvestmentsToInternal(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "withdrawFunds(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "ArtexToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "addAllowedContract(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "removeAllowedContract(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "transferToKnownContract(address,uint256,bytes32[])": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32[]"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            }
        },
        "function_block_mapping": {
            "startSale(address,uint256,uint256,uint256,uint256)": [
                1018,
                75
            ],
            "withdrawFunds(uint256)": [
                1611,
                251
            ],
            "setMigrationHost(address)": [
                3176,
                735
            ],
            "allowance(address,address)": [
                4733,
                1219
            ],
            "removeAllowedContract(address)": [
                3802,
                933
            ],
            "transferFrom(address,address,uint256)": [
                1963,
                383
            ],
            "failSale(uint256)": [
                1478,
                185
            ],
            "approve(address,uint256)": [
                1378,
                141
            ],
            "changeBtcOracle(address)": [
                1656,
                273
            ],
            "migrate()": [
                3549,
                845
            ],
            "changeOracle(address)": [
                2509,
                559
            ],
            "setMigrationAgent(address)": [
                3109,
                713
            ],
            "depositBTC(address,uint256,uint256,bytes32)": [
                2408,
                537
            ],
            "transferToKnownContract(address,uint256,bytes32[])": [
                4852,
                1241
            ],
            "withdrawBack()": [
                1455,
                163
            ],
            "migrateInvestorFromHost(address)": [
                4039,
                999
            ],
            "setEtherPriceUSDWEI(uint256)": [
                1523,
                207
            ],
            "changeOwner(address)": [
                4236,
                1065
            ],
            "depositUSD(address,uint256)": [
                4656,
                1197
            ],
            "balanceOf(address)": [
                13291,
                934
            ],
            "returnInvestmentsTo(address)": [
                2139,
                427
            ],
            "confirmOwner()": [
                4489,
                1131
            ],
            "finishPreSale()": [
                2385,
                515
            ],
            "completeSale(uint256)": [
                3064,
                691
            ],
            "returnInvestments(uint256)": [
                3330,
                779
            ],
            "setBeneficiary(address)": [
                1809,
                339
            ],
            "transfer(address,uint256)": [
                4303,
                1087
            ],
            "startPreSale(address,uint256,uint256,uint256)": [
                2576,
                581
            ],
            "addAllowedContract(address)": [
                2072,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump13522": [
                "preArtex.deposits(_address)",
                "preArtex.deposits(_address)"
            ],
            "jump13291": [
                "preArtex.balanceOf(_address)",
                "preArtex.balanceOf(_address)"
            ],
            "jump12247": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "block7212": [
                "beneficiary.call.gas(3000000).value(_value)()"
            ],
            "block13291": [
                "preArtex.balanceOf(_address)"
            ],
            "block10799": [
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "jump17003_1": [
                "_to.call.gas(3000000).value(value)()",
                "_to.call.gas(3000000).value(value)()"
            ],
            "block897": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "block9069": [
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "jump7212": [
                "beneficiary.call.gas(3000000).value(_value)()",
                "beneficiary.call.gas(3000000).value(_value)()"
            ],
            "jump16303": [
                "knownContract.transfered(msg.sender, _value, _data)",
                "knownContract.transfered(msg.sender, _value, _data)"
            ],
            "block16303": [
                "knownContract.transfered(msg.sender, _value, _data)"
            ],
            "jump13683": [
                "preArtex.tokenPriceUSDWEI()",
                "preArtex.tokenPriceUSDWEI()"
            ],
            "block17003_1": [
                "_to.call.gas(3000000).value(value)()"
            ],
            "block17003_0": [
                "_to.call.gas(3000000).value(value)()"
            ],
            "block12247": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "jump10799": [
                "beneficiary.call.gas(3000000).value(this.balance)()",
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "block897_0": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "jump897_0": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()",
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "jump9069": [
                "beneficiary.call.gas(3000000).value(this.balance)()",
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "block17003": [
                "_to.call.gas(3000000).value(value)()"
            ],
            "block13522": [
                "preArtex.deposits(_address)"
            ],
            "block13683": [
                "preArtex.tokenPriceUSDWEI()"
            ],
            "jump17003": [
                "_to.call.gas(3000000).value(value)()",
                "_to.call.gas(3000000).value(value)()"
            ],
            "jump897": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()",
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "jump17003_0": [
                "_to.call.gas(3000000).value(value)()",
                "_to.call.gas(3000000).value(value)()"
            ]
        }
    }
}