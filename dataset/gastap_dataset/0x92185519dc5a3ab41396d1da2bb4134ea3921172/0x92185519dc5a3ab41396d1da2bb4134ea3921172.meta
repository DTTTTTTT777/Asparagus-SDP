{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "allowance(address,address)": [
                1118,
                273
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "transfer(address,uint256)": [
                870,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "PullPayment": {
        "function_list": [
            "asyncSend(address,uint256)",
            "withdrawPayments()"
        ],
        "initial_state": {
            "asyncSend(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalPayments": "uint256"
                }
            },
            "withdrawPayments()": {
                "argument": {},
                "contract": {
                    "totalPayments": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawPayments()": [
                134,
                22
            ]
        },
        "block_CALL_mapping": {
            "block396": [
                "payee.send(payment)"
            ],
            "jump396": [
                "payee.send(payment)",
                "payee.send(payment)"
            ]
        }
    },
    "TrivialToken": {
        "function_list": [
            "asyncSend(address,uint256)",
            "withdrawPayments()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "TrivialToken()",
            "initOne(string,string,uint8,uint256,uint256,address,address,bytes32)",
            "initTwo(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
            "startIco()",
            "contributeInIco()",
            "distributeTokens(uint256)",
            "finishIco()",
            "checkContribution(address)",
            "canStartAuction()",
            "startAuction()",
            "bidInAuction()",
            "calculateUserBid()",
            "finishAuction()",
            "withdrawShares(address)",
            "contributorsCount()",
            "setDescriptionHash(bytes32)",
            "setAuctionWinnerMessageHash(bytes32)",
            "killContract()",
            "getContractState()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "asyncSend(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "withdrawPayments()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "TrivialToken()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "initOne(string,string,uint8,uint256,uint256,address,address,bytes32)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_icoDuration": "uint256",
                    "_auctionDuration": "uint256",
                    "_descriptionHash": "bytes32"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "initTwo(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_totalSupply": "uint256",
                    "_tokensForArtist": "uint256",
                    "_tokensForTrivial": "uint256",
                    "_tokensForIco": "uint256",
                    "_minEthAmount": "uint256",
                    "_minBidPercentage": "uint256",
                    "_tokensPercentageForKeyHolder": "uint256",
                    "_cleanupDelay": "uint256",
                    "_freePeriodDuration": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "startIco()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "contributeInIco()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "distributeTokens(uint256)": {
                "argument": {
                    "contributorsNumber": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "finishIco()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "checkContribution(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "canStartAuction()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "startAuction()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "bidInAuction()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "calculateUserBid()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "finishAuction()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "withdrawShares(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "contributorsCount()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "setDescriptionHash(bytes32)": {
                "argument": {
                    "_descriptionHash": "bytes32"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "setAuctionWinnerMessageHash(bytes32)": {
                "argument": {
                    "_auctionWinnerMessageHash": "bytes32"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "killContract()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "getContractState()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "minEthAmount": "uint256",
                    "minBidPercentage": "uint256",
                    "tokensPercentageForKeyHolder": "uint256",
                    "cleanupDelay": "uint256",
                    "freePeriodDuration": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "icoDuration": "uint256",
                    "icoEndTime": "uint256",
                    "auctionDuration": "uint256",
                    "auctionEndTime": "uint256",
                    "freePeriodEndTime": "uint256",
                    "tokensForArtist": "uint256",
                    "tokensForTrivial": "uint256",
                    "tokensForIco": "uint256",
                    "amountRaised": "uint256",
                    "highestBid": "uint256",
                    "auctionWinnerMessageHash": "bytes32",
                    "nextContributorIndexToBeGivenTokens": "uint256",
                    "tokensDistributedToContributors": "uint256",
                    "descriptionHashHistory": "TrivialToken.DescriptionHash[]",
                    "contributors": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "startAuction()": [
                2670,
                660
            ],
            "finishAuction()": [
                2355,
                484
            ],
            "allowance(address,address)": [
                4114,
                1122
            ],
            "transferFrom(address,address,uint256)": [
                1848,
                330
            ],
            "withdrawShares(address)": [
                4343,
                1188
            ],
            "setDescriptionHash(bytes32)": [
                1733,
                264
            ],
            "approve(address,uint256)": [
                1257,
                66
            ],
            "startIco()": [
                3408,
                902
            ],
            "canStartAuction()": [
                4024,
                1078
            ],
            "withdrawPayments()": [
                2647,
                638
            ],
            "killContract()": [
                1825,
                308
            ],
            "setAuctionWinnerMessageHash(bytes32)": [
                1554,
                198
            ],
            "contributeInIco()": [
                2637,
                616
            ],
            "distributeTokens(uint256)": [
                2823,
                726
            ],
            "getContractState()": [
                3122,
                836
            ],
            "checkContribution(address)": [
                3857,
                1034
            ],
            "balanceOf(address)": [
                2693,
                682
            ],
            "bidInAuction()": [
                1401,
                110
            ],
            "contributorsCount()": [
                2868,
                748
            ],
            "initOne(string,string,uint8,uint256,uint256,address,address,bytes32)": [
                971,
                44
            ],
            "finishIco()": [
                4320,
                1166
            ],
            "transfer(address,uint256)": [
                3705,
                990
            ],
            "initTwo(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": [
                2911,
                770
            ]
        },
        "block_CALL_mapping": {
            "block5161_0": [
                "highestBidder.send(amountToReturn)"
            ],
            "jump5161": [
                "highestBidder.send(amountToReturn)",
                "highestBidder.send(amountToReturn)"
            ],
            "block8213": [
                "payee.send(payment)"
            ],
            "block11781": [
                "artist.send(this.balance)"
            ],
            "jump5161_1": [
                "highestBidder.send(amountToReturn)",
                "highestBidder.send(amountToReturn)"
            ],
            "jump11781": [
                "artist.send(this.balance)",
                "artist.send(this.balance)"
            ],
            "block5161_1": [
                "highestBidder.send(amountToReturn)"
            ],
            "jump12506": [
                "holder.transfer(\n                SafeMath.div(SafeMath.mul(highestBid, availableTokens), totalSupply)\n            )",
                "holder.transfer(\n                SafeMath.div(SafeMath.mul(highestBid, availableTokens), totalSupply)\n            )"
            ],
            "jump5161_0": [
                "highestBidder.send(amountToReturn)",
                "highestBidder.send(amountToReturn)"
            ],
            "block12506": [
                "holder.transfer(\n                SafeMath.div(SafeMath.mul(highestBid, availableTokens), totalSupply)\n            )"
            ],
            "jump8213": [
                "payee.send(payment)",
                "payee.send(payment)"
            ],
            "block5161": [
                "highestBidder.send(amountToReturn)"
            ]
        }
    }
}