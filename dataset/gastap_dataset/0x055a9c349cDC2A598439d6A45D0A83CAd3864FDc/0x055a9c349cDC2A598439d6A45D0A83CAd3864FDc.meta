{
    "PassTokenManager": {
        "function_list": [
            "TotalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "priceDivisor(uint256)",
            "actualPriceDivisor()",
            "fundingMaxAmount(address)",
            "initToken(string,string,uint8,address,uint256,bool)",
            "setTokenPriceProposal(uint256,uint256,uint256)",
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)",
            "createToken(address,uint256,uint256)",
            "setFundingStartTime(uint256)",
            "rewardToken(address,uint256,uint256)",
            "closeFunding()",
            "setFundingFueled()",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "TotalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "priceDivisor(uint256)",
            "actualPriceDivisor()",
            "fundingMaxAmount(address)",
            "PassTokenManager(address,address,address)",
            "initToken(string,string,uint8,address,uint256,bool)",
            "setTokenPriceProposal(uint256,uint256,uint256)",
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)",
            "createToken(address,uint256,uint256)",
            "setFundingStartTime(uint256)",
            "rewardToken(address,uint256,uint256)",
            "closeFunding()",
            "setFundingFueled()",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "TotalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "FundedAmount(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "priceDivisor(uint256)": {
                "argument": {
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "actualPriceDivisor()": {
                "argument": {},
                "contract": {}
            },
            "fundingMaxAmount(address)": {
                "argument": {},
                "contract": {}
            },
            "initToken(string,string,uint8,address,uint256,bool)": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string",
                    "_tokenDecimals": "uint8",
                    "_initialSupply": "uint256"
                },
                "contract": {}
            },
            "setTokenPriceProposal(uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_inflationRate": "uint256",
                    "_closingTime": "uint256"
                },
                "contract": {}
            },
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_maxAmountToFund": "uint256",
                    "_minutesFundingPeriod": "uint256",
                    "_inflationRate": "uint256",
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "createToken(address,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "setFundingStartTime(uint256)": {
                "argument": {
                    "_startTime": "uint256"
                },
                "contract": {}
            },
            "rewardToken(address,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_date": "uint256"
                },
                "contract": {}
            },
            "closeFunding()": {
                "argument": {},
                "contract": {}
            },
            "setFundingFueled()": {
                "argument": {},
                "contract": {}
            },
            "ableTransfer()": {
                "argument": {},
                "contract": {}
            },
            "disableTransfer()": {
                "argument": {},
                "contract": {}
            },
            "blockTransfer(address,uint256)": {
                "argument": {
                    "_deadLine": "uint256"
                },
                "contract": {}
            },
            "transferFromTo(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "PassTokenManager(address,address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setTokenPriceProposal(uint256,uint256,uint256)": [
                2167,
                537
            ],
            "balanceOf(address)": [
                1510,
                361
            ],
            "allowance(address,address)": [
                2365,
                625
            ],
            "transferFrom(address,address,uint256)": [
                1054,
                229
            ],
            "approve(address,uint256)": [
                587,
                119
            ],
            "rewardToken(address,uint256,uint256)": [
                944,
                185
            ],
            "setFundingFueled()": [
                2232,
                559
            ],
            "TotalSupply()": [
                1918,
                471
            ],
            "FundedAmount(uint256)": [
                1358,
                317
            ],
            "ableTransfer()": [
                1031,
                207
            ],
            "disableTransfer()": [
                2255,
                581
            ],
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)": [
                2038,
                515
            ],
            "fundingMaxAmount(address)": [
                2278,
                603
            ],
            "blockTransfer(address,uint256)": [
                1236,
                273
            ],
            "actualPriceDivisor()": [
                1597,
                383
            ],
            "initToken(string,string,uint8,address,uint256,bool)": [
                2484,
                647
            ],
            "setFundingStartTime(uint256)": [
                1313,
                295
            ],
            "transfer(address,uint256)": [
                1961,
                493
            ]
        },
        "block_CALL_mapping": {}
    },
    "PassManager": {
        "function_list": [
            "TotalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "priceDivisor(uint256)",
            "actualPriceDivisor()",
            "fundingMaxAmount(address)",
            "PassTokenManager(address,address,address)",
            "initToken(string,string,uint8,address,uint256,bool)",
            "setTokenPriceProposal(uint256,uint256,uint256)",
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)",
            "createToken(address,uint256,uint256)",
            "setFundingStartTime(uint256)",
            "rewardToken(address,uint256,uint256)",
            "closeFunding()",
            "setFundingFueled()",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "TotalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "priceDivisor(uint256)",
            "actualPriceDivisor()",
            "fundingMaxAmount(address)",
            "initToken(string,string,uint8,address,uint256,bool)",
            "setTokenPriceProposal(uint256,uint256,uint256)",
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)",
            "createToken(address,uint256,uint256)",
            "setFundingStartTime(uint256)",
            "rewardToken(address,uint256,uint256)",
            "closeFunding()",
            "setFundingFueled()",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "fallback()",
            "updateRecipient(address)",
            "buyShares()",
            "buySharesFor(address)",
            "newProposal(uint256,string,bytes32)",
            "order(uint256,uint256)",
            "sendTo(address,uint256)",
            "withdraw(uint256)",
            "PassManager(address,address,address)",
            "fallback()",
            "updateRecipient(address)",
            "buyShares()",
            "buySharesFor(address)",
            "newProposal(uint256,string,bytes32)",
            "order(uint256,uint256)",
            "sendTo(address,uint256)",
            "withdraw(uint256)"
        ],
        "initial_state": {
            "TotalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "FundedAmount(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "priceDivisor(uint256)": {
                "argument": {
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "actualPriceDivisor()": {
                "argument": {},
                "contract": {}
            },
            "fundingMaxAmount(address)": {
                "argument": {},
                "contract": {}
            },
            "PassTokenManager(address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "initToken(string,string,uint8,address,uint256,bool)": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string",
                    "_tokenDecimals": "uint8",
                    "_initialSupply": "uint256"
                },
                "contract": {}
            },
            "setTokenPriceProposal(uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_inflationRate": "uint256",
                    "_closingTime": "uint256"
                },
                "contract": {}
            },
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_maxAmountToFund": "uint256",
                    "_minutesFundingPeriod": "uint256",
                    "_inflationRate": "uint256",
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "createToken(address,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "setFundingStartTime(uint256)": {
                "argument": {
                    "_startTime": "uint256"
                },
                "contract": {}
            },
            "rewardToken(address,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_date": "uint256"
                },
                "contract": {}
            },
            "closeFunding()": {
                "argument": {},
                "contract": {}
            },
            "setFundingFueled()": {
                "argument": {},
                "contract": {}
            },
            "ableTransfer()": {
                "argument": {},
                "contract": {}
            },
            "disableTransfer()": {
                "argument": {},
                "contract": {}
            },
            "blockTransfer(address,uint256)": {
                "argument": {
                    "_deadLine": "uint256"
                },
                "contract": {}
            },
            "transferFromTo(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "updateRecipient(address)": {
                "argument": {},
                "contract": {}
            },
            "buyShares()": {
                "argument": {},
                "contract": {}
            },
            "buySharesFor(address)": {
                "argument": {},
                "contract": {}
            },
            "newProposal(uint256,string,bytes32)": {
                "argument": {
                    "_amount": "uint256",
                    "_description": "string",
                    "_hashOfTheDocument": "bytes32"
                },
                "contract": {}
            },
            "order(uint256,uint256)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_orderAmount": "uint256"
                },
                "contract": {}
            },
            "sendTo(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "withdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "PassManager(address,address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setTokenPriceProposal(uint256,uint256,uint256)": [
                2889,
                669
            ],
            "balanceOf(address)": [
                2131,
                471
            ],
            "allowance(address,address)": [
                3097,
                779
            ],
            "transferFrom(address,address,uint256)": [
                1348,
                251
            ],
            "order(uint256,uint256)": [
                1575,
                317
            ],
            "approve(address,uint256)": [
                881,
                141
            ],
            "sendTo(address,uint256)": [
                2539,
                581
            ],
            "rewardToken(address,uint256,uint256)": [
                1238,
                207
            ],
            "setFundingFueled()": [
                2954,
                691
            ],
            "TotalSupply()": [
                2640,
                603
            ],
            "FundedAmount(uint256)": [
                1979,
                427
            ],
            "disableTransfer()": [
                2977,
                713
            ],
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)": [
                2760,
                647
            ],
            "withdraw(uint256)": [
                1481,
                273
            ],
            "ableTransfer()": [
                1325,
                229
            ],
            "buySharesFor(address)": [
                1803,
                361
            ],
            "fundingMaxAmount(address)": [
                3000,
                735
            ],
            "blockTransfer(address,uint256)": [
                1857,
                383
            ],
            "actualPriceDivisor()": [
                2218,
                493
            ],
            "initToken(string,string,uint8,address,uint256,bool)": [
                3216,
                801
            ],
            "setFundingStartTime(uint256)": [
                1934,
                405
            ],
            "buyShares()": [
                3087,
                757
            ],
            "newProposal(uint256,string,bytes32)": [
                1654,
                339
            ],
            "updateRecipient(address)": [
                3458,
                823
            ],
            "transfer(address,uint256)": [
                2683,
                625
            ]
        },
        "block_CALL_mapping": {
            "block5157": [
                "recipient.send(_amount)"
            ],
            "jump7378": [
                "_recipient.send(_amount)",
                "_recipient.send(_amount)"
            ],
            "block7378": [
                "_recipient.send(_amount)"
            ],
            "jump5157": [
                "recipient.send(_amount)",
                "recipient.send(_amount)"
            ]
        }
    },
    "PassFunding": {
        "function_list": [
            "SetContractorManager(address)",
            "SetPresaleAmountLimits(uint256,uint256)",
            "fallback()",
            "presale()",
            "setPartners(bool,uint256,uint256)",
            "setShareHolders(bool,uint256,uint256)",
            "abortFunding()",
            "pause(uint256)",
            "setLimits(uint256,uint256,uint256,uint256,uint256)",
            "setFunding(uint256)",
            "fundDaoFor(uint256,uint256)",
            "fundDao()",
            "refundFor(uint256)",
            "refundForValidPartners(uint256)",
            "refundForAll(uint256,uint256)",
            "refund()",
            "estimatedFundingAmount(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
            "partnerFundingLimit(uint256,uint256,uint256,uint256,uint256,uint256)",
            "numberOfPartners()",
            "numberOfValidPartners(uint256,uint256)",
            "PassFunding(address,address,uint256,uint256,uint256)",
            "SetContractorManager(address)",
            "SetPresaleAmountLimits(uint256,uint256)",
            "fallback()",
            "presale()",
            "setPartners(bool,uint256,uint256)",
            "setShareHolders(bool,uint256,uint256)",
            "abortFunding()",
            "pause(uint256)",
            "setLimits(uint256,uint256,uint256,uint256,uint256)",
            "setFunding(uint256)",
            "fundDaoFor(uint256,uint256)",
            "fundDao()",
            "refundFor(uint256)",
            "refundForValidPartners(uint256)",
            "refundForAll(uint256,uint256)",
            "refund()",
            "estimatedFundingAmount(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
            "partnerFundingLimit(uint256,uint256,uint256,uint256,uint256,uint256)",
            "numberOfPartners()",
            "numberOfValidPartners(uint256,uint256)"
        ],
        "initial_state": {
            "SetContractorManager(address)": {
                "argument": {},
                "contract": {}
            },
            "SetPresaleAmountLimits(uint256,uint256)": {
                "argument": {
                    "_minPresaleAmount": "uint256",
                    "_maxPresaleAmount": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "presale()": {
                "argument": {},
                "contract": {}
            },
            "setPartners(bool,uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "setShareHolders(bool,uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "abortFunding()": {
                "argument": {},
                "contract": {}
            },
            "pause(uint256)": {
                "argument": {
                    "_pauseClosingTime": "uint256"
                },
                "contract": {}
            },
            "setLimits(uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_minAmountLimit": "uint256",
                    "_maxAmountLimit": "uint256",
                    "_divisorBalanceLimit": "uint256",
                    "_multiplierSharesLimit": "uint256",
                    "_divisorSharesLimit": "uint256"
                },
                "contract": {}
            },
            "setFunding(uint256)": {
                "argument": {
                    "_to": "uint256"
                },
                "contract": {}
            },
            "fundDaoFor(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "fundDao()": {
                "argument": {},
                "contract": {}
            },
            "refundFor(uint256)": {
                "argument": {
                    "_partnerID": "uint256"
                },
                "contract": {}
            },
            "refundForValidPartners(uint256)": {
                "argument": {
                    "_to": "uint256"
                },
                "contract": {}
            },
            "refundForAll(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "refund()": {
                "argument": {},
                "contract": {}
            },
            "estimatedFundingAmount(uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_minAmountLimit": "uint256",
                    "_maxAmountLimit": "uint256",
                    "_divisorBalanceLimit": "uint256",
                    "_multiplierSharesLimit": "uint256",
                    "_divisorSharesLimit": "uint256",
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "partnerFundingLimit(uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_index": "uint256",
                    "_minAmountLimit": "uint256",
                    "_maxAmountLimit": "uint256",
                    "_divisorBalanceLimit": "uint256",
                    "_multiplierSharesLimit": "uint256",
                    "_divisorSharesLimit": "uint256"
                },
                "contract": {}
            },
            "numberOfPartners()": {
                "argument": {},
                "contract": {}
            },
            "numberOfValidPartners(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "PassFunding(address,address,uint256,uint256,uint256)": {
                "argument": {
                    "_minFundingAmount": "uint256",
                    "_startTime": "uint256",
                    "_closingTime": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "estimatedFundingAmount(uint256,uint256,uint256,uint256,uint256,uint256,uint256)": [
                1849,
                603
            ],
            "numberOfPartners()": [
                2191,
                691
            ],
            "setPartners(bool,uint256,uint256)": [
                1333,
                449
            ],
            "refund()": [
                1115,
                361
            ],
            "SetPresaleAmountLimits(uint256,uint256)": [
                718,
                207
            ],
            "numberOfValidPartners(uint256,uint256)": [
                1040,
                339
            ],
            "refundForAll(uint256,uint256)": [
                640,
                163
            ],
            "fundDaoFor(uint256,uint256)": [
                1512,
                515
            ],
            "abortFunding()": [
                695,
                185
            ],
            "pause(uint256)": [
                548,
                119
            ],
            "SetContractorManager(address)": [
                1181,
                405
            ],
            "setFunding(uint256)": [
                1400,
                471
            ],
            "refundForValidPartners(uint256)": [
                503,
                97
            ],
            "presale()": [
                2234,
                713
            ],
            "setShareHolders(bool,uint256,uint256)": [
                1782,
                581
            ],
            "setLimits(uint256,uint256,uint256,uint256,uint256)": [
                1248,
                427
            ],
            "fundDao()": [
                593,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump9716_0": [
                "DaoManager.balanceOf(t.partnerAddress)",
                "DaoManager.balanceOf(t.partnerAddress)"
            ],
            "jump7179_0": [
                "DaoManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)",
                "DaoManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "jump8584": [
                "DaoManager.balanceOf(t.partnerAddress)",
                "DaoManager.balanceOf(t.partnerAddress)"
            ],
            "block7774": [
                "DaoManager.setFundingFueled()"
            ],
            "jump6027": [
                "DaoManager.setFundingStartTime(startTime)",
                "DaoManager.setFundingStartTime(startTime)"
            ],
            "block7179_0": [
                "DaoManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "block9055": [
                "t.partnerAddress.send(_amountToRefund)"
            ],
            "block7514_0": [
                "DaoManager.send(_sumAmountToFund)"
            ],
            "jump7774_0": [
                "DaoManager.setFundingFueled()",
                "DaoManager.setFundingFueled()"
            ],
            "jump7514": [
                "DaoManager.send(_sumAmountToFund)",
                "DaoManager.send(_sumAmountToFund)"
            ],
            "jump7179": [
                "DaoManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)",
                "DaoManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "jump9055": [
                "t.partnerAddress.send(_amountToRefund)",
                "t.partnerAddress.send(_amountToRefund)"
            ],
            "jump5750": [
                "DaoManager.fundingMaxAmount(address(this))",
                "DaoManager.fundingMaxAmount(address(this))"
            ],
            "block9716_0": [
                "DaoManager.balanceOf(t.partnerAddress)"
            ],
            "block7514": [
                "DaoManager.send(_sumAmountToFund)"
            ],
            "block5750": [
                "DaoManager.fundingMaxAmount(address(this))"
            ],
            "block9055_0": [
                "t.partnerAddress.send(_amountToRefund)"
            ],
            "block9055_1": [
                "t.partnerAddress.send(_amountToRefund)"
            ],
            "jump7953_0": [
                "contractorManager.setFundingFueled()",
                "contractorManager.setFundingFueled()"
            ],
            "jump7514_0": [
                "DaoManager.send(_sumAmountToFund)",
                "DaoManager.send(_sumAmountToFund)"
            ],
            "block9716": [
                "DaoManager.balanceOf(t.partnerAddress)"
            ],
            "jump7953": [
                "contractorManager.setFundingFueled()",
                "contractorManager.setFundingFueled()"
            ],
            "block7953_0": [
                "contractorManager.setFundingFueled()"
            ],
            "block7461_0": [
                "contractorManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "jump7461_0": [
                "contractorManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)",
                "contractorManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "jump7461": [
                "contractorManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)",
                "contractorManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "jump7774": [
                "DaoManager.setFundingFueled()",
                "DaoManager.setFundingFueled()"
            ],
            "block7953": [
                "contractorManager.setFundingFueled()"
            ],
            "block6027": [
                "DaoManager.setFundingStartTime(startTime)"
            ],
            "block7179": [
                "DaoManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "block8584": [
                "DaoManager.balanceOf(t.partnerAddress)"
            ],
            "jump6219": [
                "contractorManager.setFundingStartTime(startTime)",
                "contractorManager.setFundingStartTime(startTime)"
            ],
            "jump9055_0": [
                "t.partnerAddress.send(_amountToRefund)",
                "t.partnerAddress.send(_amountToRefund)"
            ],
            "jump9055_1": [
                "t.partnerAddress.send(_amountToRefund)",
                "t.partnerAddress.send(_amountToRefund)"
            ],
            "block7461": [
                "contractorManager.rewardToken(_partner, _amountToFund, partners[i].presaleDate)"
            ],
            "jump9716": [
                "DaoManager.balanceOf(t.partnerAddress)",
                "DaoManager.balanceOf(t.partnerAddress)"
            ],
            "block7774_0": [
                "DaoManager.setFundingFueled()"
            ],
            "block6219": [
                "contractorManager.setFundingStartTime(startTime)"
            ]
        }
    }
}