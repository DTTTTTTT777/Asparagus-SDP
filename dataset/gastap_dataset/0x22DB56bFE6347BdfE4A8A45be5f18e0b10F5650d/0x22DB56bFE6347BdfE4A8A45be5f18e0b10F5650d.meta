{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "balanceOf(address)": [
                491,
                163
            ],
            "allowance(address,address)": [
                878,
                273
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                777,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "REKTTokenSale": {
        "function_list": [
            "REKTTokenSale(address,address,REKT)",
            "setHaltSale(bool)",
            "fallback()",
            "buy(address)",
            "sendETHToMultiSig(uint256)",
            "emergencyDrain(ERC20)"
        ],
        "initial_state": {
            "REKTTokenSale(address,address,REKT)": {
                "argument": {},
                "contract": {}
            },
            "setHaltSale(bool)": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buy(address)": {
                "argument": {},
                "contract": {}
            },
            "sendETHToMultiSig(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "emergencyDrain(ERC20)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setHaltSale(bool)": [
                190,
                97
            ],
            "buy(address)": [
                328,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump2065_2": [
                "REKTMultiSigWallet.transfer( value )",
                "REKTMultiSigWallet.transfer( value )"
            ],
            "block1875": [
                "anyToken.transfer(REKTMultiSigWallet, anyToken.balanceOf(this))"
            ],
            "jump2065_0": [
                "REKTMultiSigWallet.transfer( value )",
                "REKTMultiSigWallet.transfer( value )"
            ],
            "jump923": [
                "token.transfer( recipient, receivedTokens )",
                "token.transfer( recipient, receivedTokens )"
            ],
            "block923": [
                "token.transfer( recipient, receivedTokens )"
            ],
            "jump923_1": [
                "token.transfer( recipient, receivedTokens )",
                "token.transfer( recipient, receivedTokens )"
            ],
            "jump923_0": [
                "token.transfer( recipient, receivedTokens )",
                "token.transfer( recipient, receivedTokens )"
            ],
            "block2065": [
                "REKTMultiSigWallet.transfer( value )"
            ],
            "jump2065_1": [
                "REKTMultiSigWallet.transfer( value )",
                "REKTMultiSigWallet.transfer( value )"
            ],
            "block2065_0": [
                "REKTMultiSigWallet.transfer( value )"
            ],
            "block2065_1": [
                "REKTMultiSigWallet.transfer( value )"
            ],
            "block2065_2": [
                "REKTMultiSigWallet.transfer( value )"
            ],
            "jump1875": [
                "anyToken.transfer(REKTMultiSigWallet, anyToken.balanceOf(this))",
                "anyToken.transfer(REKTMultiSigWallet, anyToken.balanceOf(this))"
            ],
            "block1683": [
                "anyToken.balanceOf(this)"
            ],
            "jump2065": [
                "REKTMultiSigWallet.transfer( value )",
                "REKTMultiSigWallet.transfer( value )"
            ],
            "jump1683": [
                "anyToken.balanceOf(this)",
                "anyToken.balanceOf(this)"
            ],
            "block923_1": [
                "token.transfer( recipient, receivedTokens )"
            ],
            "block923_0": [
                "token.transfer( recipient, receivedTokens )"
            ]
        }
    },
    "REKT": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "REKT(uint256,address)",
            "transfer(address,uint256)",
            "setTokenSaleContract(address)",
            "transferFrom(address,address,uint256)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "emergencyERC20Drain(ERC20,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "REKT(uint256,address)": {
                "argument": {
                    "tokenTotalAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setTokenSaleContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "emergencyERC20Drain(ERC20,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                379,
                97
            ],
            "setTokenSaleContract(address)": [
                699,
                185
            ],
            "burn(uint256)": [
                766,
                207
            ],
            "balanceOf(address)": [
                922,
                251
            ],
            "burnFrom(address,uint256)": [
                1009,
                273
            ],
            "transferFrom(address,address,uint256)": [
                523,
                141
            ],
            "transferOwnership(address)": [
                1638,
                405
            ],
            "allowance(address,address)": [
                1519,
                383
            ],
            "transfer(address,uint256)": [
                3508,
                946
            ]
        },
        "block_CALL_mapping": {
            "jump3508": [
                "token.transfer( owner, amount )",
                "token.transfer( owner, amount )"
            ],
            "block3508": [
                "token.transfer( owner, amount )"
            ]
        }
    }
}