{
    "SafeMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                81,
                75
            ],
            "transfer(address,uint256)": [
                214,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Garlicoin": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "Garlicoin()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "withdraw()",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "fallback()",
            "burn()",
            "transferAnyERC20Token(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "Garlicoin()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "tokens": "uint256",
                    "data": "bytes"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "burn()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            },
            "transferAnyERC20Token(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "etherCost1": "uint256",
                    "etherCost2": "uint256",
                    "etherCost3": "uint256",
                    "deadline1": "uint256",
                    "deadline2": "uint256",
                    "deadline3": "uint256",
                    "etherCostOfEachToken": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "burn()": [
                1427,
                229
            ],
            "approve(address,uint256)": [
                1035,
                97
            ],
            "balanceOf(address)": [
                1450,
                251
            ],
            "transferAnyERC20Token(address,uint256)": [
                2150,
                405
            ],
            "totalSupply()": [
                1136,
                119
            ],
            "allowance(address,address)": [
                2251,
                427
            ],
            "withdraw()": [
                1361,
                185
            ],
            "transferFrom(address,address,uint256)": [
                1179,
                141
            ],
            "acceptOwnership()": [
                1537,
                273
            ],
            "approveAndCall(address,uint256,bytes)": [
                1892,
                361
            ],
            "transfer(address,uint256)": [
                6090,
                946
            ],
            "transferOwnership(address)": [
                2370,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump6090": [
                "ERC20Interface(tokenAddress).transfer(owner, tokens)",
                "ERC20Interface(tokenAddress).transfer(owner, tokens)"
            ],
            "jump3761": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump5728": [
                "ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data)",
                "ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data)"
            ],
            "block3761": [
                "owner.transfer(this.balance)"
            ],
            "block5728": [
                "ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data)"
            ],
            "block6090": [
                "ERC20Interface(tokenAddress).transfer(owner, tokens)"
            ]
        }
    }
}