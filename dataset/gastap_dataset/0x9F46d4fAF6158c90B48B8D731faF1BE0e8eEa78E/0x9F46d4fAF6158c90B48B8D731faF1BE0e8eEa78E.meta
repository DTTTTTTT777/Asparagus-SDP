{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "MilitaryPay": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "MTPToken()",
            "fallback()",
            "transferEther(address,uint256)",
            "changeAllowInvestment(bool)",
            "changeSaleTimes(uint256,uint256)",
            "changeEtherBonuses(uint256,uint256,uint256,uint256,uint256,uint256)",
            "changeTimeBonuses(uint256,uint256,uint256,uint256,uint256,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "MTPToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "transferEther(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "changeAllowInvestment(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "changeSaleTimes(uint256,uint256)": {
                "argument": {
                    "_saleStartTime": "uint256",
                    "_saleEndTime": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "changeEtherBonuses(uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_lowEtherBonusLimit": "uint256",
                    "_lowEtherBonusValue": "uint256",
                    "_midEtherBonusLimit": "uint256",
                    "_midEtherBonusValue": "uint256",
                    "_highEtherBonusLimit": "uint256",
                    "_highEtherBonusValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "changeTimeBonuses(uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_highTimeBonusLimit": "uint256",
                    "_highTimeBonusValue": "uint256",
                    "_midTimeBonusLimit": "uint256",
                    "_midTimeBonusValue": "uint256",
                    "_lowTimeBonusLimit": "uint256",
                    "_lowTimeBonusValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "maxPresaleSupply": "uint256",
                    "preSaleStartTime": "uint256",
                    "preSaleEndTime": "uint256",
                    "saleStartTime": "uint256",
                    "saleEndTime": "uint256",
                    "lowEtherBonusLimit": "uint256",
                    "lowEtherBonusValue": "uint256",
                    "midEtherBonusLimit": "uint256",
                    "midEtherBonusValue": "uint256",
                    "highEtherBonusLimit": "uint256",
                    "highEtherBonusValue": "uint256",
                    "highTimeBonusLimit": "uint256",
                    "highTimeBonusValue": "uint256",
                    "midTimeBonusLimit": "uint256",
                    "midTimeBonusValue": "uint256",
                    "lowTimeBonusLimit": "uint256",
                    "lowTimeBonusValue": "uint256",
                    "MTP_PER_ETH_PRE_SALE": "uint256",
                    "MTP_PER_ETH_SALE": "uint256",
                    "totalWEIInvested": "uint256",
                    "totalMTPAllocated": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeSaleTimes(uint256,uint256)": [
                2078,
                207
            ],
            "changeEtherBonuses(uint256,uint256,uint256,uint256,uint256,uint256)": [
                3002,
                537
            ],
            "allowance(address,address)": [
                3868,
                823
            ],
            "transferFrom(address,address,uint256)": [
                2348,
                339
            ],
            "approve(address,uint256)": [
                1934,
                163
            ],
            "MTPToken()": [
                2654,
                427
            ],
            "changeTimeBonuses(uint256,uint256,uint256,uint256,uint256,uint256)": [
                2720,
                471
            ],
            "transferEther(address,uint256)": [
                1627,
                75
            ],
            "balanceOf(address)": [
                3097,
                559
            ],
            "transfer(address,uint256)": [
                3591,
                713
            ],
            "changeAllowInvestment(bool)": [
                3778,
                779
            ]
        },
        "block_CALL_mapping": {
            "jump4388": [
                "addressToSendTo.transfer(value)",
                "addressToSendTo.transfer(value)"
            ],
            "block4388": [
                "addressToSendTo.transfer(value)"
            ]
        }
    }
}