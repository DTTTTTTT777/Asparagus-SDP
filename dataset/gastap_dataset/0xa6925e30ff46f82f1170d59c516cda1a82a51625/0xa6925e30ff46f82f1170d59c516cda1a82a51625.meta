{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                354,
                141
            ],
            "allowance(address,address)": [
                518,
                185
            ],
            "transferFrom(address,address,uint256)": [
                245,
                119
            ],
            "transfer(address,uint256)": [
                441,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "EthsMePresale": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "EthsMePresale(address,address)",
            "fallback()",
            "buyTokens(address)",
            "burnTokens(address)",
            "balanceOf(address)",
            "setPresalePhase(EthsMePresale.Phase)",
            "withdrawEther()",
            "setCrowdsaleManager(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "EthsMePresale(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "burnTokens(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "setPresalePhase(EthsMePresale.Phase)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "withdrawEther()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "setCrowdsaleManager(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "SECURITY_ETHER_CAP": "uint256",
                    "totalETHRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                1639,
                493
            ],
            "transferFrom(address,address,uint256)": [
                676,
                185
            ],
            "approve(address,uint256)": [
                508,
                119
            ],
            "burnTokens(address)": [
                1529,
                449
            ],
            "withdrawEther()": [
                1242,
                361
            ],
            "balanceOf(address)": [
                1155,
                339
            ],
            "setCrowdsaleManager(address)": [
                1088,
                317
            ],
            "transfer(address,uint256)": [
                1452,
                427
            ],
            "buyTokens(address)": [
                1845,
                537
            ]
        },
        "block_CALL_mapping": {
            "block3975": [
                "escrow.send(this.balance)"
            ],
            "jump3975": [
                "escrow.send(this.balance)",
                "escrow.send(this.balance)"
            ]
        }
    }
}