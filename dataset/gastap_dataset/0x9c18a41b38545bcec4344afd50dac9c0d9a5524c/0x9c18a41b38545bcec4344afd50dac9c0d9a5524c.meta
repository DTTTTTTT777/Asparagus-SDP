{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "totalSupply()": [
                556,
                141
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "ERC20Token": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "totalSupply()": [
                237,
                97
            ],
            "allowance(address,address)": [
                644,
                207
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                543,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Wolk": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "wolkGenesis(uint256,uint256,address)",
            "changeOwner(address)",
            "tokenGenerationEvent()",
            "refund()",
            "finalize()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "wolkGenesis(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "tokenGenerationEvent()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint16",
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_block": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "wolkGenesis(uint256,uint256,address)": [
                1321,
                405
            ],
            "totalSupply()": [
                568,
                119
            ],
            "transferFrom(address,address,uint256)": [
                611,
                141
            ],
            "approve(address,uint256)": [
                467,
                97
            ],
            "changeOwner(address)": [
                1629,
                493
            ],
            "balanceOf(address)": [
                919,
                273
            ],
            "tokenGenerationEvent()": [
                1576,
                449
            ],
            "refund()": [
                810,
                207
            ],
            "finalize()": [
                787,
                185
            ],
            "transfer(address,uint256)": [
                1720,
                515
            ],
            "allowance(address,address)": [
                1907,
                581
            ]
        },
        "block_CALL_mapping": {
            "jump3492": [
                "msg.sender.transfer(withdrawalBalance)",
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "block3990": [
                "msg.sender.transfer(refundBalance)"
            ],
            "block3492": [
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "jump3990": [
                "msg.sender.transfer(refundBalance)",
                "msg.sender.transfer(refundBalance)"
            ]
        }
    },
    "WolkProtocol": {
        "function_list": [
            "wolkGenesis(uint256,uint256,address)",
            "changeOwner(address)",
            "tokenGenerationEvent()",
            "refund()",
            "finalize()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "setBurnRate(uint256)",
            "setServiceFee(address,uint256)",
            "checkServiceFee(address)",
            "settleBuyer(address,uint256)",
            "settleSeller(address,uint256)",
            "authorizeProvider(address)",
            "deauthorizeProvider(address)",
            "checkAuthorization(address,address)",
            "grantService(address,address)",
            "removeService(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "wolkGenesis(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "tokenGenerationEvent()": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "setBurnRate(uint256)": {
                "argument": {
                    "_burnBasisPoints": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "setServiceFee(address,uint256)": {
                "argument": {
                    "_feeBasisPoints": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "checkServiceFee(address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "settleBuyer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "settleSeller(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "authorizeProvider(address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "deauthorizeProvider(address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "checkAuthorization(address,address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "grantService(address,address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "removeService(address,address)": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "burnBasisPoints": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "checkServiceFee(address)": [
                1616,
                405
            ],
            "wolkGenesis(uint256,uint256,address)": [
                2351,
                603
            ],
            "removeService(address,address)": [
                2141,
                559
            ],
            "settleBuyer(address,uint256)": [
                1091,
                251
            ],
            "totalSupply()": [
                780,
                141
            ],
            "checkAuthorization(address,address)": [
                1493,
                383
            ],
            "transferFrom(address,address,uint256)": [
                892,
                185
            ],
            "approve(address,uint256)": [
                588,
                97
            ],
            "deauthorizeProvider(address)": [
                1402,
                361
            ],
            "settleSeller(address,uint256)": [
                1258,
                317
            ],
            "changeOwner(address)": [
                2702,
                713
            ],
            "setServiceFee(address,uint256)": [
                3099,
                823
            ],
            "authorizeProvider(address)": [
                689,
                119
            ],
            "balanceOf(address)": [
                1703,
                427
            ],
            "tokenGenerationEvent()": [
                2606,
                647
            ],
            "refund()": [
                1192,
                273
            ],
            "finalize()": [
                1068,
                229
            ],
            "grantService(address,address)": [
                1790,
                449
            ],
            "setBurnRate(uint256)": [
                823,
                163
            ],
            "transfer(address,uint256)": [
                2793,
                735
            ],
            "allowance(address,address)": [
                2980,
                801
            ]
        },
        "block_CALL_mapping": {
            "jump5172": [
                "msg.sender.transfer(withdrawalBalance)",
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "block5172": [
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "block6584": [
                "msg.sender.transfer(refundBalance)"
            ],
            "jump6584": [
                "msg.sender.transfer(refundBalance)",
                "msg.sender.transfer(refundBalance)"
            ]
        }
    },
    "BancorFormula": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "calculatePurchaseReturn(uint256,uint256,uint16,uint256)",
            "calculateSaleReturn(uint256,uint256,uint16,uint256)",
            "power(uint256,uint256,uint32,uint32)",
            "ln(uint256,uint256)",
            "fixedLoge(uint256)",
            "fixedLog2(uint256)",
            "fixedExp(uint256)",
            "fixedExpUnsafe(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "calculatePurchaseReturn(uint256,uint256,uint16,uint256)": {
                "argument": {
                    "_supply": "uint256",
                    "_reserveBalance": "uint256",
                    "_reserveRatio": "uint16",
                    "_depositAmount": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "calculateSaleReturn(uint256,uint256,uint16,uint256)": {
                "argument": {
                    "_supply": "uint256",
                    "_reserveBalance": "uint256",
                    "_reserveRatio": "uint16",
                    "_sellAmount": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "power(uint256,uint256,uint32,uint32)": {
                "argument": {
                    "_baseN": "uint256",
                    "_baseD": "uint256",
                    "_expN": "uint32",
                    "_expD": "uint32"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "ln(uint256,uint256)": {
                "argument": {
                    "_numerator": "uint256",
                    "_denominator": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "fixedLoge(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "fixedLog2(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "fixedExp(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "fixedExpUnsafe(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PRECISION": "uint8",
                    "FIXED_ONE": "uint256",
                    "FIXED_TWO": "uint256",
                    "MAX_VAL": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "calculatePurchaseReturn(uint256,uint256,uint16,uint256)": [
                81,
                75
            ],
            "calculateSaleReturn(uint256,uint256,uint16,uint256)": [
                180,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "WolkExchange": {
        "function_list": [
            "calculatePurchaseReturn(uint256,uint256,uint16,uint256)",
            "calculateSaleReturn(uint256,uint256,uint16,uint256)",
            "power(uint256,uint256,uint32,uint32)",
            "ln(uint256,uint256)",
            "fixedLoge(uint256)",
            "fixedLog2(uint256)",
            "fixedExp(uint256)",
            "fixedExpUnsafe(uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "setBurnRate(uint256)",
            "setServiceFee(address,uint256)",
            "checkServiceFee(address)",
            "settleBuyer(address,uint256)",
            "settleSeller(address,uint256)",
            "authorizeProvider(address)",
            "deauthorizeProvider(address)",
            "checkAuthorization(address,address)",
            "grantService(address,address)",
            "removeService(address,address)",
            "wolkGenesis(uint256,uint256,address)",
            "changeOwner(address)",
            "tokenGenerationEvent()",
            "refund()",
            "finalize()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "setMaxPerExchange(uint256)",
            "EstLiquidationCap()",
            "sellWolk(uint256)",
            "purchaseWolk()",
            "purchaseExactWolk(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "calculatePurchaseReturn(uint256,uint256,uint16,uint256)": {
                "argument": {
                    "_supply": "uint256",
                    "_reserveBalance": "uint256",
                    "_reserveRatio": "uint16",
                    "_depositAmount": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "calculateSaleReturn(uint256,uint256,uint16,uint256)": {
                "argument": {
                    "_supply": "uint256",
                    "_reserveBalance": "uint256",
                    "_reserveRatio": "uint16",
                    "_sellAmount": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "power(uint256,uint256,uint32,uint32)": {
                "argument": {
                    "_baseN": "uint256",
                    "_baseD": "uint256",
                    "_expN": "uint32",
                    "_expD": "uint32"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "ln(uint256,uint256)": {
                "argument": {
                    "_numerator": "uint256",
                    "_denominator": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "fixedLoge(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "fixedLog2(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "fixedExp(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "fixedExpUnsafe(uint256)": {
                "argument": {
                    "_x": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "setBurnRate(uint256)": {
                "argument": {
                    "_burnBasisPoints": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "setServiceFee(address,uint256)": {
                "argument": {
                    "_feeBasisPoints": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "checkServiceFee(address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "settleBuyer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "settleSeller(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "authorizeProvider(address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "deauthorizeProvider(address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "checkAuthorization(address,address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "grantService(address,address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "removeService(address,address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "wolkGenesis(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "tokenGenerationEvent()": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "setMaxPerExchange(uint256)": {
                "argument": {
                    "_maxPerExchange": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "EstLiquidationCap()": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "sellWolk(uint256)": {
                "argument": {
                    "_wolkAmount": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "purchaseWolk()": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "purchaseExactWolk(uint256)": {
                "argument": {
                    "_exactWolk": "uint256"
                },
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "maxPerExchangeBP": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "checkServiceFee(address)": [
                1768,
                352
            ],
            "EstLiquidationCap()": [
                2249,
                506
            ],
            "wolkGenesis(uint256,uint256,address)": [
                2589,
                594
            ],
            "removeService(address,address)": [
                2379,
                550
            ],
            "settleBuyer(address,uint256)": [
                1243,
                198
            ],
            "calculateSaleReturn(uint256,uint256,uint16,uint256)": [
                3416,
                858
            ],
            "totalSupply()": [
                932,
                88
            ],
            "purchaseExactWolk(uint256)": [
                3634,
                902
            ],
            "checkAuthorization(address,address)": [
                1645,
                330
            ],
            "transferFrom(address,address,uint256)": [
                1044,
                132
            ],
            "approve(address,uint256)": [
                740,
                44
            ],
            "calculatePurchaseReturn(uint256,uint256,uint16,uint256)": [
                3031,
                726
            ],
            "deauthorizeProvider(address)": [
                1554,
                308
            ],
            "settleSeller(address,uint256)": [
                1410,
                264
            ],
            "changeOwner(address)": [
                2940,
                704
            ],
            "setServiceFee(address,uint256)": [
                3686,
                924
            ],
            "authorizeProvider(address)": [
                841,
                66
            ],
            "setMaxPerExchange(uint256)": [
                3231,
                770
            ],
            "balanceOf(address)": [
                1855,
                374
            ],
            "tokenGenerationEvent()": [
                2844,
                638
            ],
            "refund()": [
                1344,
                220
            ],
            "finalize()": [
                1220,
                176
            ],
            "purchaseWolk()": [
                3386,
                836
            ],
            "grantService(address,address)": [
                1985,
                418
            ],
            "setBurnRate(uint256)": [
                975,
                110
            ],
            "transfer(address,uint256)": [
                3130,
                748
            ],
            "allowance(address,address)": [
                3515,
                880
            ]
        },
        "block_CALL_mapping": {
            "block7706": [
                "msg.sender.transfer(refundBalance)"
            ],
            "jump7706": [
                "msg.sender.transfer(refundBalance)",
                "msg.sender.transfer(refundBalance)"
            ],
            "jump6294": [
                "msg.sender.transfer(withdrawalBalance)",
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "jump13707": [
                "msg.sender.transfer(ethRefundable)",
                "msg.sender.transfer(ethRefundable)"
            ],
            "block13707": [
                "msg.sender.transfer(ethRefundable)"
            ],
            "block4157": [
                "msg.sender.transfer(ethReceivable)"
            ],
            "jump4157": [
                "msg.sender.transfer(ethReceivable)",
                "msg.sender.transfer(ethReceivable)"
            ],
            "block6294": [
                "msg.sender.transfer(withdrawalBalance)"
            ]
        }
    }
}