block0(g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	lt(s(1), s(0))
	call(block197(g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))

jump0(s(1), s(0), g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	geq(s(1), s(0))
	call(block13(g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

jump13(s(2), s(1), s(0), g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block208(s(0),g(lastCreditorPayedOut), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block65(s(0),g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block13(g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 166930775
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block263(s(0),g(round), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block76(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block65(s(0), g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 342664497
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(round), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1167333944
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block312(s(0),g(lastTimeOfNewCredit), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block87(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block87(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1748091241
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block355(s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block98(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block98(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1798434305
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block398(s(0),g(jackpot), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block109(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block109(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2164674093
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block441(s(0),g(creditorAmounts), l(l3), l(l2), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block120(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

jump120(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block549(s(0),g(owner), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block131(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block120(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2724350718
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block636(s(0),g(jackpot), callvalue))

jump131(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block142(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block142(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3460542656
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block646(s(0),g(creditorAddresses), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump142(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block153(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

jump153(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block755(s(0),g(creditorAddresses), l(l3), l(l2), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block164(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block153(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3555576667
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block863(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))

jump164(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block175(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))

block164(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3917335394
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4096597296
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block897(s(0),g(creditorAmounts), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump175(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block186(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))

jump186(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block962(s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block197_0(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))

block186(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4235959320
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block197(g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 205
	nop(PUSH2)
	s(1) = 1005
	nop(PUSH2)
	call(block1005(s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))
	nop(JUMP)

block205(s(0))=>
	nop(JUMPDEST)
	nop(POP)
	skip
	nop(STOP)

block208(s(0), g(lastCreditorPayedOut), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump208(s(2),s(1),s(0),g(lastCreditorPayedOut), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(lastCreditorPayedOut), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block220(s(1), s(0),g(lastCreditorPayedOut), l(l1), l(l0)))

jump208(s(2), s(1), s(0), g(lastCreditorPayedOut), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block216(s(1), s(0)))

block216(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block220(s(1), s(0), g(lastCreditorPayedOut), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 229
	nop(PUSH2)
	s(2) = 2389
	nop(PUSH2)
	call(block2389(s(1),s(0),g(lastCreditorPayedOut), l(l1), l(l0)))
	nop(JUMP)

block229(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block263(s(0), g(round), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump263(s(2),s(1),s(0),g(round), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(round), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block275(s(1), s(0),g(round), l(l1), l(l0)))

jump263(s(2), s(1), s(0), g(round), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block271(s(1), s(0)))

block271(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block275(s(1), s(0), g(round), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 284
	nop(PUSH2)
	s(2) = 2410
	nop(PUSH2)
	call(block2410(s(1),s(0),g(round), l(l1), l(l0)))
	nop(JUMP)

block284(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump312(s(2), s(1), s(0), g(lastTimeOfNewCredit), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block324(s(1), s(0),g(lastTimeOfNewCredit), l(l1), l(l0)))

jump312(s(2), s(1), s(0), g(lastTimeOfNewCredit), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block320(s(1), s(0)))

block312(s(0), g(lastTimeOfNewCredit), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump312(s(2),s(1),s(0),g(lastTimeOfNewCredit), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block320(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block324(s(1), s(0), g(lastTimeOfNewCredit), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 333
	nop(PUSH2)
	s(2) = 2429
	nop(PUSH2)
	call(block2429(s(1),s(0),g(lastTimeOfNewCredit), l(l1), l(l0)))
	nop(JUMP)

block333(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump355(s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block367(s(1), s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))

jump355(s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block363(s(1), s(0)))

block355(s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump355(s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block363(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block367(s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 376
	nop(PUSH2)
	s(2) = 2435
	nop(PUSH2)
	call(block2435(s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))
	nop(JUMP)

block376(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block398(s(0), g(jackpot), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump398(s(2),s(1),s(0),g(jackpot), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump398(s(2), s(1), s(0), g(jackpot), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block410(s(1), s(0),g(jackpot), l(l1), l(l0)))

jump398(s(2), s(1), s(0), g(jackpot), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block406(s(1), s(0)))

block406(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block410(s(1), s(0), g(jackpot), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 419
	nop(PUSH2)
	s(2) = 2521
	nop(PUSH2)
	call(block2521(s(1),s(0),g(jackpot), l(l1), l(l0)))
	nop(JUMP)

block419(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump441(s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block453(s(1), s(0),g(creditorAmounts), l(l3), l(l2), l(l1), l(l0)))

jump441(s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block449(s(1), s(0)))

block441(s(0), g(creditorAmounts), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump441(s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block449(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block453(s(1), s(0), g(creditorAmounts), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 462
	nop(PUSH2)
	s(2) = 2527
	nop(PUSH2)
	call(block2527(s(1),s(0),g(creditorAmounts), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block462(s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	nop(DUP3)
	ls(1) = s(5)
	ls(2) = s(6)
	nop(MSTORE)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l1)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 0
	nop(PUSH1)
	call(block502(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block502(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	call(jump502(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump502(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(12), s(11))
	call(block529(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump502(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(12), s(11))
	call(block511(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block511(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(11) = l(l2)
	nop(MLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 502
	nop(PUSH2)
	call(block502(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block529(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump549(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block561(s(1), s(0),g(owner), l(l1), l(l0)))

jump549(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block557(s(1), s(0)))

block549(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump549(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block557(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block561(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 570
	nop(PUSH2)
	s(2) = 2615
	nop(PUSH2)
	call(block2615(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block570(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block636(s(0), g(jackpot), callvalue)=>
	nop(JUMPDEST)
	s(1) = 644
	nop(PUSH2)
	s(2) = 2653
	nop(PUSH2)
	call(block2653(s(1),s(0),g(jackpot), callvalue))
	nop(JUMP)

block644(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump646(s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block658(s(1), s(0),g(creditorAddresses), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump646(s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block654(s(1), s(0)))

block646(s(0), g(creditorAddresses), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump646(s(2),s(1),s(0),g(creditorAddresses), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block654(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block658(s(1), s(0), g(creditorAddresses), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 689
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 2671
	nop(PUSH2)
	call(block2671(s(2),s(1),s(0),g(creditorAddresses), l(l3), l(l1), l(l0)))
	nop(JUMP)

block689(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump755(s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block767(s(1), s(0),g(creditorAddresses), l(l3), l(l2), l(l1), l(l0)))

jump755(s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block763(s(1), s(0)))

block755(s(0), g(creditorAddresses), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump755(s(2),s(1),s(0),g(creditorAddresses), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block763(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block767(s(1), s(0), g(creditorAddresses), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 776
	nop(PUSH2)
	s(2) = 2733
	nop(PUSH2)
	call(block2733(s(1),s(0),g(creditorAddresses), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block776(s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	nop(DUP3)
	ls(1) = s(5)
	ls(2) = s(6)
	nop(MSTORE)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l1)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 0
	nop(PUSH1)
	call(block816(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block816(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	call(jump816(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump816(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(12), s(11))
	call(block843(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump816(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(12), s(11))
	call(block825(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block825(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(11) = l(l2)
	nop(MLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 816
	nop(PUSH2)
	call(block816(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block843(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block863(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 871
	nop(PUSH2)
	s(2) = 1005
	nop(PUSH2)
	call(block1005_0(s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))
	nop(JUMP)

block871(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump897(s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block909(s(1), s(0),g(creditorAmounts), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump897(s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block905(s(1), s(0)))

block897(s(0), g(creditorAmounts), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump897(s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block905(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block909(s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 940
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 2875
	nop(PUSH2)
	call(block2875(s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))
	nop(JUMP)

block940(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump962(s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block974(s(1), s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))

jump962(s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block970(s(1), s(0)))

block962(s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump962(s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block970(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block974(s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 983
	nop(PUSH2)
	s(2) = 2910
	nop(PUSH2)
	call(block2910(s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))
	nop(JUMP)

block983(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1005(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	leq(s(4), s(3))
	call(block1607(s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))

jump1005(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	gt(s(4), s(3))
	call(block1026(s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp))

block1005(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 28800
	nop(PUSH2)
	s(5) = 1
	nop(PUSH1)
	s(5) = g(lastTimeOfNewCredit)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	call(jump1005(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1026(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	eq(s(4), 0)
	call(block1095(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1026(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	neq(s(4), 0)
	call(block1086(s(3), s(2), s(1), s(0), returndatasize))

block1026(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump1026(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1086(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

jump1095(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block1119(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1095(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block1118(s(4), s(3), s(2), s(1), s(0)))

block1095(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = g(creditorAddresses)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(creditorAddresses)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump1095(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1118(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1119(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 2
	nop(PUSH1)
	s(5) = g(jackpot)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump1119(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1119(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	eq(s(4), 0)
	call(block1233(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1119(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	neq(s(4), 0)
	call(block1224(s(3), s(2), s(1), s(0), returndatasize))

block1224(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block1233(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump1233(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1233(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	eq(s(4), 0)
	call(block1361(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp))

jump1233(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	neq(s(4), 0)
	call(block1352(s(3), s(2), s(1), s(0), returndatasize))

block1352(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

jump1361(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	eq(s(5), 0)
	call(block1458(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

jump1361(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	neq(s(5), 0)
	call(block1438(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block1361(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(lastCreditorPayedOut) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(lastTimeOfNewCredit) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(jackpot) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	call(jump1361(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1438(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	s(5) = s(3)
	nop(DUP2)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(6)
	nop(DUP1)
	s(8) = codesize
	nop(CODESIZE)
	s(9) = s(5)
	nop(DUP4)
	nop(CODECOPY)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block1458(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block1458(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = l(l1)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 1480
	nop(PUSH2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 3000
	nop(PUSH2)
	call(block3000(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

jump1480(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	eq(s(5), 0)
	call(block1529(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2)))

jump1480(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	neq(s(5), 0)
	call(block1509(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), codesize))

block1480(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	call(jump1480(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1509(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), codesize)=>
	s(5) = s(3)
	nop(DUP2)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(6)
	nop(DUP1)
	s(8) = codesize
	nop(CODESIZE)
	s(9) = s(5)
	nop(DUP4)
	nop(CODECOPY)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block1529(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2)))

block1529(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 4
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = l(l2)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 1551
	nop(PUSH2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 3138
	nop(PUSH2)
	call(block3138(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3)))
	nop(JUMP)

block1551(s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 2385
	nop(PUSH2)
	call(block2385(s(2),s(1),s(0)))
	nop(JUMP)

jump1607(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	lt(s(4), s(3))
	call(block2309(s(2), s(1), s(0), l(l0), caller, returndatasize))

jump1607(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	geq(s(4), s(3))
	call(block1624(s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))

block1607(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10000000000000000
	nop(PUSH7)
	s(4) = s(2)
	nop(DUP2)
	call(jump1607(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1624(s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(lastTimeOfNewCredit) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = caller
	nop(CALLER)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(creditorAddresses)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	g(creditorAddresses) = s(7)
	nop(SSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = 4
	nop(PUSH1)
	s(4) = 100
	nop(PUSH1)
	s(5) = 110
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump1624(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1624(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block1749(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1624(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block1748(s(5), s(4), s(3), s(2), s(1), s(0)))

block1748(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1749(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(creditorAmounts)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	g(creditorAmounts) = s(7)
	nop(SSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 100
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump1749(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1749(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	neq(s(7), 0)
	call(block1866(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1749(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	eq(s(7), 0)
	call(block1865(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1865(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1866(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	eq(s(4), 0)
	call(block1910(s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1866(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	neq(s(4), 0)
	call(block1901(s(3), s(2), s(1), s(0), returndatasize))

block1866(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump1866(s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1901(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

jump1910(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	geq(s(4), s(3))
	call(block1962(s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1910(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	lt(s(4), s(3))
	call(block1931(s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

block1910(s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 100000000000000000000
	nop(PUSH9)
	s(4) = 2
	nop(PUSH1)
	s(4) = g(jackpot)
	nop(SLOAD)
	call(jump1910(s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1931(s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	s(3) = 100
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump1931(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1931(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	neq(s(5), 0)
	call(block1945(s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1931(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	eq(s(5), 0)
	call(block1944(s(4), s(3), s(2), s(1), s(0)))

block1944(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1945(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(jackpot)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(jackpot) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block1962(s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

block1962(s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(3) = g(jackpot)
	nop(SLOAD)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = 4
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creditorAmounts)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump1962(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1962(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	lt(s(7), s(6))
	call(block2028(s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

jump1962(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	geq(s(7), s(6))
	call(block2027(s(5), s(4), s(3), s(2), s(1), s(0)))

block2027(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2028(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump2028(s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2028(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	gt(s(4), s(3))
	call(block2300(s(2), s(1), s(0)))

jump2028(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	leq(s(4), s(3))
	call(block2047(s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

block2047(s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(creditorAddresses)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump2047(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2047(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	lt(s(6), s(5))
	call(block2084(s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

jump2047(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	geq(s(6), s(5))
	call(block2083(s(4), s(3), s(2), s(1), s(0)))

block2083(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2084(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(creditorAmounts)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump2084(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2084(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	lt(s(8), s(7))
	call(block2190(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

jump2084(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	geq(s(8), s(7))
	call(block2189(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2189(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2190(s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	eq(s(4), 0)
	call(block2244(s(3), s(2), s(1), s(0),g(lastCreditorPayedOut)))

jump2190(s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	neq(s(4), 0)
	call(block2235(s(3), s(2), s(1), s(0), returndatasize))

block2190(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump2190(s(4),s(3),s(2),s(1),s(0),g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2235(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block2244(s(3), s(2), s(1), s(0), g(lastCreditorPayedOut))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(lastCreditorPayedOut) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block2300(s(2),s(1),s(0)))

block2300(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 2385
	nop(PUSH2)
	call(block2385(s(2),s(1),s(0)))
	nop(JUMP)

jump2309(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block2379(s(3), s(2), s(1), s(0)))

jump2309(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block2370(s(3), s(2), s(1), s(0), returndatasize))

block2309(s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump2309(s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2370(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block2379(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	call(block2385(s(2),s(1),s(0)))

block2385(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	call(block205(s(0)))
	nop(JUMP)

block2389(s(1), s(0), g(lastCreditorPayedOut), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 4294967295
	nop(PUSH4)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block229(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2410(s(1), s(0), g(round), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(3) = 20
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(round)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block284(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2429(s(1), s(0), g(lastTimeOfNewCredit), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(2) = g(lastTimeOfNewCredit)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block333(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2435(s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block2443(s(3),s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))

block2443(s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	call(jump2443(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2443(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	geq(s(5), s(4))
	call(block2517(s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump2443(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	lt(s(5), s(4))
	call(block2475(s(3), s(2), s(1), s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))

block2475(s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	s(4) = 4
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creditorAmounts)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump2475(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2475(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	lt(s(7), s(6))
	call(block2489(s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))

jump2475(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	geq(s(7), s(6))
	call(block2488(s(5), s(4), s(3), s(2), s(1), s(0)))

block2488(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2489(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 2443
	nop(PUSH2)
	call(block2443(s(3),s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2517(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block376(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2521(s(1), s(0), g(jackpot), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(jackpot)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block419(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2527(s(1), s(0), g(creditorAmounts), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 96
	nop(PUSH1)
	s(3) = 4
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = g(creditorAmounts)
	nop(SLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(8) = g(creditorAmounts)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	call(jump2527(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2527(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block2605(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump2527(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block2569(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

block2569(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 0
	nop(PUSH1)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block2585(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump2585(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block2585(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump2585(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block2605(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block2585(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	call(jump2585(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block2605(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block462(s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2615(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block570(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2653(s(1), s(0), g(jackpot), callvalue)=>
	nop(JUMPDEST)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(6) = g(jackpot)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(jackpot) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block644(s(0)))
	nop(JUMP)

block2671(s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(creditorAddresses)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump2671(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAddresses), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2671(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block2686(s(4), s(3), s(2), s(1), s(0), l(l3), l(l1), l(l0)))

jump2671(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block2685(s(4), s(3), s(2), s(1), s(0)))

block2685(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2686(s(4), s(3), s(2), s(1), s(0), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block689(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump2733(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block2865(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump2733(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAddresses), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block2775(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

block2733(s(1), s(0), g(creditorAddresses), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 96
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = g(creditorAddresses)
	nop(SLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(8) = g(creditorAddresses)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	call(jump2733(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAddresses), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2775(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 0
	nop(PUSH1)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block2791(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block2791(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	call(jump2791(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump2791(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block2791(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump2791(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block2865(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block2865(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block776(s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2875(s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(creditorAmounts)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump2875(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2875(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block2890(s(4), s(3), s(2), s(1), s(0), l(l3), l(l1), l(l0)))

jump2875(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block2889(s(4), s(3), s(2), s(1), s(0)))

block2889(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2890(s(4), s(3), s(2), s(1), s(0), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block940(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2910(s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block2940(s(3),s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))

jump2940(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	geq(s(5), s(4))
	call(block2996(s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump2940(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	lt(s(5), s(4))
	call(block2954(s(3), s(2), s(1), s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))

block2940(s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = g(creditorAmounts)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	call(jump2940(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2954(s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	s(4) = 4
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creditorAmounts)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump2954(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2954(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	lt(s(7), s(6))
	call(block2968(s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))

jump2954(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	geq(s(7), s(6))
	call(block2967(s(5), s(4), s(3), s(2), s(1), s(0)))

block2967(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2968(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 2940
	nop(PUSH2)
	call(block2940(s(3),s(2),s(1),s(0),g(creditorAmounts), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2996(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block983(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump3000(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize)=>
	eq(s(9), 0)
	call(block3121(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3000(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize)=>
	neq(s(9), 0)
	call(block3026(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3000(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(8) = g(creditorAddresses)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	g(creditorAddresses) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 0
	nop(PUSH1)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	nop(DUP3)
	call(jump3000(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3026(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(block3032(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3032(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	leq(s(10), s(9))
	call(block3120(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3032(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	gt(s(10), s(9))
	call(block3041(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3032(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	call(jump3032(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3041(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	s(9) = s(6)
	nop(DUP3)
	s(9) = l(l2)
	nop(MLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = or(s(12), s(11))
	nop(OR)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 3032
	nop(PUSH2)
	call(block3032(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3120(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	call(block3121(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3121(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 3134
	nop(PUSH2)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 3215
	nop(PUSH2)
	call(block3215(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3134(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block1480(s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

jump3138(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3))=>
	eq(s(9), 0)
	call(block3198(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

jump3138(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3))=>
	neq(s(9), 0)
	call(block3164(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l4)))

block3138(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3))=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(8) = g(creditorAmounts)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	g(creditorAmounts) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 0
	nop(PUSH1)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	nop(DUP3)
	call(jump3138(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3164(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(block3170(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4)))

jump3170(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	leq(s(10), s(9))
	call(block3197(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

jump3170(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	gt(s(10), s(9))
	call(block3179(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l4)))

block3170(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	nop(JUMPDEST)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	call(jump3170(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3179(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	s(9) = s(6)
	nop(DUP3)
	s(9) = l(l4)
	nop(MLOAD)
	s(10) = s(7)
	nop(DUP3)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 3170
	nop(PUSH2)
	call(block3170(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4)))
	nop(JUMP)

block3197(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	call(block3198(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))

block3198(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 3211
	nop(PUSH2)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 3282
	nop(PUSH2)
	call(block3282(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3211(s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block1551(s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3215(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(8) = 3279
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block3221(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3221(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	call(jump3221(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3221(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	leq(s(10), s(9))
	call(block3275(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3221(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	gt(s(10), s(9))
	call(block3230(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3230(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 3221
	nop(PUSH2)
	call(block3221(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3275(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3279(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3279(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block3134(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3282(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(8) = 3316
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block3288(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))

block3288(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	call(jump3288(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3288(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	leq(s(10), s(9))
	call(block3312(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

jump3288(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	gt(s(10), s(9))
	call(block3297(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

block3297(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 3288
	nop(PUSH2)
	call(block3288(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3312(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3316(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3316(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block3211(s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

jump1005_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	leq(s(5), s(4))
	call(block1607_0(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

jump1005_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	gt(s(5), s(4))
	call(block1026_0(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp))

block1005_0(s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 28800
	nop(PUSH2)
	s(6) = 1
	nop(PUSH1)
	s(6) = g(lastTimeOfNewCredit)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump1005_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1005_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	leq(s(5), s(4))
	call(block1607_1(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))

jump1005_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	gt(s(5), s(4))
	call(block1026_1(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp))

block1005_1(s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 28800
	nop(PUSH2)
	s(6) = 1
	nop(PUSH1)
	s(6) = g(lastTimeOfNewCredit)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump1005_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1026_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block1095_0(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1026_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block1086_0(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1026_0(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1026_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1026_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block1095_1(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1026_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block1086_1(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1026_1(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp)=>
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1026_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1086_0(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block1086_1(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

jump1095_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block1119_0(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1095_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block1118_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1095_0(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 1
	nop(PUSH1)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(creditorAddresses)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creditorAddresses)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump1095_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1095_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block1119_1(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1095_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block1118_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block1095_1(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 1
	nop(PUSH1)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(creditorAddresses)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creditorAddresses)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump1095_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1118_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1118_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1119_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block1233_0(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1119_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block1224_0(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1119_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 2
	nop(PUSH1)
	s(6) = g(jackpot)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1119_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1119_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block1233_1(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))

jump1119_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block1224_1(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1119_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 2
	nop(PUSH1)
	s(6) = g(jackpot)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1119_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1224_0(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block1224_1(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

jump1233_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block1361_0(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp))

jump1233_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block1352_0(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1233_0(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1233_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1233_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block1361_1(s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp))

jump1233_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block1352_1(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1233_1(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1233_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, codesize, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1352_0(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block1352_1(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block1361_0(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastCreditorPayedOut) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastTimeOfNewCredit) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(jackpot) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	call(jump1361_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1361_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	eq(s(6), 0)
	call(block1458_0(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

jump1361_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	neq(s(6), 0)
	call(block1438_0(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block1361_1(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastCreditorPayedOut) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastTimeOfNewCredit) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(jackpot) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	call(jump1361_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1361_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	eq(s(6), 0)
	call(block1458_1(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

jump1361_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), codesize, timestamp)=>
	neq(s(6), 0)
	call(block1438_1(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block1438_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block1458_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block1438_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block1458_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block1458_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l1)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1480
	nop(PUSH2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 3000
	nop(PUSH2)
	call(block3000_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block1458_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l1)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1480
	nop(PUSH2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 3000
	nop(PUSH2)
	call(block3000_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

jump1480_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	eq(s(6), 0)
	call(block1529_0(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump1480_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	neq(s(6), 0)
	call(block1509_0(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block1480_0(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	call(jump1480_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1480_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	eq(s(6), 0)
	call(block1529_1(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2)))

jump1480_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	neq(s(6), 0)
	call(block1509_1(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), codesize))

block1480_1(s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	call(jump1480_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1509_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block1529_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0)))

block1509_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), codesize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block1529_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2)))

block1529_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l2)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1551
	nop(PUSH2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 3138
	nop(PUSH2)
	call(block3138_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1529_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l2)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1551
	nop(PUSH2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 3138
	nop(PUSH2)
	call(block3138_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3)))
	nop(JUMP)

block1551_0(s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = 20
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(owner) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 2385
	nop(PUSH2)
	call(block2385_0(s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1551_1(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = 20
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(owner) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 2385
	nop(PUSH2)
	call(block2385_1(s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump1607_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	lt(s(5), s(4))
	call(block2309_0(s(3), s(2), s(1), s(0), l(l1), l(l0), caller, returndatasize))

jump1607_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	geq(s(5), s(4))
	call(block1624_0(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

block1607_0(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10000000000000000
	nop(PUSH7)
	s(5) = s(3)
	nop(DUP2)
	call(jump1607_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1607_1(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10000000000000000
	nop(PUSH7)
	s(5) = s(3)
	nop(DUP2)
	call(jump1607_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1607_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	lt(s(5), s(4))
	call(block2309_1(s(3), s(2), s(1), s(0), l(l0), caller, returndatasize))

jump1607_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	geq(s(5), s(4))
	call(block1624_1(s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))

jump1624_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	neq(s(7), 0)
	call(block1749_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump1624_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	eq(s(7), 0)
	call(block1748_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1624_0(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastTimeOfNewCredit) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(creditorAddresses)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	g(creditorAddresses) = s(8)
	nop(SSTORE)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(4) = 4
	nop(PUSH1)
	s(5) = 100
	nop(PUSH1)
	s(6) = 110
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump1624_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1624_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	neq(s(7), 0)
	call(block1749_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1624_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	eq(s(7), 0)
	call(block1748_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1624_1(s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp)=>
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastTimeOfNewCredit) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(creditorAddresses)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	g(creditorAddresses) = s(8)
	nop(SSTORE)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(4) = 4
	nop(PUSH1)
	s(5) = 100
	nop(PUSH1)
	s(6) = 110
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump1624_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1748_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1748_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1749_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(8), 0)
	call(block1866_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump1749_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(8), 0)
	call(block1865_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1749_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(creditorAmounts)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	g(creditorAmounts) = s(8)
	nop(SSTORE)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 100
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump1749_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1749_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	neq(s(8), 0)
	call(block1866_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1749_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	eq(s(8), 0)
	call(block1865_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1749_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(creditorAmounts)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	g(creditorAmounts) = s(8)
	nop(SSTORE)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 100
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump1749_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1865_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1865_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1866_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(5), 0)
	call(block1910_0(s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump1866_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(5), 0)
	call(block1901_0(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1866_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1866_0(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1866_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1866_1(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1866_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	eq(s(5), 0)
	call(block1910_1(s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1866_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	neq(s(5), 0)
	call(block1901_1(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1901_0(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block1901_1(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block1910_0(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 100000000000000000000
	nop(PUSH9)
	s(5) = 2
	nop(PUSH1)
	s(5) = g(jackpot)
	nop(SLOAD)
	call(jump1910_0(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1910_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	geq(s(5), s(4))
	call(block1962_0(s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump1910_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	lt(s(5), s(4))
	call(block1931_0(s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))

block1910_1(s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 100000000000000000000
	nop(PUSH9)
	s(5) = 2
	nop(PUSH1)
	s(5) = g(jackpot)
	nop(SLOAD)
	call(jump1910_1(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1910_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	geq(s(5), s(4))
	call(block1962_1(s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1910_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	lt(s(5), s(4))
	call(block1931_1(s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

block1931_0(s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	s(4) = 100
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump1931_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1931_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(6), 0)
	call(block1945_0(s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump1931_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(6), 0)
	call(block1944_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1931_1(s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	s(4) = 100
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump1931_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1931_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	neq(s(6), 0)
	call(block1945_1(s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1931_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	eq(s(6), 0)
	call(block1944_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block1944_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1944_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1945_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(jackpot)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(jackpot) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block1962_0(s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))

block1945_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(jackpot)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(jackpot) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block1962_1(s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))

jump1962_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	lt(s(8), s(7))
	call(block2028_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))

jump1962_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	geq(s(8), s(7))
	call(block2027_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1962_0(s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(4) = g(jackpot)
	nop(SLOAD)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(creditorAmounts)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump1962_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1962_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	lt(s(8), s(7))
	call(block2028_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

jump1962_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	geq(s(8), s(7))
	call(block2027_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1962_1(s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(4) = g(jackpot)
	nop(SLOAD)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(creditorAmounts)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump1962_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastCreditorPayedOut), l(l3), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block197_0(s(0), g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 205
	nop(PUSH2)
	s(2) = 1005
	nop(PUSH2)
	call(block1005_1(s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), g(jackpot), g(lastTimeOfNewCredit), g(lastCreditorPayedOut), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, codesize, returndatasize, timestamp))
	nop(JUMP)

block2027_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2027_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2028_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	gt(s(5), s(4))
	call(block2300_0(s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump2028_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	leq(s(5), s(4))
	call(block2047_0(s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))

block2028_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump2028_0(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2028_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	gt(s(5), s(4))
	call(block2300_1(s(3), s(2), s(1), s(0)))

jump2028_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	leq(s(5), s(4))
	call(block2047_1(s(3), s(2), s(1), s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

block2028_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump2028_1(s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2047_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	lt(s(7), s(6))
	call(block2084_0(s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))

jump2047_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	geq(s(7), s(6))
	call(block2083_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block2047_0(s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creditorAddresses)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump2047_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2047_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	lt(s(7), s(6))
	call(block2084_1(s(5), s(4), s(3), s(2), s(1), s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

jump2047_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	geq(s(7), s(6))
	call(block2083_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block2047_1(s(3), s(2), s(1), s(0), g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creditorAddresses)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump2047_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(creditorAddresses), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block205_0(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	skip
	nop(STOP)

block2083_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2083_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2084_0(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(creditorAmounts)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump2084_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2084_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	lt(s(9), s(8))
	call(block2190_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))

jump2084_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	geq(s(9), s(8))
	call(block2189_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2084_1(s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(creditorAmounts)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump2084_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2084_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	lt(s(9), s(8))
	call(block2190_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))

jump2084_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creditorAmounts), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	geq(s(9), s(8))
	call(block2189_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2189_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2189_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2190_0(s(5), s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block2244_0(s(4), s(3), s(2), s(1), s(0),g(lastCreditorPayedOut), l(l1), l(l0)))

jump2190_0(s(5), s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block2235_0(s(4), s(3), s(2), s(1), s(0), returndatasize))

block2190_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump2190_0(s(5),s(4),s(3),s(2),s(1),s(0),g(lastCreditorPayedOut), l(l3), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2190_1(s(5), s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block2244_1(s(4), s(3), s(2), s(1), s(0),g(lastCreditorPayedOut)))

jump2190_1(s(5), s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block2235_1(s(4), s(3), s(2), s(1), s(0), returndatasize))

block2190_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l3), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump2190_1(s(5),s(4),s(3),s(2),s(1),s(0),g(lastCreditorPayedOut), l(l3), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2235_0(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block2235_1(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block2244_0(s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastCreditorPayedOut) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block2300_0(s(3),s(2),s(1),s(0), l(l1), l(l0)))

block2244_1(s(4), s(3), s(2), s(1), s(0), g(lastCreditorPayedOut))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(lastCreditorPayedOut)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(lastCreditorPayedOut) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block2300_1(s(3),s(2),s(1),s(0)))

block2300_0(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 2385
	nop(PUSH2)
	call(block2385_0(s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2300_1(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 2385
	nop(PUSH2)
	call(block2385_1(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block2309_0(s(3), s(2), s(1), s(0), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump2309_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2309_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller, returndatasize)=>
	eq(s(5), 0)
	call(block2379_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump2309_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller, returndatasize)=>
	neq(s(5), 0)
	call(block2370_0(s(4), s(3), s(2), s(1), s(0), returndatasize))

block2309_1(s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump2309_1(s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2309_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	eq(s(5), 0)
	call(block2379_1(s(4), s(3), s(2), s(1), s(0)))

jump2309_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	neq(s(5), 0)
	call(block2370_1(s(4), s(3), s(2), s(1), s(0), returndatasize))

block2370_0(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block2370_1(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block2379_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	call(block2385_0(s(3),s(2),s(1),s(0), l(l1), l(l0)))

block2379_1(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	call(block2385_1(s(3),s(2),s(1),s(0)))

block2385_0(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block871(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2385_1(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block205_0(s(1),s(0)))
	nop(JUMP)

jump3000_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	eq(s(10), 0)
	call(block3121_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

jump3000_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	neq(s(10), 0)
	call(block3026_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block3000_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(9) = g(creditorAddresses)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	g(creditorAddresses) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	nop(DUP3)
	call(jump3000_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3000_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize)=>
	eq(s(10), 0)
	call(block3121_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3000_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize)=>
	neq(s(10), 0)
	call(block3026_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3000_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(9) = g(creditorAddresses)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	g(creditorAddresses) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	nop(DUP3)
	call(jump3000_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), g(creditorAddresses), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3026_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(block3032_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block3026_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(block3032_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3032_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	leq(s(11), s(10))
	call(block3120_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

jump3032_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	gt(s(11), s(10))
	call(block3041_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block3032_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	call(jump3032_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3032_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	leq(s(11), s(10))
	call(block3120_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3032_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	gt(s(11), s(10))
	call(block3041_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3032_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	call(jump3032_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3041_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	s(10) = s(7)
	nop(DUP3)
	s(10) = l(l2)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 3032
	nop(PUSH2)
	call(block3032_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3041_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	s(10) = s(7)
	nop(DUP3)
	s(10) = l(l2)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 3032
	nop(PUSH2)
	call(block3032_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3120_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	call(block3121_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block3120_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	call(block3121_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3121_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 3134
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 3215
	nop(PUSH2)
	call(block3215_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3121_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 3134
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 3215
	nop(PUSH2)
	call(block3215_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3134_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block1480_0(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3134_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block1480_1(s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3138_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(9) = g(creditorAmounts)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	g(creditorAmounts) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	nop(DUP3)
	call(jump3138_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3138_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block3198_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l1), l(l0)))

jump3138_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block3164_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l4), l(l1), l(l0)))

block3138_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(9) = g(creditorAmounts)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	g(creditorAmounts) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	nop(DUP3)
	call(jump3138_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3138_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3))=>
	eq(s(10), 0)
	call(block3198_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

jump3138_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3))=>
	neq(s(10), 0)
	call(block3164_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l4)))

block3164_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4), l(l1), l(l0))=>
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(block3170_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4), l(l1), l(l0)))

block3164_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(block3170_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4)))

jump3170_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block3197_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l1), l(l0)))

jump3170_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block3179_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l4), l(l1), l(l0)))

block3170_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	call(jump3170_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3170_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	leq(s(11), s(10))
	call(block3197_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

jump3170_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	gt(s(11), s(10))
	call(block3179_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l4)))

block3170_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	call(jump3170_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3179_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4), l(l1), l(l0))=>
	s(10) = s(7)
	nop(DUP3)
	s(10) = l(l4)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 3170
	nop(PUSH2)
	call(block3170_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4), l(l1), l(l0)))
	nop(JUMP)

block3179_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4))=>
	s(10) = s(7)
	nop(DUP3)
	s(10) = l(l4)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 3170
	nop(PUSH2)
	call(block3170_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4)))
	nop(JUMP)

block3197_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block3198_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))

block3197_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	call(block3198_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))

block3198_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 3211
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 3282
	nop(PUSH2)
	call(block3282_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3198_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 3211
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 3282
	nop(PUSH2)
	call(block3282_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3211_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block1551_0(s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3211_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block1551_1(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3215_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(9) = 3279
	nop(PUSH2)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block3221_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block3215_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(9) = 3279
	nop(PUSH2)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block3221_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3221_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	leq(s(11), s(10))
	call(block3275_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

jump3221_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	gt(s(11), s(10))
	call(block3230_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))

block3221_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	call(jump3221_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3221_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	leq(s(11), s(10))
	call(block3275_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

jump3221_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	gt(s(11), s(10))
	call(block3230_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))

block3221_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	call(jump3221_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3230_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3221
	nop(PUSH2)
	call(block3221_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3230_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3221
	nop(PUSH2)
	call(block3221_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3275_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block3279_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3275_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block3279_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3279_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3134_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3279_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3134_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(creditorAmounts), l(l4), l(l3), l(l2), l(l0), codesize))
	nop(JUMP)

block3282_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 3316
	nop(PUSH2)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block3288_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))

block3282_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(9) = 3316
	nop(PUSH2)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block3288_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))

jump3288_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block3312_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l1), l(l0)))

jump3288_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block3297_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l1), l(l0)))

block3288_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	call(jump3288_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3288_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	leq(s(11), s(10))
	call(block3312_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

jump3288_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	gt(s(11), s(10))
	call(block3297_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner)))

block3288_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	call(jump3288_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3297_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3288
	nop(PUSH2)
	call(block3288_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3297_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3288
	nop(PUSH2)
	call(block3288_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3312_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block3316_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3312_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block3316_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

block3316_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3211_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3316_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3211_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(JUMP)

