{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "allowance(address,address)": [
                1118,
                273
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "transfer(address,uint256)": [
                870,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                227,
                97
            ],
            "mint(address,uint256)": [
                504,
                163
            ],
            "balanceOf(address)": [
                605,
                185
            ],
            "finishMinting()": [
                692,
                207
            ],
            "allowance(address,address)": [
                927,
                273
            ],
            "transferFrom(address,address,uint256)": [
                371,
                141
            ],
            "transfer(address,uint256)": [
                826,
                251
            ],
            "transferOwnership(address)": [
                1046,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SGAToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "allowTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                426,
                119
            ],
            "allowTransfer()": [
                1271,
                339
            ],
            "mint(address,uint256)": [
                805,
                229
            ],
            "finishMinting()": [
                993,
                273
            ],
            "balanceOf(address)": [
                906,
                251
            ],
            "transferFrom(address,address,uint256)": [
                570,
                163
            ],
            "allowance(address,address)": [
                1395,
                383
            ],
            "transfer(address,uint256)": [
                1294,
                361
            ],
            "transferOwnership(address)": [
                1514,
                405
            ]
        },
        "block_CALL_mapping": {}
    },
    "PurchaseBonusCrowdsale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "removeBonus(uint8)",
            "changeBonus(uint8,uint256,uint256)",
            "insertBonus(uint8,uint256,uint256)",
            "clearBonuses()",
            "getBonus(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "bonusesCount()": {
                "argument": {},
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "removeBonus(uint8)": {
                "argument": {
                    "number": "uint8"
                },
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "changeBonus(uint8,uint256,uint256)": {
                "argument": {
                    "number": "uint8",
                    "limit": "uint256",
                    "bonusValue": "uint256"
                },
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "insertBonus(uint8,uint256,uint256)": {
                "argument": {
                    "numberAfter": "uint8",
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "clearBonuses()": {
                "argument": {},
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            },
            "getBonus(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "bonuses": "PurchaseBonusCrowdsale.Bonus[]"
                }
            }
        },
        "function_block_mapping": {
            "changeBonus(uint8,uint256,uint256)": [
                358,
                141
            ],
            "pause()": [
                473,
                185
            ],
            "clearBonuses()": [
                496,
                207
            ],
            "unpause()": [
                202,
                75
            ],
            "getBonus(uint256)": [
                225,
                97
            ],
            "removeBonus(uint8)": [
                733,
                295
            ],
            "addBonus(uint256,uint256)": [
                678,
                273
            ],
            "insertBonus(uint8,uint256,uint256)": [
                290,
                119
            ],
            "bonusesCount()": [
                781,
                317
            ],
            "transferOwnership(address)": [
                824,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "removeBonus(uint8)",
            "changeBonus(uint8,uint256,uint256)",
            "insertBonus(uint8,uint256,uint256)",
            "clearBonuses()",
            "getBonus(uint256)",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale()",
            "lastSaleDate()",
            "setStart(uint256)",
            "setMinPrice(uint256)",
            "setHardcap(uint256)",
            "setPrice(uint256)",
            "setFoundersTokensPercent(uint256)",
            "setSoftcap(uint256)",
            "setSecondWallet(address)",
            "setSecondWalletPercent(uint256)",
            "setMultisigWallet(address)",
            "setFoundersTokensWallet(address)",
            "createTokens()",
            "refund()",
            "finishMinting()",
            "fallback()",
            "retrieveTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "bonusesCount()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "removeBonus(uint8)": {
                "argument": {
                    "number": "uint8"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "changeBonus(uint8,uint256,uint256)": {
                "argument": {
                    "number": "uint8",
                    "limit": "uint256",
                    "bonusValue": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "insertBonus(uint8,uint256,uint256)": {
                "argument": {
                    "numberAfter": "uint8",
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "clearBonuses()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "getBonus(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "lastSaleDate()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setMinPrice(uint256)": {
                "argument": {
                    "newMinPrice": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setFoundersTokensPercent(uint256)": {
                "argument": {
                    "newFoundersTokensPercent": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setSoftcap(uint256)": {
                "argument": {
                    "newSoftcap": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setSecondWallet(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setSecondWalletPercent(uint256)": {
                "argument": {
                    "newSecondWalletPercent": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setMultisigWallet(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "setFoundersTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "period": "uint256",
                    "invested": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "secondWalletPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "price": "uint256",
                    "minPrice": "uint256",
                    "percentRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeBonus(uint8,uint256,uint256)": [
                1257,
                339
            ],
            "retrieveTokens(address)": [
                2016,
                669
            ],
            "refund()": [
                1166,
                295
            ],
            "setStart(uint256)": [
                2656,
                977
            ],
            "pause()": [
                1550,
                471
            ],
            "setMultisigWallet(address)": [
                1417,
                405
            ],
            "clearBonuses()": [
                1616,
                515
            ],
            "unpause()": [
                944,
                207
            ],
            "createTokens()": [
                2183,
                735
            ],
            "setFoundersTokensWallet(address)": [
                810,
                163
            ],
            "setHardcap(uint256)": [
                2458,
                889
            ],
            "addBonus(uint256,uint256)": [
                2128,
                713
            ],
            "setSoftcap(uint256)": [
                548,
                75
            ],
            "transferOwnership(address)": [
                2589,
                955
            ],
            "bonusesCount()": [
                2415,
                867
            ],
            "setSecondWalletPercent(uint256)": [
                2279,
                801
            ],
            "setPrice(uint256)": [
                1856,
                603
            ],
            "getBonus(uint256)": [
                1054,
                251
            ],
            "finishMinting()": [
                7224,
                886
            ],
            "lastSaleDate()": [
                767,
                141
            ],
            "setFoundersTokensPercent(uint256)": [
                2083,
                691
            ],
            "insertBonus(uint8,uint256,uint256)": [
                1189,
                317
            ],
            "setSecondWallet(address)": [
                877,
                185
            ],
            "setMinPrice(uint256)": [
                1372,
                383
            ],
            "removeBonus(uint8)": [
                2367,
                845
            ]
        },
        "block_CALL_mapping": {
            "jump5925": [
                "secondWallet.transfer(secondWalletInvested)",
                "secondWallet.transfer(secondWalletInvested)"
            ],
            "jump3405_1": [
                "token.mint(this, tokensWithBonus)",
                "token.mint(this, tokensWithBonus)"
            ],
            "jump3405_0": [
                "token.mint(this, tokensWithBonus)",
                "token.mint(this, tokensWithBonus)"
            ],
            "block8550": [
                "token.balanceOf(this)"
            ],
            "jump3405": [
                "token.mint(this, tokensWithBonus)",
                "token.mint(this, tokensWithBonus)"
            ],
            "jump6580": [
                "token.mint(this, foundersTokens)",
                "token.mint(this, foundersTokens)"
            ],
            "jump6774": [
                "token.allowTransfer()",
                "token.allowTransfer()"
            ],
            "jump4787": [
                "msg.sender.transfer(balances[msg.sender])",
                "msg.sender.transfer(balances[msg.sender])"
            ],
            "jump8550": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block3662_0": [
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "block3662_1": [
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "block6031": [
                "multisigWallet.transfer(invested - secondWalletInvested)"
            ],
            "jump8742": [
                "alienToken.transfer(multisigWallet, token.balanceOf(this))",
                "alienToken.transfer(multisigWallet, token.balanceOf(this))"
            ],
            "block3405": [
                "token.mint(this, tokensWithBonus)"
            ],
            "block5925": [
                "secondWallet.transfer(secondWalletInvested)"
            ],
            "block3662": [
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "block7224": [
                "token.finishMinting()"
            ],
            "block7029": [
                "token.transfer(foundersTokensWallet, foundersTokens)"
            ],
            "block6774": [
                "token.allowTransfer()"
            ],
            "jump3662": [
                "token.transfer(msg.sender, tokensWithBonus)",
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "jump6031": [
                "multisigWallet.transfer(invested - secondWalletInvested)",
                "multisigWallet.transfer(invested - secondWalletInvested)"
            ],
            "block4787": [
                "msg.sender.transfer(balances[msg.sender])"
            ],
            "block3405_1": [
                "token.mint(this, tokensWithBonus)"
            ],
            "jump7506": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "jump7224": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump3662_1": [
                "token.transfer(msg.sender, tokensWithBonus)",
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "jump6275": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block3405_0": [
                "token.mint(this, tokensWithBonus)"
            ],
            "block8742": [
                "alienToken.transfer(multisigWallet, token.balanceOf(this))"
            ],
            "block7506": [
                "token.transferOwnership(owner)"
            ],
            "block6580": [
                "token.mint(this, foundersTokens)"
            ],
            "jump7029": [
                "token.transfer(foundersTokensWallet, foundersTokens)",
                "token.transfer(foundersTokensWallet, foundersTokens)"
            ],
            "jump3662_0": [
                "token.transfer(msg.sender, tokensWithBonus)",
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "block6275": [
                "token.totalSupply()"
            ]
        }
    }
}