{
    "Registrar": {
        "function_list": [
            "transfer(bytes32,address)",
            "entries(bytes32)"
        ],
        "initial_state": {
            "transfer(bytes32,address)": {
                "argument": {
                    "_hash": "bytes32"
                },
                "contract": {}
            },
            "entries(bytes32)": {
                "argument": {
                    "_hash": "bytes32"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block18741": [
                "c.approve(_spender, _amount)"
            ],
            "block14300": [
                "c.fillIndexedBid(_index)"
            ],
            "jump10180": [
                "_dest.send(_payment)",
                "_dest.send(_payment)"
            ],
            "jump7436": [
                "c.transfer(_to, _amount)",
                "c.transfer(_to, _amount)"
            ],
            "block11875": [
                "c.cancelSale()"
            ],
            "jump15673": [
                "c.burnIndexed(_index)",
                "c.burnIndexed(_index)"
            ],
            "jump7764": [
                "c.transferIndexed(_to, _index)",
                "c.transferIndexed(_to, _index)"
            ],
            "block13027": [
                "c.cancelIndexedSale()"
            ],
            "jump13265": [
                "c.burn(_amount)",
                "c.burn(_amount)"
            ],
            "block10180": [
                "_dest.send(_payment)"
            ],
            "jump15964": [
                "c.approveIndexed(_spender, _index)",
                "c.approveIndexed(_spender, _index)"
            ],
            "block6592": [
                "c.offerIndexedPieceForSale(_index, _price)"
            ],
            "block15964": [
                "c.approveIndexed(_spender, _index)"
            ],
            "jump14300": [
                "c.fillIndexedBid(_index)",
                "c.fillIndexedBid(_index)"
            ],
            "block7764": [
                "c.transferIndexed(_to, _index)"
            ],
            "jump12643": [
                "c.burnIndexedFrom(_from, _index)",
                "c.burnIndexedFrom(_from, _index)"
            ],
            "block11441": [
                "c.burnFrom (_from, _amount)"
            ],
            "jump13027": [
                "c.cancelIndexedSale()",
                "c.cancelIndexedSale()"
            ],
            "block12643": [
                "c.burnIndexedFrom(_from, _index)"
            ],
            "jump11875": [
                "c.cancelSale()",
                "c.cancelSale()"
            ],
            "jump6592": [
                "c.offerIndexedPieceForSale(_index, _price)",
                "c.offerIndexedPieceForSale(_index, _price)"
            ],
            "block19041": [
                "c.offerPieceForSale(_price)"
            ],
            "jump13989": [
                "c.fillBid()",
                "c.fillBid()"
            ],
            "block13265": [
                "c.burn(_amount)"
            ],
            "block15673": [
                "c.burnIndexed(_index)"
            ],
            "jump18741": [
                "c.approve(_spender, _amount)",
                "c.approve(_spender, _amount)"
            ],
            "jump19041": [
                "c.offerPieceForSale(_price)",
                "c.offerPieceForSale(_price)"
            ],
            "block7436": [
                "c.transfer(_to, _amount)"
            ],
            "block13465": [
                "payee.send(payment)"
            ],
            "jump13465": [
                "payee.send(payment)",
                "payee.send(payment)"
            ],
            "jump11441": [
                "c.burnFrom (_from, _amount)",
                "c.burnFrom (_from, _amount)"
            ],
            "block13989": [
                "c.fillBid()"
            ]
        }
    },
    "Deed": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "subdomainSale": {
        "function_list": [
            "subdomainSale()",
            "listSubName(bytes32,bytes32,uint256,uint256,uint256)",
            "unlistSubName(bytes32,bytes32)",
            "nodeCheck(bytes32)",
            "subRegistrationPeriod(bytes32)",
            "checkSubAvailability(bytes32)",
            "checkSubPrice(bytes32)",
            "checkCommitPeriod(bytes32)",
            "checkRegPeriod(bytes32)",
            "subBuy(bytes32,bytes32,bytes32,address)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "subdomainSale()": {
                "argument": {},
                "contract": {}
            },
            "listSubName(bytes32,bytes32,uint256,uint256,uint256)": {
                "argument": {
                    "label": "bytes32",
                    "node": "bytes32",
                    "commit": "uint256",
                    "price": "uint256",
                    "expiry": "uint256"
                },
                "contract": {}
            },
            "unlistSubName(bytes32,bytes32)": {
                "argument": {
                    "label": "bytes32",
                    "node": "bytes32"
                },
                "contract": {}
            },
            "nodeCheck(bytes32)": {
                "argument": {
                    "node": "bytes32"
                },
                "contract": {}
            },
            "subRegistrationPeriod(bytes32)": {
                "argument": {
                    "node": "bytes32"
                },
                "contract": {}
            },
            "checkSubAvailability(bytes32)": {
                "argument": {
                    "node": "bytes32"
                },
                "contract": {}
            },
            "checkSubPrice(bytes32)": {
                "argument": {
                    "node": "bytes32"
                },
                "contract": {}
            },
            "checkCommitPeriod(bytes32)": {
                "argument": {
                    "node": "bytes32"
                },
                "contract": {}
            },
            "checkRegPeriod(bytes32)": {
                "argument": {
                    "node": "bytes32"
                },
                "contract": {}
            },
            "subBuy(bytes32,bytes32,bytes32,address)": {
                "argument": {
                    "ensName": "bytes32",
                    "subNode": "bytes32",
                    "newNode": "bytes32"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unlistSubName(bytes32,bytes32)": [
                518,
                141
            ],
            "subRegistrationPeriod(bytes32)": [
                581,
                163
            ],
            "checkCommitPeriod(bytes32)": [
                449,
                119
            ],
            "listSubName(bytes32,bytes32,uint256,uint256,uint256)": [
                356,
                97
            ],
            "subBuy(bytes32,bytes32,bytes32,address)": [
                260,
                75
            ],
            "checkSubAvailability(bytes32)": [
                832,
                229
            ],
            "nodeCheck(bytes32)": [
                650,
                185
            ],
            "checkRegPeriod(bytes32)": [
                905,
                251
            ],
            "checkSubPrice(bytes32)": [
                763,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump2184": [
                "ens.setSubnodeOwner(ensName,subNode,newOwner)",
                "ens.setSubnodeOwner(ensName,subNode,newOwner)"
            ],
            "block1153": [
                "ens.owner(node)"
            ],
            "jump4648": [
                "deed.owner()",
                "deed.owner()"
            ],
            "block2859": [
                "registrar.entries(label)"
            ],
            "block1600": [
                "records[ensName].originalOwner.transfer(netPrice)"
            ],
            "block2610": [
                "deed.previousOwner()"
            ],
            "jump5343": [
                "registrar.transfer(label,records[node].originalOwner)",
                "registrar.transfer(label,records[node].originalOwner)"
            ],
            "block5343": [
                "registrar.transfer(label,records[node].originalOwner)"
            ],
            "jump5052": [
                "ens.setOwner(node,records[node].originalOwner)",
                "ens.setOwner(node,records[node].originalOwner)"
            ],
            "block2373": [
                "registrar.entries(label)"
            ],
            "block153_0": [
                "admin.transfer(msg.value)"
            ],
            "block4648": [
                "deed.owner()"
            ],
            "block3096": [
                "deed.owner()"
            ],
            "block1488": [
                "admin.transfer(fee)"
            ],
            "block5826": [
                "ens.owner(node)"
            ],
            "block4411": [
                "registrar.entries(label)"
            ],
            "jump3365": [
                "ens.owner(node)",
                "ens.owner(node)"
            ],
            "jump153": [
                "admin.transfer(msg.value)",
                "admin.transfer(msg.value)"
            ],
            "block3365": [
                "ens.owner(node)"
            ],
            "jump153_0": [
                "admin.transfer(msg.value)",
                "admin.transfer(msg.value)"
            ],
            "block2184": [
                "ens.setSubnodeOwner(ensName,subNode,newOwner)"
            ],
            "block5052": [
                "ens.setOwner(node,records[node].originalOwner)"
            ],
            "jump2610": [
                "deed.previousOwner()",
                "deed.previousOwner()"
            ],
            "jump2373": [
                "registrar.entries(label)",
                "registrar.entries(label)"
            ],
            "jump4162": [
                "ens.owner(node)",
                "ens.owner(node)"
            ],
            "jump1153": [
                "ens.owner(node)",
                "ens.owner(node)"
            ],
            "block4162": [
                "ens.owner(node)"
            ],
            "block153": [
                "admin.transfer(msg.value)"
            ],
            "jump4411": [
                "registrar.entries(label)",
                "registrar.entries(label)"
            ],
            "jump5826": [
                "ens.owner(node)",
                "ens.owner(node)"
            ],
            "jump1600": [
                "records[ensName].originalOwner.transfer(netPrice)",
                "records[ensName].originalOwner.transfer(netPrice)"
            ],
            "jump1488": [
                "admin.transfer(fee)",
                "admin.transfer(fee)"
            ],
            "jump3096": [
                "deed.owner()",
                "deed.owner()"
            ],
            "jump2859": [
                "registrar.entries(label)",
                "registrar.entries(label)"
            ]
        }
    }
}