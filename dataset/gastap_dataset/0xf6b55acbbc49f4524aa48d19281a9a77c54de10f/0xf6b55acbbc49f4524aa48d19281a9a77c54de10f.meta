{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "totalSupply()": [
                447,
                119
            ],
            "balanceOf(address)": [
                773,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "allowance(address,address)": [
                1394,
                339
            ],
            "transfer(address,uint256)": [
                1091,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "contributorTokens": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "balanceOf(address)": [
                424,
                141
            ],
            "totalSupply()": [
                248,
                97
            ],
            "allowance(address,address)": [
                698,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                597,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "Wolk": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reserveBalance": "uint256",
                    "percentageETHReserve": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "balanceOf(address)": [
                732,
                185
            ],
            "totalSupply()": [
                513,
                119
            ],
            "transferFrom(address,address,uint256)": [
                556,
                141
            ],
            "acceptOwnership()": [
                819,
                207
            ],
            "allowance(address,address)": [
                1439,
                405
            ],
            "transfer(address,uint256)": [
                1251,
                361
            ],
            "transferOwnership(address)": [
                1692,
                471
            ]
        },
        "block_CALL_mapping": {}
    },
    "WolkTGE": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "wolkGenesis(uint256,uint256,address)",
            "updateRequireKYC(bool)",
            "addParticipant(address[])",
            "removeParticipant(address[])",
            "participantStatus(address)",
            "tokenGenerationEvent(address)",
            "finalize()",
            "refund()",
            "transferAnyERC20Token(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "wolkGenesis(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "updateRequireKYC(bool)": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "addParticipant(address[])": {
                "argument": {
                    "_participants": "address[]"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "removeParticipant(address[])": {
                "argument": {
                    "_participants": "address[]"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "participantStatus(address)": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "tokenGenerationEvent(address)": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "transferAnyERC20Token(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "tokenGenerationMin": "uint256",
                    "tokenGenerationMax": "uint256",
                    "start_block": "uint256",
                    "end_time": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "updateRequireKYC(bool)": [
                964,
                251
            ],
            "wolkGenesis(uint256,uint256,address)": [
                1367,
                405
            ],
            "totalSupply()": [
                699,
                141
            ],
            "transferFrom(address,address,uint256)": [
                742,
                163
            ],
            "addParticipant(address[])": [
                1799,
                515
            ],
            "approve(address,uint256)": [
                555,
                97
            ],
            "transferAnyERC20Token(address,uint256)": [
                2199,
                625
            ],
            "balanceOf(address)": [
                1078,
                295
            ],
            "refund()": [
                941,
                229
            ],
            "transferOwnership(address)": [
                2679,
                735
            ],
            "tokenGenerationEvent(address)": [
                2746,
                757
            ],
            "finalize()": [
                918,
                207
            ],
            "removeParticipant(address[])": [
                2553,
                713
            ],
            "participantStatus(address)": [
                1665,
                471
            ],
            "transfer(address,uint256)": [
                7554,
                946
            ],
            "allowance(address,address)": [
                2300,
                647
            ],
            "acceptOwnership()": [
                1165,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump7554": [
                "ERC20(_tokenAddress).transfer(owner, _amount)",
                "ERC20(_tokenAddress).transfer(owner, _amount)"
            ],
            "jump4636": [
                "msg.sender.transfer(withdrawalBalance)",
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "block5133": [
                "msg.sender.transfer(refundBalance)"
            ],
            "block4636": [
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "jump5133": [
                "msg.sender.transfer(refundBalance)",
                "msg.sender.transfer(refundBalance)"
            ],
            "block7554": [
                "ERC20(_tokenAddress).transfer(owner, _amount)"
            ]
        }
    },
    "WolkExchange": {
        "function_list": [
            "wolkGenesis(uint256,uint256,address)",
            "updateRequireKYC(bool)",
            "addParticipant(address[])",
            "removeParticipant(address[])",
            "participantStatus(address)",
            "tokenGenerationEvent(address)",
            "finalize()",
            "refund()",
            "transferAnyERC20Token(address,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "setExchangeFormula(address)",
            "updateReserveRatio(uint8)",
            "updatePurchasePossible(bool)",
            "updateSellPossible(bool)",
            "sellWolkEstimate(uint256,address)",
            "purchaseWolkEstimate(uint256,address)",
            "sellWolk(uint256)",
            "purchaseWolk(address)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "wolkGenesis(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {}
            },
            "updateRequireKYC(bool)": {
                "argument": {},
                "contract": {}
            },
            "addParticipant(address[])": {
                "argument": {
                    "_participants": "address[]"
                },
                "contract": {}
            },
            "removeParticipant(address[])": {
                "argument": {
                    "_participants": "address[]"
                },
                "contract": {}
            },
            "participantStatus(address)": {
                "argument": {},
                "contract": {}
            },
            "tokenGenerationEvent(address)": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "refund()": {
                "argument": {},
                "contract": {}
            },
            "transferAnyERC20Token(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "setExchangeFormula(address)": {
                "argument": {},
                "contract": {}
            },
            "updateReserveRatio(uint8)": {
                "argument": {
                    "_newReserveRatio": "uint8"
                },
                "contract": {}
            },
            "updatePurchasePossible(bool)": {
                "argument": {},
                "contract": {}
            },
            "updateSellPossible(bool)": {
                "argument": {},
                "contract": {}
            },
            "sellWolkEstimate(uint256,address)": {
                "argument": {
                    "_wolkAmountest": "uint256"
                },
                "contract": {}
            },
            "purchaseWolkEstimate(uint256,address)": {
                "argument": {
                    "_ethAmountest": "uint256"
                },
                "contract": {}
            },
            "sellWolk(uint256)": {
                "argument": {
                    "_wolkAmount": "uint256"
                },
                "contract": {}
            },
            "purchaseWolk(address)": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "updateRequireKYC(bool)": [
                1883,
                286
            ],
            "wolkGenesis(uint256,uint256,address)": [
                2333,
                462
            ],
            "purchaseWolk(address)": [
                892,
                839
            ],
            "totalSupply()": [
                1319,
                88
            ],
            "setExchangeFormula(address)": [
                1495,
                132
            ],
            "removeParticipant(address[])": [
                3733,
                836
            ],
            "transferFrom(address,address,uint256)": [
                1362,
                110
            ],
            "addParticipant(address[])": [
                2765,
                572
            ],
            "approve(address,uint256)": [
                1175,
                44
            ],
            "transferAnyERC20Token(address,uint256)": [
                3236,
                704
            ],
            "updateReserveRatio(uint8)": [
                3661,
                814
            ],
            "updatePurchasePossible(bool)": [
                3590,
                792
            ],
            "balanceOf(address)": [
                1997,
                330
            ],
            "refund()": [
                1860,
                264
            ],
            "transferOwnership(address)": [
                3859,
                858
            ],
            "tokenGenerationEvent(address)": [
                696,
                839
            ],
            "finalize()": [
                1837,
                242
            ],
            "updateSellPossible(bool)": [
                2992,
                616
            ],
            "participantStatus(address)": [
                2631,
                528
            ],
            "transfer(address,uint256)": [
                10517,
                946
            ],
            "allowance(address,address)": [
                3337,
                726
            ],
            "acceptOwnership()": [
                2084,
                352
            ]
        },
        "block_CALL_mapping": {
            "jump12839_1": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)",
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "jump12839_0": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)",
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "jump12839": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)",
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "jump12839_2": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)",
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "jump696": [
                "this.tokenGenerationEvent.value(msg.value)(msg.sender)",
                "this.tokenGenerationEvent.value(msg.value)(msg.sender)"
            ],
            "block12839_2": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "block12839_1": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "block12839_0": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "jump7820": [
                "msg.sender.transfer(refundBalance)",
                "msg.sender.transfer(refundBalance)"
            ],
            "block892": [
                "this.purchaseWolk.value(msg.value)(msg.sender)"
            ],
            "block13140": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "jump4401": [
                "msg.sender.transfer(ethReceivable)",
                "msg.sender.transfer(ethReceivable)"
            ],
            "block7820": [
                "msg.sender.transfer(refundBalance)"
            ],
            "jump892_0": [
                "this.purchaseWolk.value(msg.value)(msg.sender)",
                "this.purchaseWolk.value(msg.value)(msg.sender)"
            ],
            "jump13140": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)",
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "block7323": [
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "jump13140_0": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)",
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "block892_0": [
                "this.purchaseWolk.value(msg.value)(msg.sender)"
            ],
            "block13140_1": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "block13140_0": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "block13140_2": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "block12839": [
                "IBancorFormula(_formula).calculateSaleReturn(contributorTokens, reserveBalance, percentageETHReserve, _wolkAmountest)"
            ],
            "jump10517": [
                "ERC20(_tokenAddress).transfer(owner, _amount)",
                "ERC20(_tokenAddress).transfer(owner, _amount)"
            ],
            "block696_0": [
                "this.tokenGenerationEvent.value(msg.value)(msg.sender)"
            ],
            "jump696_0": [
                "this.tokenGenerationEvent.value(msg.value)(msg.sender)",
                "this.tokenGenerationEvent.value(msg.value)(msg.sender)"
            ],
            "block10517": [
                "ERC20(_tokenAddress).transfer(owner, _amount)"
            ],
            "jump892": [
                "this.purchaseWolk.value(msg.value)(msg.sender)",
                "this.purchaseWolk.value(msg.value)(msg.sender)"
            ],
            "jump13140_2": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)",
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "jump13140_1": [
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)",
                "IBancorFormula(_formula).calculatePurchaseReturn(contributorTokens, reserveBalance, percentageETHReserve, _ethAmountest)"
            ],
            "jump7323": [
                "msg.sender.transfer(withdrawalBalance)",
                "msg.sender.transfer(withdrawalBalance)"
            ],
            "block696": [
                "this.tokenGenerationEvent.value(msg.value)(msg.sender)"
            ],
            "block4401": [
                "msg.sender.transfer(ethReceivable)"
            ]
        }
    }
}