{
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10086,
                26
            ],
            "claimTokens(address)": [
                2804,
                537
            ],
            "totalSupply()": [
                931,
                141
            ],
            "allowance(address,address)": [
                2685,
                515
            ],
            "transferFrom(address,address,uint256)": [
                974,
                163
            ],
            "approve(address,uint256)": [
                787,
                97
            ],
            "totalSupplyAt(uint256)": [
                10086,
                26
            ],
            "enableTransfers(bool)": [
                2958,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1464,
                273
            ],
            "changeController(address)": [
                6193,
                889
            ],
            "balanceOf(address)": [
                8600,
                847
            ],
            "generateTokens(address,uint256)": [
                1912,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2413,
                471
            ],
            "destroyTokens(address,uint256)": [
                2584,
                493
            ],
            "transfer(address,uint256)": [
                8857,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump5977": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block7175_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8857": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block5977": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block5206_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9708_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump9708_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7175_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3784": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5206": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9708": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7175": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8857": [
                "token.transfer(controller, balance)"
            ],
            "jump3784_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump5206_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9708": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3784_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block3784": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block6193": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7175_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7175_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7689": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block7175_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7175_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7689": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block8600": [
                "token.balanceOf(this)"
            ],
            "jump8311": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump8600": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block8311": [
                "controller.transfer(this.balance)"
            ],
            "block7175": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6193": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ]
        }
    },
    "CND": {
        "function_list": [
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "CND(address)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "CND(address)": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "IS_CND_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                9847,
                26
            ],
            "claimTokens(address)": [
                2559,
                559
            ],
            "totalSupply()": [
                643,
                141
            ],
            "allowance(address,address)": [
                2440,
                537
            ],
            "transferFrom(address,address,uint256)": [
                686,
                163
            ],
            "approve(address,uint256)": [
                499,
                97
            ],
            "totalSupplyAt(uint256)": [
                9847,
                26
            ],
            "enableTransfers(bool)": [
                2713,
                603
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1176,
                273
            ],
            "changeController(address)": [
                5888,
                889
            ],
            "balanceOf(address)": [
                8301,
                847
            ],
            "generateTokens(address,uint256)": [
                1624,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2168,
                493
            ],
            "destroyTokens(address,uint256)": [
                2339,
                515
            ],
            "transfer(address,uint256)": [
                8558,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump5888": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "block8558": [
                "token.transfer(controller, balance)"
            ],
            "block9469_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3479": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump7390": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump8301": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block8301": [
                "token.balanceOf(this)"
            ],
            "block9469": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block6870": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8558": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block8012": [
                "controller.transfer(this.balance)"
            ],
            "jump6870_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5672": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump6870": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6870_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3479": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block6870_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6870_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block3479_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block4901": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3479_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block4901_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6870_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5888": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump6870_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4901_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4901_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4901_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9469": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block4901_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4901_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block4901_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4901_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8012": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "block7390": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump9469_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump5672": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Contribution": {
        "function_list": [
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "Controlled()",
            "changeController(address)",
            "contributionOpen()",
            "Contribution(address,address,address,address)",
            "initializeToken(address)",
            "initializeTier(uint256,address)",
            "fallback()",
            "investorAmountTokensToBuy(address)",
            "isWhitelisted(address,uint256)",
            "whitelistAddresses(address[],uint256,bool)",
            "buy()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "allowTransfers(bool)",
            "leftForSale()",
            "doBuy()",
            "allocate()",
            "finalize()",
            "isCurrentTierCapReached()",
            "getBlockTimestamp()",
            "claimTokens(address)",
            "pauseContribution(bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "contributionOpen()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "Contribution(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "initializeToken(address)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "initializeTier(uint256,address)": {
                "argument": {
                    "_tierNumber": "uint256"
                },
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "investorAmountTokensToBuy(address)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "isWhitelisted(address,uint256)": {
                "argument": {
                    "_tier": "uint256"
                },
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "whitelistAddresses(address[],uint256,bool)": {
                "argument": {
                    "_addresses": "address[]",
                    "_tier": "uint256"
                },
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "allowTransfers(bool)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "leftForSale()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "doBuy()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "allocate()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "isCurrentTierCapReached()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "getBlockTimestamp()": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            },
            "pauseContribution(bool)": {
                "argument": {},
                "contract": {
                    "tierCount": "uint256",
                    "October12_2017": "uint256",
                    "totalTokensSold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "initializeTier(uint256,address)": [
                1133,
                295
            ],
            "isCurrentTierCapReached()": [
                1983,
                603
            ],
            "isWhitelisted(address,uint256)": [
                1468,
                383
            ],
            "claimTokens(address)": [
                10200,
                925
            ],
            "buy()": [
                1706,
                471
            ],
            "pauseContribution(bool)": [
                686,
                141
            ],
            "contributionOpen()": [
                1569,
                405
            ],
            "onApprove(address,address,uint256)": [
                2030,
                625
            ],
            "proxyPayment(address)": [
                2404,
                713
            ],
            "whitelistAddresses(address[],uint256,bool)": [
                1344,
                361
            ],
            "leftForSale()": [
                1940,
                581
            ],
            "allowTransfers(bool)": [
                1803,
                515
            ],
            "changeController(address)": [
                820,
                185
            ],
            "onTransfer(address,address,uint256)": [
                887,
                207
            ],
            "investorAmountTokensToBuy(address)": [
                1716,
                493
            ],
            "finalize()": [
                4609,
                800
            ],
            "allocate()": [
                1850,
                537
            ],
            "initializeToken(address)": [
                619,
                119
            ]
        },
        "block_CALL_mapping": {
            "block3067": [
                "CND(_cnd).IS_CND_CONTRACT_MAGIC_NUMBER()"
            ],
            "jump12406": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump13152_0": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "jump4787_1": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "jump5413": [
                "tier.IS_TIER_CONTRACT_MAGIC_NUMBER()",
                "tier.IS_TIER_CONTRACT_MAGIC_NUMBER()"
            ],
            "jump12005_0": [
                "tier.minInvestorCap()",
                "tier.minInvestorCap()"
            ],
            "jump3762": [
                "tier.initializedTime()",
                "tier.initializedTime()"
            ],
            "jump6892": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "block8983_0": [
                "tier.totalInvestedWei()"
            ],
            "jump4787": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "block8057": [
                "cnd.generateTokens(foundersWallet, foundersAllocation)"
            ],
            "jump6713": [
                "tier.endTime()",
                "tier.endTime()"
            ],
            "block3986_1": [
                "tier.finalizedTime()"
            ],
            "block3986_0": [
                "tier.finalizedTime()"
            ],
            "block6892_0": [
                "tier.finalizedTime()"
            ],
            "block6892_1": [
                "tier.finalizedTime()"
            ],
            "block11266_0": [
                "tier.initializedTime()"
            ],
            "jump9561": [
                "tier.isCapReached()",
                "tier.isCapReached()"
            ],
            "jump4609_0": [
                "tier.finalize()",
                "tier.finalize()"
            ],
            "jump4609_1": [
                "tier.finalize()",
                "tier.finalize()"
            ],
            "block10200": [
                "cnd.claimTokens(_token)"
            ],
            "jump11266_0": [
                "tier.initializedTime()",
                "tier.initializedTime()"
            ],
            "jump4787_0": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "jump10200": [
                "cnd.claimTokens(_token)",
                "cnd.claimTokens(_token)"
            ],
            "block9924": [
                "cnd.controller()"
            ],
            "jump9142": [
                "tier.cap()",
                "tier.cap()"
            ],
            "block5191": [
                "tier.controller()"
            ],
            "block4609_0": [
                "tier.finalize()"
            ],
            "jump6537_1": [
                "tier.startTime()",
                "tier.startTime()"
            ],
            "block12606_0": [
                "tier.exchangeRate()"
            ],
            "jump3067": [
                "CND(_cnd).IS_CND_CONTRACT_MAGIC_NUMBER()",
                "CND(_cnd).IS_CND_CONTRACT_MAGIC_NUMBER()"
            ],
            "jump3986_1": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "jump3986_0": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "jump12005": [
                "tier.minInvestorCap()",
                "tier.minInvestorCap()"
            ],
            "block12005_0": [
                "tier.minInvestorCap()"
            ],
            "jump8397": [
                "cnd.generateTokens(advisorsWallet, advisorsAllocation)",
                "cnd.generateTokens(advisorsWallet, advisorsAllocation)"
            ],
            "jump4154_1": [
                "tier.startTime()",
                "tier.startTime()"
            ],
            "block4417": [
                "tier.endTime()"
            ],
            "block12005": [
                "tier.minInvestorCap()"
            ],
            "jump6537_0": [
                "tier.startTime()",
                "tier.startTime()"
            ],
            "jump12182": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump7456_1": [
                "tier.maxInvestorCap()",
                "tier.maxInvestorCap()"
            ],
            "jump7456_0": [
                "tier.maxInvestorCap()",
                "tier.maxInvestorCap()"
            ],
            "jump9320_1": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump9320_0": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "block4417_1": [
                "tier.endTime()"
            ],
            "jump12606_0": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump4154": [
                "tier.startTime()",
                "tier.startTime()"
            ],
            "jump13064_0": [
                "cnd.generateTokens(caller, tokensGenerated)",
                "cnd.generateTokens(caller, tokensGenerated)"
            ],
            "block12182_0": [
                "tier.exchangeRate()"
            ],
            "jump4609": [
                "tier.finalize()",
                "tier.finalize()"
            ],
            "jump7456": [
                "tier.maxInvestorCap()",
                "tier.maxInvestorCap()"
            ],
            "block3762_1": [
                "tier.initializedTime()"
            ],
            "block3762_0": [
                "tier.initializedTime()"
            ],
            "block13380": [
                "caller.transfer(toReturn)"
            ],
            "block9561": [
                "tier.isCapReached()"
            ],
            "block12406_0": [
                "tier.exchangeRate()"
            ],
            "block12406": [
                "tier.exchangeRate()"
            ],
            "block6713": [
                "tier.endTime()"
            ],
            "block4154_1": [
                "tier.startTime()"
            ],
            "block4154_0": [
                "tier.startTime()"
            ],
            "jump6713_0": [
                "tier.endTime()",
                "tier.endTime()"
            ],
            "jump12826": [
                "tier.increaseInvestedWei(toFund)",
                "tier.increaseInvestedWei(toFund)"
            ],
            "jump13064": [
                "cnd.generateTokens(caller, tokensGenerated)",
                "cnd.generateTokens(caller, tokensGenerated)"
            ],
            "jump9924": [
                "cnd.controller()",
                "cnd.controller()"
            ],
            "block13064_0": [
                "cnd.generateTokens(caller, tokensGenerated)"
            ],
            "block9561_0": [
                "tier.isCapReached()"
            ],
            "block2874": [
                "CND(_cnd).controller()"
            ],
            "block9561_2": [
                "tier.isCapReached()"
            ],
            "block9561_3": [
                "tier.isCapReached()"
            ],
            "block3762": [
                "tier.initializedTime()"
            ],
            "block8983_1": [
                "tier.totalInvestedWei()"
            ],
            "block13380_0": [
                "caller.transfer(toReturn)"
            ],
            "block7456_1": [
                "tier.maxInvestorCap()"
            ],
            "block7456_0": [
                "tier.maxInvestorCap()"
            ],
            "jump8983_1": [
                "tier.totalInvestedWei()",
                "tier.totalInvestedWei()"
            ],
            "jump8983_0": [
                "tier.totalInvestedWei()",
                "tier.totalInvestedWei()"
            ],
            "block13152": [
                "contributionWallet.transfer(toFund)"
            ],
            "block8983": [
                "tier.totalInvestedWei()"
            ],
            "block10803": [
                "token.transfer(controller, balance)"
            ],
            "block9561_1": [
                "tier.isCapReached()"
            ],
            "jump6537": [
                "tier.startTime()",
                "tier.startTime()"
            ],
            "jump9320": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump13380_0": [
                "caller.transfer(toReturn)",
                "caller.transfer(toReturn)"
            ],
            "jump7289": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "block12826_0": [
                "tier.increaseInvestedWei(toFund)"
            ],
            "jump8737": [
                "cnd.generateTokens(bountyWallet, bountyAllocation)",
                "cnd.generateTokens(bountyWallet, bountyAllocation)"
            ],
            "jump2874": [
                "CND(_cnd).controller()",
                "CND(_cnd).controller()"
            ],
            "jump12182_0": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "block11266": [
                "tier.initializedTime()"
            ],
            "block10257": [
                "controller.transfer(this.balance)"
            ],
            "jump12406_0": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "block6713_0": [
                "tier.endTime()"
            ],
            "block6713_1": [
                "tier.endTime()"
            ],
            "jump10257": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "block4609_1": [
                "tier.finalize()"
            ],
            "jump10546": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block12826": [
                "tier.increaseInvestedWei(toFund)"
            ],
            "block9320_1": [
                "tier.exchangeRate()"
            ],
            "block9320_0": [
                "tier.exchangeRate()"
            ],
            "block4609": [
                "tier.finalize()"
            ],
            "jump9561_4": [
                "tier.isCapReached()",
                "tier.isCapReached()"
            ],
            "jump9561_2": [
                "tier.isCapReached()",
                "tier.isCapReached()"
            ],
            "jump9561_3": [
                "tier.isCapReached()",
                "tier.isCapReached()"
            ],
            "jump9561_0": [
                "tier.isCapReached()",
                "tier.isCapReached()"
            ],
            "jump9561_1": [
                "tier.isCapReached()",
                "tier.isCapReached()"
            ],
            "block7456": [
                "tier.maxInvestorCap()"
            ],
            "block3986": [
                "tier.finalizedTime()"
            ],
            "jump11728": [
                "tier.maxInvestorCap()",
                "tier.maxInvestorCap()"
            ],
            "block7289": [
                "tier.exchangeRate()"
            ],
            "jump6892_0": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "jump6892_1": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "block12606": [
                "tier.exchangeRate()"
            ],
            "jump11266": [
                "tier.initializedTime()",
                "tier.initializedTime()"
            ],
            "block4787": [
                "tier.finalizedTime()"
            ],
            "jump4417_0": [
                "tier.endTime()",
                "tier.endTime()"
            ],
            "block6537_0": [
                "tier.startTime()"
            ],
            "block6537_1": [
                "tier.startTime()"
            ],
            "jump10803": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "jump7289_1": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump3986": [
                "tier.finalizedTime()",
                "tier.finalizedTime()"
            ],
            "jump8057": [
                "cnd.generateTokens(foundersWallet, foundersAllocation)",
                "cnd.generateTokens(foundersWallet, foundersAllocation)"
            ],
            "block4417_0": [
                "tier.endTime()"
            ],
            "block6892": [
                "tier.finalizedTime()"
            ],
            "jump13152": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "block4154": [
                "tier.startTime()"
            ],
            "block11728_0": [
                "tier.maxInvestorCap()"
            ],
            "block13064": [
                "cnd.generateTokens(caller, tokensGenerated)"
            ],
            "block8737": [
                "cnd.generateTokens(bountyWallet, bountyAllocation)"
            ],
            "block13152_0": [
                "contributionWallet.transfer(toFund)"
            ],
            "block7289_1": [
                "tier.exchangeRate()"
            ],
            "block7289_0": [
                "tier.exchangeRate()"
            ],
            "block9320": [
                "tier.exchangeRate()"
            ],
            "block10546": [
                "token.balanceOf(this)"
            ],
            "block5413": [
                "tier.IS_TIER_CONTRACT_MAGIC_NUMBER()"
            ],
            "jump6713_1": [
                "tier.endTime()",
                "tier.endTime()"
            ],
            "jump12826_0": [
                "tier.increaseInvestedWei(toFund)",
                "tier.increaseInvestedWei(toFund)"
            ],
            "block9142_1": [
                "tier.cap()"
            ],
            "block9142_0": [
                "tier.cap()"
            ],
            "jump12606": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump4154_0": [
                "tier.startTime()",
                "tier.startTime()"
            ],
            "block9561_4": [
                "tier.isCapReached()"
            ],
            "jump13380": [
                "caller.transfer(toReturn)",
                "caller.transfer(toReturn)"
            ],
            "block6537": [
                "tier.startTime()"
            ],
            "jump3762_1": [
                "tier.initializedTime()",
                "tier.initializedTime()"
            ],
            "jump3762_0": [
                "tier.initializedTime()",
                "tier.initializedTime()"
            ],
            "jump8983": [
                "tier.totalInvestedWei()",
                "tier.totalInvestedWei()"
            ],
            "jump4417_1": [
                "tier.endTime()",
                "tier.endTime()"
            ],
            "block9142": [
                "tier.cap()"
            ],
            "jump11728_0": [
                "tier.maxInvestorCap()",
                "tier.maxInvestorCap()"
            ],
            "block12182": [
                "tier.exchangeRate()"
            ],
            "jump4417": [
                "tier.endTime()",
                "tier.endTime()"
            ],
            "block4787_1": [
                "tier.finalizedTime()"
            ],
            "block4787_0": [
                "tier.finalizedTime()"
            ],
            "block11728": [
                "tier.maxInvestorCap()"
            ],
            "jump7289_0": [
                "tier.exchangeRate()",
                "tier.exchangeRate()"
            ],
            "jump5191": [
                "tier.controller()",
                "tier.controller()"
            ],
            "block8397": [
                "cnd.generateTokens(advisorsWallet, advisorsAllocation)"
            ],
            "jump9142_1": [
                "tier.cap()",
                "tier.cap()"
            ],
            "jump9142_0": [
                "tier.cap()",
                "tier.cap()"
            ]
        }
    },
    "Tier": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "Tier(uint256,uint256,uint256,uint256,uint256,uint256)",
            "getBlockTimestamp()",
            "isCapReached()",
            "finalize()",
            "increaseInvestedWei(uint256)",
            "fallback()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "Tier(uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_cap": "uint256",
                    "_minInvestorCap": "uint256",
                    "_maxInvestorCap": "uint256",
                    "_exchangeRate": "uint256",
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "getBlockTimestamp()": {
                "argument": {},
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "isCapReached()": {
                "argument": {},
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "increaseInvestedWei(uint256)": {
                "argument": {
                    "_wei": "uint256"
                },
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "cap": "uint256",
                    "exchangeRate": "uint256",
                    "minInvestorCap": "uint256",
                    "maxInvestorCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "totalInvestedWei": "uint256",
                    "IS_TIER_CONTRACT_MAGIC_NUMBER": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finalize()": [
                443,
                163
            ],
            "changeController(address)": [
                376,
                141
            ],
            "isCapReached()": [
                640,
                273
            ],
            "increaseInvestedWei(uint256)": [
                552,
                229
            ]
        },
        "block_CALL_mapping": {}
    }
}