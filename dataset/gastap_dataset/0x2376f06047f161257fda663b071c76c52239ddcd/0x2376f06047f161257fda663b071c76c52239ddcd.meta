{
    "Base": {
        "function_list": [
            "max(uint256,uint256)",
            "min(uint256,uint256)",
            "isContract(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "max(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "L00": "uint256",
                    "L01": "uint256",
                    "L02": "uint256",
                    "L03": "uint256",
                    "L04": "uint256",
                    "L05": "uint256",
                    "bitlocks": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "L00": "uint256",
                    "L01": "uint256",
                    "L02": "uint256",
                    "L03": "uint256",
                    "L04": "uint256",
                    "L05": "uint256",
                    "bitlocks": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "L00": "uint256",
                    "L01": "uint256",
                    "L02": "uint256",
                    "L03": "uint256",
                    "L04": "uint256",
                    "L05": "uint256",
                    "bitlocks": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "L00": "uint256",
                    "L01": "uint256",
                    "L02": "uint256",
                    "L03": "uint256",
                    "L04": "uint256",
                    "L05": "uint256",
                    "bitlocks": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "min(uint256,uint256)": [
                156,
                97
            ],
            "max(uint256,uint256)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "max(uint256,uint256)",
            "min(uint256,uint256)",
            "isContract(address)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "max(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "max(uint256,uint256)": [
                125,
                75
            ],
            "acceptOwnership()": [
                200,
                97
            ],
            "min(uint256,uint256)": [
                223,
                119
            ],
            "transferOwnership(address)": [
                472,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "max(uint256,uint256)",
            "min(uint256,uint256)",
            "isContract(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "max(uint256,uint256)": [
                526,
                163
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "transferOwnership(address)": [
                1180,
                339
            ],
            "allowance(address,address)": [
                1061,
                317
            ],
            "min(uint256,uint256)": [
                711,
                229
            ],
            "acceptOwnership()": [
                688,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "SubscriptionBase": {
        "function_list": [
            "slitherConstructorVariables()"
        ],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SubscriptionModuleImpl": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "max(uint256,uint256)",
            "min(uint256,uint256)",
            "isContract(address)",
            "attachToken(address)",
            "paymentTo(uint256,bytes,ServiceProvider)",
            "paymentFrom(uint256,bytes,address,ServiceProvider)",
            "createSubscription(uint256,uint256,uint256)",
            "cancelSubscription(uint256)",
            "cancelSubscription(uint256,uint256)",
            "holdSubscription(uint256)",
            "unholdSubscription(uint256)",
            "executeSubscription(uint256)",
            "postponeDueDate(uint256,uint256)",
            "returnSubscriptionDesposit(uint256)",
            "claimSubscriptionDeposit(uint256)",
            "state(uint256)",
            "stateCode(uint256)",
            "createSubscriptionOffer(uint256,uint16,uint256,uint256,uint256,uint256,uint256,bytes)",
            "updateSubscriptionOffer(uint256,uint256)",
            "holdSubscriptionOffer(uint256)",
            "unholdSubscriptionOffer(uint256)",
            "cancelSubscriptionOffer(uint256)",
            "createDeposit(uint256,bytes)",
            "claimDeposit(uint256)",
            "registerXRateProvider(XRateProvider)",
            "enableServiceProvider(ServiceProvider,bytes)",
            "disableServiceProvider(ServiceProvider,bytes)",
            "subscriptionDetails(uint256)",
            "subscriptionStatus(uint256)",
            "fallback()",
            "SubscriptionModuleImpl()",
            "attachToken(address)",
            "enableServiceProvider(ServiceProvider,bytes)",
            "disableServiceProvider(ServiceProvider,bytes)",
            "registerXRateProvider(XRateProvider)",
            "getXRateProviderLength()",
            "paymentTo(uint256,bytes,ServiceProvider)",
            "paymentFrom(uint256,bytes,address,ServiceProvider)",
            "subscriptionDetails(uint256)",
            "subscriptionStatus(uint256)",
            "executeSubscription(uint256)",
            "postponeDueDate(uint256,uint256)",
            "state(uint256)",
            "stateCode(uint256)",
            "_offerState(SubscriptionBase.Subscription)",
            "_subscriptionState(SubscriptionBase.Subscription)",
            "createSubscriptionOffer(uint256,uint16,uint256,uint256,uint256,uint256,uint256,bytes)",
            "updateSubscriptionOffer(uint256,uint256)",
            "createSubscription(uint256,uint256,uint256)",
            "cancelSubscriptionOffer(uint256)",
            "cancelSubscription(uint256)",
            "cancelSubscription(uint256,uint256)",
            "holdSubscriptionOffer(uint256)",
            "unholdSubscriptionOffer(uint256)",
            "holdSubscription(uint256)",
            "unholdSubscription(uint256)",
            "returnSubscriptionDesposit(uint256)",
            "claimSubscriptionDeposit(uint256)",
            "_returnSubscriptionDesposit(uint256,SubscriptionBase.Subscription)",
            "createDeposit(uint256,bytes)",
            "claimDeposit(uint256)",
            "_amountToCharge(SubscriptionBase.Subscription)",
            "_applyXchangeRate(uint256,SubscriptionBase.Subscription)",
            "_isOffer(SubscriptionBase.Subscription)",
            "_isSubscription(SubscriptionBase.Subscription)",
            "_exists(SubscriptionBase.Subscription)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "attachToken(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "paymentTo(uint256,bytes,ServiceProvider)": {
                "argument": {
                    "_value": "uint256",
                    "_paymentData": "bytes"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "paymentFrom(uint256,bytes,address,ServiceProvider)": {
                "argument": {
                    "_value": "uint256",
                    "_paymentData": "bytes"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "createSubscription(uint256,uint256,uint256)": {
                "argument": {
                    "_offerId": "uint256",
                    "_expireOn": "uint256",
                    "_startOn": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "cancelSubscription(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "cancelSubscription(uint256,uint256)": {
                "argument": {
                    "subId": "uint256",
                    "gasReserve": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "holdSubscription(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "unholdSubscription(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "executeSubscription(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "postponeDueDate(uint256,uint256)": {
                "argument": {
                    "subId": "uint256",
                    "newDueDate": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "returnSubscriptionDesposit(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "claimSubscriptionDeposit(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "state(uint256)": {
                "argument": {
                    "subOrOfferId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "stateCode(uint256)": {
                "argument": {
                    "subOrOfferId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "createSubscriptionOffer(uint256,uint16,uint256,uint256,uint256,uint256,uint256,bytes)": {
                "argument": {
                    "_pricePerHour": "uint256",
                    "_xrateProviderId": "uint16",
                    "_chargePeriod": "uint256",
                    "_expireOn": "uint256",
                    "_offerLimit": "uint256",
                    "_depositAmount": "uint256",
                    "_startOn": "uint256",
                    "_descriptor": "bytes"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "updateSubscriptionOffer(uint256,uint256)": {
                "argument": {
                    "_offerId": "uint256",
                    "_offerLimit": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "holdSubscriptionOffer(uint256)": {
                "argument": {
                    "offerId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "unholdSubscriptionOffer(uint256)": {
                "argument": {
                    "offerId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "cancelSubscriptionOffer(uint256)": {
                "argument": {
                    "offerId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "createDeposit(uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_descriptor": "bytes"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "claimDeposit(uint256)": {
                "argument": {
                    "_depositId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "registerXRateProvider(XRateProvider)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "enableServiceProvider(ServiceProvider,bytes)": {
                "argument": {
                    "moreInfo": "bytes"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "disableServiceProvider(ServiceProvider,bytes)": {
                "argument": {
                    "moreInfo": "bytes"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "subscriptionDetails(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "subscriptionStatus(uint256)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "SubscriptionModuleImpl()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "getXRateProviderLength()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_offerState(SubscriptionBase.Subscription)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_subscriptionState(SubscriptionBase.Subscription)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_returnSubscriptionDesposit(uint256,SubscriptionBase.Subscription)": {
                "argument": {
                    "subId": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_amountToCharge(SubscriptionBase.Subscription)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_applyXchangeRate(uint256,SubscriptionBase.Subscription)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_isOffer(SubscriptionBase.Subscription)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_isSubscription(SubscriptionBase.Subscription)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "_exists(SubscriptionBase.Subscription)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "xrateProviders": "XRateProvider[]",
                    "subscriptionCounter": "uint256",
                    "depositCounter": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "stateCode(uint256)": [
                3712,
                691
            ],
            "holdSubscriptionOffer(uint256)": [
                2994,
                537
            ],
            "holdSubscription(uint256)": [
                2795,
                471
            ],
            "claimSubscriptionDeposit(uint256)": [
                3496,
                647
            ],
            "cancelSubscriptionOffer(uint256)": [
                3118,
                581
            ],
            "subscriptionStatus(uint256)": [
                1905,
                251
            ],
            "createSubscriptionOffer(uint256,uint16,uint256,uint256,uint256,uint256,uint256,bytes)": [
                2093,
                295
            ],
            "cancelSubscription(uint256)": [
                705,
                119
            ],
            "unholdSubscriptionOffer(uint256)": [
                2628,
                405
            ],
            "state(uint256)": [
                1672,
                207
            ],
            "cancelSubscription(uint256,uint256)": [
                4042,
                779
            ],
            "updateSubscriptionOffer(uint256,uint256)": [
                3063,
                559
            ],
            "subscriptionDetails(uint256)": [
                1127,
                163
            ],
            "postponeDueDate(uint256,uint256)": [
                2474,
                361
            ],
            "executeSubscription(uint256)": [
                4166,
                823
            ],
            "transferOwnership(address)": [
                4522,
                911
            ],
            "getXRateProviderLength()": [
                4733,
                955
            ],
            "max(uint256,uint256)": [
                2553,
                383
            ],
            "attachToken(address)": [
                1838,
                229
            ],
            "returnSubscriptionDesposit(uint256)": [
                660,
                97
            ],
            "createDeposit(uint256,bytes)": [
                4387,
                889
            ],
            "createSubscription(uint256,uint256,uint256)": [
                3411,
                625
            ],
            "claimDeposit(uint256)": [
                2292,
                317
            ],
            "unholdSubscription(uint256)": [
                4097,
                801
            ],
            "min(uint256,uint256)": [
                2720,
                449
            ],
            "acceptOwnership()": [
                2697,
                427
            ]
        },
        "block_CALL_mapping": {
            "jump19588_0": [
                "san._mintFromDeposit(sub.transferFrom, depositAmount)",
                "san._mintFromDeposit(sub.transferFrom, depositAmount)"
            ],
            "jump19588": [
                "san._mintFromDeposit(sub.transferFrom, depositAmount)",
                "san._mintFromDeposit(sub.transferFrom, depositAmount)"
            ],
            "block18547": [
                "san._burnForDeposit(msg.sender,_value)"
            ],
            "block14945": [
                "san._fulfillPayment(msg.sender, _to, _value, 0, msg.sender)"
            ],
            "block20497_0": [
                "XRateProvider(xrateProviders[sub.xrateProviderId]).getRate()"
            ],
            "jump18547": [
                "san._burnForDeposit(msg.sender,_value)",
                "san._burnForDeposit(msg.sender,_value)"
            ],
            "block17918": [
                "san._fulfillPayment(_from, _to, _value, subId, msg.sender)"
            ],
            "jump14945": [
                "san._fulfillPayment(msg.sender, _to, _value, 0, msg.sender)",
                "san._fulfillPayment(msg.sender, _to, _value, 0, msg.sender)"
            ],
            "block14120": [
                "ServiceProvider(newSub.transferTo).onSubNew(newSubId, _offerId)"
            ],
            "jump13898": [
                "san._burnForDeposit(msg.sender, newSub.depositAmount)",
                "san._burnForDeposit(msg.sender, newSub.depositAmount)"
            ],
            "jump9314": [
                "san._mintFromDeposit(msg.sender, value)",
                "san._mintFromDeposit(msg.sender, value)"
            ],
            "block13898": [
                "san._burnForDeposit(msg.sender, newSub.depositAmount)"
            ],
            "block18143": [
                "ServiceProvider(_to).onSubExecuted(subId)"
            ],
            "block15281": [
                "ServiceProvider(_to).onPayment(msg.sender, _value, _paymentData)"
            ],
            "jump14120": [
                "ServiceProvider(newSub.transferTo).onSubNew(newSubId, _offerId)",
                "ServiceProvider(newSub.transferTo).onSubNew(newSubId, _offerId)"
            ],
            "block6510": [
                "san._fulfillPreapprovedPayment(_from, _to, _value, msg.sender)"
            ],
            "block19588_0": [
                "san._mintFromDeposit(sub.transferFrom, depositAmount)"
            ],
            "jump17918": [
                "san._fulfillPayment(_from, _to, _value, subId, msg.sender)",
                "san._fulfillPayment(_from, _to, _value, subId, msg.sender)"
            ],
            "block20497": [
                "XRateProvider(xrateProviders[sub.xrateProviderId]).getRate()"
            ],
            "block19588": [
                "san._mintFromDeposit(sub.transferFrom, depositAmount)"
            ],
            "block15991": [
                "_to.call.gas(msg.gas-gasReserve)(bytes4(sha3(\"onSubCanceled(uint256,address)\")), subId, msg.sender)"
            ],
            "block16869": [
                "ServiceProvider(_to).onSubUnHold(subId, msg.sender, false)"
            ],
            "jump11368": [
                "ServiceProvider(_to).onSubUnHold(subId, msg.sender, true)",
                "ServiceProvider(_to).onSubUnHold(subId, msg.sender, true)"
            ],
            "jump20497_0": [
                "XRateProvider(xrateProviders[sub.xrateProviderId]).getRate()",
                "XRateProvider(xrateProviders[sub.xrateProviderId]).getRate()"
            ],
            "block8173": [
                "XRateProvider(xrateProviders[_xrateProviderId]).getRate()"
            ],
            "jump20497": [
                "XRateProvider(xrateProviders[sub.xrateProviderId]).getRate()",
                "XRateProvider(xrateProviders[sub.xrateProviderId]).getRate()"
            ],
            "jump15281": [
                "ServiceProvider(_to).onPayment(msg.sender, _value, _paymentData)",
                "ServiceProvider(_to).onPayment(msg.sender, _value, _paymentData)"
            ],
            "block6846": [
                "ServiceProvider(_to).onPayment(_from, _value, _paymentData)"
            ],
            "jump6510": [
                "san._fulfillPreapprovedPayment(_from, _to, _value, msg.sender)",
                "san._fulfillPreapprovedPayment(_from, _to, _value, msg.sender)"
            ],
            "jump18143": [
                "ServiceProvider(_to).onSubExecuted(subId)",
                "ServiceProvider(_to).onSubExecuted(subId)"
            ],
            "jump6846": [
                "ServiceProvider(_to).onPayment(_from, _value, _paymentData)",
                "ServiceProvider(_to).onPayment(_from, _value, _paymentData)"
            ],
            "block9314": [
                "san._mintFromDeposit(msg.sender, value)"
            ],
            "block11368": [
                "ServiceProvider(_to).onSubUnHold(subId, msg.sender, true)"
            ],
            "block15991_0": [
                "_to.call.gas(msg.gas-gasReserve)(bytes4(sha3(\"onSubCanceled(uint256,address)\")), subId, msg.sender)"
            ],
            "jump16869": [
                "ServiceProvider(_to).onSubUnHold(subId, msg.sender, false)",
                "ServiceProvider(_to).onSubUnHold(subId, msg.sender, false)"
            ],
            "jump8173": [
                "XRateProvider(xrateProviders[_xrateProviderId]).getRate()",
                "XRateProvider(xrateProviders[_xrateProviderId]).getRate()"
            ]
        }
    }
}