{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "presaleVolumeBonus(uint256)",
            "volumeBonus(uint256)",
            "dateBonus(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "presaleVolumeBonus(uint256)": {
                "argument": {
                    "price": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "dateBonus(uint256)": {
                "argument": {
                    "startIco": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                245,
                97
            ],
            "balanceOf(address)": [
                522,
                163
            ],
            "totalSupply()": [
                346,
                119
            ],
            "allowance(address,address)": [
                710,
                207
            ],
            "transferFrom(address,address,uint256)": [
                389,
                141
            ],
            "transfer(address,uint256)": [
                609,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "CarTaxiToken": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "presaleVolumeBonus(uint256)",
            "volumeBonus(uint256)",
            "dateBonus(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "CarTaxiToken(address)",
            "burnTokens(address,uint256)",
            "emitTokens(address,uint256)",
            "getOwner(uint256)",
            "getOwnerCount()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "presaleVolumeBonus(uint256)": {
                "argument": {
                    "price": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "dateBonus(uint256)": {
                "argument": {
                    "startIco": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "CarTaxiToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwner(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwnerCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getOwnerCount()": [
                1528,
                361
            ],
            "approve(address,uint256)": [
                477,
                119
            ],
            "getOwner(uint256)": [
                1206,
                295
            ],
            "emitTokens(address,uint256)": [
                1571,
                383
            ],
            "totalSupply()": [
                655,
                163
            ],
            "burnTokens(address,uint256)": [
                578,
                141
            ],
            "balanceOf(address)": [
                874,
                229
            ],
            "transferFrom(address,address,uint256)": [
                698,
                185
            ],
            "allowance(address,address)": [
                1409,
                339
            ],
            "transfer(address,uint256)": [
                1105,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "CarTaxiIco": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "presaleVolumeBonus(uint256)",
            "volumeBonus(uint256)",
            "dateBonus(uint256)",
            "CarTaxiIco(address,address)",
            "init(address,address,address,address,address)",
            "setState(CarTaxiIco.State)",
            "setNewManager(address)",
            "setBountyOwner(address)",
            "importTokens(address)",
            "buyTokens(address)",
            "fallback()",
            "burnTokens(address,uint256)",
            "withdrawEther(uint256)",
            "withdrawAllEther()",
            "sendTokensToBountyOwner()",
            "sendTokensToFounders()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "presaleVolumeBonus(uint256)": {
                "argument": {
                    "price": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "dateBonus(uint256)": {
                "argument": {
                    "startIco": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "CarTaxiIco(address,address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "init(address,address,address,address,address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "setState(CarTaxiIco.State)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "setNewManager(address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "setBountyOwner(address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "importTokens(address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "withdrawEther(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "withdrawAllEther()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendTokensToBountyOwner()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendTokensToFounders()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "startIcoDate": "uint256",
                    "supplyLimit": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "PRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "etherRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "init(address,address,address,address,address)": [
                952,
                273
            ],
            "setBountyOwner(address)": [
                2008,
                603
            ],
            "burnTokens(address,uint256)": [
                3311,
                946
            ],
            "setNewManager(address)": [
                2161,
                669
            ],
            "withdrawEther(uint256)": [
                1147,
                295
            ],
            "importTokens(address)": [
                2358,
                735
            ],
            "withdrawAllEther()": [
                929,
                251
            ],
            "sendTokensToFounders()": [
                819,
                207
            ],
            "sendTokensToBountyOwner()": [
                1811,
                537
            ]
        },
        "block_CALL_mapping": {
            "jump4853": [
                "escrow.transfer(this.balance)",
                "escrow.transfer(this.balance)"
            ],
            "block4853": [
                "escrow.transfer(this.balance)"
            ],
            "jump2882": [
                "cartaxiToken.emitTokens(_buyer, tokensToEmit)",
                "cartaxiToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump4380": [
                "cartaxiToken.emitTokens(founder3, founderReward)",
                "cartaxiToken.emitTokens(founder3, founderReward)"
            ],
            "jump6774": [
                "cartaxiToken.emitTokens(bountyOwner, bountyTokens)",
                "cartaxiToken.emitTokens(bountyOwner, bountyTokens)"
            ],
            "block8054": [
                "cartaxiToken.emitTokens(_account, preIcoBalance)"
            ],
            "jump3872": [
                "cartaxiToken.emitTokens(founder1, founderReward)",
                "cartaxiToken.emitTokens(founder1, founderReward)"
            ],
            "block4380": [
                "cartaxiToken.emitTokens(founder3, founderReward)"
            ],
            "block5809": [
                "escrow.transfer(_value * 10000000000000000)"
            ],
            "jump2882_0": [
                "cartaxiToken.emitTokens(_buyer, tokensToEmit)",
                "cartaxiToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block6774": [
                "cartaxiToken.emitTokens(bountyOwner, bountyTokens)"
            ],
            "jump4634": [
                "cartaxiToken.emitTokens(founder4, founderReward)",
                "cartaxiToken.emitTokens(founder4, founderReward)"
            ],
            "block3872": [
                "cartaxiToken.emitTokens(founder1, founderReward)"
            ],
            "block2882": [
                "cartaxiToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump7777": [
                "preIcoToken.balanceOf(_account)",
                "preIcoToken.balanceOf(_account)"
            ],
            "jump4126": [
                "cartaxiToken.emitTokens(founder2, founderReward)",
                "cartaxiToken.emitTokens(founder2, founderReward)"
            ],
            "block4126": [
                "cartaxiToken.emitTokens(founder2, founderReward)"
            ],
            "block2882_0": [
                "cartaxiToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block3311": [
                "cartaxiToken.burnTokens(_from, _value)"
            ],
            "block4634": [
                "cartaxiToken.emitTokens(founder4, founderReward)"
            ],
            "block7777": [
                "preIcoToken.balanceOf(_account)"
            ],
            "jump3311": [
                "cartaxiToken.burnTokens(_from, _value)",
                "cartaxiToken.burnTokens(_from, _value)"
            ],
            "jump5809": [
                "escrow.transfer(_value * 10000000000000000)",
                "escrow.transfer(_value * 10000000000000000)"
            ],
            "jump8054": [
                "cartaxiToken.emitTokens(_account, preIcoBalance)",
                "cartaxiToken.emitTokens(_account, preIcoBalance)"
            ]
        }
    }
}