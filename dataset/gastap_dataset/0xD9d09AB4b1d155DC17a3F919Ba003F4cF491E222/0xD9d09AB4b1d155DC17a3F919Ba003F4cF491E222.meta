{
    "Token": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                796,
                229
            ],
            "transferFrom(address,address,uint256)": [
                423,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(address,uint256,address,address)",
            "stageNumber()",
            "calcTokenCost()",
            "fallback()",
            "checkGoalReached()",
            "withdraw()",
            "updateEtherCost(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,uint256,address,address)": {
                "argument": {
                    "_durationInDays": "uint256"
                },
                "contract": {
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "period": "uint256",
                    "etherCost": "uint256",
                    "started": "uint256"
                }
            },
            "stageNumber()": {
                "argument": {},
                "contract": {
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "period": "uint256",
                    "etherCost": "uint256",
                    "started": "uint256"
                }
            },
            "calcTokenCost()": {
                "argument": {},
                "contract": {
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "period": "uint256",
                    "etherCost": "uint256",
                    "started": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "period": "uint256",
                    "etherCost": "uint256",
                    "started": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "period": "uint256",
                    "etherCost": "uint256",
                    "started": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "period": "uint256",
                    "etherCost": "uint256",
                    "started": "uint256"
                }
            },
            "updateEtherCost(uint256)": {
                "argument": {
                    "_etherCost": "uint256"
                },
                "contract": {
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "period": "uint256",
                    "etherCost": "uint256",
                    "started": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "checkGoalReached()": [
                879,
                75
            ],
            "stageNumber()": [
                1401,
                295
            ],
            "withdraw()": [
                988,
                141
            ],
            "calcTokenCost()": [
                1358,
                273
            ],
            "updateEtherCost(uint256)": [
                1625,
                383
            ]
        },
        "block_CALL_mapping": {
            "jump687": [
                "rewardToken.transferFrom(crowdsaleWallet, msg.sender, tokens)",
                "rewardToken.transferFrom(crowdsaleWallet, msg.sender, tokens)"
            ],
            "jump687_0": [
                "rewardToken.transferFrom(crowdsaleWallet, msg.sender, tokens)",
                "rewardToken.transferFrom(crowdsaleWallet, msg.sender, tokens)"
            ],
            "block687_0": [
                "rewardToken.transferFrom(crowdsaleWallet, msg.sender, tokens)"
            ],
            "jump2129": [
                "rewardToken.balanceOf(crowdsaleWallet)",
                "rewardToken.balanceOf(crowdsaleWallet)"
            ],
            "block2691": [
                "crowdsaleBeneficiary.send(amountRaised)"
            ],
            "block2129": [
                "rewardToken.balanceOf(crowdsaleWallet)"
            ],
            "jump2129_1": [
                "rewardToken.balanceOf(crowdsaleWallet)",
                "rewardToken.balanceOf(crowdsaleWallet)"
            ],
            "jump2129_0": [
                "rewardToken.balanceOf(crowdsaleWallet)",
                "rewardToken.balanceOf(crowdsaleWallet)"
            ],
            "block687": [
                "rewardToken.transferFrom(crowdsaleWallet, msg.sender, tokens)"
            ],
            "block2129_1": [
                "rewardToken.balanceOf(crowdsaleWallet)"
            ],
            "jump2691": [
                "crowdsaleBeneficiary.send(amountRaised)",
                "crowdsaleBeneficiary.send(amountRaised)"
            ],
            "block2129_0": [
                "rewardToken.balanceOf(crowdsaleWallet)"
            ]
        }
    }
}