{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "MainSale": {
        "function_list": [
            "createTokens(address)"
        ],
        "initial_state": {
            "createTokens(address)": {
                "argument": {},
                "contract": {
                    "altDeposits": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "createTokens(address)": [
                982,
                361
            ]
        },
        "block_CALL_mapping": {
            "block1665": [
                "token.mintingFinished()"
            ],
            "jump4830": [
                "foreignToken.transfer(multisigVault, foreignToken.balanceOf(this))",
                "foreignToken.transfer(multisigVault, foreignToken.balanceOf(this))"
            ],
            "jump2270": [
                "multisigVault.send(msg.value)",
                "multisigVault.send(msg.value)"
            ],
            "jump1886_0": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump1886_1": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block1886": [
                "token.decimals()"
            ],
            "jump2270_0": [
                "multisigVault.send(msg.value)",
                "multisigVault.send(msg.value)"
            ],
            "jump2270_1": [
                "multisigVault.send(msg.value)",
                "multisigVault.send(msg.value)"
            ],
            "jump3834": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block1886_0": [
                "token.decimals()"
            ],
            "block1886_1": [
                "token.decimals()"
            ],
            "block4116": [
                "token.transferOwnership(owner)"
            ],
            "jump4116": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "block2270": [
                "multisigVault.send(msg.value)"
            ],
            "block2228_1": [
                "token.mint(recipient, tokens)"
            ],
            "block1665_1": [
                "token.mintingFinished()"
            ],
            "block1665_0": [
                "token.mintingFinished()"
            ],
            "block2270_0": [
                "multisigVault.send(msg.value)"
            ],
            "jump1886": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump4638": [
                "foreignToken.balanceOf(this)",
                "foreignToken.balanceOf(this)"
            ],
            "jump2228": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "block2228_0": [
                "token.mint(recipient, tokens)"
            ],
            "block3318": [
                "token.mint(recipient, tokens)"
            ],
            "block3834": [
                "token.finishMinting()"
            ],
            "block2270_1": [
                "multisigVault.send(msg.value)"
            ],
            "jump1665_1": [
                "token.mintingFinished()",
                "token.mintingFinished()"
            ],
            "jump1665_0": [
                "token.mintingFinished()",
                "token.mintingFinished()"
            ],
            "jump2228_1": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "jump2228_0": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "jump3318": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "jump1665": [
                "token.mintingFinished()",
                "token.mintingFinished()"
            ],
            "block2228": [
                "token.mint(recipient, tokens)"
            ],
            "block4638": [
                "foreignToken.balanceOf(this)"
            ],
            "block4830": [
                "foreignToken.transfer(multisigVault, foreignToken.balanceOf(this))"
            ]
        }
    },
    "TenXBuyer": {
        "function_list": [
            "activate_kill_switch()",
            "withdraw()",
            "add_to_bounty()",
            "buy()",
            "default_helper()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "activate_kill_switch()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "hardcap": "uint256",
                    "pay_per_eth": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "hardcap": "uint256",
                    "pay_per_eth": "uint256"
                }
            },
            "add_to_bounty()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "hardcap": "uint256",
                    "pay_per_eth": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "hardcap": "uint256",
                    "pay_per_eth": "uint256"
                }
            },
            "default_helper()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "hardcap": "uint256",
                    "pay_per_eth": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "hardcap": "uint256",
                    "pay_per_eth": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "add_to_bounty()": [
                407,
                163
            ],
            "default_helper()": [
                397,
                141
            ],
            "withdraw()": [
                283,
                97
            ],
            "buy()": [
                617,
                273
            ],
            "activate_kill_switch()": [
                551,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2433_1": [
                "token.transfer(developer, fee)"
            ],
            "jump2178_0": [
                "token.transfer(msg.sender, pay_amount - fee)",
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "jump1148": [
                "sale.multisigVault()",
                "sale.multisigVault()"
            ],
            "jump955_0": [
                "sale.altDeposits()",
                "sale.altDeposits()"
            ],
            "jump3071": [
                "msg.sender.transfer(bounty)",
                "msg.sender.transfer(bounty)"
            ],
            "jump955_1": [
                "sale.altDeposits()",
                "sale.altDeposits()"
            ],
            "jump3051": [
                "sale.createTokens.value(this.balance - bounty)(address(this))",
                "sale.createTokens.value(this.balance - bounty)(address(this))"
            ],
            "block2178_2": [
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "block2178_1": [
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "block2178_0": [
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "block2433_0": [
                "token.transfer(developer, fee)"
            ],
            "block2433": [
                "token.transfer(developer, fee)"
            ],
            "block3051": [
                "sale.createTokens.value(this.balance - bounty)(address(this))"
            ],
            "jump2433": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump2178": [
                "token.transfer(msg.sender, pay_amount - fee)",
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "block1148": [
                "sale.multisigVault()"
            ],
            "jump1531": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "block3071": [
                "msg.sender.transfer(bounty)"
            ],
            "jump1148_1": [
                "sale.multisigVault()",
                "sale.multisigVault()"
            ],
            "jump1148_0": [
                "sale.multisigVault()",
                "sale.multisigVault()"
            ],
            "block1148_1": [
                "sale.multisigVault()"
            ],
            "block1148_0": [
                "sale.multisigVault()"
            ],
            "jump1531_1": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump1531_0": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump1531_2": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump955": [
                "sale.altDeposits()",
                "sale.altDeposits()"
            ],
            "block955": [
                "sale.altDeposits()"
            ],
            "block2433_2": [
                "token.transfer(developer, fee)"
            ],
            "block955_1": [
                "sale.altDeposits()"
            ],
            "block955_0": [
                "sale.altDeposits()"
            ],
            "jump2178_2": [
                "token.transfer(msg.sender, pay_amount - fee)",
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "block2178": [
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "jump2433_2": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump2433_1": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump2433_0": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump2178_1": [
                "token.transfer(msg.sender, pay_amount - fee)",
                "token.transfer(msg.sender, pay_amount - fee)"
            ],
            "block1531_2": [
                "msg.sender.transfer(eth_amount)"
            ],
            "block1531_1": [
                "msg.sender.transfer(eth_amount)"
            ],
            "block1531_0": [
                "msg.sender.transfer(eth_amount)"
            ],
            "block1531": [
                "msg.sender.transfer(eth_amount)"
            ]
        }
    }
}