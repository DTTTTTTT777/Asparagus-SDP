{
    "DateTimeLib": {
        "function_list": [
            "isLeapYear(uint16)",
            "leapYearsBefore(uint256)",
            "getDaysInMonth(uint8,uint16)",
            "parseTimestamp(uint256)",
            "getYear(uint256)",
            "getMonth(uint256)",
            "getDay(uint256)",
            "getHour(uint256)",
            "getMinute(uint256)",
            "getSecond(uint256)",
            "getWeekday(uint256)",
            "toTimestamp(uint16,uint8,uint8)",
            "toTimestamp(uint16,uint8,uint8,uint8)",
            "toTimestamp(uint16,uint8,uint8,uint8,uint8)",
            "toTimestamp(uint16,uint8,uint8,uint8,uint8,uint8)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "isLeapYear(uint16)": {
                "argument": {
                    "year": "uint16"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "leapYearsBefore(uint256)": {
                "argument": {
                    "year": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getDaysInMonth(uint8,uint16)": {
                "argument": {
                    "month": "uint8",
                    "year": "uint16"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "parseTimestamp(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getYear(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getMonth(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getDay(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getHour(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getMinute(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getSecond(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "getWeekday(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8",
                    "hour": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8",
                    "hour": "uint8",
                    "minute": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "toTimestamp(uint16,uint8,uint8,uint8,uint8,uint8)": {
                "argument": {
                    "year": "uint16",
                    "month": "uint8",
                    "day": "uint8",
                    "hour": "uint8",
                    "minute": "uint8",
                    "second": "uint8"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "YEAR_IN_SECONDS": "uint256",
                    "LEAP_YEAR_IN_SECONDS": "uint256",
                    "HOUR_IN_SECONDS": "uint256",
                    "MINUTE_IN_SECONDS": "uint256",
                    "ORIGIN_YEAR": "uint16"
                }
            }
        },
        "function_block_mapping": {
            "getHour(uint256)": [
                236,
                83
            ],
            "getDaysInMonth(uint8,uint16)": [
                1104,
                347
            ],
            "getSecond(uint256)": [
                613,
                193
            ],
            "isLeapYear(uint16)": [
                992,
                303
            ],
            "getWeekday(uint256)": [
                294,
                105
            ],
            "toTimestamp(uint16,uint8,uint8,uint8,uint8,uint8)": [
                753,
                237
            ],
            "toTimestamp(uint16,uint8,uint8,uint8)": [
                518,
                171
            ],
            "getDay(uint256)": [
                460,
                149
            ],
            "getMinute(uint256)": [
                1179,
                369
            ],
            "getMonth(uint256)": [
                934,
                281
            ],
            "leapYearsBefore(uint256)": [
                1052,
                325
            ],
            "toTimestamp(uint16,uint8,uint8,uint8,uint8)": [
                352,
                127
            ],
            "getYear(uint256)": [
                874,
                259
            ],
            "toTimestamp(uint16,uint8,uint8)": [
                671,
                215
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMathLib": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "StandardToken()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "StandardToken()": {
                "argument": {},
                "contract": {}
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                114,
                75
            ],
            "transferFrom(address,address,uint256)": [
                215,
                97
            ],
            "transfer(address,uint256)": [
                435,
                141
            ],
            "balanceOf(address)": [
                348,
                119
            ],
            "allowance(address,address)": [
                536,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "LockableToken": {
        "function_list": [
            "StandardToken()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "LockableToken()",
            "lockInfo(address)",
            "teamReservedLimit()",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferFromInternal(address,address,uint256)"
        ],
        "initial_state": {
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "LockableToken()": {
                "argument": {},
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "lockInfo(address)": {
                "argument": {},
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "teamReservedLimit()": {
                "argument": {},
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            },
            "transferFromInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamReservedBalance": "uint256",
                    "teamReservedFrozenDates": "uint256[8]",
                    "teamReservedFrozenLimits": "uint256[8]"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                453,
                141
            ],
            "allowance(address,address)": [
                641,
                185
            ],
            "lockInfo(address)": [
                359,
                119
            ],
            "transferFrom(address,address,uint256)": [
                226,
                97
            ],
            "transfer(address,uint256)": [
                540,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "TradeableToken": {
        "function_list": [
            "LockableToken()",
            "lockInfo(address)",
            "teamReservedLimit()",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferFromInternal(address,address,uint256)",
            "StandardToken()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "TradeableToken()",
            "buy(address,uint256)"
        ],
        "initial_state": {
            "LockableToken()": {
                "argument": {},
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "lockInfo(address)": {
                "argument": {},
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "teamReservedLimit()": {
                "argument": {},
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "transferFromInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "TradeableToken()": {
                "argument": {},
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            },
            "buy(address,uint256)": {
                "argument": {
                    "_weiAmount": "uint256"
                },
                "contract": {
                    "baseExchangeRate": "uint256",
                    "earlyExchangeRate": "uint256",
                    "earlyEndTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                464,
                141
            ],
            "allowance(address,address)": [
                652,
                185
            ],
            "lockInfo(address)": [
                370,
                119
            ],
            "transferFrom(address,address,uint256)": [
                237,
                97
            ],
            "transfer(address,uint256)": [
                551,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "OwnableToken": {
        "function_list": [
            "TradeableToken()",
            "buy(address,uint256)",
            "LockableToken()",
            "lockInfo(address)",
            "teamReservedLimit()",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferFromInternal(address,address,uint256)",
            "StandardToken()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "OwnableToken()",
            "transferOwnership(address)",
            "lock(address,uint256,uint256)",
            "unlock(address)",
            "transferAndLock(address,uint256,uint256)",
            "setBaseExchangeRate(uint256)",
            "setEarlyExchangeRate(uint256)",
            "setEarlyEndTime(uint256)",
            "burn(uint256)",
            "setPublicOfferingHolder(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "TradeableToken()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "buy(address,uint256)": {
                "argument": {
                    "_weiAmount": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "LockableToken()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "lockInfo(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "teamReservedLimit()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "transferFromInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "OwnableToken()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "lock(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_releaseTime": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "unlock(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "transferAndLock(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_releaseTime": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setBaseExchangeRate(uint256)": {
                "argument": {
                    "_baseExchangeRate": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setEarlyExchangeRate(uint256)": {
                "argument": {
                    "_earlyExchangeRate": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setEarlyEndTime(uint256)": {
                "argument": {
                    "_earlyEndTime": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setPublicOfferingHolder(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setPublicOfferingHolder(address)": [
                1525,
                405
            ],
            "approve(address,uint256)": [
                235,
                75
            ],
            "transferAndLock(address,uint256,uint256)": [
                896,
                251
            ],
            "setEarlyEndTime(uint256)": [
                603,
                163
            ],
            "transfer(address,uint256)": [
                1050,
                295
            ],
            "setBaseExchangeRate(uint256)": [
                659,
                185
            ],
            "lock(address,uint256,uint256)": [
                1270,
                339
            ],
            "burn(uint256)": [
                547,
                141
            ],
            "balanceOf(address)": [
                809,
                229
            ],
            "lockInfo(address)": [
                715,
                207
            ],
            "transferFrom(address,address,uint256)": [
                336,
                97
            ],
            "transferOwnership(address)": [
                1458,
                383
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "unlock(address)": [
                469,
                119
            ],
            "setEarlyExchangeRate(uint256)": [
                994,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "TenYunToken": {
        "function_list": [
            "OwnableToken()",
            "transferOwnership(address)",
            "lock(address,uint256,uint256)",
            "unlock(address)",
            "transferAndLock(address,uint256,uint256)",
            "setBaseExchangeRate(uint256)",
            "setEarlyExchangeRate(uint256)",
            "setEarlyEndTime(uint256)",
            "burn(uint256)",
            "setPublicOfferingHolder(address)",
            "TradeableToken()",
            "buy(address,uint256)",
            "LockableToken()",
            "lockInfo(address)",
            "teamReservedLimit()",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferFromInternal(address,address,uint256)",
            "StandardToken()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferInternal(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "TenYunToken()",
            "fallback()",
            "ethBalanceOf(address)",
            "totalSupply()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "OwnableToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "lock(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_releaseTime": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "unlock(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transferAndLock(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_releaseTime": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "setBaseExchangeRate(uint256)": {
                "argument": {
                    "_baseExchangeRate": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "setEarlyExchangeRate(uint256)": {
                "argument": {
                    "_earlyExchangeRate": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "setEarlyEndTime(uint256)": {
                "argument": {
                    "_earlyEndTime": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "setPublicOfferingHolder(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "TradeableToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "buy(address,uint256)": {
                "argument": {
                    "_weiAmount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "LockableToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "lockInfo(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "teamReservedLimit()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "transferFromInternal(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "StandardToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "TenYunToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "ethBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "setPublicOfferingHolder(address)": [
                2054,
                515
            ],
            "approve(address,uint256)": [
                441,
                97
            ],
            "balanceOf(address)": [
                1107,
                295
            ],
            "transferAndLock(address,uint256,uint256)": [
                1281,
                339
            ],
            "setEarlyEndTime(uint256)": [
                901,
                229
            ],
            "transfer(address,uint256)": [
                1579,
                405
            ],
            "totalSupply()": [
                542,
                119
            ],
            "ethBalanceOf(address)": [
                1194,
                317
            ],
            "setEarlyExchangeRate(uint256)": [
                1523,
                383
            ],
            "burn(uint256)": [
                845,
                207
            ],
            "setBaseExchangeRate(uint256)": [
                957,
                251
            ],
            "lockInfo(address)": [
                1013,
                273
            ],
            "transferFrom(address,address,uint256)": [
                585,
                141
            ],
            "lock(address,uint256,uint256)": [
                1799,
                449
            ],
            "allowance(address,address)": [
                1680,
                427
            ],
            "unlock(address)": [
                718,
                163
            ],
            "transferOwnership(address)": [
                1987,
                493
            ]
        },
        "block_CALL_mapping": {
            "jump2376_0": [
                "publicOfferingHolder.transfer(_weiAmount)",
                "publicOfferingHolder.transfer(_weiAmount)"
            ],
            "jump2376": [
                "publicOfferingHolder.transfer(_weiAmount)",
                "publicOfferingHolder.transfer(_weiAmount)"
            ],
            "block2376_0": [
                "publicOfferingHolder.transfer(_weiAmount)"
            ],
            "block2376": [
                "publicOfferingHolder.transfer(_weiAmount)"
            ]
        }
    }
}