{
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "EthereumUltimateToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "EthereumUltimateToken()",
            "getAmountofTotalParticipants()",
            "getAmountSoldAfterPowerDay()",
            "transfer(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "EtherBalanceOf(address)",
            "TimeLeft()",
            "TimeLeftBeforeCrowdsale()",
            "migrate(uint256)",
            "setMigrationAgent(address)",
            "getExchangeRate()",
            "ICOopen()",
            "fallback()",
            "finalize()",
            "refund()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "EthereumUltimateToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "getAmountofTotalParticipants()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "getAmountSoldAfterPowerDay()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "EtherBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "TimeLeft()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "TimeLeftBeforeCrowdsale()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "migrate(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "getExchangeRate()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "ICOopen()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256",
                    "fundingStart": "uint256",
                    "fundingEnd": "uint256",
                    "totalTokens": "uint256",
                    "soldAfterPowerHour": "uint256",
                    "totalMigrated": "uint256",
                    "totalParticipants": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1613,
                361
            ],
            "totalSupply()": [
                1211,
                185
            ],
            "getExchangeRate()": [
                2523,
                647
            ],
            "ICOopen()": [
                789,
                75
            ],
            "allowance(address,address)": [
                2361,
                603
            ],
            "transferFrom(address,address,uint256)": [
                1254,
                207
            ],
            "approve(address,uint256)": [
                980,
                119
            ],
            "migrate(uint256)": [
                1479,
                273
            ],
            "TimeLeftBeforeCrowdsale()": [
                1854,
                427
            ],
            "getAmountSoldAfterPowerDay()": [
                1387,
                229
            ],
            "refund()": [
                1547,
                317
            ],
            "finalize()": [
                1524,
                295
            ],
            "TimeLeft()": [
                2480,
                625
            ],
            "getAmountofTotalParticipants()": [
                2318,
                581
            ],
            "EtherBalanceOf(address)": [
                1124,
                163
            ],
            "setMigrationAgent(address)": [
                1700,
                383
            ],
            "transfer(address,uint256)": [
                2084,
                493
            ]
        },
        "block_CALL_mapping": {
            "jump4733": [
                "master.send(this.balance)",
                "master.send(this.balance)"
            ],
            "block4492": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value)"
            ],
            "jump5320": [
                "msg.sender.send(ethValue)",
                "msg.sender.send(ethValue)"
            ],
            "block4733": [
                "master.send(this.balance)"
            ],
            "jump4492": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value)"
            ],
            "block5320": [
                "msg.sender.send(ethValue)"
            ]
        }
    }
}