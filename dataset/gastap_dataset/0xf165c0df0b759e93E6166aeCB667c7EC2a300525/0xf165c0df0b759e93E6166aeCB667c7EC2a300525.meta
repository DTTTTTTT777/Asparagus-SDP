{
    "StandarTokentokenGAT": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "balanceOf(address)": [
                467,
                163
            ],
            "allowance(address,address)": [
                698,
                229
            ],
            "transferFrom(address,address,uint256)": [
                334,
                141
            ],
            "transfer(address,uint256)": [
                597,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenICOGAT": {
        "function_list": [
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "name()",
            "symbol()",
            "TokenICOGAT()",
            "bonusCalculate(uint256)",
            "enablePurchasing()",
            "disablePurchasing()",
            "getStats()",
            "fallback()",
            "sendSurplusTokens()",
            "withdrawEtherHomeExternal()",
            "withdrawEtherHomeLocal(address)",
            "refund()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "TokenICOGAT()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "bonusCalculate(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "enablePurchasing()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "disablePurchasing()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "getStats()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "sendSurplusTokens()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "withdrawEtherHomeExternal()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "withdrawEtherHomeLocal(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "deadline": "uint256",
                    "startline": "uint256",
                    "refundDeadLine": "uint256",
                    "transactionCounter": "uint256",
                    "etherReceived": "uint256",
                    "gatFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenSellCap": "uint256",
                    "tokenSaleMin": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "name()": [
                828,
                75
            ],
            "transferFrom(address,address,uint256)": [
                1312,
                229
            ],
            "getStats()": [
                2407,
                625
            ],
            "approve(address,uint256)": [
                972,
                97
            ],
            "disablePurchasing()": [
                1683,
                383
            ],
            "sendSurplusTokens()": [
                2475,
                647
            ],
            "enablePurchasing()": [
                1923,
                471
            ],
            "symbol()": [
                1946,
                493
            ],
            "balanceOf(address)": [
                1749,
                427
            ],
            "refund()": [
                1660,
                361
            ],
            "withdrawEtherHomeExternal()": [
                2707,
                735
            ],
            "withdrawEtherHomeLocal(address)": [
                1159,
                163
            ],
            "transfer(address,uint256)": [
                2133,
                537
            ],
            "allowance(address,address)": [
                2588,
                713
            ]
        },
        "block_CALL_mapping": {
            "jump6555": [
                "ethFoundDeposit.transfer(this.balance)",
                "ethFoundDeposit.transfer(this.balance)"
            ],
            "block6555": [
                "ethFoundDeposit.transfer(this.balance)"
            ],
            "jump4575": [
                "msg.sender.transfer(ethVal)",
                "msg.sender.transfer(ethVal)"
            ],
            "jump3527": [
                "_ethHome.transfer(this.balance)",
                "_ethHome.transfer(this.balance)"
            ],
            "block4575": [
                "msg.sender.transfer(ethVal)"
            ],
            "block3527": [
                "_ethHome.transfer(this.balance)"
            ]
        }
    }
}