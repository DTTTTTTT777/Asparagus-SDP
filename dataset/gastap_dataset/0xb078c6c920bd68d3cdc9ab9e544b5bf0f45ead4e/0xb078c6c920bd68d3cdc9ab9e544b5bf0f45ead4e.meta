{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                291,
                97
            ],
            "balanceOf(address)": [
                611,
                185
            ],
            "totalSupply()": [
                392,
                119
            ],
            "transferFrom(address,address,uint256)": [
                435,
                141
            ],
            "allowance(address,address)": [
                799,
                229
            ],
            "transfer(address,uint256)": [
                698,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenLab": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "TokenLab(address,uint256,uint256)",
            "changeAdmin(address)",
            "changeFeeAccount(address)",
            "changeFeeMake(uint256)",
            "changeFeeTake(uint256)",
            "deposit()",
            "withdraw(uint256)",
            "depositToken(address,uint256)",
            "withdrawToken(address,uint256)",
            "balanceOf(address,address)",
            "order(address,uint256,address,uint256,uint256,uint256)",
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)",
            "tradeBalances(address,uint256,address,uint256,address,uint256)",
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)",
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)",
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)",
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "TokenLab(address,uint256,uint256)": {
                "argument": {
                    "feeMake_": "uint256",
                    "feeTake_": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "changeFeeAccount(address)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "changeFeeMake(uint256)": {
                "argument": {
                    "feeMake_": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "changeFeeTake(uint256)": {
                "argument": {
                    "feeTake_": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "depositToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "withdrawToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "balanceOf(address,address)": {
                "argument": {},
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "order(address,uint256,address,uint256,uint256,uint256)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32",
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "tradeBalances(address,uint256,address,uint256,address,uint256)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32",
                    "amount": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            },
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
                "argument": {
                    "amountGet": "uint256",
                    "amountGive": "uint256",
                    "expires": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "feeMake": "uint256",
                    "feeTake": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeFeeAccount(address)": [
                1828,
                339
            ],
            "changeFeeMake(uint256)": [
                1375,
                251
            ],
            "order(address,uint256,address,uint256,uint256,uint256)": [
                523,
                97
            ],
            "balanceOf(address,address)": [
                2242,
                493
            ],
            "changeAdmin(address)": [
                1940,
                383
            ],
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)": [
                1550,
                317
            ],
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)": [
                2448,
                537
            ],
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)": [
                301,
                75
            ],
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)": [
                943,
                163
            ],
            "withdraw(uint256)": [
                1134,
                185
            ],
            "changeFeeTake(uint256)": [
                1895,
                361
            ],
            "withdrawToken(address,uint256)": [
                2007,
                405
            ],
            "deposit()": [
                2232,
                471
            ],
            "depositToken(address,uint256)": [
                1179,
                207
            ],
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)": [
                763,
                141
            ]
        },
        "block_CALL_mapping": {
            "block6400": [
                "msg.sender.call.value(amount)()"
            ],
            "block3102": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump10607": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump10607_0": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump10181": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "jump4689": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "jump5753": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block10181": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block3981": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block10181_0": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block5753": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block4689": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block7065": [
                "Token(token).transferFrom(msg.sender, this, amount)"
            ],
            "jump6400": [
                "msg.sender.call.value(amount)()",
                "msg.sender.call.value(amount)()"
            ],
            "jump10181_0": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "jump5111": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump3102": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "block10607_0": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "block9123": [
                "Token(token).transfer(msg.sender, amount)"
            ],
            "jump9123": [
                "Token(token).transfer(msg.sender, amount)",
                "Token(token).transfer(msg.sender, amount)"
            ],
            "block5111": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump7065": [
                "Token(token).transferFrom(msg.sender, this, amount)",
                "Token(token).transferFrom(msg.sender, this, amount)"
            ],
            "jump3981": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block2680": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ],
            "block10607": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash),v,r,s)"
            ],
            "jump2680": [
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)",
                "sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce)"
            ]
        }
    }
}