{
    "SafeMin": {
        "function_list": [
            "_safeFalse()",
            "_safeSend(address,uint256)",
            "_unsafeSend(address,uint256)",
            "_isContract()",
            "_isHuman()"
        ],
        "initial_state": {
            "_safeFalse()": {
                "argument": {},
                "contract": {}
            },
            "_safeSend(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "_unsafeSend(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "_isContract()": {
                "argument": {},
                "contract": {}
            },
            "_isHuman()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "AssetMin": {
        "function_list": [
            "_safeFalse()",
            "_safeSend(address,uint256)",
            "_unsafeSend(address,uint256)",
            "_isContract()",
            "_isHuman()",
            "init(address,bytes32)",
            "setName(string)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferWithReference(address,uint256,string)",
            "__transferWithReference(address,uint256,string)",
            "transferToICAP(bytes32,uint256)",
            "transferToICAPWithReference(bytes32,uint256,string)",
            "__transferToICAPWithReference(bytes32,uint256,string)",
            "approve(address,uint256)",
            "setCosignerAddress(address)",
            "emitTransfer(address,address,uint256)",
            "emitApprove(address,address,uint256)",
            "sendToOwner()",
            "decimals()"
        ],
        "initial_state": {
            "_safeFalse()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "_safeSend(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "_unsafeSend(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "_isContract()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "_isHuman()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "init(address,bytes32)": {
                "argument": {
                    "_symbol": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "setName(string)": {
                "argument": {
                    "_name": "string"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "transferWithReference(address,uint256,string)": {
                "argument": {
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "__transferWithReference(address,uint256,string)": {
                "argument": {
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "transferToICAP(bytes32,uint256)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "transferToICAPWithReference(bytes32,uint256,string)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "__transferToICAPWithReference(bytes32,uint256,string)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "setCosignerAddress(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "emitTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "emitApprove(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "sendToOwner()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string"
                }
            }
        },
        "function_block_mapping": {
            "emitApprove(address,address,uint256)": [
                632,
                163
            ],
            "approve(address,uint256)": [
                488,
                119
            ],
            "balanceOf(address)": [
                1051,
                273
            ],
            "transferWithReference(address,uint256,string)": [
                1617,
                405
            ],
            "setName(string)": [
                1788,
                427
            ],
            "init(address,bytes32)": [
                850,
                207
            ],
            "totalSupply()": [
                589,
                141
            ],
            "emitTransfer(address,address,uint256)": [
                741,
                185
            ],
            "allowance(address,address)": [
                1917,
                449
            ],
            "sendToOwner()": [
                1004,
                251
            ],
            "setCosignerAddress(address)": [
                1374,
                339
            ],
            "transferToICAPWithReference(bytes32,uint256,string)": [
                1221,
                317
            ],
            "transfer(address,uint256)": [
                1516,
                383
            ],
            "transferToICAP(bytes32,uint256)": [
                1138,
                295
            ],
            "decimals()": [
                955,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump3641": [
                "multiAsset.baseUnit(symbol)",
                "multiAsset.baseUnit(symbol)"
            ],
            "jump5649_0": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)",
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "jump4764": [
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)",
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)"
            ],
            "block4418_0": [
                "multiAsset.balanceOf(_owner, symbol)"
            ],
            "block3862": [
                "multiAsset.owner(symbol)"
            ],
            "block4764": [
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)"
            ],
            "block4418": [
                "multiAsset.balanceOf(_owner, symbol)"
            ],
            "block3322": [
                "ma.isCreated(_symbol)"
            ],
            "jump3322": [
                "ma.isCreated(_symbol)",
                "ma.isCreated(_symbol)"
            ],
            "jump4418_0": [
                "multiAsset.balanceOf(_owner, symbol)",
                "multiAsset.balanceOf(_owner, symbol)"
            ],
            "jump6440_0": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)",
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "jump5231": [
                "multiAsset.allowance(_from, _spender, symbol)",
                "multiAsset.allowance(_from, _spender, symbol)"
            ],
            "block5982": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump5982_0": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)",
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump4145": [
                "multiAsset.transfer(owner, balanceOf(owner), symbol)",
                "multiAsset.transfer(owner, balanceOf(owner), symbol)"
            ],
            "block6827": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "block3641": [
                "multiAsset.baseUnit(symbol)"
            ],
            "block5649_0": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "block4145": [
                "multiAsset.transfer(owner, balanceOf(owner), symbol)"
            ],
            "jump5982": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)",
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump3862": [
                "multiAsset.owner(symbol)",
                "multiAsset.owner(symbol)"
            ],
            "block5231": [
                "multiAsset.allowance(_from, _spender, symbol)"
            ],
            "block5982_0": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump6440": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)",
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "jump5649": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)",
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "block6440": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "jump4418": [
                "multiAsset.balanceOf(_owner, symbol)",
                "multiAsset.balanceOf(_owner, symbol)"
            ],
            "block6827_0": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "block2684": [
                "multiAsset.totalSupply(symbol)"
            ],
            "jump2684": [
                "multiAsset.totalSupply(symbol)",
                "multiAsset.totalSupply(symbol)"
            ],
            "jump6827_0": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)",
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "block2460": [
                "multiAsset.proxyApprove(_spender, _value, symbol)"
            ],
            "block6440_0": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "jump2460": [
                "multiAsset.proxyApprove(_spender, _value, symbol)",
                "multiAsset.proxyApprove(_spender, _value, symbol)"
            ],
            "block5649": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "jump6827": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)",
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ]
        }
    },
    "Owned": {
        "function_list": [
            "Owned()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "GMT": {
        "function_list": [
            "Owned()",
            "init(address,bytes32)",
            "setName(string)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferWithReference(address,uint256,string)",
            "__transferWithReference(address,uint256,string)",
            "transferToICAP(bytes32,uint256)",
            "transferToICAPWithReference(bytes32,uint256,string)",
            "__transferToICAPWithReference(bytes32,uint256,string)",
            "approve(address,uint256)",
            "setCosignerAddress(address)",
            "emitTransfer(address,address,uint256)",
            "emitApprove(address,address,uint256)",
            "sendToOwner()",
            "decimals()",
            "_safeFalse()",
            "_safeSend(address,uint256)",
            "_unsafeSend(address,uint256)",
            "_isContract()",
            "_isHuman()",
            "updateRefundGas()",
            "setOperationsCallGas(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
            "setupTreasury(address,uint256)",
            "setForward(bytes4,address)",
            "_stringGas(string)",
            "_applyRefund(uint256)",
            "_refund(uint256)",
            "_transfer(address,uint256)",
            "_transferToICAP(bytes32,uint256)",
            "_transferWithReference(address,uint256,string)",
            "_transferToICAPWithReference(bytes32,uint256,string)",
            "_approve(address,uint256)",
            "_setCosignerAddress(address)",
            "transfer(address,uint256)",
            "transferToICAP(bytes32,uint256)",
            "transferWithReference(address,uint256,string)",
            "transferToICAPWithReference(bytes32,uint256,string)",
            "approve(address,uint256)",
            "setCosignerAddress(address)",
            "checkTransfer(address,uint256)",
            "checkTransferToICAP(bytes32,uint256)",
            "checkTransferWithReference(address,uint256,string)",
            "checkTransferToICAPWithReference(bytes32,uint256,string)",
            "checkApprove(address,uint256)",
            "checkSetCosignerAddress(address)",
            "checkForward(bytes)",
            "_forward(address,bytes)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "init(address,bytes32)": {
                "argument": {
                    "_symbol": "bytes32"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "setName(string)": {
                "argument": {
                    "_name": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "transferWithReference(address,uint256,string)": {
                "argument": {
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "__transferWithReference(address,uint256,string)": {
                "argument": {
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "transferToICAP(bytes32,uint256)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "transferToICAPWithReference(bytes32,uint256,string)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "__transferToICAPWithReference(bytes32,uint256,string)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "setCosignerAddress(address)": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "emitTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "emitApprove(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "sendToOwner()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_safeFalse()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_safeSend(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_unsafeSend(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_isContract()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_isHuman()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "updateRefundGas()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "setOperationsCallGas(uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_transfer": "uint256",
                    "_transferToICAP": "uint256",
                    "_transferWithReference": "uint256",
                    "_transferToICAPWithReference": "uint256",
                    "_approve": "uint256",
                    "_forward": "uint256",
                    "_setCosigner": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "setupTreasury(address,uint256)": {
                "argument": {
                    "_txGasPriceLimit": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "setForward(bytes4,address)": {
                "argument": {
                    "_msgSig": "bytes4"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_stringGas(string)": {
                "argument": {
                    "_string": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_applyRefund(uint256)": {
                "argument": {
                    "_startGas": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_refund(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_transferToICAP(bytes32,uint256)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_transferWithReference(address,uint256,string)": {
                "argument": {
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_transferToICAPWithReference(bytes32,uint256,string)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_setCosignerAddress(address)": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "checkTransfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "checkTransferToICAP(bytes32,uint256)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "checkTransferWithReference(address,uint256,string)": {
                "argument": {
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "checkTransferToICAPWithReference(bytes32,uint256,string)": {
                "argument": {
                    "_icap": "bytes32",
                    "_value": "uint256",
                    "_reference": "string"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "checkApprove(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "checkSetCosignerAddress(address)": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "checkForward(bytes)": {
                "argument": {
                    "_data": "bytes"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "_forward(address,bytes)": {
                "argument": {
                    "_data": "bytes"
                },
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "txGasPriceLimit": "uint256",
                    "refundGas": "uint256",
                    "transferCallGas": "uint256",
                    "transferWithReferenceCallGas": "uint256",
                    "transferToICAPCallGas": "uint256",
                    "transferToICAPWithReferenceCallGas": "uint256",
                    "approveCallGas": "uint256",
                    "forwardCallGas": "uint256",
                    "setCosignerCallGas": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "emitApprove(address,address,uint256)": [
                1687,
                295
            ],
            "setCosignerAddress(address)": [
                2776,
                603
            ],
            "checkForward(bytes)": [
                1418,
                207
            ],
            "setForward(bytes4,address)": [
                834,
                97
            ],
            "balanceOf(address)": [
                2410,
                515
            ],
            "totalSupply()": [
                1558,
                229
            ],
            "allowance(address,address)": [
                4267,
                933
            ],
            "updateRefundGas()": [
                1905,
                339
            ],
            "checkTransfer(address,uint256)": [
                2867,
                625
            ],
            "transferToICAPWithReference(bytes32,uint256,string)": [
                2623,
                581
            ],
            "setName(string)": [
                3869,
                867
            ],
            "approve(address,uint256)": [
                1317,
                185
            ],
            "checkSetCosignerAddress(address)": [
                3724,
                823
            ],
            "transferWithReference(address,uint256,string)": [
                3510,
                779
            ],
            "checkTransferToICAPWithReference(bytes32,uint256,string)": [
                966,
                119
            ],
            "checkTransferToICAP(bytes32,uint256)": [
                2979,
                647
            ],
            "checkApprove(address,uint256)": [
                4386,
                955
            ],
            "setOperationsCallGas(uint256,uint256,uint256,uint256,uint256,uint256,uint256)": [
                3381,
                757
            ],
            "emitTransfer(address,address,uint256)": [
                1796,
                317
            ],
            "setupTreasury(address,uint256)": [
                2102,
                405
            ],
            "transferToICAP(bytes32,uint256)": [
                2540,
                559
            ],
            "checkTransferWithReference(address,uint256,string)": [
                3998,
                889
            ],
            "sendToOwner()": [
                2363,
                493
            ],
            "transfer(address,uint256)": [
                3280,
                735
            ],
            "init(address,bytes32)": [
                1948,
                361
            ],
            "decimals()": [
                2053,
                383
            ]
        },
        "block_CALL_mapping": {
            "jump4681_0": [
                "_to.call.value(msg.value)(_data)",
                "_to.call.value(msg.value)(_data)"
            ],
            "jump4681_1": [
                "_to.call.value(msg.value)(_data)",
                "_to.call.value(msg.value)(_data)"
            ],
            "jump6188": [
                "multiAsset.totalSupply(symbol)",
                "multiAsset.totalSupply(symbol)"
            ],
            "block7814": [
                "multiAsset.owner(symbol)"
            ],
            "block10537_6": [
                "_to.call.value(_value)()"
            ],
            "block10537_4": [
                "_to.call.value(_value)()"
            ],
            "block10537_5": [
                "_to.call.value(_value)()"
            ],
            "block10537_2": [
                "_to.call.value(_value)()"
            ],
            "block10537_3": [
                "_to.call.value(_value)()"
            ],
            "block10537_0": [
                "_to.call.value(_value)()"
            ],
            "jump10469": [
                "multiAsset.proxyApprove(_spender, _value, symbol)",
                "multiAsset.proxyApprove(_spender, _value, symbol)"
            ],
            "jump10469_0": [
                "multiAsset.proxyApprove(_spender, _value, symbol)",
                "multiAsset.proxyApprove(_spender, _value, symbol)"
            ],
            "block7008": [
                "ma.isCreated(_symbol)"
            ],
            "block12504": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "block11310_2": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "block11310_0": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "block11310_1": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "block9847": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump8370_0": [
                "multiAsset.balanceOf(_owner, symbol)",
                "multiAsset.balanceOf(_owner, symbol)"
            ],
            "jump8097": [
                "multiAsset.transfer(owner, balanceOf(owner), symbol)",
                "multiAsset.transfer(owner, balanceOf(owner), symbol)"
            ],
            "jump9847_13": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_12": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_11": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_10": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_14": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9280": [
                "multiAsset.allowance(_from, _spender, symbol)"
            ],
            "jump7008": [
                "ma.isCreated(_symbol)",
                "ma.isCreated(_symbol)"
            ],
            "jump10849": [
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)",
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)"
            ],
            "jump9847_2": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_1": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_14": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_11": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_10": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_13": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_12": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump4681": [
                "_to.call.value(msg.value)(_data)",
                "_to.call.value(msg.value)(_data)"
            ],
            "block12117_2": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "block12117_0": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "block12117_1": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "block10537_1": [
                "_to.call.value(_value)()"
            ],
            "block10469": [
                "multiAsset.proxyApprove(_spender, _value, symbol)"
            ],
            "jump9847_3": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block4681": [
                "_to.call.value(msg.value)(_data)"
            ],
            "jump11643": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)",
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump9847_0": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_7": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_6": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_5": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_4": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_9": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump9847_8": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump7814": [
                "multiAsset.owner(symbol)",
                "multiAsset.owner(symbol)"
            ],
            "jump10849_0": [
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)",
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)"
            ],
            "block12504_2": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "block12504_0": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "block12504_1": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "jump7327": [
                "multiAsset.baseUnit(symbol)",
                "multiAsset.baseUnit(symbol)"
            ],
            "block6188": [
                "multiAsset.totalSupply(symbol)"
            ],
            "block8097": [
                "multiAsset.transfer(owner, balanceOf(owner), symbol)"
            ],
            "jump11310": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)",
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "block8370_0": [
                "multiAsset.balanceOf(_owner, symbol)"
            ],
            "jump11310_0": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)",
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "jump11310_1": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)",
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "jump11310_2": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)",
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "jump12117": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)",
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "jump12504": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)",
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "block9847_1": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_0": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_3": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_2": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_5": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_4": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_7": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_6": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block9847_9": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block11310": [
                "multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)"
            ],
            "jump12504_0": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)",
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "jump12504_1": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)",
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "jump12504_2": [
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)",
                "multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)"
            ],
            "jump12117_0": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)",
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "jump12117_1": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)",
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "jump12117_2": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)",
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "block10469_0": [
                "multiAsset.proxyApprove(_spender, _value, symbol)"
            ],
            "block11643_2": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "block11643_1": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "block11643_0": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "block10849_0": [
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)"
            ],
            "block12117": [
                "multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)"
            ],
            "block9847_8": [
                "treasury.withdraw(tx.origin, _value)"
            ],
            "jump11643_1": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)",
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump11643_0": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)",
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump11643_2": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)",
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "jump9847": [
                "treasury.withdraw(tx.origin, _value)",
                "treasury.withdraw(tx.origin, _value)"
            ],
            "block7327": [
                "multiAsset.baseUnit(symbol)"
            ],
            "jump9280": [
                "multiAsset.allowance(_from, _spender, symbol)",
                "multiAsset.allowance(_from, _spender, symbol)"
            ],
            "block10849": [
                "multiAsset.proxySetCosignerAddress(_cosigner, symbol)"
            ],
            "jump8370": [
                "multiAsset.balanceOf(_owner, symbol)",
                "multiAsset.balanceOf(_owner, symbol)"
            ],
            "block11643": [
                "multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)"
            ],
            "block10537": [
                "_to.call.value(_value)()"
            ],
            "block4681_0": [
                "_to.call.value(msg.value)(_data)"
            ],
            "block4681_1": [
                "_to.call.value(msg.value)(_data)"
            ],
            "block8370": [
                "multiAsset.balanceOf(_owner, symbol)"
            ]
        }
    }
}