{
    "PassDao": {
        "function_list": [
            "ActualCommitteeRoom()",
            "MetaProject()",
            "ActualShareManager()",
            "ActualTokenManager()",
            "PassDao()",
            "upgrade(address,address,address)",
            "addMetaProject(address)",
            "addProject(address)"
        ],
        "initial_state": {
            "ActualCommitteeRoom()": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            },
            "MetaProject()": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            },
            "ActualShareManager()": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            },
            "ActualTokenManager()": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            },
            "PassDao()": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            },
            "upgrade(address,address,address)": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            },
            "addMetaProject(address)": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            },
            "addProject(address)": {
                "argument": {},
                "contract": {
                    "revisions": "PassDao.revision[]",
                    "projects": "PassDao.project[]"
                }
            }
        },
        "function_block_mapping": {
            "addProject(address)": [
                646,
                163
            ],
            "ActualTokenManager()": [
                800,
                207
            ],
            "ActualCommitteeRoom()": [
                887,
                229
            ],
            "upgrade(address,address,address)": [
                974,
                251
            ],
            "MetaProject()": [
                559,
                141
            ],
            "ActualShareManager()": [
                713,
                185
            ],
            "addMetaProject(address)": [
                158,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "PassTokenManager": {
        "function_list": [
            "Client()",
            "totalSupply()",
            "balanceOf(address)",
            "Transferable()",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "AmountToFund(uint256)",
            "priceMultiplier(uint256)",
            "priceDivisor(uint256,uint256)",
            "actualPriceDivisor(uint256)",
            "TokenAmount(uint256,uint256,uint256)",
            "weiAmount(uint256,uint256,uint256)",
            "TokenPriceInWei(uint256,uint256)",
            "LastProposalID()",
            "numberOfHolders()",
            "HolderAddress(uint256)",
            "initialTokenSupply(address,uint256,bool)",
            "cloneTokens(uint256,uint256)",
            "addHolder(address)",
            "createTokens(address,uint256)",
            "rewardTokensForClient(address,uint256)",
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)",
            "sale(uint256,address,uint256,uint256,bool)",
            "closeFunding(uint256)",
            "sendPendingAmounts(uint256,uint256,address)",
            "withdrawPendingAmounts()",
            "setFundingStartTime(uint256,uint256)",
            "setFundingFueled(uint256)",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Client()",
            "totalSupply()",
            "balanceOf(address)",
            "Transferable()",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "AmountToFund(uint256)",
            "priceMultiplier(uint256)",
            "priceDivisor(uint256,uint256)",
            "actualPriceDivisor(uint256)",
            "TokenAmount(uint256,uint256,uint256)",
            "weiAmount(uint256,uint256,uint256)",
            "TokenPriceInWei(uint256,uint256)",
            "LastProposalID()",
            "numberOfHolders()",
            "HolderAddress(uint256)",
            "PassTokenManager(PassDao,address,string,string,uint8,bool,bool,uint256,uint256)",
            "initialTokenSupply(address,uint256,bool)",
            "cloneTokens(uint256,uint256)",
            "addHolder(address)",
            "createTokens(address,uint256)",
            "rewardTokensForClient(address,uint256)",
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)",
            "sale(uint256,address,uint256,uint256,bool)",
            "closeFunding(uint256)",
            "sendPendingAmounts(uint256,uint256,address)",
            "withdrawPendingAmounts()",
            "setFundingStartTime(uint256,uint256)",
            "setFundingFueled(uint256)",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "Client()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "Transferable()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "FundedAmount(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "AmountToFund(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "priceMultiplier(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "priceDivisor(uint256,uint256)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "actualPriceDivisor(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "TokenAmount(uint256,uint256,uint256)": {
                "argument": {
                    "_weiAmount": "uint256",
                    "_priceMultiplier": "uint256",
                    "_priceDivisor": "uint256"
                },
                "contract": {}
            },
            "weiAmount(uint256,uint256,uint256)": {
                "argument": {
                    "_tokenAmount": "uint256",
                    "_priceMultiplier": "uint256",
                    "_priceDivisor": "uint256"
                },
                "contract": {}
            },
            "TokenPriceInWei(uint256,uint256)": {
                "argument": {
                    "_tokenAmount": "uint256",
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "LastProposalID()": {
                "argument": {},
                "contract": {}
            },
            "numberOfHolders()": {
                "argument": {},
                "contract": {}
            },
            "HolderAddress(uint256)": {
                "argument": {
                    "_index": "uint256"
                },
                "contract": {}
            },
            "initialTokenSupply(address,uint256,bool)": {
                "argument": {
                    "_quantity": "uint256"
                },
                "contract": {}
            },
            "cloneTokens(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "addHolder(address)": {
                "argument": {},
                "contract": {}
            },
            "createTokens(address,uint256)": {
                "argument": {
                    "_tokenAmount": "uint256"
                },
                "contract": {}
            },
            "rewardTokensForClient(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_amountToFund": "uint256",
                    "_minutesFundingPeriod": "uint256",
                    "_inflationRate": "uint256",
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "sale(uint256,address,uint256,uint256,bool)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_amount": "uint256",
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "closeFunding(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "sendPendingAmounts(uint256,uint256,address)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "withdrawPendingAmounts()": {
                "argument": {},
                "contract": {}
            },
            "setFundingStartTime(uint256,uint256)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_startTime": "uint256"
                },
                "contract": {}
            },
            "setFundingFueled(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "ableTransfer()": {
                "argument": {},
                "contract": {}
            },
            "disableTransfer()": {
                "argument": {},
                "contract": {}
            },
            "blockTransfer(address,uint256)": {
                "argument": {
                    "_deadLine": "uint256"
                },
                "contract": {}
            },
            "transferFromTo(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "PassTokenManager(PassDao,address,string,string,uint8,bool,bool,uint256,uint256)": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string",
                    "_tokenDecimals": "uint8",
                    "_initialPriceMultiplier": "uint256",
                    "_inflationRate": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "HolderAddress(uint256)": [
                2628,
                691
            ],
            "AmountToFund(uint256)": [
                2812,
                735
            ],
            "cloneTokens(uint256,uint256)": [
                834,
                163
            ],
            "totalSupply()": [
                913,
                185
            ],
            "Transferable()": [
                956,
                207
            ],
            "allowance(address,address)": [
                3122,
                801
            ],
            "transferFrom(address,address,uint256)": [
                1026,
                251
            ],
            "sendPendingAmounts(uint256,uint256,address)": [
                1833,
                471
            ],
            "TokenPriceInWei(uint256,uint256)": [
                2737,
                713
            ],
            "approve(address,uint256)": [
                620,
                119
            ],
            "initialTokenSupply(address,uint256,bool)": [
                721,
                141
            ],
            "numberOfHolders()": [
                3881,
                894
            ],
            "setFundingStartTime(uint256,uint256)": [
                1778,
                449
            ],
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)": [
                1393,
                361
            ],
            "setFundingFueled(uint256)": [
                1159,
                273
            ],
            "LastProposalID()": [
                1350,
                339
            ],
            "FundedAmount(uint256)": [
                1944,
                493
            ],
            "disableTransfer()": [
                2605,
                669
            ],
            "ableTransfer()": [
                1003,
                229
            ],
            "balanceOf(address)": [
                2056,
                537
            ],
            "rewardTokensForClient(address,uint256)": [
                1253,
                317
            ],
            "withdrawPendingAmounts()": [
                2009,
                515
            ],
            "blockTransfer(address,uint256)": [
                1510,
                383
            ],
            "Client()": [
                2273,
                603
            ],
            "transfer(address,uint256)": [
                2504,
                647
            ]
        },
        "block_CALL_mapping": {
            "block7673_0": [
                "_buyer.send(_amount)"
            ],
            "jump8128_5": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump8128_0": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "block8128": [
                "passDao.ActualCommitteeRoom()"
            ],
            "jump8128_2": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump8128_3": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump7673_0": [
                "_buyer.send(_amount)",
                "_buyer.send(_amount)"
            ],
            "jump4305": [
                "_clonedFrom.balanceOf(_holder)",
                "_clonedFrom.balanceOf(_holder)"
            ],
            "block3881": [
                "_clonedFrom.numberOfHolders()"
            ],
            "jump8128": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "block8128_2": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block8128_3": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block8128_0": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block8128_1": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block8128_4": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block8128_5": [
                "passDao.ActualCommitteeRoom()"
            ],
            "jump8128_4": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "block7673": [
                "_buyer.send(_amount)"
            ],
            "jump3881": [
                "_clonedFrom.numberOfHolders()",
                "_clonedFrom.numberOfHolders()"
            ],
            "jump7673": [
                "_buyer.send(_amount)",
                "_buyer.send(_amount)"
            ],
            "block4305": [
                "_clonedFrom.balanceOf(_holder)"
            ],
            "jump4089": [
                "_clonedFrom.HolderAddress(i)",
                "_clonedFrom.HolderAddress(i)"
            ],
            "block4089": [
                "_clonedFrom.HolderAddress(i)"
            ],
            "jump8128_1": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ]
        }
    },
    "PassManager": {
        "function_list": [
            "Client()",
            "totalSupply()",
            "balanceOf(address)",
            "Transferable()",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "AmountToFund(uint256)",
            "priceMultiplier(uint256)",
            "priceDivisor(uint256,uint256)",
            "actualPriceDivisor(uint256)",
            "TokenAmount(uint256,uint256,uint256)",
            "weiAmount(uint256,uint256,uint256)",
            "TokenPriceInWei(uint256,uint256)",
            "LastProposalID()",
            "numberOfHolders()",
            "HolderAddress(uint256)",
            "PassTokenManager(PassDao,address,string,string,uint8,bool,bool,uint256,uint256)",
            "initialTokenSupply(address,uint256,bool)",
            "cloneTokens(uint256,uint256)",
            "addHolder(address)",
            "createTokens(address,uint256)",
            "rewardTokensForClient(address,uint256)",
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)",
            "sale(uint256,address,uint256,uint256,bool)",
            "closeFunding(uint256)",
            "sendPendingAmounts(uint256,uint256,address)",
            "withdrawPendingAmounts()",
            "setFundingStartTime(uint256,uint256)",
            "setFundingFueled(uint256)",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Client()",
            "totalSupply()",
            "balanceOf(address)",
            "Transferable()",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "AmountToFund(uint256)",
            "priceMultiplier(uint256)",
            "priceDivisor(uint256,uint256)",
            "actualPriceDivisor(uint256)",
            "TokenAmount(uint256,uint256,uint256)",
            "weiAmount(uint256,uint256,uint256)",
            "TokenPriceInWei(uint256,uint256)",
            "LastProposalID()",
            "numberOfHolders()",
            "HolderAddress(uint256)",
            "initialTokenSupply(address,uint256,bool)",
            "cloneTokens(uint256,uint256)",
            "addHolder(address)",
            "createTokens(address,uint256)",
            "rewardTokensForClient(address,uint256)",
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)",
            "sale(uint256,address,uint256,uint256,bool)",
            "closeFunding(uint256)",
            "sendPendingAmounts(uint256,uint256,address)",
            "withdrawPendingAmounts()",
            "setFundingStartTime(uint256,uint256)",
            "setFundingFueled(uint256)",
            "ableTransfer()",
            "disableTransfer()",
            "blockTransfer(address,uint256)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "PassManager(PassDao,address,string,string,uint8,bool,bool,uint256,uint256)",
            "fallback()",
            "sendTo(address,uint256)",
            "buyTokensFor(uint256,address,uint256,bool)",
            "buyTokensForProposal(uint256,address)",
            "buyTokenFromModerator(uint256,address,uint256,bool)",
            "addOrder(address,uint256)",
            "removeOrder(uint256)",
            "buyTokens()",
            "sellTokens(uint256,uint256,uint256)",
            "removeOrders(uint256,uint256)"
        ],
        "initial_state": {
            "Client()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "Transferable()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "FundedAmount(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "AmountToFund(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "priceMultiplier(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "priceDivisor(uint256,uint256)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_saleDate": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "actualPriceDivisor(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "TokenAmount(uint256,uint256,uint256)": {
                "argument": {
                    "_weiAmount": "uint256",
                    "_priceMultiplier": "uint256",
                    "_priceDivisor": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "weiAmount(uint256,uint256,uint256)": {
                "argument": {
                    "_tokenAmount": "uint256",
                    "_priceMultiplier": "uint256",
                    "_priceDivisor": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "TokenPriceInWei(uint256,uint256)": {
                "argument": {
                    "_tokenAmount": "uint256",
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "LastProposalID()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "numberOfHolders()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "HolderAddress(uint256)": {
                "argument": {
                    "_index": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "PassTokenManager(PassDao,address,string,string,uint8,bool,bool,uint256,uint256)": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string",
                    "_tokenDecimals": "uint8",
                    "_initialPriceMultiplier": "uint256",
                    "_inflationRate": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "initialTokenSupply(address,uint256,bool)": {
                "argument": {
                    "_quantity": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "cloneTokens(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "addHolder(address)": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "createTokens(address,uint256)": {
                "argument": {
                    "_tokenAmount": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "rewardTokensForClient(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_amountToFund": "uint256",
                    "_minutesFundingPeriod": "uint256",
                    "_inflationRate": "uint256",
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "sale(uint256,address,uint256,uint256,bool)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_amount": "uint256",
                    "_saleDate": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "closeFunding(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "sendPendingAmounts(uint256,uint256,address)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "withdrawPendingAmounts()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "setFundingStartTime(uint256,uint256)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_startTime": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "setFundingFueled(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "ableTransfer()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "disableTransfer()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "blockTransfer(address,uint256)": {
                "argument": {
                    "_deadLine": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "transferFromTo(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "PassManager(PassDao,address,string,string,uint8,bool,bool,uint256,uint256)": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string",
                    "_tokenDecimals": "uint8",
                    "_initialPriceMultiplier": "uint256",
                    "_inflationRate": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "sendTo(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "buyTokensFor(uint256,address,uint256,bool)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_date": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "buyTokensForProposal(uint256,address)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "buyTokenFromModerator(uint256,address,uint256,bool)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_date": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "addOrder(address,uint256)": {
                "argument": {
                    "_weiGiven": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "removeOrder(uint256)": {
                "argument": {
                    "_order": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "sellTokens(uint256,uint256,uint256)": {
                "argument": {
                    "_tokenAmount": "uint256",
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            },
            "removeOrders(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {
                    "orders": "PassManager.order[]",
                    "numberOfOrders": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "HolderAddress(uint256)": [
                3306,
                748
            ],
            "AmountToFund(uint256)": [
                3490,
                792
            ],
            "cloneTokens(uint256,uint256)": [
                1021,
                110
            ],
            "totalSupply()": [
                1100,
                132
            ],
            "removeOrders(uint256,uint256)": [
                2655,
                594
            ],
            "Transferable()": [
                1143,
                154
            ],
            "allowance(address,address)": [
                3834,
                880
            ],
            "transferFrom(address,address,uint256)": [
                1213,
                198
            ],
            "sendPendingAmounts(uint256,uint256,address)": [
                2130,
                440
            ],
            "buyTokenFromModerator(uint256,address,uint256,bool)": [
                1774,
                352
            ],
            "approve(address,uint256)": [
                807,
                66
            ],
            "initialTokenSupply(address,uint256,bool)": [
                908,
                88
            ],
            "numberOfHolders()": [
                4741,
                894
            ],
            "setFundingStartTime(uint256,uint256)": [
                2075,
                418
            ],
            "setFundingRules(address,uint256,uint256,uint256,uint256,uint256)": [
                1580,
                308
            ],
            "setFundingFueled(uint256)": [
                1346,
                220
            ],
            "LastProposalID()": [
                1537,
                286
            ],
            "FundedAmount(uint256)": [
                2241,
                462
            ],
            "disableTransfer()": [
                3283,
                726
            ],
            "sellTokens(uint256,uint256,uint256)": [
                2353,
                506
            ],
            "sendTo(address,uint256)": [
                2965,
                660
            ],
            "ableTransfer()": [
                1190,
                176
            ],
            "balanceOf(address)": [
                2438,
                528
            ],
            "rewardTokensForClient(address,uint256)": [
                1440,
                264
            ],
            "withdrawPendingAmounts()": [
                2306,
                484
            ],
            "blockTransfer(address,uint256)": [
                1697,
                330
            ],
            "TokenPriceInWei(uint256,uint256)": [
                3415,
                770
            ],
            "Client()": [
                2734,
                616
            ],
            "transfer(address,uint256)": [
                3182,
                704
            ],
            "buyTokens()": [
                3555,
                814
            ]
        },
        "block_CALL_mapping": {
            "block10035": [
                "msg.sender.send(_totalAmount)"
            ],
            "block10247_4": [
                "passDao.ActualCommitteeRoom()"
            ],
            "jump4741": [
                "_clonedFrom.numberOfHolders()",
                "_clonedFrom.numberOfHolders()"
            ],
            "jump5165": [
                "_clonedFrom.balanceOf(_holder)",
                "_clonedFrom.balanceOf(_holder)"
            ],
            "block10247_0": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block10247_1": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block10247_2": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block10247_3": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block4741": [
                "_clonedFrom.numberOfHolders()"
            ],
            "block10247_5": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block10247_6": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block4949": [
                "_clonedFrom.HolderAddress(i)"
            ],
            "jump4949": [
                "_clonedFrom.HolderAddress(i)",
                "_clonedFrom.HolderAddress(i)"
            ],
            "jump10035": [
                "msg.sender.send(_totalAmount)",
                "msg.sender.send(_totalAmount)"
            ],
            "block5165": [
                "_clonedFrom.balanceOf(_holder)"
            ],
            "jump10247_2": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump10247_3": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump10247_0": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump10247_1": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump10247_6": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump10247_4": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump10247_5": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "block10247": [
                "passDao.ActualCommitteeRoom()"
            ],
            "block9614": [
                "msg.sender.send(_totalAmount)"
            ],
            "jump10247": [
                "passDao.ActualCommitteeRoom()",
                "passDao.ActualCommitteeRoom()"
            ],
            "jump10536": [
                "_recipient.send(_amount)",
                "_recipient.send(_amount)"
            ],
            "block8669_0": [
                "_buyer.send(_amount)"
            ],
            "jump8669_0": [
                "_buyer.send(_amount)",
                "_buyer.send(_amount)"
            ],
            "block8669": [
                "_buyer.send(_amount)"
            ],
            "block10536": [
                "_recipient.send(_amount)"
            ],
            "jump9614": [
                "msg.sender.send(_totalAmount)",
                "msg.sender.send(_totalAmount)"
            ],
            "jump8669": [
                "_buyer.send(_amount)",
                "_buyer.send(_amount)"
            ]
        }
    }
}