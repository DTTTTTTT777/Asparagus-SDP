{
    "MetrumcoinShares": {
        "function_list": [
            "MetrumcoinShares()",
            "refreshActiveShareholdersArray()",
            "getShareholderArray()",
            "getShareholderArrayLength()",
            "transfer(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "getProposalTextArrayLength()",
            "makeNewProposal(string,uint256)",
            "getMyProposals()",
            "voteForProposal(uint256)",
            "countVotes(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MetrumcoinShares()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "refreshActiveShareholdersArray()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "getShareholderArray()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "getShareholderArrayLength()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "getProposalTextArrayLength()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "makeNewProposal(string,uint256)": {
                "argument": {
                    "_proposalDescription": "string",
                    "_debatingPeriodInMinutes": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "getMyProposals()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "voteForProposal(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            },
            "countVotes(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "shareholder": "address[]",
                    "activeShareholdersArray": "address[]",
                    "activeShareholdersArrayLength": "uint256",
                    "proposalText": "string[]",
                    "votes": "mapping(uint256 => address[])",
                    "proposalsByShareholder": "mapping(address => uint256[])"
                }
            }
        },
        "function_block_mapping": {
            "countVotes(uint256)": [
                741,
                163
            ],
            "transferFrom(address,address,uint256)": [
                871,
                207
            ],
            "makeNewProposal(string,uint256)": [
                1221,
                273
            ],
            "getProposalTextArrayLength()": [
                655,
                119
            ],
            "getShareholderArrayLength()": [
                2929,
                625
            ],
            "voteForProposal(uint256)": [
                345,
                75
            ],
            "approveAndCall(address,uint256,bytes)": [
                2434,
                537
            ],
            "getShareholderArray()": [
                2821,
                603
            ],
            "refreshActiveShareholdersArray()": [
                1113,
                251
            ],
            "getMyProposals()": [
                1405,
                317
            ],
            "transfer(address,uint256)": [
                2149,
                471
            ]
        },
        "block_CALL_mapping": {
            "block8354": [
                "spender.receiveApproval(msg.sender, // shares owner\n        _value, // number of shares\n        this, // this contract's adress\n        _extraData)"
            ],
            "jump8354": [
                "spender.receiveApproval(msg.sender, // shares owner\n        _value, // number of shares\n        this, // this contract's adress\n        _extraData)",
                "spender.receiveApproval(msg.sender, // shares owner\n        _value, // number of shares\n        this, // this contract's adress\n        _extraData)"
            ]
        }
    }
}