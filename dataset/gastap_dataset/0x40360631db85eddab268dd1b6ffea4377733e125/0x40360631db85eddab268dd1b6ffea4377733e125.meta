{
    "Matthew": {
        "function_list": [
            "Matthew()",
            "setFacts()",
            "fallback()",
            "destroyWhenRoundOver()",
            "setNewPeriod(uint256)",
            "getPeriod()",
            "getBlocksTillMatthew()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Matthew()": {
                "argument": {},
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            },
            "setFacts()": {
                "argument": {},
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            },
            "destroyWhenRoundOver()": {
                "argument": {},
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            },
            "setNewPeriod(uint256)": {
                "argument": {
                    "_newPeriod": "uint256"
                },
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            },
            "getPeriod()": {
                "argument": {},
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            },
            "getBlocksTillMatthew()": {
                "argument": {},
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "blockheight": "uint256",
                    "period": "uint256",
                    "DELTA": "uint256",
                    "WINNERTAX_PRECENT": "uint256",
                    "newPeriod": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getBlocksTillMatthew()": [
                1025,
                97
            ],
            "setNewPeriod(uint256)": [
                1091,
                141
            ],
            "getPeriod()": [
                982,
                75
            ],
            "destroyWhenRoundOver()": [
                1068,
                119
            ]
        },
        "block_CALL_mapping": {
            "block659": [
                "msg.sender.send(this.balance)"
            ],
            "block177": [
                "whale.send(this.balance - nextStake)"
            ],
            "block659_0": [
                "msg.sender.send(this.balance)"
            ],
            "block177_0": [
                "whale.send(this.balance - nextStake)"
            ]
        }
    }
}