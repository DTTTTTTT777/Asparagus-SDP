{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SpaceICOToken": {
        "function_list": [
            "getSaleStart()",
            "getSaleEnd()",
            "getCurrentPrice()",
            "softCapReached()",
            "inSalePeriod()",
            "balanceOf(address)",
            "SpaceICOToken(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "fallback()",
            "buyTokens()",
            "refund()",
            "withdraw()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "getSaleStart()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "getSaleEnd()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "getCurrentPrice()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "softCapReached()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "inSalePeriod()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "SpaceICOToken(uint256)": {
                "argument": {
                    "_saleStart": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "saleStart": "uint256",
                    "saleEnd": "uint256",
                    "TOTAL_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getCurrentPrice()": [
                1348,
                405
            ],
            "approve(address,uint256)": [
                384,
                97
            ],
            "balanceOf(address)": [
                844,
                273
            ],
            "getSaleStart()": [
                1075,
                317
            ],
            "refund()": [
                821,
                251
            ],
            "getSaleEnd()": [
                778,
                229
            ],
            "allowance(address,address)": [
                1229,
                383
            ],
            "withdraw()": [
                755,
                207
            ],
            "inSalePeriod()": [
                708,
                185
            ],
            "transferFrom(address,address,uint256)": [
                485,
                119
            ],
            "softCapReached()": [
                618,
                141
            ],
            "buyTokens()": [
                1219,
                361
            ],
            "transfer(address,uint256)": [
                1118,
                339
            ]
        },
        "block_CALL_mapping": {
            "block3039": [
                "msg.sender.transfer(this.balance)"
            ],
            "block3219": [
                "msg.sender.transfer(amount)"
            ],
            "jump3039": [
                "msg.sender.transfer(this.balance)",
                "msg.sender.transfer(this.balance)"
            ],
            "jump3219": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ]
        }
    }
}