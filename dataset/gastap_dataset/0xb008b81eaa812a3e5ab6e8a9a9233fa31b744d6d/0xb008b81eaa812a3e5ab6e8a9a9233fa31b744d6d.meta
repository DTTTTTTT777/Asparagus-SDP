{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "MilkCoinToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "addAddress(address)",
            "countOfAddresses()",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "postProcessTransfer(bool,address,address,uint256)",
            "buyBack(address,uint256)",
            "retrieveTokens(address)",
            "finishMinting(uint256)",
            "lockAddress(address)",
            "unlockAddress(address)",
            "payDividendsManually()",
            "resetDividendsCalculation()",
            "payDividends(uint256)",
            "calculateDividends(uint256,uint256)",
            "withdraw()",
            "deposit()",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "addAddress(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "countOfAddresses()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "postProcessTransfer(bool,address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "buyBack(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "finishMinting(uint256)": {
                "argument": {
                    "newInvested": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "lockAddress(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "unlockAddress(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "payDividendsManually()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "resetDividendsCalculation()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "payDividends(uint256)": {
                "argument": {
                    "count": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "calculateDividends(uint256,uint256)": {
                "argument": {
                    "percent": "uint256",
                    "count": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "BUY_BACK_BONUS": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "invested": "uint256",
                    "tokensAfterCrowdsale": "uint256",
                    "startBuyBackDate": "uint256",
                    "endBuyBackDate": "uint256",
                    "toBuyBack": "uint256",
                    "dividendsIndex": "uint256",
                    "dividendsPayedIndex": "uint256",
                    "ethToDividendsNeeds": "uint256",
                    "buyBackInvestedValue": "uint256",
                    "addresses": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "finishMinting(uint256)": [
                883,
                163
            ],
            "resetDividendsCalculation()": [
                2753,
                801
            ],
            "retrieveTokens(address)": [
                2485,
                713
            ],
            "countOfAddresses()": [
                952,
                185
            ],
            "balanceOf(address)": [
                7155,
                948
            ],
            "allowance(address,address)": [
                3028,
                933
            ],
            "decreaseApproval(address,uint256)": [
                1540,
                405
            ],
            "transferFrom(address,address,uint256)": [
                1038,
                229
            ],
            "payDividendsManually()": [
                1903,
                515
            ],
            "approve(address,uint256)": [
                739,
                119
            ],
            "unlockAddress(address)": [
                2686,
                779
            ],
            "lockAddress(address)": [
                1306,
                317
            ],
            "finishMinting()": [
                1969,
                559
            ],
            "deposit()": [
                2917,
                889
            ],
            "payDividends(uint256)": [
                1728,
                449
            ],
            "calculateDividends(uint256,uint256)": [
                2776,
                823
            ],
            "transferOwnership(address)": [
                3390,
                1021
            ],
            "mint(address,uint256)": [
                1396,
                361
            ],
            "transfer(address,uint256)": [
                2384,
                691
            ],
            "increaseApproval(address,uint256)": [
                2927,
                911
            ],
            "withdraw()": [
                1373,
                339
            ]
        },
        "block_CALL_mapping": {
            "block12658": [
                "from.transfer(valueInWei)"
            ],
            "jump12658_0": [
                "from.transfer(valueInWei)",
                "from.transfer(valueInWei)"
            ],
            "block12658_0": [
                "from.transfer(valueInWei)"
            ],
            "jump12658": [
                "from.transfer(valueInWei)",
                "from.transfer(valueInWei)"
            ],
            "block5846": [
                "tokenHolder.transfer(value)"
            ],
            "block7155": [
                "alienToken.balanceOf(this)"
            ],
            "jump4311": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block4311": [
                "owner.transfer(this.balance)"
            ],
            "jump6353": [
                "msg.sender.transfer(dividendsValue)",
                "msg.sender.transfer(dividendsValue)"
            ],
            "block6353": [
                "msg.sender.transfer(dividendsValue)"
            ],
            "jump7155": [
                "alienToken.balanceOf(this)",
                "alienToken.balanceOf(this)"
            ],
            "jump5846": [
                "tokenHolder.transfer(value)",
                "tokenHolder.transfer(value)"
            ],
            "jump7347": [
                "alienToken.transfer(owner, alienToken.balanceOf(this))",
                "alienToken.transfer(owner, alienToken.balanceOf(this))"
            ],
            "block7347": [
                "alienToken.transfer(owner, alienToken.balanceOf(this))"
            ]
        }
    },
    "CommonCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "milestonesCount()",
            "addMilestone(uint256,uint256)",
            "end()",
            "getMilestoneBonus()",
            "createTokensManually(address,uint256)",
            "createTokens()",
            "finishMinting()",
            "fallback()",
            "retrieveTokens(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "milestonesCount()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "addMilestone(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "end()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "getMilestoneBonus()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "createTokensManually(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DIVIDER": "uint256",
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "invested": "uint256",
                    "milestones": "CommonCrowdsale.Milestone[]"
                }
            }
        },
        "function_block_mapping": {
            "createTokensManually(address,uint256)": [
                610,
                185
            ],
            "setMinInvestedLimit(uint256)": [
                885,
                295
            ],
            "retrieveTokens(address)": [
                973,
                339
            ],
            "setStart(uint256)": [
                1516,
                581
            ],
            "addMilestone(uint256,uint256)": [
                512,
                141
            ],
            "createTokens()": [
                1083,
                383
            ],
            "setHardcap(uint256)": [
                1289,
                493
            ],
            "getMilestoneBonus()": [
                382,
                97
            ],
            "end()": [
                1406,
                537
            ],
            "setPrice(uint256)": [
                797,
                251
            ],
            "finishMinting()": [
                687,
                207
            ],
            "setWallet(address)": [
                1222,
                471
            ],
            "transferOwnership(address)": [
                1449,
                559
            ],
            "milestonesCount()": [
                930,
                317
            ]
        },
        "block_CALL_mapping": {
            "block1701": [
                "wallet.transfer(msg.value)"
            ],
            "jump2156_1": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump2156_0": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "block2156_1": [
                "token.mint(msg.sender, tokens)"
            ],
            "block2156_0": [
                "token.mint(msg.sender, tokens)"
            ],
            "jump4273": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))",
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "jump3483": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "block1701_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1701_1": [
                "wallet.transfer(msg.value)"
            ],
            "block3483": [
                "token.transferOwnership(owner)"
            ],
            "block4273": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "block3201": [
                "token.finishMinting(invested)"
            ],
            "jump3201": [
                "token.finishMinting(invested)",
                "token.finishMinting(invested)"
            ],
            "block2899": [
                "token.mint(to, amount)"
            ],
            "jump2156": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump1701": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2899": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump1701_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1701_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2156": [
                "token.mint(msg.sender, tokens)"
            ],
            "block4081": [
                "alienToken.balanceOf(this)"
            ],
            "jump4081": [
                "alienToken.balanceOf(this)",
                "alienToken.balanceOf(this)"
            ]
        }
    },
    "MilkCoinTokenCrowdsale": {
        "function_list": [
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "milestonesCount()",
            "addMilestone(uint256,uint256)",
            "end()",
            "getMilestoneBonus()",
            "createTokensManually(address,uint256)",
            "createTokens()",
            "finishMinting()",
            "fallback()",
            "retrieveTokens(address)",
            "Ownable()",
            "transferOwnership(address)",
            "MilkCoinTokenCrowdsale()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {}
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {}
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {}
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {}
            },
            "milestonesCount()": {
                "argument": {},
                "contract": {}
            },
            "addMilestone(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {}
            },
            "end()": {
                "argument": {},
                "contract": {}
            },
            "getMilestoneBonus()": {
                "argument": {},
                "contract": {}
            },
            "createTokensManually(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "createTokens()": {
                "argument": {},
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "MilkCoinTokenCrowdsale()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "createTokensManually(address,uint256)": [
                610,
                185
            ],
            "setMinInvestedLimit(uint256)": [
                885,
                295
            ],
            "retrieveTokens(address)": [
                973,
                339
            ],
            "setStart(uint256)": [
                1516,
                581
            ],
            "addMilestone(uint256,uint256)": [
                512,
                141
            ],
            "createTokens()": [
                1083,
                383
            ],
            "setHardcap(uint256)": [
                1289,
                493
            ],
            "getMilestoneBonus()": [
                382,
                97
            ],
            "end()": [
                1406,
                537
            ],
            "setPrice(uint256)": [
                797,
                251
            ],
            "finishMinting()": [
                687,
                207
            ],
            "setWallet(address)": [
                1222,
                471
            ],
            "transferOwnership(address)": [
                1449,
                559
            ],
            "milestonesCount()": [
                930,
                317
            ]
        },
        "block_CALL_mapping": {
            "block1701": [
                "wallet.transfer(msg.value)"
            ],
            "jump2156_1": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump2156_0": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "block2156_1": [
                "token.mint(msg.sender, tokens)"
            ],
            "block2156_0": [
                "token.mint(msg.sender, tokens)"
            ],
            "jump4273": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))",
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "jump3483": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "block1701_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1701_1": [
                "wallet.transfer(msg.value)"
            ],
            "block3483": [
                "token.transferOwnership(owner)"
            ],
            "block4273": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "block3201": [
                "token.finishMinting(invested)"
            ],
            "jump3201": [
                "token.finishMinting(invested)",
                "token.finishMinting(invested)"
            ],
            "block2899": [
                "token.mint(to, amount)"
            ],
            "jump2156": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump1701": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2899": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump1701_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1701_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2156": [
                "token.mint(msg.sender, tokens)"
            ],
            "block4081": [
                "alienToken.balanceOf(this)"
            ],
            "jump4081": [
                "alienToken.balanceOf(this)",
                "alienToken.balanceOf(this)"
            ]
        }
    }
}