{
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                1062,
                273
            ]
        },
        "block_CALL_mapping": {
            "block3392": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3392": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(address,uint256,uint256,uint256,token)",
            "fallback()",
            "checkGoalReached()",
            "forwardFunds()",
            "safeWithdrawal()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,uint256,uint256,uint256,token)": {
                "argument": {
                    "fundingGoalInEthers": "uint256",
                    "durationInMinutes": "uint256",
                    "etherCostOfEachToken": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "safeWithdrawal()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "checkGoalReached()": [
                642,
                75
            ],
            "safeWithdrawal()": [
                1098,
                251
            ]
        },
        "block_CALL_mapping": {
            "block1121_0": [
                "beneficiary.transfer(msg.value)"
            ],
            "block1121_1": [
                "beneficiary.transfer(msg.value)"
            ],
            "block487_0": [
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "jump1121": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "jump1121_0": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "jump1121_1": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "jump487": [
                "tokenReward.transfer(msg.sender, amount / price)",
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "jump487_0": [
                "tokenReward.transfer(msg.sender, amount / price)",
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "block487": [
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "block1121": [
                "beneficiary.transfer(msg.value)"
            ]
        }
    }
}