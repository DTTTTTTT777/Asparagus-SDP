{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                208,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                342,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "PausableToken": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                638,
                207
            ],
            "approve(address,uint256)": [
                180,
                75
            ],
            "unpause()": [
                457,
                141
            ],
            "balanceOf(address)": [
                551,
                185
            ],
            "allowance(address,address)": [
                873,
                273
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "transferOwnership(address)": [
                992,
                295
            ],
            "transfer(address,uint256)": [
                772,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "jump1972": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block1972": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "PallyCoin": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "PallyCoin()",
            "setCrowdsaleAddress(address)",
            "distributePresaleTokens(address,uint256)",
            "distributeICOTokens(address,uint256)",
            "refundTokens(address,uint256)",
            "burnTokens()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "PallyCoin()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "setCrowdsaleAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "distributePresaleTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "distributeICOTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "refundTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "burnTokens()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256",
                    "initialSupply": "uint256",
                    "limitPresale": "uint256",
                    "limitCrowdsale": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1273,
                361
            ],
            "allowance(address,address)": [
                2002,
                581
            ],
            "transferFrom(address,address,uint256)": [
                877,
                229
            ],
            "pause()": [
                1360,
                383
            ],
            "approve(address,uint256)": [
                589,
                141
            ],
            "unpause()": [
                1102,
                295
            ],
            "refundTokens(address,uint256)": [
                1149,
                317
            ],
            "distributePresaleTokens(address,uint256)": [
                345,
                75
            ],
            "distributeICOTokens(address,uint256)": [
                690,
                163
            ],
            "burnTokens()": [
                566,
                119
            ],
            "transfer(address,uint256)": [
                1768,
                493
            ],
            "transferOwnership(address)": [
                2164,
                625
            ],
            "setCrowdsaleAddress(address)": [
                810,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(address,address,address,uint256,uint256)",
            "fallback()",
            "buyTokens()",
            "calculateExcessBalance()",
            "setTierRates(uint256,uint256,uint256,uint256)",
            "setEndDate(uint256)",
            "checkCompletedCrowdsale()",
            "claimRefund()",
            "calculateExcessTokens(uint256,uint256,uint256,uint256)",
            "calculateTokensTier(uint256,uint256)",
            "validPurchase()",
            "goalReached()",
            "hasEnded()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "Crowdsale(address,address,address,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "calculateExcessBalance()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "setTierRates(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tier1": "uint256",
                    "tier2": "uint256",
                    "tier3": "uint256",
                    "tier4": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "setEndDate(uint256)": {
                "argument": {
                    "_endTime": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "checkCompletedCrowdsale()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "calculateExcessTokens(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "tokensThisTier": "uint256",
                    "tierSelected": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "calculateTokensTier(uint256,uint256)": {
                "argument": {
                    "weiPaid": "uint256",
                    "tierSelected": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "calculateExcessTokens(uint256,uint256,uint256,uint256)": [
                1422,
                471
            ],
            "hasEnded()": [
                2158,
                801
            ],
            "claimRefund()": [
                1996,
                691
            ],
            "checkCompletedCrowdsale()": [
                1309,
                405
            ],
            "pause()": [
                1607,
                537
            ],
            "unpause()": [
                1089,
                317
            ],
            "goalReached()": [
                1560,
                515
            ],
            "transferOwnership(address)": [
                2205,
                823
            ],
            "buyTokens()": [
                2105,
                757
            ],
            "setEndDate(uint256)": [
                1044,
                295
            ],
            "setTierRates(uint256,uint256,uint256,uint256)": [
                1741,
                581
            ]
        },
        "block_CALL_mapping": {
            "jump5412_0": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7869_0": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "block4731_2": [
                "vault.enableRefunds()"
            ],
            "jump7869": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "block4731_1": [
                "vault.enableRefunds()"
            ],
            "jump3929_0": [
                "vault.close()",
                "vault.close()"
            ],
            "jump3929_1": [
                "vault.close()",
                "vault.close()"
            ],
            "block3757_1": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block3757_0": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block3757": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump5412": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7869_0": [
                "msg.sender.transfer(differenceWei)"
            ],
            "jump4731": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump5412_8": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump3152": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump5412_5": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3459": [
                "walletB.transfer(amountPaid)"
            ],
            "jump5069_1": [
                "token.burnTokens()",
                "token.burnTokens()"
            ],
            "jump5069_0": [
                "token.burnTokens()",
                "token.burnTokens()"
            ],
            "jump5412_1": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3929": [
                "vault.close()"
            ],
            "jump5412_3": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump5412_2": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5412_7": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3152_0": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block5412_5": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5412_4": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5412_3": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4731_0": [
                "vault.enableRefunds()"
            ],
            "block5412_1": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5412_0": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5069_1": [
                "token.burnTokens()"
            ],
            "jump6619": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])",
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "block7950_1": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block5069_0": [
                "token.burnTokens()"
            ],
            "block5412": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3152_1": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block5069": [
                "token.burnTokens()"
            ],
            "block3459_1": [
                "walletB.transfer(amountPaid)"
            ],
            "block6619": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "jump3459_1": [
                "walletB.transfer(amountPaid)",
                "walletB.transfer(amountPaid)"
            ],
            "block5412_2": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump3152_0": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump3152_1": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump4731_0": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump4731_1": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump4731_2": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block3152": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump5412_6": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3459_0": [
                "walletB.transfer(amountPaid)"
            ],
            "block5412_6": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump3459": [
                "walletB.transfer(amountPaid)",
                "walletB.transfer(amountPaid)"
            ],
            "jump5069_2": [
                "token.burnTokens()",
                "token.burnTokens()"
            ],
            "block5412_8": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump3757": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump7950": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump3459_0": [
                "walletB.transfer(amountPaid)",
                "walletB.transfer(amountPaid)"
            ],
            "block3929_0": [
                "vault.close()"
            ],
            "block3929_1": [
                "vault.close()"
            ],
            "jump5069": [
                "token.burnTokens()",
                "token.burnTokens()"
            ],
            "block7869_1": [
                "msg.sender.transfer(differenceWei)"
            ],
            "jump7869_1": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump3929": [
                "vault.close()",
                "vault.close()"
            ],
            "jump3757_1": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump3757_0": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block5069_2": [
                "token.burnTokens()"
            ],
            "jump6335": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump7950_0": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7950": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump5412_7": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7869": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block4731": [
                "vault.enableRefunds()"
            ],
            "jump5412_4": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7950_1": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7950_0": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block6335": [
                "vault.refund(msg.sender)"
            ]
        }
    }
}