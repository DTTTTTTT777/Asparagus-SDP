{
    "MyOwned": {
        "function_list": [
            "MyOwned()",
            "exOwner(address)"
        ],
        "initial_state": {
            "MyOwned()": {
                "argument": {},
                "contract": {}
            },
            "exOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "exOwner(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3650": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3650": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "CCCsale": {
        "function_list": [
            "MyOwned()",
            "exOwner(address)",
            "CCCsale(uint256,uint256,uint256,uint256,uint256,address,address)",
            "getCurrentTimestamp()",
            "saleActive()",
            "fallback()",
            "saleEnd(uint256)"
        ],
        "initial_state": {
            "MyOwned()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "salePrice": "uint256",
                    "saleSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256"
                }
            },
            "exOwner(address)": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "salePrice": "uint256",
                    "saleSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256"
                }
            },
            "CCCsale(uint256,uint256,uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startDate": "uint256",
                    "_stopDate": "uint256",
                    "_salePrice": "uint256",
                    "_saleSupply": "uint256",
                    "_fundingGoal": "uint256"
                },
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "salePrice": "uint256",
                    "saleSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256"
                }
            },
            "getCurrentTimestamp()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "salePrice": "uint256",
                    "saleSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256"
                }
            },
            "saleActive()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "salePrice": "uint256",
                    "saleSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "salePrice": "uint256",
                    "saleSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256"
                }
            },
            "saleEnd(uint256)": {
                "argument": {
                    "restAmount": "uint256"
                },
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "salePrice": "uint256",
                    "saleSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "saleActive()": [
                926,
                141
            ],
            "saleEnd(uint256)": [
                1430,
                317
            ],
            "exOwner(address)": [
                973,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2238": [
                "tokenReward.transfer(beneficiary, weiRest)",
                "tokenReward.transfer(beneficiary, weiRest)"
            ],
            "block520": [
                "beneficiary.transfer(msg.value)"
            ],
            "block500_0": [
                "tokenReward.transfer(msg.sender, amountSend)"
            ],
            "block500": [
                "tokenReward.transfer(msg.sender, amountSend)"
            ],
            "jump520": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "jump520_0": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "jump500": [
                "tokenReward.transfer(msg.sender, amountSend)",
                "tokenReward.transfer(msg.sender, amountSend)"
            ],
            "block2238": [
                "tokenReward.transfer(beneficiary, weiRest)"
            ],
            "block520_0": [
                "beneficiary.transfer(msg.value)"
            ],
            "jump500_0": [
                "tokenReward.transfer(msg.sender, amountSend)",
                "tokenReward.transfer(msg.sender, amountSend)"
            ]
        }
    }
}