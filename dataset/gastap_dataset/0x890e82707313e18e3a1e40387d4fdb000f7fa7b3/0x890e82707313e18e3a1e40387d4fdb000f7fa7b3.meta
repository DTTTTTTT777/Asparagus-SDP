{
    "token": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "burn()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {}
            },
            "burn()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "burn()": [
                208,
                97
            ],
            "transferFrom(address,address,uint256)": [
                78,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "Assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "Assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "Assert(bool)",
            "Crowdsale()",
            "fallback()",
            "invest()",
            "checkGoalReached()",
            "allowInvest(address,address)",
            "sendToBeneficiary()",
            "safeWithdrawal()",
            "kill()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "Assert(bool)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "invest()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "allowInvest(address,address)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "sendToBeneficiary()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "safeWithdrawal()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "tokenPrice": "uint256",
                    "tokensSold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "checkGoalReached()": [
                273,
                75
            ],
            "allowInvest(address,address)": [
                296,
                97
            ],
            "kill()": [
                482,
                141
            ],
            "safeWithdrawal()": [
                1302,
                471
            ],
            "invest()": [
                1075,
                383
            ]
        },
        "block_CALL_mapping": {
            "jump3333": [
                "tokenReward.burn()",
                "tokenReward.burn()"
            ],
            "jump2003": [
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)",
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)"
            ],
            "block2679_1": [
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))"
            ],
            "block2679_0": [
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))"
            ],
            "block2003": [
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)"
            ],
            "jump5186": [
                "beneficiary.transfer(this.balance)",
                "beneficiary.transfer(this.balance)"
            ],
            "block2679": [
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))"
            ],
            "block2003_0": [
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)"
            ],
            "block2003_1": [
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)"
            ],
            "block5186": [
                "beneficiary.transfer(this.balance)"
            ],
            "jump2679_0": [
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))",
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))"
            ],
            "jump2679_1": [
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))",
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))"
            ],
            "jump2003_0": [
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)",
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)"
            ],
            "jump2003_1": [
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)",
                "tokenReward.transferFrom(initialTokensHolder, msg.sender, numTokens)"
            ],
            "jump2679": [
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))",
                "tokenReward.transferFrom(initialTokensHolder, permittedInvestors[msg.sender], safeAdd(commission, maxGoal))"
            ],
            "block4940": [
                "msg.sender.transfer(amount)"
            ],
            "jump4940": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block3333": [
                "tokenReward.burn()"
            ]
        }
    }
}