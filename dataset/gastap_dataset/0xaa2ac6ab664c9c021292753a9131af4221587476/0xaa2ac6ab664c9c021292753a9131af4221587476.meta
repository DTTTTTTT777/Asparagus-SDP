{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "weiRaised": "uint256",
                    "rate": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "weiRaised": "uint256",
                    "rate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "weiRaised": "uint256",
                    "rate": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "weiRaised": "uint256",
                    "rate": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "weiRaised": "uint256",
                    "rate": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "weiRaised": "uint256",
                    "rate": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "weiRaised": "uint256",
                    "rate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                466,
                207
            ],
            "buyTokens(address)": [
                412,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump909_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump909_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334": [
                "wallet.transfer(msg.value)"
            ],
            "jump1334_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1334_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block909": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1334": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump909": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1334_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                574,
                251
            ],
            "buyTokens(address)": [
                520,
                229
            ]
        },
        "block_CALL_mapping": {
            "block1034_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1034_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2091_1": [
                "wallet.transfer(msg.value)"
            ],
            "block2091_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1607": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1607_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1034_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1034_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block2091": [
                "wallet.transfer(msg.value)"
            ],
            "block1607_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump2091_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2091_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1034": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1607_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1607": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1607_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2091": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1034": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ]
        }
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump2095": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "block2095": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                326,
                141
            ],
            "hasEnded()": [
                710,
                295
            ],
            "buyTokens(address)": [
                656,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2472_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2472_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1170_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2472_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2472_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1743_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1743": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1743_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1170_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2472": [
                "wallet.transfer(msg.value)"
            ],
            "jump1743_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2472": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "RefundableCrowdsale": {
        "function_list": [
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "finalize()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                790,
                317
            ],
            "finalize()": [
                413,
                163
            ],
            "hasEnded()": [
                867,
                361
            ],
            "buyTokens(address)": [
                813,
                339
            ],
            "goalReached()": [
                609,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3563": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block1987": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3400": [
                "vault.close()",
                "vault.close()"
            ],
            "jump1987": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2765": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump1414": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1987_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3563": [
                "vault.enableRefunds()"
            ],
            "block3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3400": [
                "vault.close()"
            ],
            "block2765": [
                "vault.refund(msg.sender)"
            ],
            "block1987_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1414_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1414_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1414": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1987_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1987_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ]
        }
    },
    "GlobCoinToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                426,
                119
            ],
            "increaseApproval(address,uint256)": [
                1420,
                361
            ],
            "mint(address,uint256)": [
                752,
                207
            ],
            "finishMinting()": [
                1041,
                273
            ],
            "balanceOf(address)": [
                954,
                251
            ],
            "decreaseApproval(address,uint256)": [
                853,
                229
            ],
            "transferFrom(address,address,uint256)": [
                570,
                163
            ],
            "transferOwnership(address)": [
                1640,
                405
            ],
            "allowance(address,address)": [
                1521,
                383
            ],
            "transfer(address,uint256)": [
                1319,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "GlobCoinTokenSale": {
        "function_list": [
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "GlobCoinTokenSale(uint256,uint256,uint256,uint256,uint256,uint256,address)",
            "createTokenContract()",
            "whitelistAddresses(address[])",
            "unwhitelistAddress(address)",
            "whitelistAddressesPresale(address[])",
            "unwhitelistAddressPresale(address)",
            "isWhitelisted(address)",
            "isWhitelistedPresale(address)",
            "fallback()",
            "buyTokens(address)",
            "buyTokensPresale(address)",
            "calculateTokenAmount(uint256)",
            "calculateAmountPerTier(uint256,uint256,uint256,uint256)",
            "finalization()",
            "validPurchase()",
            "validPurchasePresale()",
            "goalReached()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "GlobCoinTokenSale(uint256,uint256,uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_startSale": "uint256",
                    "_endBlock": "uint256",
                    "_goal": "uint256",
                    "_presaleCap": "uint256",
                    "_cap": "uint256"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "whitelistAddresses(address[])": {
                "argument": {
                    "_users": "address[]"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "unwhitelistAddress(address)": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "whitelistAddressesPresale(address[])": {
                "argument": {
                    "_users": "address[]"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "unwhitelistAddressPresale(address)": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "isWhitelisted(address)": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "isWhitelistedPresale(address)": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "buyTokensPresale(address)": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "calculateTokenAmount(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "calculateAmountPerTier(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "amountToBuy": "uint256",
                    "tier": "uint256",
                    "rate": "uint256",
                    "currentWeiRaised": "uint256"
                },
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "validPurchasePresale()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startSale": "uint256",
                    "PRESALERATE": "uint256",
                    "RATE1": "uint256",
                    "RATE2": "uint256",
                    "RATE3": "uint256",
                    "RATE4": "uint256",
                    "TIER1": "uint256",
                    "TIER2": "uint256",
                    "TIER3": "uint256",
                    "weiRaisedPreSale": "uint256",
                    "presaleCap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                2258,
                757
            ],
            "unwhitelistAddressPresale(address)": [
                2094,
                691
            ],
            "whitelistAddresses(address[])": [
                575,
                119
            ],
            "claimRefund()": [
                1792,
                581
            ],
            "unwhitelistAddress(address)": [
                1623,
                537
            ],
            "isWhitelistedPresale(address)": [
                1049,
                317
            ],
            "goalReached()": [
                1442,
                471
            ],
            "buyTokensPresale(address)": [
                1906,
                625
            ],
            "isWhitelisted(address)": [
                763,
                185
            ],
            "whitelistAddressesPresale(address[])": [
                1690,
                559
            ],
            "finalize()": [
                1026,
                295
            ],
            "buyTokens(address)": [
                2204,
                735
            ],
            "transferOwnership(address)": [
                2348,
                801
            ]
        },
        "block_CALL_mapping": {
            "block3006": [
                "token.mint(beneficiary, tokens)"
            ],
            "block7314": [
                "token.mint(wallet, totalSupply)"
            ],
            "jump6248_3": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump6248_2": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump6248_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump6248_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3521_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump7909": [
                "vault.close()",
                "vault.close()"
            ],
            "block3521_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block8072": [
                "vault.enableRefunds()"
            ],
            "jump6248": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7909": [
                "vault.close()"
            ],
            "jump5227": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block5227": [
                "vault.refund(msg.sender)"
            ],
            "jump7314": [
                "token.mint(wallet, totalSupply)",
                "token.mint(wallet, totalSupply)"
            ],
            "block6248_3": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6248_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6248_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6248": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6248_2": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6248_4": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3006_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump3006_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump6248_4": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7023": [
                "token.totalSupply()"
            ],
            "jump3006": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3521": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump7507": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump3521": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3006_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block3006_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block7507": [
                "token.finishMinting()"
            ],
            "jump8072": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7023": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump3521_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump3521_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ]
        }
    }
}