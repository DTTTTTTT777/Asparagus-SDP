{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                466,
                207
            ],
            "buyTokens(address)": [
                412,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump909_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump909_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump909": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1339_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1339_0": [
                "wallet.transfer(msg.value)"
            ],
            "block909": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1339": [
                "wallet.transfer(msg.value)"
            ],
            "block909_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1339_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1339_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block909_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1339": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                717,
                273
            ],
            "buyTokens(address)": [
                663,
                251
            ]
        },
        "block_CALL_mapping": {
            "block1629": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block2143_1": [
                "token.mint(reserve, reserveAmount)"
            ],
            "block2143_0": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1886_0": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump1886_1": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "block1886": [
                "token.mint(team, teamAmount)"
            ],
            "jump2648": [
                "token.mint(_to, mintAmount)",
                "token.mint(_to, mintAmount)"
            ],
            "jump2143": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1372": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1886_0": [
                "token.mint(team, teamAmount)"
            ],
            "block1886_1": [
                "token.mint(team, teamAmount)"
            ],
            "block3343_0": [
                "wallet.transfer(msg.value)"
            ],
            "block3343_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump3343_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3343_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2143": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump3343": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1629_1": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block1629_0": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block3343": [
                "wallet.transfer(msg.value)"
            ],
            "jump1372_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1372_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1886": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump2143_1": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump2143_0": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "block1372_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1372_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629_1": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "jump1629_0": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "block2648": [
                "token.mint(_to, mintAmount)"
            ],
            "block1372": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ]
        }
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                326,
                141
            ],
            "hasEnded()": [
                710,
                295
            ],
            "buyTokens(address)": [
                656,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2472_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2472_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1170_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2472_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2472_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1743_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1743": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1743_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1170_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2472": [
                "wallet.transfer(msg.value)"
            ],
            "jump1743_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2472": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block1967": [
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "jump1967": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "RefundableCrowdsale": {
        "function_list": [
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "finalize()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                790,
                317
            ],
            "finalize()": [
                413,
                163
            ],
            "hasEnded()": [
                867,
                361
            ],
            "buyTokens(address)": [
                813,
                339
            ],
            "goalReached()": [
                609,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3563": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block1987": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3400": [
                "vault.close()",
                "vault.close()"
            ],
            "jump1987": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2765": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump1414": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1987_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3563": [
                "vault.enableRefunds()"
            ],
            "block3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3400": [
                "vault.close()"
            ],
            "block2765": [
                "vault.refund(msg.sender)"
            ],
            "block1987_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1414_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1414_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1414": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1987_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1987_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ]
        }
    },
    "DemeterCrowdsale": {
        "function_list": [
            "PartialOwnershipCrowdsale(uint256)",
            "buyTokens(address)",
            "BonusReferrerCrowdsale(uint256)",
            "buyTokens(address)",
            "BonusWhiteListCrowdsale(uint256)",
            "buyTokens(address)",
            "WhiteListCrowdsale(uint256)",
            "addToWhiteList(address)",
            "buyTokens(address)",
            "validWhiteListedPurchase(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "ReferedCrowdsale()",
            "addToReferrals(address,address)",
            "validWhiteListedPurchase(address)",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "DemeterCrowdsale(uint256,uint256,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256)",
            "createTokenContract()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "PartialOwnershipCrowdsale(uint256)": {
                "argument": {
                    "_percentToInvestor": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "BonusReferrerCrowdsale(uint256)": {
                "argument": {
                    "_bonusReferredRate": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "BonusWhiteListCrowdsale(uint256)": {
                "argument": {
                    "_bonusWhiteListRate": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "WhiteListCrowdsale(uint256)": {
                "argument": {
                    "_whiteListEndBlock": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "addToWhiteList(address)": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "validWhiteListedPurchase(address)": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "ReferedCrowdsale()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "addToReferrals(address,address)": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "DemeterCrowdsale(uint256,uint256,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256",
                    "_cap": "uint256",
                    "_goal": "uint256",
                    "_whiteListEndBlock": "uint256",
                    "_bonusWhiteListRate": "uint256",
                    "_bonusReferredRate": "uint256",
                    "_percentToInvestor": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "addToWhiteList(address)": [
                599,
                207
            ],
            "claimRefund()": [
                1043,
                383
            ],
            "finalize()": [
                709,
                251
            ],
            "hasEnded()": [
                1120,
                427
            ],
            "buyTokens(address)": [
                1066,
                405
            ],
            "goalReached()": [
                862,
                317
            ],
            "addToReferrals(address,address)": [
                328,
                97
            ],
            "transferOwnership(address)": [
                1167,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump4974": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)",
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "block4974_0": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "block4974": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "jump7040_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3791": [
                "vault.refund(msg.sender)"
            ],
            "block6182": [
                "token.mint(beneficiary, bonusTokens)"
            ],
            "block4974_1": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "block2009_0": [
                "token.mint(wallet, companyTokens)"
            ],
            "block2009_1": [
                "token.mint(wallet, companyTokens)"
            ],
            "jump4623": [
                "token.mint(beneficiary, bonusReferredTokens)",
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "block7594": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4623_0": [
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "block4623_1": [
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "block2009": [
                "token.mint(wallet, companyTokens)"
            ],
            "block6182_0": [
                "token.mint(beneficiary, bonusTokens)"
            ],
            "jump6182": [
                "token.mint(beneficiary, bonusTokens)",
                "token.mint(beneficiary, bonusTokens)"
            ],
            "jump7594_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7040_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump7040_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block5767": [
                "vault.enableRefunds()"
            ],
            "jump6490": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump4974_1": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)",
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "jump4974_0": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)",
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "jump7594_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4623": [
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "jump7594": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7594_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6490": [
                "token.finishMinting()"
            ],
            "jump2009_0": [
                "token.mint(wallet, companyTokens)",
                "token.mint(wallet, companyTokens)"
            ],
            "jump2009_1": [
                "token.mint(wallet, companyTokens)",
                "token.mint(wallet, companyTokens)"
            ],
            "block7594_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump2009": [
                "token.mint(wallet, companyTokens)",
                "token.mint(wallet, companyTokens)"
            ],
            "block7040": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump4623_0": [
                "token.mint(beneficiary, bonusReferredTokens)",
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "jump4623_1": [
                "token.mint(beneficiary, bonusReferredTokens)",
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "jump5604": [
                "vault.close()",
                "vault.close()"
            ],
            "jump3791": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block7040_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block6182_1": [
                "token.mint(beneficiary, bonusTokens)"
            ],
            "block5604": [
                "vault.close()"
            ],
            "jump5767": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7040": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump6182_0": [
                "token.mint(beneficiary, bonusTokens)",
                "token.mint(beneficiary, bonusTokens)"
            ],
            "jump6182_1": [
                "token.mint(beneficiary, bonusTokens)",
                "token.mint(beneficiary, bonusTokens)"
            ]
        }
    },
    "DemeterCrowdsaleInstance": {
        "function_list": [
            "DemeterCrowdsale(uint256,uint256,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256)",
            "createTokenContract()",
            "PartialOwnershipCrowdsale(uint256)",
            "buyTokens(address)",
            "BonusReferrerCrowdsale(uint256)",
            "buyTokens(address)",
            "BonusWhiteListCrowdsale(uint256)",
            "buyTokens(address)",
            "WhiteListCrowdsale(uint256)",
            "addToWhiteList(address)",
            "buyTokens(address)",
            "validWhiteListedPurchase(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "ReferedCrowdsale()",
            "addToReferrals(address,address)",
            "validWhiteListedPurchase(address)",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "DemeterCrowdsaleInstance()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "DemeterCrowdsale(uint256,uint256,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256",
                    "_cap": "uint256",
                    "_goal": "uint256",
                    "_whiteListEndBlock": "uint256",
                    "_bonusWhiteListRate": "uint256",
                    "_bonusReferredRate": "uint256",
                    "_percentToInvestor": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "PartialOwnershipCrowdsale(uint256)": {
                "argument": {
                    "_percentToInvestor": "uint256"
                },
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "BonusReferrerCrowdsale(uint256)": {
                "argument": {
                    "_bonusReferredRate": "uint256"
                },
                "contract": {}
            },
            "BonusWhiteListCrowdsale(uint256)": {
                "argument": {
                    "_bonusWhiteListRate": "uint256"
                },
                "contract": {}
            },
            "WhiteListCrowdsale(uint256)": {
                "argument": {
                    "_whiteListEndBlock": "uint256"
                },
                "contract": {}
            },
            "addToWhiteList(address)": {
                "argument": {},
                "contract": {}
            },
            "validWhiteListedPurchase(address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "ReferedCrowdsale()": {
                "argument": {},
                "contract": {}
            },
            "addToReferrals(address,address)": {
                "argument": {},
                "contract": {}
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {}
            },
            "claimRefund()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            },
            "goalReached()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {}
            },
            "DemeterCrowdsaleInstance()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "addToWhiteList(address)": [
                599,
                207
            ],
            "claimRefund()": [
                1043,
                383
            ],
            "finalize()": [
                709,
                251
            ],
            "hasEnded()": [
                1120,
                427
            ],
            "buyTokens(address)": [
                1066,
                405
            ],
            "goalReached()": [
                862,
                317
            ],
            "addToReferrals(address,address)": [
                328,
                97
            ],
            "transferOwnership(address)": [
                1167,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump4974": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)",
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "block4974_0": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "block4974": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "jump7040_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3791": [
                "vault.refund(msg.sender)"
            ],
            "block6182": [
                "token.mint(beneficiary, bonusTokens)"
            ],
            "block4974_1": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "block2009_0": [
                "token.mint(wallet, companyTokens)"
            ],
            "block2009_1": [
                "token.mint(wallet, companyTokens)"
            ],
            "jump4623": [
                "token.mint(beneficiary, bonusReferredTokens)",
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "block7594": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4623_0": [
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "block4623_1": [
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "block2009": [
                "token.mint(wallet, companyTokens)"
            ],
            "block6182_0": [
                "token.mint(beneficiary, bonusTokens)"
            ],
            "jump6182": [
                "token.mint(beneficiary, bonusTokens)",
                "token.mint(beneficiary, bonusTokens)"
            ],
            "jump7594_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7040_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump7040_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block5767": [
                "vault.enableRefunds()"
            ],
            "jump6490": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump4974_1": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)",
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "jump4974_0": [
                "token.mint(referrals[beneficiary], bonusReferrerTokens)",
                "token.mint(referrals[beneficiary], bonusReferrerTokens)"
            ],
            "jump7594_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4623": [
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "jump7594": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7594_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6490": [
                "token.finishMinting()"
            ],
            "jump2009_0": [
                "token.mint(wallet, companyTokens)",
                "token.mint(wallet, companyTokens)"
            ],
            "jump2009_1": [
                "token.mint(wallet, companyTokens)",
                "token.mint(wallet, companyTokens)"
            ],
            "block7594_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump2009": [
                "token.mint(wallet, companyTokens)",
                "token.mint(wallet, companyTokens)"
            ],
            "block7040": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump4623_0": [
                "token.mint(beneficiary, bonusReferredTokens)",
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "jump4623_1": [
                "token.mint(beneficiary, bonusReferredTokens)",
                "token.mint(beneficiary, bonusReferredTokens)"
            ],
            "jump5604": [
                "vault.close()",
                "vault.close()"
            ],
            "jump3791": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block7040_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block6182_1": [
                "token.mint(beneficiary, bonusTokens)"
            ],
            "block5604": [
                "vault.close()"
            ],
            "jump5767": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7040": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump6182_0": [
                "token.mint(beneficiary, bonusTokens)",
                "token.mint(beneficiary, bonusTokens)"
            ],
            "jump6182_1": [
                "token.mint(beneficiary, bonusTokens)",
                "token.mint(beneficiary, bonusTokens)"
            ]
        }
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                227,
                97
            ],
            "mint(address,uint256)": [
                504,
                163
            ],
            "balanceOf(address)": [
                605,
                185
            ],
            "finishMinting()": [
                692,
                207
            ],
            "allowance(address,address)": [
                927,
                273
            ],
            "transferFrom(address,address,uint256)": [
                371,
                141
            ],
            "transfer(address,uint256)": [
                826,
                251
            ],
            "transferOwnership(address)": [
                1046,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "DemeterToken": {
        "function_list": [
            "setEndBlock(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setEndBlock(uint256)": {
                "argument": {
                    "_endBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                415,
                119
            ],
            "mint(address,uint256)": [
                735,
                207
            ],
            "finishMinting()": [
                923,
                251
            ],
            "balanceOf(address)": [
                836,
                229
            ],
            "setEndBlock(uint256)": [
                1302,
                339
            ],
            "transferFrom(address,address,uint256)": [
                559,
                163
            ],
            "transferOwnership(address)": [
                1466,
                383
            ],
            "allowance(address,address)": [
                1347,
                361
            ],
            "transfer(address,uint256)": [
                1201,
                317
            ]
        },
        "block_CALL_mapping": {}
    }
}