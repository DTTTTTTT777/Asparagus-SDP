{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "burn(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "burn(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "allowance(address,address)": [
                1286,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "ERC223": {
        "function_list": [
            "balanceOf(address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256,bytes,string)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "value": "uint256",
                    "data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256,bytes,string)": {
                "argument": {
                    "value": "uint256",
                    "data": "bytes",
                    "custom_fallback": "string"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "symbol()": [
                1192,
                273
            ],
            "name()": [
                202,
                75
            ],
            "totalSupply()": [
                538,
                141
            ],
            "balanceOf(address)": [
                1105,
                251
            ],
            "transfer(address,uint256,bytes)": [
                1437,
                317
            ],
            "transferFrom(address,address,uint256)": [
                581,
                163
            ],
            "transfer(address,uint256)": [
                1336,
                295
            ],
            "decimals()": [
                714,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump4657": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)",
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "block4657": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "block4657_1": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "block4657_0": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "jump4657_1": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)",
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ],
            "jump4657_0": [
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)",
                "ContractReceiver(to).tokenFallback(msg.sender, value, data)"
            ]
        }
    },
    "Swap": {
        "function_list": [
            "Swap()",
            "mul(uint256,uint256)",
            "fallback()",
            "makeSwapInternal()",
            "makeSwap(address,uint256,bytes32)",
            "pauseSwap()",
            "resumeSwap()",
            "updateOldToken(address)",
            "updateNewToken(address,address)",
            "updateEthRate(uint256)",
            "updateTokenRate(uint256)",
            "flushEthers()",
            "flushTokens()",
            "addAuthorized(address)",
            "removeAuthorized(address)"
        ],
        "initial_state": {
            "Swap()": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "makeSwapInternal()": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "makeSwap(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_hash": "bytes32"
                },
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "pauseSwap()": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "resumeSwap()": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "updateOldToken(address)": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "updateNewToken(address,address)": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "updateEthRate(uint256)": {
                "argument": {
                    "_rate": "uint256"
                },
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "updateTokenRate(uint256)": {
                "argument": {
                    "_rate": "uint256"
                },
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "flushEthers()": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "flushTokens()": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "addAuthorized(address)": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            },
            "removeAuthorized(address)": {
                "argument": {},
                "contract": {
                    "Etherrate": "uint256",
                    "Tokenrate": "uint256",
                    "lastBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "updateTokenRate(uint256)": [
                555,
                229
            ],
            "resumeSwap()": [
                690,
                295
            ],
            "pauseSwap()": [
                667,
                273
            ],
            "addAuthorized(address)": [
                600,
                251
            ],
            "updateNewToken(address,address)": [
                713,
                317
            ],
            "updateEthRate(uint256)": [
                377,
                141
            ],
            "updateOldToken(address)": [
                310,
                119
            ],
            "flushEthers()": [
                196,
                75
            ],
            "flushTokens()": [
                532,
                207
            ],
            "makeSwap(address,uint256,bytes32)": [
                219,
                97
            ],
            "removeAuthorized(address)": [
                422,
                163
            ]
        },
        "block_CALL_mapping": {
            "block2640": [
                "newTok.transferFrom( tokenSpender , _address , gpxtosend )"
            ],
            "block1675": [
                "collectorAddress.send( this.balance )"
            ],
            "jump1360_0": [
                "collectorAddress.send( _value )",
                "collectorAddress.send( _value )"
            ],
            "jump1360": [
                "collectorAddress.send( _value )",
                "collectorAddress.send( _value )"
            ],
            "jump1290_0": [
                "newTok.transferFrom( tokenSpender , _address , etherstosend )",
                "newTok.transferFrom( tokenSpender , _address , etherstosend )"
            ],
            "jump1290": [
                "newTok.transferFrom( tokenSpender , _address , etherstosend )",
                "newTok.transferFrom( tokenSpender , _address , etherstosend )"
            ],
            "jump3717": [
                "oldTok.balanceOf(this)",
                "oldTok.balanceOf(this)"
            ],
            "block3717": [
                "oldTok.balanceOf(this)"
            ],
            "jump1675": [
                "collectorAddress.send( this.balance )",
                "collectorAddress.send( this.balance )"
            ],
            "block1290_0": [
                "newTok.transferFrom( tokenSpender , _address , etherstosend )"
            ],
            "block1360": [
                "collectorAddress.send( _value )"
            ],
            "jump3909": [
                "oldTok.transfer(collectorTokens , oldTok.balanceOf(this) )",
                "oldTok.transfer(collectorTokens , oldTok.balanceOf(this) )"
            ],
            "block3909": [
                "oldTok.transfer(collectorTokens , oldTok.balanceOf(this) )"
            ],
            "jump2640": [
                "newTok.transferFrom( tokenSpender , _address , gpxtosend )",
                "newTok.transferFrom( tokenSpender , _address , gpxtosend )"
            ],
            "block1290": [
                "newTok.transferFrom( tokenSpender , _address , etherstosend )"
            ],
            "block1360_0": [
                "collectorAddress.send( _value )"
            ]
        }
    }
}