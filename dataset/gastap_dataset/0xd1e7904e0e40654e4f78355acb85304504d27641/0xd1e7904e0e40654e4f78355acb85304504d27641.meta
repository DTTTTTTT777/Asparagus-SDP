{
    "Ownable": {
        "function_list": [
            "checkOwner()"
        ],
        "initial_state": {
            "checkOwner()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "OwnableImpl": {
        "function_list": [
            "checkOwner()",
            "OwnableImpl()",
            "checkOwner()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "checkOwner()": {
                "argument": {},
                "contract": {}
            },
            "OwnableImpl()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "allowance(address,address)",
            "mint(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "Sale": {
        "function_list": [
            "getRate(address)",
            "getBonus(uint256)"
        ],
        "initial_state": {
            "getRate(address)": {
                "argument": {},
                "contract": {}
            },
            "getBonus(uint256)": {
                "argument": {
                    "sold": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "getRate(address)": [
                396,
                119
            ]
        },
        "block_CALL_mapping": {
            "block3256": [
                "_to.transfer(_amount)"
            ],
            "block4812_1": [
                "token.transfer(buyer, amount)"
            ],
            "jump3256": [
                "_to.transfer(_amount)",
                "_to.transfer(_amount)"
            ],
            "block4812": [
                "token.transfer(buyer, amount)"
            ],
            "jump4812": [
                "token.transfer(buyer, amount)",
                "token.transfer(buyer, amount)"
            ],
            "block2521": [
                "ExternalToken(_token).burn(_amount, _data)"
            ],
            "jump4812_2": [
                "token.transfer(buyer, amount)",
                "token.transfer(buyer, amount)"
            ],
            "jump4812_0": [
                "token.transfer(buyer, amount)",
                "token.transfer(buyer, amount)"
            ],
            "jump4812_1": [
                "token.transfer(buyer, amount)",
                "token.transfer(buyer, amount)"
            ],
            "block3494": [
                "ERC20(_token).transfer(_to, _amount)"
            ],
            "jump2521": [
                "ExternalToken(_token).burn(_amount, _data)",
                "ExternalToken(_token).burn(_amount, _data)"
            ],
            "block4812_0": [
                "token.transfer(buyer, amount)"
            ],
            "jump3494": [
                "ERC20(_token).transfer(_to, _amount)",
                "ERC20(_token).transfer(_to, _amount)"
            ],
            "block4812_2": [
                "token.transfer(buyer, amount)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "EthBtcSale": {
        "function_list": [
            "CappedSale(uint256)",
            "checkPurchaseValid(address,uint256,uint256)",
            "onPurchase(address,address,uint256,uint256,uint256)",
            "onReceive(address,address,uint256,bytes)",
            "getSold(address,uint256)",
            "getBonus(uint256)",
            "getRate(address)",
            "doPurchase(address,uint256,uint256)",
            "checkPurchaseValid(address,uint256,uint256)",
            "onPurchase(address,address,uint256,uint256,uint256)",
            "toBytes20(bytes,uint256)",
            "withdraw(address,address,uint256)",
            "verifyCanWithdraw(address,address,uint256)",
            "burnWithData(address,uint256,bytes)",
            "checkOwner()",
            "fallback()",
            "receiveEtherAndData(bytes)",
            "onReceive(address,address,uint256,bytes)",
            "tokenFallback(address,uint256,bytes)",
            "onTokenTransfer(address,uint256,bytes)",
            "onTokenTransfer(address,uint256,bytes)",
            "receive(address,uint256,bytes)",
            "getRate(address)",
            "getBonus(uint256)",
            "OwnableImpl()",
            "checkOwner()",
            "transferOwnership(address)",
            "MintingSale(address)",
            "doPurchase(address,uint256,uint256)",
            "verifyCanWithdraw(address,address,uint256)",
            "EthBtcSale(address,address,uint256,uint256,uint256)",
            "getBonus(uint256)",
            "getTimeBonus(uint256)",
            "getAmountBonus(uint256)",
            "checkPurchaseValid(address,uint256,uint256)",
            "getRate(address)",
            "setCustomBonus(uint256)",
            "withdrawEth(address,uint256)",
            "withdrawBtc(bytes,uint256)",
            "transferTokenOwnership(address)"
        ],
        "initial_state": {
            "CappedSale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "checkPurchaseValid(address,uint256,uint256)": {
                "argument": {
                    "sold": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "onPurchase(address,address,uint256,uint256,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "onReceive(address,address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "getSold(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "getBonus(uint256)": {
                "argument": {
                    "sold": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "getRate(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "doPurchase(address,uint256,uint256)": {
                "argument": {
                    "sold": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "toBytes20(bytes,uint256)": {
                "argument": {
                    "b": "bytes",
                    "_start": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "withdraw(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "verifyCanWithdraw(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "burnWithData(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "checkOwner()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "receiveEtherAndData(bytes)": {
                "argument": {
                    "_data": "bytes"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "onTokenTransfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "receive(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "OwnableImpl()": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "MintingSale(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "EthBtcSale(address,address,uint256,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_cap": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "getTimeBonus(uint256)": {
                "argument": {
                    "sold": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "getAmountBonus(uint256)": {
                "argument": {
                    "sold": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "setCustomBonus(uint256)": {
                "argument": {
                    "_customBonus": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "withdrawEth(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "withdrawBtc(bytes,uint256)": {
                "argument": {
                    "_to": "bytes",
                    "_value": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "end": "uint256",
                    "customBonus": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "burnWithData(address,uint256,bytes)": [
                1151,
                295
            ],
            "getRate(address)": [
                902,
                229
            ],
            "tokenFallback(address,uint256,bytes)": [
                1710,
                427
            ],
            "transferTokenOwnership(address)": [
                530,
                141
            ],
            "withdrawEth(address,uint256)": [
                410,
                97
            ],
            "setCustomBonus(uint256)": [
                1966,
                471
            ],
            "getSold(address,uint256)": [
                1054,
                273
            ],
            "receive(address,uint256,bytes)": [
                597,
                163
            ],
            "getBonus(uint256)": [
                989,
                251
            ],
            "onTokenTransfer(address,uint256,bytes)": [
                1385,
                339
            ],
            "transferOwnership(address)": [
                2054,
                515
            ],
            "withdrawBtc(bytes,uint256)": [
                744,
                185
            ],
            "receiveEtherAndData(bytes)": [
                1532,
                361
            ],
            "withdraw(address,address,uint256)": [
                1857,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump4165_0": [
                "Token(_token).transfer(_to, _value)",
                "Token(_token).transfer(_to, _value)"
            ],
            "jump5925": [
                "token.mint(buyer, sold.add(bonus))",
                "token.mint(buyer, sold.add(bonus))"
            ],
            "jump3465": [
                "ExternalToken(_token).burn(_value, _data)",
                "ExternalToken(_token).burn(_value, _data)"
            ],
            "block3927": [
                "_to.transfer(_value)"
            ],
            "jump2488": [
                "OwnableImpl(token).transferOwnership(newOwner)",
                "OwnableImpl(token).transferOwnership(newOwner)"
            ],
            "block3465_0": [
                "ExternalToken(_token).burn(_value, _data)"
            ],
            "block5925_0": [
                "token.mint(buyer, sold.add(bonus))"
            ],
            "block5925_1": [
                "token.mint(buyer, sold.add(bonus))"
            ],
            "jump3927_0": [
                "_to.transfer(_value)",
                "_to.transfer(_value)"
            ],
            "block5925_3": [
                "token.mint(buyer, sold.add(bonus))"
            ],
            "block5925_4": [
                "token.mint(buyer, sold.add(bonus))"
            ],
            "block2735": [
                "token.transferFrom(msg.sender, this, _value)"
            ],
            "block3465": [
                "ExternalToken(_token).burn(_value, _data)"
            ],
            "jump5925_4": [
                "token.mint(buyer, sold.add(bonus))",
                "token.mint(buyer, sold.add(bonus))"
            ],
            "jump5925_2": [
                "token.mint(buyer, sold.add(bonus))",
                "token.mint(buyer, sold.add(bonus))"
            ],
            "jump5925_3": [
                "token.mint(buyer, sold.add(bonus))",
                "token.mint(buyer, sold.add(bonus))"
            ],
            "jump5925_0": [
                "token.mint(buyer, sold.add(bonus))",
                "token.mint(buyer, sold.add(bonus))"
            ],
            "jump5925_1": [
                "token.mint(buyer, sold.add(bonus))",
                "token.mint(buyer, sold.add(bonus))"
            ],
            "block5925": [
                "token.mint(buyer, sold.add(bonus))"
            ],
            "block3927_0": [
                "_to.transfer(_value)"
            ],
            "block5925_2": [
                "token.mint(buyer, sold.add(bonus))"
            ],
            "jump2735": [
                "token.transferFrom(msg.sender, this, _value)",
                "token.transferFrom(msg.sender, this, _value)"
            ],
            "jump3927": [
                "_to.transfer(_value)",
                "_to.transfer(_value)"
            ],
            "block4165": [
                "Token(_token).transfer(_to, _value)"
            ],
            "jump4165": [
                "Token(_token).transfer(_to, _value)",
                "Token(_token).transfer(_to, _value)"
            ],
            "block2488": [
                "OwnableImpl(token).transferOwnership(newOwner)"
            ],
            "jump3465_0": [
                "ExternalToken(_token).burn(_value, _data)",
                "ExternalToken(_token).burn(_value, _data)"
            ],
            "block4165_0": [
                "Token(_token).transfer(_to, _value)"
            ]
        }
    }
}