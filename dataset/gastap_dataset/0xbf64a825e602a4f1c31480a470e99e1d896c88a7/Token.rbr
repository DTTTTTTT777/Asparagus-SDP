block0(g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	lt(s(1), s(0))
	call(block373(g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump0(s(1), s(0), g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	geq(s(1), s(0))
	call(block13(g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

jump13(s(2), s(1), s(0), g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2510(s(0),g(numberOfHolders), l(l3), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block13(g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 26855346
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2553(s(0),g(name), l(l5), l(l3), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block65(s(0), g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(decimals), g(symbol), g(name), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2697(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump76(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block87(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157664434
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2774(s(0),g(collectedNDAO), l(l3), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block98(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2817(s(0),g(totalSupply), l(l3), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(totalSupply), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block109(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 413514716
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2860(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump109(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

jump120(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2951(s(0),g(collectedUSD), l(l3), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block120(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2994(s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump131(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, from, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block142(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 655915409
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3103(s(0),g(presaleOwner), g(etherPrice), g(owner), calldatasize, caller, callvalue, etherPrice))

jump142(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, etherPrice, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

jump153(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3148(s(0),g(decimals), l(l3), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block153(s(0), g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(decimals), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3197(s(0),g(standard), l(l5), l(l3), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block164(s(0), g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(symbol), g(standard), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3341(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump175(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

jump186(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3460(s(0),g(state), g(owner), l(l3), l(l0), caller, callvalue))

jump186(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block186(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1775409202
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3483(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump197(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block197(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1851865724
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3574(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump208(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block219(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2172211816
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3661(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump219(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

jump230(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3770(s(0),g(neurodao), l(l3), l(l0), callvalue))

jump230(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block230(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2313023475
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3857(s(0),g(owner), l(l3), l(l0), callvalue))

jump241(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block252(s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3944(s(0),g(symbol), l(l5), l(l3), l(l1), l(l0), callvalue))

jump252(s(2), s(1), s(0), g(symbol), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block263(s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2626265354
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block4088(s(0),g(presaleOwner), l(l3), l(l0), callvalue))

jump263(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

jump274(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block4175(s(0),g(etherPrice), l(l3), l(l0), callvalue))

jump274(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block285(s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

block274(s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block4218(s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))

jump285(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block296(s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))

jump296(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block4285(s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump296(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block307(s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp))

block296(s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4362(s(0),g(state), g(presaleOwner), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, presaleOwner))

jump307(s(2), s(1), s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block318(s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))

block307(s(0), g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2877209550
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(state), g(collectedNDAO), g(presaleOwner), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, presaleOwner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4429(s(0),g(state), g(owner), l(l3), l(l0), caller, callvalue))

jump318(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block329(s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))

block318(s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3087850742
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3181079942
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4452(s(0),g(newOwner), g(owner), caller, callvalue))

jump329(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block340(s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))

jump340(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4475(s(0),g(state), l(l3), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block351(s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))

block340(s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4532(s(0),g(newOwner), l(l3), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block362(s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))

block351(s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3572374928
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(newOwner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4619(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump362(s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block373_0(s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

block362(s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump373(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block395(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump373(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block394(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block394(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block395(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 13
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump395(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block422(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump395(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block421(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block421(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block422(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump422(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump422(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block1072(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump422(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block429(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

block429(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = address
	nop(ADDRESS)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump429(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump429(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block506(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump429(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block502(s(5), s(4), s(3), s(2), s(1), s(0)))

block502(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block506(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 500000
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	call(jump506(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump506(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block525(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump506(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block521(s(5), s(4), s(3), s(2), s(1), s(0)))

block521(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump525(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(8), 0)
	call(block551(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump525(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(8), 0)
	call(block550(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block525(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = callvalue
	nop(CALLVALUE)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = 5
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump525(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block550(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block551(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 500000
	nop(PUSH3)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 9
	nop(PUSH1)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump551(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump551(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block682(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump551(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block570(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

block570(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	s(6) = 9
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(7) = 500000
	nop(PUSH3)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(etherPrice)
	nop(SLOAD)
	s(7) = 1000000000000000000
	nop(PUSH8)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump570(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump570(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(8), 0)
	call(block602(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump570(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(8), 0)
	call(block601(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block601(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block602(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = s(2)
	nop(DUP6)
	s(9) = callvalue
	nop(CALLVALUE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump602(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump602(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block667(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump602(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block663(s(5), s(4), s(3), s(2), s(1), s(0)))

block663(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block667(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 500000
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 699
	nop(PUSH2)
	call(block699(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block682(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(collectedUSD)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block699(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

block699(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 1506815999
	nop(PUSH4)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump699(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump699(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block721(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump699(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block713(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block713(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(6) = 50
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 772
	nop(PUSH2)
	call(block772(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block721(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 1507247999
	nop(PUSH4)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump721(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block743(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block735(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block735(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(6) = 50
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 771
	nop(PUSH2)
	call(block771(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

jump743(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block765(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump743(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block757(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block743(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 1507766399
	nop(PUSH4)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump743(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block757(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(6) = 65
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 770
	nop(PUSH2)
	call(block770_0(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block765(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 70
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	call(block770(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block770(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block771(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block771(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block772(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block772(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 100
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump772(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump772(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(8), 0)
	call(block786(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump772(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(8), 0)
	call(block785(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block785(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block786(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(0)
	s(0) = s(6)
	s(6) = s(7)
	nop(SWAP6)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(neurodao)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1889567281
	nop(PUSH4)
	s(9) = caller
	nop(CALLER)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 4
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 32
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump786(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump786(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block981(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))

jump786(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block977(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block977(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

jump981(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	eq(s(11), 0)
	call(block1001(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))

jump981(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	neq(s(11), 0)
	call(block992(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block981(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump981(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block992(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

jump1001(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	geq(s(10), s(9))
	call(block1023(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1001(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	lt(s(10), s(9))
	call(block1019(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1001(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump1001(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1019(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block1023(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l3)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump1023(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1023(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	lt(s(7), s(6))
	call(block1064(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1023(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	geq(s(7), s(6))
	call(block1048(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

block1048(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	s(6) = s(0)
	nop(DUP6)
	s(7) = 11
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(collectedNDAO)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedNDAO) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1064(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

block1064(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(6) = address
	nop(ADDRESS)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 1735
	nop(PUSH2)
	call(block1735(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

jump1072(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(8), s(7))
	call(block1085(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump1072(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(8), s(7))
	call(block1084(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1072(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1072(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1084(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1085(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 13
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1085(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1085(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(9), s(8))
	call(block1112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump1085(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(9), s(8))
	call(block1111(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1111(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump1112(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(7), s(6))
	call(block1734(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(7), s(6))
	call(block1119(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

block1119(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(jump1119(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1119(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(7), s(6))
	call(block1214(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump1119(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(7), s(6))
	call(block1210(s(5), s(4), s(3), s(2), s(1), s(0)))

block1210(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump1214(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(16), 0)
	call(block1491(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize))

jump1214(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(16), 0)
	call(block1487(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1214(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(neurodao)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 530965563
	nop(PUSH4)
	s(8) = caller
	nop(CALLER)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 4
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 32
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(6)
	nop(DUP8)
	s(15) = s(14)
	nop(DUP1)
	s(15) = extcodesize
	nop(EXTCODESIZE)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(16) = s(15)
	nop(DUP1)
	call(jump1214(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1487(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(16) = 0
	nop(PUSH1)
	s(17) = s(16)
	nop(DUP1)
	nop(REVERT)

block1491(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(15) = gas
	nop(GAS)
	s(9) = 1
	nop(CALL)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(9)
	nop(DUP1)
	call(jump1491(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1491(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize)=>
	eq(s(10), 0)
	call(block1511(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump1491(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize)=>
	neq(s(10), 0)
	call(block1502(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block1502(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	nop(REVERT)

jump1511(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	geq(s(9), s(8))
	call(block1533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1511(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	lt(s(9), s(8))
	call(block1529(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1511(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1511(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1529(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block1533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l3)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = s(5)
	nop(DUP2)
	call(jump1533(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block1697(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block1564(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

block1564(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(6) = 11
	nop(PUSH1)
	s(6) = g(collectedNDAO)
	nop(SLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 10
	nop(PUSH1)
	s(9) = 1250000
	nop(PUSH3)
	s(10) = 9
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump1564(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1564(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(10), 0)
	call(block1648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1564(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(10), 0)
	call(block1647(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1647(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump1648(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1648(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(8), 0)
	call(block1659(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1648(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(8), 0)
	call(block1658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1659(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 21000000
	nop(PUSH4)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 10
	nop(PUSH1)
	s(10) = 1250000
	nop(PUSH3)
	s(11) = s(9)
	nop(DUP2)
	call(jump1659(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1659(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(11), 0)
	call(block1681(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1659(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(11), 0)
	call(block1680(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1680(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1681(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump1681(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1681(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block1692(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1681(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block1691(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1691(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1692(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(0)
	s(0) = s(6)
	s(6) = s(7)
	nop(SWAP6)
	nop(POP)
	call(block1697(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

block1697(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	call(block1734(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block1734(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block1735(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1735(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block1750(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1735(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block1746(s(5), s(4), s(3), s(2), s(1), s(0)))

block1735(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(0)
	nop(DUP7)
	call(jump1735(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1746(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1750(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(0)
	nop(DUP7)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump1750(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1750(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block1892(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1750(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block1888(s(5), s(4), s(3), s(2), s(1), s(0)))

block1888(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump1892(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block1970(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1892(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block1966(s(5), s(4), s(3), s(2), s(1), s(0)))

block1892(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(0)
	nop(DUP6)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(1)
	nop(DUP8)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump1892(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1966(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1970(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = 6
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(jump1970(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1970(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block2247(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump1970(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block2061(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block2061(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = 6
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(numberOfHolders)
	nop(SLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	g(numberOfHolders) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block2247(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))

block2247(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(0)
	nop(DUP6)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(0)
	nop(DUP6)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(1)
	nop(DUP8)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(0)
	nop(DUP9)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

jump2510(s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2522(s(1), s(0),g(numberOfHolders), l(l3), l(l0)))

jump2510(s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2518(s(1), s(0)))

block2510(s(0), g(numberOfHolders), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2510(s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2518(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2522(s(1), s(0), g(numberOfHolders), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2531
	nop(PUSH2)
	s(2) = 4738
	nop(PUSH2)
	call(block4738(s(1),s(0),g(numberOfHolders), l(l3), l(l0)))
	nop(JUMP)

block2531(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2553(s(0), g(name), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2553(s(2),s(1),s(0),g(name), l(l5), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2553(s(2), s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2565(s(1), s(0),g(name), l(l5), l(l3), l(l1), l(l0)))

jump2553(s(2), s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2561(s(1), s(0)))

block2561(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2565(s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2574
	nop(PUSH2)
	s(2) = 4744
	nop(PUSH2)
	call(block4744(s(1),s(0),g(name), l(l5), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2574(s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2611(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block2611(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2611(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2611(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	geq(s(13), s(12))
	call(block2638(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2611(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	lt(s(13), s(12))
	call(block2620(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block2620(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l5)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2611
	nop(PUSH2)
	call(block2611(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump2638(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2683(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2638(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2658(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2638(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2638(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2658(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2683(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2683(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2697(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2697(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2697(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block2709(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value))

jump2697(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block2705(s(1), s(0)))

block2705(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2709(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2772
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4902
	nop(PUSH2)
	call(block4902(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2772(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2774(s(0), g(collectedNDAO), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2774(s(2),s(1),s(0),g(collectedNDAO), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2774(s(2), s(1), s(0), g(collectedNDAO), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2786(s(1), s(0),g(collectedNDAO), l(l3), l(l0)))

jump2774(s(2), s(1), s(0), g(collectedNDAO), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2782(s(1), s(0)))

block2782(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2786(s(1), s(0), g(collectedNDAO), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2795
	nop(PUSH2)
	s(2) = 5187
	nop(PUSH2)
	call(block5187(s(1),s(0),g(collectedNDAO), l(l3), l(l0)))
	nop(JUMP)

block2795(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2817(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2829(s(1), s(0),g(totalSupply), l(l3), l(l0)))

jump2817(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2825(s(1), s(0)))

block2817(s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2817(s(2),s(1),s(0),g(totalSupply), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2825(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2829(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2838
	nop(PUSH2)
	s(2) = 5193
	nop(PUSH2)
	call(block5193(s(1),s(0),g(totalSupply), l(l3), l(l0)))
	nop(JUMP)

block2838(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2860(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2872(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2860(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2868(s(1), s(0)))

block2860(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2860(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2868(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2872(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2925
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5199
	nop(PUSH2)
	call(block5199(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2925(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2951(s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2951(s(2),s(1),s(0),g(collectedUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2951(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2963(s(1), s(0),g(collectedUSD), l(l3), l(l0)))

jump2951(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2959(s(1), s(0)))

block2959(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2963(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2972
	nop(PUSH2)
	s(2) = 5231
	nop(PUSH2)
	call(block5231(s(1),s(0),g(collectedUSD), l(l3), l(l0)))
	nop(JUMP)

block2972(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2994(s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block3006(s(1), s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value))

jump2994(s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block3002(s(1), s(0)))

block2994(s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2994(s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3002(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3006(s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3101
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 5237
	nop(PUSH2)
	call(block5237(s(4),s(3),s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block3101(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3103(s(2), s(1), s(0), g(presaleOwner), g(etherPrice), g(owner), calldatasize, caller, callvalue, etherPrice)=>
	eq(s(2), 0)
	call(block3115(s(1), s(0),g(presaleOwner), g(etherPrice), g(owner), calldatasize, caller, etherPrice))

jump3103(s(2), s(1), s(0), g(presaleOwner), g(etherPrice), g(owner), calldatasize, caller, callvalue, etherPrice)=>
	neq(s(2), 0)
	call(block3111(s(1), s(0)))

block3103(s(0), g(presaleOwner), g(etherPrice), g(owner), calldatasize, caller, callvalue, etherPrice)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3103(s(2),s(1),s(0),g(presaleOwner), g(etherPrice), g(owner), calldatasize, caller, callvalue, etherPrice))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3111(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3115(s(1), s(0), g(presaleOwner), g(etherPrice), g(owner), calldatasize, caller, etherPrice)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3146
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = etherPrice
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6348
	nop(PUSH2)
	call(block6348(s(2),s(1),s(0),g(presaleOwner), g(etherPrice), g(owner), caller))
	nop(JUMP)

block3146(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3148(s(0), g(decimals), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3148(s(2),s(1),s(0),g(decimals), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3148(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3160(s(1), s(0),g(decimals), l(l3), l(l0)))

jump3148(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3156(s(1), s(0)))

block3156(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3160(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3169
	nop(PUSH2)
	s(2) = 6537
	nop(PUSH2)
	call(block6537(s(1),s(0),g(decimals), l(l3), l(l0)))
	nop(JUMP)

block3169(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3197(s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3209(s(1), s(0),g(standard), l(l5), l(l3), l(l1), l(l0)))

jump3197(s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3205(s(1), s(0)))

block3197(s(0), g(standard), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3197(s(2),s(1),s(0),g(standard), l(l5), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3205(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3209(s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3218
	nop(PUSH2)
	s(2) = 6556
	nop(PUSH2)
	call(block6556(s(1),s(0),g(standard), l(l5), l(l3), l(l1), l(l0)))
	nop(JUMP)

block3218(s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3255(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

jump3255(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	geq(s(13), s(12))
	call(block3282(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3255(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	lt(s(13), s(12))
	call(block3264(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block3255(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3255(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3264(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l5)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3255
	nop(PUSH2)
	call(block3255(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block3282(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3282(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3282(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block3327(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3282(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block3302(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3302(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3327(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3327(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3341(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3341(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3341(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3353(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3341(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3349(s(1), s(0)))

block3349(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3353(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3438
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 6714
	nop(PUSH2)
	call(block6714(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3438(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3460(s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block3472(s(1), s(0),g(state), g(owner), l(l3), l(l0), caller))

jump3460(s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block3468(s(1), s(0)))

block3460(s(0), g(state), g(owner), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3460(s(2),s(1),s(0),g(state), g(owner), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3468(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3472(s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3481
	nop(PUSH2)
	s(2) = 6751
	nop(PUSH2)
	call(block6751(s(1),s(0),g(state), g(owner), l(l3), l(l0), caller))
	nop(JUMP)

block3481(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3483(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3495(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3483(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3491(s(1), s(0)))

block3483(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3483(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3491(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3495(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3548
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7016
	nop(PUSH2)
	call(block7016(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3548(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3574(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3586(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3574(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3582(s(1), s(0)))

block3574(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3574(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3582(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3586(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3639
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7048
	nop(PUSH2)
	call(block7048(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3639(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3661(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3661(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3661(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3673(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3661(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3669(s(1), s(0)))

block3669(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3673(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3704
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7072
	nop(PUSH2)
	call(block7072(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3704(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3770(s(2), s(1), s(0), g(neurodao), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3782(s(1), s(0),g(neurodao), l(l3), l(l0)))

jump3770(s(2), s(1), s(0), g(neurodao), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3778(s(1), s(0)))

block3770(s(0), g(neurodao), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3770(s(2),s(1),s(0),g(neurodao), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3778(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3782(s(1), s(0), g(neurodao), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3791
	nop(PUSH2)
	s(2) = 7123
	nop(PUSH2)
	call(block7123(s(1),s(0),g(neurodao), l(l3), l(l0)))
	nop(JUMP)

block3791(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3857(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3869(s(1), s(0),g(owner), l(l3), l(l0)))

jump3857(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3865(s(1), s(0)))

block3857(s(0), g(owner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3857(s(2),s(1),s(0),g(owner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3865(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3869(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3878
	nop(PUSH2)
	s(2) = 7161
	nop(PUSH2)
	call(block7161(s(1),s(0),g(owner), l(l3), l(l0)))
	nop(JUMP)

block3878(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3944(s(0), g(symbol), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3944(s(2),s(1),s(0),g(symbol), l(l5), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3944(s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3956(s(1), s(0),g(symbol), l(l5), l(l3), l(l1), l(l0)))

jump3944(s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3952(s(1), s(0)))

block3952(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3956(s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3965
	nop(PUSH2)
	s(2) = 7198
	nop(PUSH2)
	call(block7198(s(1),s(0),g(symbol), l(l5), l(l3), l(l1), l(l0)))
	nop(JUMP)

block3965(s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block4002(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

jump4002(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	geq(s(13), s(12))
	call(block4029(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4002(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	lt(s(13), s(12))
	call(block4011(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block4002(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump4002(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4011(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l5)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 4002
	nop(PUSH2)
	call(block4002(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block4029(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump4029(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4029(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block4074(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4029(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block4049(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block4049(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block4074(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block4074(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4088(s(2), s(1), s(0), g(presaleOwner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4100(s(1), s(0),g(presaleOwner), l(l3), l(l0)))

jump4088(s(2), s(1), s(0), g(presaleOwner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4096(s(1), s(0)))

block4088(s(0), g(presaleOwner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4088(s(2),s(1),s(0),g(presaleOwner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4096(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4100(s(1), s(0), g(presaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4109
	nop(PUSH2)
	s(2) = 7356
	nop(PUSH2)
	call(block7356(s(1),s(0),g(presaleOwner), l(l3), l(l0)))
	nop(JUMP)

block4109(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4175(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4187(s(1), s(0),g(etherPrice), l(l3), l(l0)))

jump4175(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4183(s(1), s(0)))

block4175(s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4175(s(2),s(1),s(0),g(etherPrice), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4183(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4187(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4196
	nop(PUSH2)
	s(2) = 7394
	nop(PUSH2)
	call(block7394(s(1),s(0),g(etherPrice), l(l3), l(l0)))
	nop(JUMP)

block4196(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4218(s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4218(s(2),s(1),s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4218(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block4230(s(1), s(0),g(newOwner), g(owner), calldatasize, caller, owner))

jump4218(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block4226(s(1), s(0)))

block4226(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4230(s(1), s(0), g(newOwner), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4283
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7400
	nop(PUSH2)
	call(block7400(s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block4283(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4285(s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4297(s(1), s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value))

jump4285(s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4293(s(1), s(0)))

block4285(s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4285(s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4293(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4297(s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4360
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 7597
	nop(PUSH2)
	call(block7597(s(3),s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block4360(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4362(s(0), g(state), g(presaleOwner), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, presaleOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4362(s(2),s(1),s(0),g(state), g(presaleOwner), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, presaleOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4362(s(2), s(1), s(0), g(state), g(presaleOwner), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, presaleOwner)=>
	eq(s(2), 0)
	call(block4374(s(1), s(0),g(state), g(presaleOwner), g(owner), l(l3), l(l0), calldatasize, caller, presaleOwner))

jump4362(s(2), s(1), s(0), g(state), g(presaleOwner), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, presaleOwner)=>
	neq(s(2), 0)
	call(block4370(s(1), s(0)))

block4370(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4374(s(1), s(0), g(state), g(presaleOwner), g(owner), l(l3), l(l0), calldatasize, caller, presaleOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4427
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = presaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8430
	nop(PUSH2)
	call(block8430(s(2),s(1),s(0),g(state), g(presaleOwner), g(owner), l(l3), l(l0), caller))
	nop(JUMP)

block4427(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4429(s(0), g(state), g(owner), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4429(s(2),s(1),s(0),g(state), g(owner), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4429(s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block4441(s(1), s(0),g(state), g(owner), l(l3), l(l0), caller))

jump4429(s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block4437(s(1), s(0)))

block4437(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4441(s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4450
	nop(PUSH2)
	s(2) = 8761
	nop(PUSH2)
	call(block8761(s(1),s(0),g(state), g(owner), l(l3), l(l0), caller))
	nop(JUMP)

block4450(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4452(s(0), g(newOwner), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4452(s(2),s(1),s(0),g(newOwner), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4452(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4464(s(1), s(0),g(newOwner), g(owner), caller))

jump4452(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4460(s(1), s(0)))

block4460(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4464(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4473
	nop(PUSH2)
	s(2) = 9026
	nop(PUSH2)
	call(block9026(s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block4473(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4475(s(0), g(state), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4475(s(2),s(1),s(0),g(state), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4475(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4487(s(1), s(0),g(state), l(l3), l(l0)))

jump4475(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4483(s(1), s(0)))

block4483(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4487(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4496
	nop(PUSH2)
	s(2) = 9255
	nop(PUSH2)
	call(block9255(s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

jump4496(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block4512(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump4496(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block4511(s(5), s(4), s(3), s(2), s(1), s(0)))

block4496(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4496(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4511(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4512(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4532(s(2), s(1), s(0), g(newOwner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4544(s(1), s(0),g(newOwner), l(l3), l(l0)))

jump4532(s(2), s(1), s(0), g(newOwner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4540(s(1), s(0)))

block4532(s(0), g(newOwner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4532(s(2),s(1),s(0),g(newOwner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4540(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4544(s(1), s(0), g(newOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4553
	nop(PUSH2)
	s(2) = 9274
	nop(PUSH2)
	call(block9274(s(1),s(0),g(newOwner), l(l3), l(l0)))
	nop(JUMP)

block4553(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4619(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4619(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4619(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4631(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender))

jump4619(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4627(s(1), s(0)))

block4627(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4631(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4716
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 9312
	nop(PUSH2)
	call(block9312(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4716(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4738(s(1), s(0), g(numberOfHolders), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(numberOfHolders)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2531(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block4744(s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(name)
	s(7) = g(name)
	call(jump4744(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l5), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4744(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block4894(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump4744(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block4824(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l5), l(l3), l(l1), l(l0)))

block4824(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump4824(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l5), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump4824(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block4851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0)))

jump4824(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l5), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block4832(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l5), l(l3), l(l0)))

block4832(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l5), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 4894
	nop(PUSH2)
	call(block4894(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

block4851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block4865(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

jump4865(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block4865(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump4865(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block4885(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

block4865(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump4865(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block4885(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block4894(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

block4894(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2574(s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

jump4902(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block4914(s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump4902(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block4913(s(4), s(3), s(2), s(1), s(0)))

block4902(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump4902(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4913(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4914(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block4941(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump4914(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block4940(s(5), s(4), s(3), s(2), s(1), s(0)))

block4914(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 13
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4914(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4940(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4941(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block4953(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump4941(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block4949(s(3), s(2), s(1), s(0)))

block4941(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump4941(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4949(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block4953(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block2772(s(0)))
	nop(JUMP)

block5187(s(1), s(0), g(collectedNDAO), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(collectedNDAO)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2795(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5193(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2838(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5199(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 6
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2925(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5231(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2972(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5237(s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5237(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5237(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block5249(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))

jump5237(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block5248(s(5), s(4), s(3), s(2), s(1), s(0)))

block5248(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5249(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump5249(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5249(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	leq(s(8), s(7))
	call(block5276(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))

jump5249(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	gt(s(8), s(7))
	call(block5275(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5275(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5276(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump5276(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5276(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	eq(s(6), s(5))
	call(block5288(s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))

jump5276(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	neq(s(6), s(5))
	call(block5284(s(4), s(3), s(2), s(1), s(0)))

block5284(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block5288(s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 96
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = calldatasize
	nop(CALLDATASIZE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(jump5288(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5288(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	geq(s(7), s(6))
	call(block5312(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump5288(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	lt(s(7), s(6))
	call(block5308(s(5), s(4), s(3), s(2), s(1), s(0)))

block5308(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump5312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block5390(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump5312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block5386(s(5), s(4), s(3), s(2), s(1), s(0)))

block5312(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump5312(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5386(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block5390(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump5390(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block5533(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump5390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block5529(s(5), s(4), s(3), s(2), s(1), s(0)))

block5529(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block5533(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 18
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump5533(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block5672(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump5533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block5668(s(5), s(4), s(3), s(2), s(1), s(0)))

block5668(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump5672(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block5949(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5672(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block5763(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block5672(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = 6
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(jump5672(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5763(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = 6
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(numberOfHolders)
	nop(SLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	g(numberOfHolders) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block5949(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))

block5949(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 18
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3101(s(0)))
	nop(JUMP)

block6348(s(2), s(1), s(0), g(presaleOwner), g(etherPrice), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(presaleOwner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 6516
	nop(PUSH2)
	call(jump6348(s(5),s(4),s(3),s(2),s(1),s(0),g(presaleOwner), g(etherPrice), g(owner), caller))
	nop(JUMPI)

jump6348(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleOwner), g(etherPrice), g(owner), caller)=>
	eq(s(4), 1 )
	call(block6516(s(3), s(2), s(1), s(0),g(etherPrice)))

jump6348(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleOwner), g(etherPrice), g(owner), caller)=>
	neq(s(4), 1 )
	call(block6435(s(3), s(2), s(1), s(0),g(etherPrice), g(owner), caller))

block6435(s(3), s(2), s(1), s(0), g(etherPrice), g(owner), caller)=>
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block6516(s(3),s(2),s(1),s(0),g(etherPrice)))

jump6516(s(3), s(2), s(1), s(0), g(etherPrice))=>
	neq(s(3), 0)
	call(block6527(s(2), s(1), s(0),g(etherPrice)))

jump6516(s(3), s(2), s(1), s(0), g(etherPrice))=>
	eq(s(3), 0)
	call(block6523(s(2), s(1), s(0)))

block6516(s(3), s(2), s(1), s(0), g(etherPrice))=>
	nop(JUMPDEST)
	call(jump6516(s(3),s(2),s(1),s(0),g(etherPrice)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6523(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6527(s(2), s(1), s(0), g(etherPrice))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(etherPrice) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3146(s(0)))
	nop(JUMP)

block6537(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3169(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump6556(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block6706(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump6556(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block6636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l5), l(l3), l(l1), l(l0)))

block6556(s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(standard)
	s(7) = g(standard)
	call(jump6556(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l5), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6636(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block6663(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0)))

jump6636(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block6644(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l5), l(l3), l(l0)))

block6636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump6636(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l5), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block6644(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l5), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 6706
	nop(PUSH2)
	call(block6706(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

block6663(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block6677(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

jump6677(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block6677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump6677(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block6697(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

block6677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump6677(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block6697(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block6706(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

block6706(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3218(s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

block6714(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 18
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3438(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump6751(s(3), s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	eq(s(3), s(2))
	call(block6842(s(1), s(0),g(state), l(l3), l(l0)))

jump6751(s(3), s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	neq(s(3), s(2))
	call(block6838(s(1), s(0)))

block6751(s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump6751(s(3),s(2),s(1),s(0),g(state), g(owner), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6838(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump6842(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(4), s(3))
	call(block6855(s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump6842(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(4), s(3))
	call(block6854(s(2), s(1), s(0)))

block6842(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump6842(s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6854(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6855(s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6855(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6855(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(5), s(4))
	call(block6882(s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump6855(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(5), s(4))
	call(block6881(s(3), s(2), s(1), s(0)))

block6881(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6882(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	eq(s(3), s(2))
	call(block6894(s(1), s(0),g(state), l(l3), l(l0)))

jump6882(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	neq(s(3), s(2))
	call(block6890(s(1), s(0)))

block6882(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump6882(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6890(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block6894(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump6894(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6894(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block6925(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump6894(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block6924(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6924(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6925(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(state) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump6925(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6925(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block6995(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump6925(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block6994(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6994(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6995(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(LOG1)
	call(block3481(s(0)))
	nop(JUMP)

block7016(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3548(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7048(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3639(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7072(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 7
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3704(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7123(s(1), s(0), g(neurodao), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(neurodao)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3791(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7161(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3878(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7198(s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(symbol)
	s(7) = g(symbol)
	call(jump7198(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l5), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7198(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block7348(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump7198(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block7278(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l5), l(l3), l(l1), l(l0)))

jump7278(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block7305(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0)))

jump7278(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block7286(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l5), l(l3), l(l0)))

block7278(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump7278(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l5), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block7286(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l5), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 7348
	nop(PUSH2)
	call(block7348(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

block7305(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block7319(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

block7319(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump7319(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump7319(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block7319(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump7319(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block7339(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

block7339(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block7348(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

block7348(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3965(s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

block7356(s(1), s(0), g(presaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(presaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4109(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7394(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4196(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7400(s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7400(s(4),s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7400(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(4), s(3))
	call(block7491(s(2), s(1), s(0),g(newOwner)))

jump7400(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(4), s(3))
	call(block7487(s(2), s(1), s(0)))

block7487(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7491(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	neq(s(4), s(3))
	call(block7529(s(2), s(1), s(0),g(newOwner)))

jump7491(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	eq(s(4), s(3))
	call(block7525(s(2), s(1), s(0)))

block7491(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7491(s(4),s(3),s(2),s(1),s(0),g(newOwner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7525(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7529(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(newOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(newOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4283(s(0)))
	nop(JUMP)

jump7597(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	leq(s(6), s(5))
	call(block7609(s(4), s(3), s(2), s(1), s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))

jump7597(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	gt(s(6), s(5))
	call(block7608(s(4), s(3), s(2), s(1), s(0)))

block7597(s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7597(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7608(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7609(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block7636(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))

jump7609(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block7635(s(5), s(4), s(3), s(2), s(1), s(0)))

block7609(s(4), s(3), s(2), s(1), s(0), g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 13
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump7609(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7635(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7636(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump7636(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7636(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	eq(s(5), s(4))
	call(block7648(s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))

jump7636(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	neq(s(5), s(4))
	call(block7644(s(3), s(2), s(1), s(0)))

block7644(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump7648(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	geq(s(6), s(5))
	call(block7672(s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump7648(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	lt(s(6), s(5))
	call(block7668(s(4), s(3), s(2), s(1), s(0)))

block7648(s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = calldatasize
	nop(CALLDATASIZE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	call(jump7648(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7668(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7672(s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump7672(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7672(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block7750(s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump7672(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block7746(s(4), s(3), s(2), s(1), s(0)))

block7746(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7750(s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump7750(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7750(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block7893(s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump7750(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block7889(s(4), s(3), s(2), s(1), s(0)))

block7889(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump7893(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(6), s(5))
	call(block8170(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump7893(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(6), s(5))
	call(block7984(s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block7893(s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	call(jump7893(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7984(s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(5) = 1
	nop(PUSH1)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 7
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfHolders)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(numberOfHolders) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block8170(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))

block8170(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4360(s(0)))
	nop(JUMP)

jump8430(s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), g(owner), l(l3), l(l0), caller)=>
	eq(s(4), s(3))
	call(block8521(s(2), s(1), s(0),g(state), g(presaleOwner), l(l3), l(l0)))

jump8430(s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), g(owner), l(l3), l(l0), caller)=>
	neq(s(4), s(3))
	call(block8517(s(2), s(1), s(0)))

block8430(s(2), s(1), s(0), g(state), g(presaleOwner), g(owner), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump8430(s(4),s(3),s(2),s(1),s(0),g(state), g(presaleOwner), g(owner), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8517(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump8521(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	leq(s(5), s(4))
	call(block8534(s(3), s(2), s(1), s(0),g(state), g(presaleOwner), l(l3), l(l0)))

jump8521(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	gt(s(5), s(4))
	call(block8533(s(3), s(2), s(1), s(0)))

block8521(s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump8521(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(presaleOwner), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8533(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8534(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	leq(s(6), s(5))
	call(block8561(s(4), s(3), s(2), s(1), s(0),g(state), g(presaleOwner), l(l3), l(l0)))

jump8534(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	gt(s(6), s(5))
	call(block8560(s(4), s(3), s(2), s(1), s(0)))

block8534(s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 13
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump8534(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(presaleOwner), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8560(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8561(s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump8561(s(4),s(3),s(2),s(1),s(0),g(state), g(presaleOwner), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8561(s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	eq(s(4), s(3))
	call(block8573(s(2), s(1), s(0),g(state), g(presaleOwner), l(l3), l(l0)))

jump8561(s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	neq(s(4), s(3))
	call(block8569(s(2), s(1), s(0)))

block8569(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block8573(s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(presaleOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(presaleOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = 13
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8573(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(presaleOwner), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8573(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block8669(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8573(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(presaleOwner), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block8668(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8668(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8669(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(state) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(4) = 13
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8669(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8669(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block8739(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump8669(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block8738(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8738(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8739(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	call(block4427(s(0)))
	nop(JUMP)

jump8761(s(3), s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	eq(s(3), s(2))
	call(block8852(s(1), s(0),g(state), l(l3), l(l0)))

jump8761(s(3), s(2), s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	neq(s(3), s(2))
	call(block8848(s(1), s(0)))

block8761(s(1), s(0), g(state), g(owner), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump8761(s(3),s(2),s(1),s(0),g(state), g(owner), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8848(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block8852(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump8852(s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8852(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(4), s(3))
	call(block8865(s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8852(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(4), s(3))
	call(block8864(s(2), s(1), s(0)))

block8864(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8865(s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump8865(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8865(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(5), s(4))
	call(block8892(s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8865(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(5), s(4))
	call(block8891(s(3), s(2), s(1), s(0)))

block8891(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8892(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	eq(s(3), s(2))
	call(block8904(s(1), s(0),g(state), l(l3), l(l0)))

jump8892(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	neq(s(3), s(2))
	call(block8900(s(1), s(0)))

block8892(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump8892(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8900(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump8904(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block8935(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8904(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block8934(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8904(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8904(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8934(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8935(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block9005(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump8935(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block9004(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8935(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(state) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8935(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9004(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9005(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(LOG1)
	call(block4450(s(0)))
	nop(JUMP)

block9026(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump9026(s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9026(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(3), s(2))
	call(block9118(s(1), s(0),g(newOwner), g(owner)))

jump9026(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(3), s(2))
	call(block9114(s(1), s(0)))

block9114(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block9118(s(1), s(0), g(newOwner), g(owner))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(owner) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(newOwner) = s(2)
	nop(SSTORE)
	call(block4473(s(0)))
	nop(JUMP)

block9255(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4496(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block9274(s(1), s(0), g(newOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4553(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump9312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block9326(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0)))

jump9312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block9325(s(5), s(4), s(3), s(2), s(1), s(0)))

block9312(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9312(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9325(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block9353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump9326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block9352(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9326(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump9326(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9352(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump9353(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block9365(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump9353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block9361(s(4), s(3), s(2), s(1), s(0)))

block9361(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block9365(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4716(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump1001_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	geq(s(10), s(9))
	call(block1023_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1001_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	lt(s(10), s(9))
	call(block1019_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1001_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump1001_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1001_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	geq(s(11), s(10))
	call(block1023_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1001_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	lt(s(11), s(10))
	call(block1019_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1001_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump1001_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1001_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	geq(s(11), s(10))
	call(block1023_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1001_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	lt(s(11), s(10))
	call(block1019_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1001_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump1001_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1019_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block1019_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block1019_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block1023_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l3)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump1023_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1023_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	lt(s(7), s(6))
	call(block1064_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1023_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	geq(s(7), s(6))
	call(block1048_0(s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1023_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	lt(s(8), s(7))
	call(block1064_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1023_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	geq(s(8), s(7))
	call(block1048_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

block1023_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(10)
	nop(DUP1)
	s(11) = l(l3)
	nop(MLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump1023_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1023_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	lt(s(8), s(7))
	call(block1064_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

jump1023_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	geq(s(8), s(7))
	call(block1048_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

block1023_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(10)
	nop(DUP1)
	s(11) = l(l3)
	nop(MLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump1023_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1048_0(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	s(6) = s(0)
	nop(DUP6)
	s(7) = 11
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(collectedNDAO)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedNDAO) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1064_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

block1048_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	s(7) = s(1)
	nop(DUP6)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(collectedNDAO)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(collectedNDAO) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block1064_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

block1048_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	s(7) = s(1)
	nop(DUP6)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(collectedNDAO)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(collectedNDAO) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block1064_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller))

block1064_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(6) = address
	nop(ADDRESS)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 1735
	nop(PUSH2)
	call(block1735_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block1064_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(7) = address
	nop(ADDRESS)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = 1735
	nop(PUSH2)
	call(block1735_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block1064_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(7) = address
	nop(ADDRESS)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = 1735
	nop(PUSH2)
	call(block1735_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

jump1072_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(9), s(8))
	call(block1085_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump1072_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(9), s(8))
	call(block1084_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1072_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1072_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1084_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1085_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 13
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump1085_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1085_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(10), s(9))
	call(block1112_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump1085_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(10), s(9))
	call(block1111_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1111_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1112_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(8), s(7))
	call(block1734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1112_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(8), s(7))
	call(block1119_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

block1112_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump1112_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1119_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(8), s(7))
	call(block1214_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump1119_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(8), s(7))
	call(block1210_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1119_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	s(7) = 1
	nop(PUSH1)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(jump1119_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1210_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump1214_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block1491_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize))

jump1214_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block1487_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1214_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 1
	nop(PUSH1)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(neurodao)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 530965563
	nop(PUSH4)
	s(9) = caller
	nop(CALLER)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 4
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 32
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump1214_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1487_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

jump1491_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize)=>
	eq(s(11), 0)
	call(block1511_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump1491_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize)=>
	neq(s(11), 0)
	call(block1502_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block1491_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump1491_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1502_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

block1511_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump1511_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1511_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	geq(s(10), s(9))
	call(block1533_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1511_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	lt(s(10), s(9))
	call(block1529_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1529_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump1533_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(8), s(7))
	call(block1697_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1533_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(8), s(7))
	call(block1564_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

block1533_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l3)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 1000
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	call(jump1533_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1564_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(11), 0)
	call(block1648_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1564_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(11), 0)
	call(block1647_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1564_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(7) = 11
	nop(PUSH1)
	s(7) = g(collectedNDAO)
	nop(SLOAD)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 10
	nop(PUSH1)
	s(10) = 1250000
	nop(PUSH3)
	s(11) = 9
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	call(jump1564_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1647_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1648_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump1648_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1648_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block1659_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1648_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block1658_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1658_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1659_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(12), 0)
	call(block1681_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1659_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(12), 0)
	call(block1680_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1659_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 21000000
	nop(PUSH4)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 10
	nop(PUSH1)
	s(11) = 1250000
	nop(PUSH3)
	s(12) = s(10)
	nop(DUP2)
	call(jump1659_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1680_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1681_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(10), 0)
	call(block1692_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

jump1681_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(10), 0)
	call(block1691_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1681_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump1681_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1691_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1692_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(1)
	s(1) = s(7)
	s(7) = s(8)
	nop(SWAP6)
	nop(POP)
	call(block1697_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller))

block1697_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), g(owner), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(owner)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	call(block1734_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block1734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block1735_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block1735_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(0)
	nop(DUP7)
	call(jump1735_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1735_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block1750_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1735_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block1746_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1735_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(1)
	nop(DUP7)
	call(jump1735_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1735_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(8), s(7))
	call(block1750_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1735_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(8), s(7))
	call(block1746_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1735_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(1)
	nop(DUP7)
	call(jump1735_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1735_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(8), s(7))
	call(block1750_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1735_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(8), s(7))
	call(block1746_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1746_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1746_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block1746_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block1750_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(0)
	nop(DUP7)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump1750_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1750_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block1892_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1750_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block1888_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1750_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(1)
	nop(DUP7)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump1750_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1750_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(8), s(7))
	call(block1892_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1750_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(8), s(7))
	call(block1888_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1750_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(1)
	nop(DUP7)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump1750_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1750_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(8), s(7))
	call(block1892_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1750_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(8), s(7))
	call(block1888_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1888_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1888_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block1888_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block1892_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(0)
	nop(DUP6)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(1)
	nop(DUP8)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump1892_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1892_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block1970_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1892_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block1966_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1892_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump1892_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1892_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(8), s(7))
	call(block1970_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1892_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(8), s(7))
	call(block1966_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1892_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump1892_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1892_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(8), s(7))
	call(block1970_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

jump1892_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(8), s(7))
	call(block1966_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1966_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1966_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block1966_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block1970_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = 6
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(jump1970_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1970_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block2247_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump1970_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block2061_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block1970_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 1
	nop(PUSH1)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(jump1970_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1970_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(8), s(7))
	call(block2247_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump1970_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(8), s(7))
	call(block2061_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block1970_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 1
	nop(PUSH1)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(jump1970_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1970_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(8), s(7))
	call(block2247_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump1970_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(8), s(7))
	call(block2061_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller))

block2061_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = 6
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(numberOfHolders)
	nop(SLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	g(numberOfHolders) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block2247_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))

block2061_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = 7
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 8
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfHolders)
	nop(SLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	g(numberOfHolders) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block2247_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))

block2061_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = 7
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 8
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfHolders)
	nop(SLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	g(numberOfHolders) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block2247_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))

block2247_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(0)
	nop(DUP6)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(0)
	nop(DUP6)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(1)
	nop(DUP8)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(0)
	nop(DUP9)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block2247_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(1)
	nop(DUP9)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block2247_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(1)
	nop(DUP6)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(1)
	nop(DUP9)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

jump373_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block395_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump373_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block394_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block373_0(s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump373_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block394_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block395_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = 13
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump395_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump395_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(10), s(9))
	call(block422_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump395_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(10), s(9))
	call(block421_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block421_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block422_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump422_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump422_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(8), s(7))
	call(block1072_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(collectedNDAO), g(numberOfHolders), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump422_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(8), s(7))
	call(block429_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

block429_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump429_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump429_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block506_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump429_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block502_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block502_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block506_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 500000
	nop(PUSH3)
	s(8) = 9
	nop(PUSH1)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	call(jump506_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump506_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block525_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump506_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block521_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block521_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block525_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = callvalue
	nop(CALLVALUE)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = 1000000000000000000
	nop(PUSH8)
	s(8) = 5
	nop(PUSH1)
	s(8) = g(etherPrice)
	nop(SLOAD)
	s(9) = s(3)
	nop(DUP6)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump525_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump525_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(9), 0)
	call(block551_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump525_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(9), 0)
	call(block550_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block550_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump551_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block682_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump551_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block570_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

block551_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 500000
	nop(PUSH3)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 9
	nop(PUSH1)
	s(9) = g(collectedUSD)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump551_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block570_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(8) = 500000
	nop(PUSH3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 5
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = 1000000000000000000
	nop(PUSH8)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump570_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump570_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(9), 0)
	call(block602_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump570_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(etherPrice), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(9), 0)
	call(block601_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block601_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block602_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 3000000
	nop(PUSH3)
	s(9) = s(3)
	nop(DUP6)
	s(10) = callvalue
	nop(CALLVALUE)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(7)
	nop(DUP9)
	s(17) = s(8)
	nop(DUP9)
	s(11) = 1
	nop(CALL)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump602_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump602_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(7), 0)
	call(block667_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump602_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(7), 0)
	call(block663_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block663_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block667_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 500000
	nop(PUSH3)
	s(8) = 9
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(collectedUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 699
	nop(PUSH2)
	call(block699_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block682_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(collectedUSD), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(collectedUSD)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(collectedUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block699_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

block699_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 1506815999
	nop(PUSH4)
	s(8) = timestamp
	nop(TIMESTAMP)
	call(jump699_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump699_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block721_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump699_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block713_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block713_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(7) = 50
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 772
	nop(PUSH2)
	call(block772_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

jump721_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block743_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))

jump721_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block735_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block721_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 1507247999
	nop(PUSH4)
	s(8) = timestamp
	nop(TIMESTAMP)
	call(jump721_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block735_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(7) = 50
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 771
	nop(PUSH2)
	call(block771_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

jump743_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block765_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump743_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block757_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block743_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 1507766399
	nop(PUSH4)
	s(8) = timestamp
	nop(TIMESTAMP)
	call(jump743_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block757_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(7) = 65
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 770
	nop(PUSH2)
	call(block770_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block765_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 70
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block770_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block770_0(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block771_0(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block770_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block771_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block770_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block771_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block771_0(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block772_0(s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block771_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block772_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block771_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(block772_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block772_0(s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 100
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump772_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump772_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(8), 0)
	call(block786_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump772_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(8), 0)
	call(block785_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump772_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(9), 0)
	call(block786_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump772_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(9), 0)
	call(block785_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block772_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 100
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump772_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump772_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(9), 0)
	call(block786_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump772_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(9), 0)
	call(block785_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block772_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 100
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump772_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block785_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block785_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block785_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump786_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block981_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))

jump786_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block977_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block786_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(0)
	s(0) = s(6)
	s(6) = s(7)
	nop(SWAP6)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(neurodao)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1889567281
	nop(PUSH4)
	s(9) = caller
	nop(CALLER)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 4
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 32
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump786_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump786_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(18), 0)
	call(block981_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))

jump786_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(18), 0)
	call(block977_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block786_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(1)
	s(1) = s(7)
	s(7) = s(8)
	nop(SWAP6)
	nop(POP)
	s(7) = 1000
	nop(PUSH2)
	s(8) = 4
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(neurodao)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1889567281
	nop(PUSH4)
	s(10) = caller
	nop(CALLER)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 4
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 32
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = s(16)
	nop(DUP1)
	s(17) = extcodesize
	nop(EXTCODESIZE)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(18) = s(17)
	nop(DUP1)
	call(jump786_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump786_2(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(18), 0)
	call(block981_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))

jump786_2(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(18), 0)
	call(block977_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block786_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(1)
	s(1) = s(7)
	s(7) = s(8)
	nop(SWAP6)
	nop(POP)
	s(7) = 1000
	nop(PUSH2)
	s(8) = 4
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(neurodao)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1889567281
	nop(PUSH4)
	s(10) = caller
	nop(CALLER)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 4
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 32
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = s(16)
	nop(DUP1)
	s(17) = extcodesize
	nop(EXTCODESIZE)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(18) = s(17)
	nop(DUP1)
	call(jump786_2(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), g(neurodao), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block977_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

block977_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	nop(REVERT)

block977_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	nop(REVERT)

block981_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump981_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump981_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	eq(s(11), 0)
	call(block1001_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))

jump981_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	neq(s(11), 0)
	call(block992_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

jump981_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	eq(s(12), 0)
	call(block1001_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))

jump981_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	neq(s(12), 0)
	call(block992_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block981_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(17) = gas
	nop(GAS)
	s(11) = 1
	nop(CALL)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(11)
	nop(DUP1)
	call(jump981_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block981_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(17) = gas
	nop(GAS)
	s(11) = 1
	nop(CALL)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(11)
	nop(DUP1)
	call(jump981_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump981_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	eq(s(12), 0)
	call(block1001_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, returndatasize))

jump981_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(collectedNDAO), g(numberOfHolders), l(l3), l(l2), l(l1), l(l0), address, caller, gas, returndatasize)=>
	neq(s(12), 0)
	call(block992_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block992_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

block992_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(13) = returndatasize
	nop(RETURNDATASIZE)
	s(14) = 0
	nop(PUSH1)
	nop(REVERT)

block992_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(13) = returndatasize
	nop(RETURNDATASIZE)
	s(14) = 0
	nop(PUSH1)
	nop(REVERT)

