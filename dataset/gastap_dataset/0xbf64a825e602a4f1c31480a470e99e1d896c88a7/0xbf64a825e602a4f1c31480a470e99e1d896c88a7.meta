{
    "owned": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "confirmOwner()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "confirmOwner()": [
                257,
                119
            ],
            "changeOwner(address)": [
                190,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "Crowdsale(address,uint256)",
            "setEtherPrice(uint256)",
            "startPresale(address)",
            "startBonuses()",
            "finishCrowdsale()",
            "fallback()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "Crowdsale(address,uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "setEtherPrice(uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "startPresale(address)": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "startBonuses()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalTokens": "uint256",
                    "neurodaoTokens": "uint256",
                    "totalLimitUSD": "uint256",
                    "totalSupply": "uint256",
                    "etherPrice": "uint256",
                    "numberOfHolders": "uint256",
                    "collectedUSD": "uint256",
                    "collectedNDAO": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                3467,
                427
            ],
            "startBonuses()": [
                2719,
                207
            ],
            "startPresale(address)": [
                3400,
                405
            ],
            "setEtherPrice(uint256)": [
                2674,
                185
            ],
            "confirmOwner()": [
                3490,
                449
            ],
            "changeOwner(address)": [
                3333,
                383
            ]
        },
        "block_CALL_mapping": {
            "block1392_0": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "jump1392_0": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)",
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "block503_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump882_0": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump882_1": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump882": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump503_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "block503": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "block882_0": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block882_1": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block882_2": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block882": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump1392": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)",
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "jump882_2": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block1392": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "jump503": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ]
        }
    },
    "Token": {
        "function_list": [
            "Crowdsale(address,uint256)",
            "setEtherPrice(uint256)",
            "startPresale(address)",
            "startBonuses()",
            "finishCrowdsale()",
            "fallback()",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "Token(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setEtherPrice(uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "startPresale(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "startBonuses()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Token(address,uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                4429,
                603
            ],
            "allowance(address,address)": [
                4619,
                691
            ],
            "startPresale(address)": [
                4362,
                581
            ],
            "transferFrom(address,address,uint256)": [
                2994,
                229
            ],
            "approve(address,uint256)": [
                2697,
                119
            ],
            "setEtherPrice(uint256)": [
                3103,
                251
            ],
            "changeOwner(address)": [
                4218,
                537
            ],
            "startBonuses()": [
                3460,
                339
            ],
            "transfer(address,uint256)": [
                4285,
                559
            ],
            "confirmOwner()": [
                4452,
                625
            ]
        },
        "block_CALL_mapping": {
            "block602_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump981_1": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block981_2": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block1491": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "jump981_0": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block981_0": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump981_2": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump981": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block1491_0": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "block602": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump1491": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)",
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "block981": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block981_1": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump602_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump1491_0": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)",
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "jump602": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ]
        }
    },
    "PresaleBREMP": {
        "function_list": [
            "Token(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "Crowdsale(address,uint256)",
            "setEtherPrice(uint256)",
            "startPresale(address)",
            "startBonuses()",
            "finishCrowdsale()",
            "fallback()",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "PresaleBREMP(address,uint256)",
            "withdraw()",
            "killMe()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Token(address,uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(address,uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {}
            },
            "setEtherPrice(uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {}
            },
            "startPresale(address)": {
                "argument": {},
                "contract": {}
            },
            "startBonuses()": {
                "argument": {},
                "contract": {}
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {}
            },
            "PresaleBREMP(address,uint256)": {
                "argument": {
                    "_etherPrice": "uint256"
                },
                "contract": {}
            },
            "withdraw()": {
                "argument": {},
                "contract": {}
            },
            "killMe()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                4497,
                647
            ],
            "allowance(address,address)": [
                4687,
                735
            ],
            "startPresale(address)": [
                4407,
                603
            ],
            "transferFrom(address,address,uint256)": [
                3016,
                229
            ],
            "approve(address,uint256)": [
                2719,
                119
            ],
            "setEtherPrice(uint256)": [
                3125,
                251
            ],
            "killMe()": [
                4474,
                625
            ],
            "changeOwner(address)": [
                4263,
                559
            ],
            "startBonuses()": [
                3505,
                361
            ],
            "transfer(address,uint256)": [
                4330,
                581
            ],
            "confirmOwner()": [
                4520,
                669
            ],
            "withdraw()": [
                3219,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump624_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "block1003_2": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump1003": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump1003_2": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block1003_1": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block624": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump1003_1": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump1003_0": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)",
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "block1003_0": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump1513": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)",
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "block9195": [
                "presaleOwner.transfer(this.balance)"
            ],
            "block1513": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "block1513_0": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "jump9195": [
                "presaleOwner.transfer(this.balance)",
                "presaleOwner.transfer(this.balance)"
            ],
            "block624_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump624": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump1513_0": [
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)",
                "NeuroDAO(neurodao).freezedBalanceOf(msg.sender)"
            ],
            "block1003": [
                "NeuroDAO(neurodao).balanceOf(msg.sender)"
            ],
            "jump6803": [
                "msg.sender.transfer(this.balance)",
                "msg.sender.transfer(this.balance)"
            ],
            "block6803": [
                "msg.sender.transfer(this.balance)"
            ]
        }
    }
}