block0(g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner)=>
	lt(s(1), s(0))
	call(block109())

jump0(s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner)=>
	geq(s(1), s(0))
	call(block13(g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner))

block13(g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1072389931
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner)=>
	eq(s(2), s(1))
	call(block114(s(0),g(investors), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump13(s(2), s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inv, newOwner)=>
	neq(s(2), s(1))
	call(block65(s(0),g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner))

jump65(s(2), s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner)=>
	eq(s(2), s(1))
	call(block223(s(0),g(owner), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner)=>
	neq(s(2), s(1))
	call(block76(s(0),g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner))

block65(s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3863068129
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner)=>
	eq(s(2), s(1))
	call(block310(s(0),g(investors), l(l3), l(l2), calldatasize, callvalue, inv))

jump76(s(2), s(1), s(0), g(token), g(investors), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inv, newOwner)=>
	neq(s(2), s(1))
	call(block87(s(0),g(token), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner))

jump87(s(2), s(1), s(0), g(token), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block377(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

jump87(s(2), s(1), s(0), g(token), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block98(s(0),g(token), l(l1), l(l0), callvalue))

block87(s(0), g(token), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4076725131
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(token), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98(s(0), g(token), l(l1), l(l0), callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4228666474
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(token), l(l1), l(l0), callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(token), l(l1), l(l0), callvalue)=>
	eq(s(2), s(1))
	call(block444(s(0),g(token), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(token), l(l1), l(l0), callvalue)=>
	neq(s(2), s(1))
	call(block109_0(s(0)))

block109()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

jump114(s(2), s(1), s(0), g(investors), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block126(s(1), s(0),g(investors), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump114(s(2), s(1), s(0), g(investors), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block122(s(1), s(0)))

block114(s(0), g(investors), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump114(s(2),s(1),s(0),g(investors), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block122(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block126(s(1), s(0), g(investors), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 157
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 531
	nop(PUSH2)
	call(block531(s(2),s(1),s(0),g(investors), l(l2), l(l1), l(l0)))
	nop(JUMP)

block157(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block223(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump223(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump223(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block235(s(1), s(0),g(owner), l(l1), l(l0)))

jump223(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block231(s(1), s(0)))

block231(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block235(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 244
	nop(PUSH2)
	s(2) = 593
	nop(PUSH2)
	call(block593(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block244(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump310(s(2), s(1), s(0), g(investors), l(l3), l(l2), calldatasize, callvalue, inv)=>
	eq(s(2), 0)
	call(block322(s(1), s(0),g(investors), l(l3), l(l2), calldatasize, inv))

jump310(s(2), s(1), s(0), g(investors), l(l3), l(l2), calldatasize, callvalue, inv)=>
	neq(s(2), 0)
	call(block318(s(1), s(0)))

block310(s(0), g(investors), l(l3), l(l2), calldatasize, callvalue, inv)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump310(s(2),s(1),s(0),g(investors), l(l3), l(l2), calldatasize, callvalue, inv))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block318(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block322(s(1), s(0), g(investors), l(l3), l(l2), calldatasize, inv)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 375
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inv
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 630
	nop(PUSH2)
	call(block630(s(2),s(1),s(0),g(investors), l(l3), l(l2)))
	nop(JUMP)

block375(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump377(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block389(s(1), s(0),g(owner), calldatasize, caller, newOwner))

jump377(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block385(s(1), s(0)))

block377(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump377(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block385(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block389(s(1), s(0), g(owner), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 442
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 895
	nop(PUSH2)
	call(block895(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block442(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block444(s(0), g(token), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump444(s(2),s(1),s(0),g(token), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump444(s(2), s(1), s(0), g(token), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block456(s(1), s(0),g(token), l(l1), l(l0)))

jump444(s(2), s(1), s(0), g(token), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block452(s(1), s(0)))

block452(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block456(s(1), s(0), g(token), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 465
	nop(PUSH2)
	s(2) = 1108
	nop(PUSH2)
	call(block1108(s(1),s(0),g(token), l(l1), l(l0)))
	nop(JUMP)

block465(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump531(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block546(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump531(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block545(s(4), s(3), s(2), s(1), s(0)))

block531(s(2), s(1), s(0), g(investors), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(investors)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump531(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block545(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block546(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block157(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block593(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block244(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block630(s(2), s(1), s(0), g(investors), l(l3), l(l2))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump630(s(4),s(3),s(2),s(1),s(0),g(investors), l(l3), l(l2)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump630(s(4), s(3), s(2), s(1), s(0), g(investors), l(l3), l(l2))=>
	gt(s(4), s(3))
	call(block892(s(2), s(1), s(0)))

jump630(s(4), s(3), s(2), s(1), s(0), g(investors), l(l3), l(l2))=>
	leq(s(4), s(3))
	call(block704(s(2), s(1), s(0),g(investors), l(l3), l(l2)))

block704(s(2), s(1), s(0), g(investors), l(l3), l(l2))=>
	s(3) = 1
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = g(investors)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = g(investors)
	nop(SLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 796
	nop(PUSH2)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1146
	nop(PUSH2)
	call(block1146(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(JUMP)

jump796(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	lt(s(7), s(6))
	call(block819(s(5), s(4), s(3), s(2), s(1), s(0), l(l2)))

jump796(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	geq(s(7), s(6))
	call(block818(s(5), s(4), s(3), s(2), s(1), s(0)))

block796(s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(investors)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(investors)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump796(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block818(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block819(s(5), s(4), s(3), s(2), s(1), s(0), l(l2))=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block892(s(2),s(1),s(0)))

block892(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block375(s(0)))
	nop(JUMP)

block895(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump895(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump895(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block986(s(2), s(1), s(0),g(owner)))

jump895(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block982(s(2), s(1), s(0)))

block982(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump986(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	eq(s(4), s(3))
	call(block1105(s(2), s(1), s(0)))

jump986(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	neq(s(4), s(3))
	call(block1041(s(2), s(1), s(0),g(owner)))

block986(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump986(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1041(s(2), s(1), s(0), g(owner))=>
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block1105(s(2),s(1),s(0)))

block1105(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block442(s(0)))
	nop(JUMP)

block1108(s(1), s(0), g(token), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(token)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block465(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1146(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(investors)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(5)
	nop(DUP4)
	g(investors) = s(8)
	nop(SSTORE)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	call(jump1146(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1146(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	leq(s(9), s(8))
	call(block1185(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(investors), l(l2)))

jump1146(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	gt(s(9), s(8))
	call(block1160(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(investors), l(l2)))

block1160(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 0
	nop(PUSH1)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1184
	nop(PUSH2)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1190
	nop(PUSH2)
	call(block1190(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(JUMP)

block1184(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	call(block1185(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))

block1185(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block796(s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(JUMP)

block1190(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	s(10) = 1224
	nop(PUSH2)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block1196(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))

block1196(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	call(jump1196(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1196(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	leq(s(12), s(11))
	call(block1220(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(investors), l(l2)))

jump1196(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	gt(s(12), s(11))
	call(block1205(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(investors), l(l2)))

block1205(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 1196
	nop(PUSH2)
	call(block1196(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(JUMP)

block1220(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block1224(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(JUMP)

block1224(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(investors), l(l2))=>
	nop(JUMPDEST)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block1184(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(investors), l(l2)))
	nop(JUMP)

block109_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

