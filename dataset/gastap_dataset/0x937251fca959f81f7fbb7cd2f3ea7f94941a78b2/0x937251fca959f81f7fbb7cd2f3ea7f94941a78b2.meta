{
    "FlightDelayConstants": {
        "function_list": [
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MIN_OBSERVATIONS": "uint256",
                    "MIN_PREMIUM": "uint256",
                    "MAX_PREMIUM": "uint256",
                    "MAX_PAYOUT": "uint256",
                    "MIN_PREMIUM_EUR": "uint256",
                    "MAX_PREMIUM_EUR": "uint256",
                    "MAX_PAYOUT_EUR": "uint256",
                    "MIN_PREMIUM_USD": "uint256",
                    "MAX_PREMIUM_USD": "uint256",
                    "MAX_PAYOUT_USD": "uint256",
                    "MIN_PREMIUM_GBP": "uint256",
                    "MAX_PREMIUM_GBP": "uint256",
                    "MAX_PAYOUT_GBP": "uint256",
                    "MAX_CUMULATED_WEIGHTED_PREMIUM": "uint256",
                    "REWARD_PERCENT": "uint8",
                    "RESERVE_PERCENT": "uint8",
                    "WEIGHT_PATTERN": "uint8[6]",
                    "MIN_TIME_BEFORE_DEPARTURE": "uint256",
                    "CHECK_PAYOUT_OFFSET": "uint256",
                    "MAX_FLIGHT_DURATION": "uint256",
                    "CONTRACT_DEAD_LINE": "uint256",
                    "ORACLIZE_GAS": "uint256",
                    "ORACLIZE_GASPRICE": "uint256",
                    "ORACLIZE_RATINGS_BASE_URL": "string",
                    "ORACLIZE_RATINGS_QUERY": "string",
                    "ORACLIZE_STATUS_BASE_URL": "string",
                    "ORACLIZE_STATUS_QUERY": "string"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "FlightDelayDatabaseModel": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "FlightDelayControlledContract": {
        "function_list": [
            "setController(address)",
            "destruct()",
            "setContracts()",
            "getContract(bytes32)"
        ],
        "initial_state": {
            "setController(address)": {
                "argument": {},
                "contract": {}
            },
            "destruct()": {
                "argument": {},
                "contract": {}
            },
            "setContracts()": {
                "argument": {},
                "contract": {}
            },
            "getContract(bytes32)": {
                "argument": {
                    "_id": "bytes32"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "destruct()": [
                92,
                75
            ],
            "setContracts()": [
                115,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "FlightDelayController": {
        "function_list": [
            "Owned()",
            "FlightDelayController()",
            "transferOwnership(address)",
            "setContract(address,bytes32,bool)",
            "getContract(bytes32)",
            "registerContract(address,bytes32,bool)",
            "deregister(bytes32)",
            "setAllContracts()",
            "setOneContract(uint256)",
            "destructOne(bytes32)",
            "destructAll()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "FlightDelayController()": {
                "argument": {},
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "setContract(address,bytes32,bool)": {
                "argument": {
                    "_id": "bytes32"
                },
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "getContract(bytes32)": {
                "argument": {
                    "_id": "bytes32"
                },
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "registerContract(address,bytes32,bool)": {
                "argument": {
                    "_id": "bytes32"
                },
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "deregister(bytes32)": {
                "argument": {
                    "_id": "bytes32"
                },
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "setAllContracts()": {
                "argument": {},
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "setOneContract(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "destructOne(bytes32)": {
                "argument": {
                    "_id": "bytes32"
                },
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "destructAll()": {
                "argument": {},
                "contract": {
                    "contractIds": "bytes32[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "contractIds": "bytes32[]"
                }
            }
        },
        "function_block_mapping": {
            "getContract(bytes32)": [
                670,
                251
            ],
            "deregister(bytes32)": [
                180,
                75
            ],
            "setOneContract(uint256)": [
                326,
                119
            ],
            "setAllContracts()": [
                647,
                229
            ],
            "registerContract(address,bytes32,bool)": [
                507,
                185
            ],
            "destructOne(bytes32)": [
                371,
                141
            ],
            "destructAll()": [
                624,
                207
            ],
            "transferOwnership(address)": [
                918,
                295
            ]
        },
        "block_CALL_mapping": {
            "block1467": [
                "controlledContract.setContracts()"
            ],
            "block2643": [
                "controlledContract.setContracts()"
            ],
            "block1731_0": [
                "FlightDelayControlledContract(addr).destruct()"
            ],
            "jump1731": [
                "FlightDelayControlledContract(addr).destruct()",
                "FlightDelayControlledContract(addr).destruct()"
            ],
            "jump1467": [
                "controlledContract.setContracts()",
                "controlledContract.setContracts()"
            ],
            "block1731": [
                "FlightDelayControlledContract(addr).destruct()"
            ],
            "jump2643": [
                "controlledContract.setContracts()",
                "controlledContract.setContracts()"
            ],
            "jump1731_0": [
                "FlightDelayControlledContract(addr).destruct()",
                "FlightDelayControlledContract(addr).destruct()"
            ]
        }
    }
}