{
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "halting": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "start()",
            "stop()",
            "destruct()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "destruct()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "destruct()": [
                148,
                97
            ],
            "start()": [
                258,
                141
            ],
            "stop()": [
                125,
                75
            ],
            "transferOwnership(address)": [
                328,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenVault": {
        "function_list": [
            "start()",
            "stop()",
            "destruct()",
            "owned()",
            "transferOwnership(address)",
            "TokenVault(address,uint256,uint256)",
            "makerWithdrawAsset(uint256)",
            "makerWithdrawEther()",
            "getAssetBalance()",
            "min(uint256,uint256)",
            "takerBuyAsset()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "start()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "stop()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "destruct()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "TokenVault(address,uint256,uint256)": {
                "argument": {
                    "_sellPrice": "uint256",
                    "_units": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "makerWithdrawAsset(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "makerWithdrawEther()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "getAssetBalance()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "takerBuyAsset()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "takerBuyAsset()": [
                693,
                273
            ],
            "makerWithdrawEther()": [
                364,
                119
            ],
            "destruct()": [
                387,
                141
            ],
            "start()": [
                670,
                251
            ],
            "makerWithdrawAsset(uint256)": [
                703,
                295
            ],
            "getAssetBalance()": [
                321,
                97
            ],
            "transferOwnership(address)": [
                819,
                339
            ],
            "stop()": [
                298,
                75
            ]
        },
        "block_CALL_mapping": {
            "block1009_1": [
                "msg.sender.send(change)"
            ],
            "block1009_0": [
                "msg.sender.send(change)"
            ],
            "jump1879": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block2820": [
                "ERC20(asset).transfer(owner, tokens)"
            ],
            "block1283_1": [
                "ERC20(asset).transfer(msg.sender, order * units)"
            ],
            "block1283_0": [
                "ERC20(asset).transfer(msg.sender, order * units)"
            ],
            "block1879": [
                "owner.transfer(this.balance)"
            ],
            "jump1009": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "block1283": [
                "ERC20(asset).transfer(msg.sender, order * units)"
            ],
            "jump2820": [
                "ERC20(asset).transfer(owner, tokens)",
                "ERC20(asset).transfer(owner, tokens)"
            ],
            "jump1283_1": [
                "ERC20(asset).transfer(msg.sender, order * units)",
                "ERC20(asset).transfer(msg.sender, order * units)"
            ],
            "jump1283_0": [
                "ERC20(asset).transfer(msg.sender, order * units)",
                "ERC20(asset).transfer(msg.sender, order * units)"
            ],
            "block1009": [
                "msg.sender.send(change)"
            ],
            "block1724_2": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "block1724_1": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "block1724_0": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1724_1": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1724_0": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1724_2": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1283": [
                "ERC20(asset).transfer(msg.sender, order * units)",
                "ERC20(asset).transfer(msg.sender, order * units)"
            ],
            "block1724": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1724": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1009_1": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "jump1009_0": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ]
        }
    }
}