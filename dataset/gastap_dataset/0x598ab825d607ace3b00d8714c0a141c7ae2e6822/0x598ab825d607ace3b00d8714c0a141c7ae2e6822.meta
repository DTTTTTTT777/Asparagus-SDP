{
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Escapable": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "Escapable(address,address)",
            "escapeHatch()",
            "changeEscapeCaller(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "Escapable(address,address)": {
                "argument": {},
                "contract": {}
            },
            "escapeHatch()": {
                "argument": {},
                "contract": {}
            },
            "changeEscapeCaller(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "escapeHatch()": [
                125,
                75
            ],
            "changeEscapeCaller(address)": [
                235,
                119
            ],
            "changeOwner(address)": [
                389,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump726": [
                "escapeHatchDestination.send(total)",
                "escapeHatchDestination.send(total)"
            ],
            "block726": [
                "escapeHatchDestination.send(total)"
            ]
        }
    },
    "Vault": {
        "function_list": [
            "Escapable(address,address)",
            "escapeHatch()",
            "changeEscapeCaller(address)",
            "Owned()",
            "changeOwner(address)",
            "Vault(address,address,uint256,uint256,address,uint256)",
            "numberOfAuthorizedPayments()",
            "receiveEther()",
            "fallback()",
            "authorizePayment(string,bytes32,address,uint256,uint256)",
            "collectAuthorizedPayment(uint256)",
            "delayPayment(uint256,uint256)",
            "cancelPayment(uint256)",
            "authorizeSpender(address,bool)",
            "setSecurityGuard(address)",
            "setTimelock(uint256)",
            "setMaxSecurityGuardDelay(uint256)"
        ],
        "initial_state": {
            "Escapable(address,address)": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "escapeHatch()": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "changeEscapeCaller(address)": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "Vault(address,address,uint256,uint256,address,uint256)": {
                "argument": {
                    "_absoluteMinTimeLock": "uint256",
                    "_timeLock": "uint256",
                    "_maxSecurityGuardDelay": "uint256"
                },
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "numberOfAuthorizedPayments()": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "receiveEther()": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "authorizePayment(string,bytes32,address,uint256,uint256)": {
                "argument": {
                    "_name": "string",
                    "_reference": "bytes32",
                    "_amount": "uint256",
                    "_paymentDelay": "uint256"
                },
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "collectAuthorizedPayment(uint256)": {
                "argument": {
                    "_idPayment": "uint256"
                },
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "delayPayment(uint256,uint256)": {
                "argument": {
                    "_idPayment": "uint256",
                    "_delay": "uint256"
                },
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "cancelPayment(uint256)": {
                "argument": {
                    "_idPayment": "uint256"
                },
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "authorizeSpender(address,bool)": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "setSecurityGuard(address)": {
                "argument": {},
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "setTimelock(uint256)": {
                "argument": {
                    "_newTimeLock": "uint256"
                },
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            },
            "setMaxSecurityGuardDelay(uint256)": {
                "argument": {
                    "_maxSecurityGuardDelay": "uint256"
                },
                "contract": {
                    "authorizedPayments": "Vault.Payment[]",
                    "absoluteMinTimeLock": "uint256",
                    "timeLock": "uint256",
                    "maxSecurityGuardDelay": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "authorizePayment(string,bytes32,address,uint256,uint256)": [
                504,
                163
            ],
            "cancelPayment(uint256)": [
                884,
                251
            ],
            "changeEscapeCaller(address)": [
                695,
                185
            ],
            "receiveEther()": [
                1442,
                361
            ],
            "setSecurityGuard(address)": [
                1606,
                427
            ],
            "changeOwner(address)": [
                1452,
                383
            ],
            "setMaxSecurityGuardDelay(uint256)": [
                1807,
                493
            ],
            "setTimelock(uint256)": [
                372,
                119
            ],
            "authorizeSpender(address,bool)": [
                805,
                229
            ],
            "escapeHatch()": [
                349,
                97
            ],
            "numberOfAuthorizedPayments()": [
                762,
                207
            ],
            "collectAuthorizedPayment(uint256)": [
                1071,
                317
            ],
            "delayPayment(uint256,uint256)": [
                929,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump4607": [
                "p.recipient.send(p.amount)",
                "p.recipient.send(p.amount)"
            ],
            "block2251": [
                "escapeHatchDestination.send(total)"
            ],
            "jump2251": [
                "escapeHatchDestination.send(total)",
                "escapeHatchDestination.send(total)"
            ],
            "block4607": [
                "p.recipient.send(p.amount)"
            ]
        }
    }
}