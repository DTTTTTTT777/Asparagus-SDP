{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BiQToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "BiQToken(address,address,address,address)",
            "changeTotalSupply(uint256)",
            "changeFounderMultiSigAddress(address)",
            "releaseToken()",
            "transferMarketIncentivesFund(address,uint256)",
            "getVestedFounderTokens()",
            "getVestedAdvisorTokens()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "BiQToken(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "changeTotalSupply(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "changeFounderMultiSigAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "releaseToken()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "transferMarketIncentivesFund(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "getVestedFounderTokens()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "getVestedAdvisorTokens()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "keyEmployeesAllocatedFund": "uint256",
                    "advisorsAllocation": "uint256",
                    "marketIncentivesAllocation": "uint256",
                    "vestingFounderAllocation": "uint256",
                    "totalAllocatedTokens": "uint256",
                    "tokensAllocatedToCrowdFund": "uint256",
                    "saftInvestorAllocation": "uint256",
                    "preAllocatedTokensVestingTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1417,
                383
            ],
            "allowance(address,address)": [
                2098,
                603
            ],
            "transferFrom(address,address,uint256)": [
                812,
                185
            ],
            "approve(address,uint256)": [
                625,
                119
            ],
            "changeFounderMultiSigAddress(address)": [
                1350,
                361
            ],
            "getVestedFounderTokens()": [
                1171,
                295
            ],
            "releaseToken()": [
                2217,
                625
            ],
            "getVestedAdvisorTokens()": [
                945,
                207
            ],
            "changeTotalSupply(uint256)": [
                1305,
                339
            ],
            "transfer(address,uint256)": [
                1954,
                559
            ],
            "transferMarketIncentivesFund(address,uint256)": [
                380,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "BiQCrowdFund": {
        "function_list": [
            "BiQCrowdFund(address,address,address)",
            "setFounderMultiSigAddress(address)",
            "setAuthorizerAddress(address)",
            "setRemainingTokenHolder(address)",
            "setTokenAddress(address)",
            "changeCrowdfundState()",
            "authorize(address,uint256)",
            "buyTokens(address)",
            "fundTransfer(uint256)",
            "getState()",
            "getPreAuthorizedAmount(address)",
            "calculateTotalTokenPerContribution(uint256)",
            "currentBonus(uint256)",
            "buyPreSaleTokens(address)",
            "getTokensForPreSale(uint256,uint256)",
            "getPreSaleBonusRate(uint256)",
            "startCrowdfund(uint256)",
            "endCrowdfund()",
            "getNoOfTokens(uint256,uint256)",
            "getCurrentBonusRate()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "BiQCrowdFund(address,address,address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "setFounderMultiSigAddress(address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "setAuthorizerAddress(address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "setRemainingTokenHolder(address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "setTokenAddress(address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "changeCrowdfundState()": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "authorize(address,uint256)": {
                "argument": {
                    "max_amount": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "fundTransfer(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "getPreAuthorizedAmount(address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "calculateTotalTokenPerContribution(uint256)": {
                "argument": {
                    "_totalETHContribution": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "currentBonus(uint256)": {
                "argument": {
                    "_ethContribution": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "buyPreSaleTokens(address)": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "getTokensForPreSale(uint256,uint256)": {
                "argument": {
                    "_exchangeRate": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "getPreSaleBonusRate(uint256)": {
                "argument": {
                    "_ethAmount": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "startCrowdfund(uint256)": {
                "argument": {
                    "_exchangeRate": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "endCrowdfund()": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "getNoOfTokens(uint256,uint256)": {
                "argument": {
                    "_exchangeRate": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "getCurrentBonusRate()": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "crowdfundStartTime": "uint256",
                    "crowdfundEndTime": "uint256",
                    "totalWeiRaised": "uint256",
                    "exchangeRate": "uint256",
                    "minAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "authorize(address,uint256)": [
                1297,
                449
            ],
            "endCrowdfund()": [
                542,
                163
            ],
            "changeCrowdfundState()": [
                1073,
                361
            ],
            "setTokenAddress(address)": [
                475,
                141
            ],
            "startCrowdfund(uint256)": [
                920,
                295
            ],
            "setAuthorizerAddress(address)": [
                1374,
                471
            ],
            "setRemainingTokenHolder(address)": [
                723,
                229
            ],
            "setFounderMultiSigAddress(address)": [
                408,
                119
            ],
            "calculateTotalTokenPerContribution(uint256)": [
                1008,
                339
            ],
            "getPreAuthorizedAmount(address)": [
                1441,
                493
            ],
            "currentBonus(uint256)": [
                1096,
                383
            ],
            "getState()": [
                351,
                97
            ],
            "buyTokens(address)": [
                1528,
                515
            ]
        },
        "block_CALL_mapping": {
            "jump6169": [
                "token.changeTotalSupply(amount)",
                "token.changeTotalSupply(amount)"
            ],
            "jump6326_0": [
                "founderMultiSigAddress.transfer(weiAmount)",
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "jump2427": [
                "token.transfer(beneficiary, amount)",
                "token.transfer(beneficiary, amount)"
            ],
            "block6326_4": [
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "jump5961": [
                "token.transfer(beneficiary, amount)",
                "token.transfer(beneficiary, amount)"
            ],
            "block6326_0": [
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "block6326_1": [
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "block6326_2": [
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "block6326_3": [
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "jump4039": [
                "token.transfer(remainingTokenHolder, remainingToken)",
                "token.transfer(remainingTokenHolder, remainingToken)"
            ],
            "jump6326_4": [
                "founderMultiSigAddress.transfer(weiAmount)",
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "jump6326_2": [
                "founderMultiSigAddress.transfer(weiAmount)",
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "jump6326_3": [
                "founderMultiSigAddress.transfer(weiAmount)",
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "block2635": [
                "token.changeTotalSupply(amount)"
            ],
            "jump6326_1": [
                "founderMultiSigAddress.transfer(weiAmount)",
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "block4039": [
                "token.transfer(remainingTokenHolder, remainingToken)"
            ],
            "block3736": [
                "token.balanceOf(this)"
            ],
            "jump6326": [
                "founderMultiSigAddress.transfer(weiAmount)",
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "jump2635_1": [
                "token.changeTotalSupply(amount)",
                "token.changeTotalSupply(amount)"
            ],
            "jump2635_0": [
                "token.changeTotalSupply(amount)",
                "token.changeTotalSupply(amount)"
            ],
            "jump2427_0": [
                "token.transfer(beneficiary, amount)",
                "token.transfer(beneficiary, amount)"
            ],
            "jump2427_1": [
                "token.transfer(beneficiary, amount)",
                "token.transfer(beneficiary, amount)"
            ],
            "jump6169_1": [
                "token.changeTotalSupply(amount)",
                "token.changeTotalSupply(amount)"
            ],
            "jump6169_0": [
                "token.changeTotalSupply(amount)",
                "token.changeTotalSupply(amount)"
            ],
            "block6326": [
                "founderMultiSigAddress.transfer(weiAmount)"
            ],
            "block5961": [
                "token.transfer(beneficiary, amount)"
            ],
            "jump2635": [
                "token.changeTotalSupply(amount)",
                "token.changeTotalSupply(amount)"
            ],
            "jump3736": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block6169_1": [
                "token.changeTotalSupply(amount)"
            ],
            "block6169_0": [
                "token.changeTotalSupply(amount)"
            ],
            "block2427_0": [
                "token.transfer(beneficiary, amount)"
            ],
            "block2427_1": [
                "token.transfer(beneficiary, amount)"
            ],
            "jump5961_0": [
                "token.transfer(beneficiary, amount)",
                "token.transfer(beneficiary, amount)"
            ],
            "jump5961_1": [
                "token.transfer(beneficiary, amount)",
                "token.transfer(beneficiary, amount)"
            ],
            "block2427": [
                "token.transfer(beneficiary, amount)"
            ],
            "block5961_0": [
                "token.transfer(beneficiary, amount)"
            ],
            "block5961_1": [
                "token.transfer(beneficiary, amount)"
            ],
            "block2635_1": [
                "token.changeTotalSupply(amount)"
            ],
            "block2635_0": [
                "token.changeTotalSupply(amount)"
            ],
            "block6169": [
                "token.changeTotalSupply(amount)"
            ]
        }
    }
}