{
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "HalloweenCollectorToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "HalloweenCollectorToken()",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "fallback()",
            "withdrawForeignTokens(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "HalloweenCollectorToken()": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "withdrawForeignTokens(address)": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "token_name": "string",
                    "token_symbol": "string",
                    "token_decimals": "uint8",
                    "ether_per_token": "uint256",
                    "TOKEN_SWAP_DURATION_HOURS": "uint256",
                    "token_airdrop_cnt_max": "uint256",
                    "token_airdrop_amount_each": "uint256",
                    "token_swap_supply": "uint256",
                    "time_of_token_swap_start": "uint256",
                    "time_of_token_swap_end": "uint256",
                    "totSupply": "uint256",
                    "airdrop_cnt": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                1938,
                119
            ],
            "symbol()": [
                2437,
                273
            ],
            "name()": [
                1794,
                97
            ],
            "totalSupply()": [
                2039,
                141
            ],
            "withdrawForeignTokens(address)": [
                2930,
                405
            ],
            "balanceOf(address)": [
                5384,
                847
            ],
            "transferFrom(address,address,uint256)": [
                2082,
                163
            ],
            "allowance(address,address)": [
                2811,
                383
            ],
            "transfer(address,uint256)": [
                5642,
                996
            ],
            "decimals()": [
                2215,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump5642": [
                "token.transfer(owner, amount)",
                "token.transfer(owner, amount)"
            ],
            "jump1117_0": [
                "owner.transfer(cost)",
                "owner.transfer(cost)"
            ],
            "jump1117": [
                "owner.transfer(cost)",
                "owner.transfer(cost)"
            ],
            "jump1223": [
                "msg.sender.transfer(change)",
                "msg.sender.transfer(change)"
            ],
            "block5384": [
                "token.balanceOf(address(this))"
            ],
            "jump1223_0": [
                "msg.sender.transfer(change)",
                "msg.sender.transfer(change)"
            ],
            "block5642": [
                "token.transfer(owner, amount)"
            ],
            "block1223": [
                "msg.sender.transfer(change)"
            ],
            "block1117": [
                "owner.transfer(cost)"
            ],
            "jump5384": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block1223_0": [
                "msg.sender.transfer(change)"
            ],
            "block1117_0": [
                "owner.transfer(cost)"
            ]
        }
    }
}