{
    "PPBC_API": {
        "function_list": [
            "GetMinimumBet_ether()",
            "GetMaximumBet_ether()",
            "GetMinimumBet()",
            "GetMaximumBet()",
            "_api_PlaceBet(bool)",
            "createRandomNumber(uint256)",
            "PPBC_API()",
            "_maint_withdrawFromPool(uint256)",
            "_maint_EndPromo()",
            "_maint_setBlockLimit(uint256)",
            "_maint_setCustomSeed(uint256)",
            "_maint_updateOwner(address)",
            "fallback()"
        ],
        "initial_state": {
            "GetMinimumBet_ether()": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "GetMaximumBet_ether()": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "GetMinimumBet()": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "GetMaximumBet()": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "_api_PlaceBet(bool)": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "createRandomNumber(uint256)": {
                "argument": {
                    "maxnum": "uint256"
                },
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "PPBC_API()": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "_maint_withdrawFromPool(uint256)": {
                "argument": {
                    "amt": "uint256"
                },
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "_maint_EndPromo()": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "_maint_setBlockLimit(uint256)": {
                "argument": {
                    "n_limit": "uint256"
                },
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "_maint_setCustomSeed(uint256)": {
                "argument": {
                    "newSeed": "uint256"
                },
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "_maint_updateOwner(address)": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "gamesPlayed": "uint256",
                    "seed1": "uint256",
                    "seed2": "uint256",
                    "seed3": "uint256",
                    "seed4": "uint256",
                    "seed5": "uint256",
                    "lastBlock": "uint256",
                    "lastRandom": "uint256",
                    "lastGas": "uint256",
                    "customSeed": "uint256",
                    "maxGamesPerBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "createRandomNumber(uint256)": [
                607,
                273
            ],
            "GetMaximumBet_ether()": [
                521,
                229
            ],
            "_maint_setBlockLimit(uint256)": [
                431,
                185
            ],
            "_api_PlaceBet(bool)": [
                266,
                97
            ],
            "GetMinimumBet_ether()": [
                345,
                141
            ],
            "GetMaximumBet()": [
                738,
                339
            ],
            "_maint_setCustomSeed(uint256)": [
                476,
                207
            ],
            "_maint_updateOwner(address)": [
                199,
                75
            ],
            "GetMinimumBet()": [
                564,
                251
            ],
            "_maint_withdrawFromPool(uint256)": [
                300,
                119
            ],
            "_maint_EndPromo()": [
                672,
                295
            ]
        },
        "block_CALL_mapping": {
            "block1555": [
                "paddyAdmin.send(amt)"
            ],
            "block1389": [
                "msg.sender.send(msg.value * 2)"
            ],
            "jump1555": [
                "paddyAdmin.send(amt)",
                "paddyAdmin.send(amt)"
            ],
            "jump1389": [
                "msg.sender.send(msg.value * 2)",
                "msg.sender.send(msg.value * 2)"
            ]
        }
    }
}