{
    "Base": {
        "function_list": [
            "Base()",
            "version()",
            "contractBalance()",
            "changeOwner(address)",
            "safeSend(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Base()": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "version()": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "contractBalance()": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "safeSend(address,uint256)": {
                "argument": {
                    "_ether": "uint256"
                },
                "contract": {
                    "VERSION": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            }
        },
        "function_block_mapping": {
            "contractBalance()": [
                247,
                97
            ],
            "version()": [
                103,
                75
            ],
            "changeOwner(address)": [
                377,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "Math": {
        "function_list": [
            "version()",
            "assert(bool)",
            "cmp(uint256,uint256,bool)",
            "cmpEq(uint256,uint256,bool)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "version()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            },
            "cmp(uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            },
            "cmpEq(uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "iTRUE": "uint256",
                    "iFALSE": "uint256",
                    "iPOS": "uint256",
                    "iZERO": "uint256",
                    "iNEG": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "version()": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "totalSupply": "uint256",
                    "decimalPlaces": "uint8",
                    "name": "string",
                    "symbol": "string"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "version()",
            "assert(bool)",
            "cmp(uint256,uint256,bool)",
            "cmpEq(uint256,uint256,bool)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "Base()",
            "version()",
            "contractBalance()",
            "changeOwner(address)",
            "safeSend(address,uint256)",
            "ERC20Token(uint256,uint8,string,string)",
            "version()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "version()": {
                "argument": {},
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "cmp(uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "cmpEq(uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "Base()": {
                "argument": {},
                "contract": {}
            },
            "contractBalance()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "safeSend(address,uint256)": {
                "argument": {
                    "_ether": "uint256"
                },
                "contract": {}
            },
            "ERC20Token(uint256,uint8,string,string)": {
                "argument": {
                    "_supply": "uint256",
                    "_decimalPlaces": "uint8",
                    "_symbol": "string",
                    "_name": "string"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "balanceOf(address)": [
                767,
                185
            ],
            "contractBalance()": [
                854,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "version()": [
                623,
                163
            ],
            "transfer(address,uint256)": [
                1219,
                295
            ],
            "changeOwner(address)": [
                1128,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "LibCLLu": {
        "function_list": [
            "version()",
            "exists(LibCLLu.CLL)",
            "sizeOf(LibCLLu.CLL)",
            "getNode(LibCLLu.CLL,uint256)",
            "step(LibCLLu.CLL,uint256,bool)",
            "seek(LibCLLu.CLL,uint256,uint256,bool)",
            "stitch(LibCLLu.CLL,uint256,uint256,bool)",
            "insert(LibCLLu.CLL,uint256,uint256,bool)",
            "remove(LibCLLu.CLL,uint256)",
            "push(LibCLLu.CLL,uint256,bool)",
            "pop(LibCLLu.CLL,bool)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "version()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "exists(LibCLLu.CLL)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "sizeOf(LibCLLu.CLL)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "getNode(LibCLLu.CLL,uint256)": {
                "argument": {
                    "n": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "step(LibCLLu.CLL,uint256,bool)": {
                "argument": {
                    "n": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "seek(LibCLLu.CLL,uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "stitch(LibCLLu.CLL,uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "insert(LibCLLu.CLL,uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "remove(LibCLLu.CLL,uint256)": {
                "argument": {
                    "n": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "push(LibCLLu.CLL,uint256,bool)": {
                "argument": {
                    "n": "uint256"
                },
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "pop(LibCLLu.CLL,bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "string",
                    "NULL": "uint256",
                    "HEAD": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "LibCLLi": {
        "function_list": [
            "version()",
            "exists(LibCLLi.CLL,int256)",
            "sizeOf(LibCLLi.CLL)",
            "getNode(LibCLLi.CLL,int256)",
            "step(LibCLLi.CLL,int256,bool)",
            "seek(LibCLLi.CLL,int256,int256,bool)",
            "stitch(LibCLLi.CLL,int256,int256,bool)",
            "insert(LibCLLi.CLL,int256,int256,bool)",
            "remove(LibCLLi.CLL,int256)",
            "push(LibCLLi.CLL,int256,bool)",
            "pop(LibCLLi.CLL,bool)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "version()": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "exists(LibCLLi.CLL,int256)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "sizeOf(LibCLLi.CLL)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "getNode(LibCLLi.CLL,int256)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "step(LibCLLi.CLL,int256,bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "seek(LibCLLi.CLL,int256,int256,bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "stitch(LibCLLi.CLL,int256,int256,bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "insert(LibCLLi.CLL,int256,int256,bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "remove(LibCLLi.CLL,int256)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "push(LibCLLi.CLL,int256,bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "pop(LibCLLi.CLL,bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "string"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ITT": {
        "function_list": [
            "spread(bool)",
            "getAmount(uint256,address)",
            "getPriceVolume(uint256)",
            "getBook()",
            "buy(uint256,uint256,bool)",
            "sell(uint256,uint256,bool)",
            "withdraw(uint256)",
            "cancel(uint256)",
            "setTrading(bool)",
            "ERC20Token(uint256,uint8,string,string)",
            "version()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "version()",
            "assert(bool)",
            "cmp(uint256,uint256,bool)",
            "cmpEq(uint256,uint256,bool)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "Base()",
            "version()",
            "contractBalance()",
            "changeOwner(address)",
            "safeSend(address,uint256)",
            "ITT(uint256,uint8,string,string)",
            "version()",
            "etherBalanceOf(address)",
            "spread(bool)",
            "getAmount(uint256,address)",
            "sizeOf(uint256)",
            "getPriceVolume(uint256)",
            "getBook()",
            "numOrdersOf(address)",
            "getOpenOrdersOf(address)",
            "getNode(uint256,uint256)",
            "buy(uint256,uint256,bool)",
            "sell(uint256,uint256,bool)",
            "withdraw(uint256)",
            "cancel(uint256)",
            "setTrading(bool)",
            "trade(uint256,uint256,bool,bool)",
            "take(ITTInterface.TradeMessage)",
            "make(ITTInterface.TradeMessage)",
            "cancelIntl(ITTInterface.TradeMessage)",
            "closeOrder(uint256,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "spread(bool)": {
                "argument": {},
                "contract": {}
            },
            "getAmount(uint256,address)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {}
            },
            "getPriceVolume(uint256)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {}
            },
            "getBook()": {
                "argument": {},
                "contract": {}
            },
            "buy(uint256,uint256,bool)": {
                "argument": {
                    "_bidPrice": "uint256",
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "sell(uint256,uint256,bool)": {
                "argument": {
                    "_askPrice": "uint256",
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "withdraw(uint256)": {
                "argument": {
                    "_ether": "uint256"
                },
                "contract": {}
            },
            "cancel(uint256)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {}
            },
            "setTrading(bool)": {
                "argument": {},
                "contract": {}
            },
            "ERC20Token(uint256,uint8,string,string)": {
                "argument": {
                    "_supply": "uint256",
                    "_decimalPlaces": "uint8",
                    "_symbol": "string",
                    "_name": "string"
                },
                "contract": {}
            },
            "version()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "cmp(uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "cmpEq(uint256,uint256,bool)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "Base()": {
                "argument": {},
                "contract": {}
            },
            "contractBalance()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "safeSend(address,uint256)": {
                "argument": {
                    "_ether": "uint256"
                },
                "contract": {}
            },
            "ITT(uint256,uint8,string,string)": {
                "argument": {
                    "_totalSupply": "uint256",
                    "_decimalPlaces": "uint8",
                    "_symbol": "string",
                    "_name": "string"
                },
                "contract": {}
            },
            "etherBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "sizeOf(uint256)": {
                "argument": {
                    "l": "uint256"
                },
                "contract": {}
            },
            "numOrdersOf(address)": {
                "argument": {},
                "contract": {}
            },
            "getOpenOrdersOf(address)": {
                "argument": {},
                "contract": {}
            },
            "getNode(uint256,uint256)": {
                "argument": {
                    "_list": "uint256",
                    "_node": "uint256"
                },
                "contract": {}
            },
            "trade(uint256,uint256,bool,bool)": {
                "argument": {
                    "_price": "uint256",
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "take(ITTInterface.TradeMessage)": {
                "argument": {},
                "contract": {}
            },
            "make(ITTInterface.TradeMessage)": {
                "argument": {},
                "contract": {}
            },
            "cancelIntl(ITTInterface.TradeMessage)": {
                "argument": {},
                "contract": {}
            },
            "closeOrder(uint256,address)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1514,
                317
            ],
            "getOpenOrdersOf(address)": [
                1362,
                295
            ],
            "etherBalanceOf(address)": [
                612,
                119
            ],
            "sizeOf(uint256)": [
                2526,
                581
            ],
            "transferFrom(address,address,uint256)": [
                742,
                163
            ],
            "getAmount(uint256,address)": [
                1121,
                251
            ],
            "approve(address,uint256)": [
                511,
                97
            ],
            "numOrdersOf(address)": [
                1601,
                339
            ],
            "version()": [
                1218,
                273
            ],
            "changeOwner(address)": [
                2256,
                515
            ],
            "sell(uint256,uint256,bool)": [
                1688,
                361
            ],
            "withdraw(uint256)": [
                875,
                185
            ],
            "setTrading(bool)": [
                1976,
                449
            ],
            "spread(bool)": [
                1822,
                405
            ],
            "buy(uint256,uint256,bool)": [
                2448,
                559
            ],
            "contractBalance()": [
                1779,
                383
            ],
            "cancel(uint256)": [
                1052,
                229
            ],
            "transfer(address,uint256)": [
                2347,
                537
            ],
            "getBook()": [
                944,
                207
            ],
            "getPriceVolume(uint256)": [
                2191,
                493
            ],
            "getNode(uint256,uint256)": [
                2759,
                647
            ]
        },
        "block_CALL_mapping": {
            "jump8466": [
                "_recipient.call.value(_ether)()",
                "_recipient.call.value(_ether)()"
            ],
            "block8466": [
                "_recipient.call.value(_ether)()"
            ]
        }
    }
}