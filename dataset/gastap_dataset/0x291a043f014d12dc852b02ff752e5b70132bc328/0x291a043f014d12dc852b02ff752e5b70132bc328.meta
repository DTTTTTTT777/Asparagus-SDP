{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "issue(address,uint256)",
            "issueAtIco(address,uint256,uint256)",
            "totalSupply()",
            "unlock()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "issue(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "issueAtIco(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_icoNumber": "uint256"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "unlock()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unlock()": [
                369,
                141
            ],
            "issueAtIco(address,uint256,uint256)": [
                157,
                97
            ],
            "transferOwnership(address)": [
                416,
                163
            ],
            "issue(address,uint256)": [
                268,
                119
            ],
            "totalSupply()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "CryptoCopyCrowdsale": {
        "function_list": [
            "setToken(address)",
            "returnOwnershipOfToken()",
            "setCreator(address)",
            "balanceOf(address)",
            "CryptoCopyCrowdsale(address,uint256,uint256)",
            "withdrawBountyAndAdvisory()",
            "setEnd(uint256)",
            "setBountyPool(address)",
            "setAdvisoryPool(address)",
            "setBuyBackFund(address)",
            "updateState()",
            "releaseTokens(address)",
            "withdraw()",
            "addSubscriptionBonus(address)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "returnOwnershipOfToken()": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "setCreator(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "CryptoCopyCrowdsale(address,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256"
                },
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "withdrawBountyAndAdvisory()": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "setEnd(uint256)": {
                "argument": {
                    "_end": "uint256"
                },
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "setBountyPool(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "setAdvisoryPool(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "setBuyBackFund(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "updateState()": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "releaseTokens(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "addSubscriptionBonus(address)": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minAcceptedEthAmount": "uint256",
                    "maxTotalSupply": "uint256",
                    "tokensForInvestors": "uint256",
                    "tokensForBounty": "uint256",
                    "tokensForAdvisory": "uint256",
                    "totalTokenIssued": "uint256",
                    "bonusFirstTwoDaysPeriod": "uint256",
                    "bonusFirstWeekPeriod": "uint256",
                    "bonusSecondWeekPeriod": "uint256",
                    "bonusThirdWeekPeriod": "uint256",
                    "bonusFourthWeekPeriod": "uint256",
                    "bonusFirstTwoDays": "uint256",
                    "bonusFirstWeek": "uint256",
                    "bonusSecondWeek": "uint256",
                    "bonusThirdWeek": "uint256",
                    "bonusFourthWeek": "uint256",
                    "bonusSubscription": "uint256",
                    "bonusOver3ETH": "uint256",
                    "bonusOver10ETH": "uint256",
                    "bonusOver30ETH": "uint256",
                    "bonusOver100ETH": "uint256",
                    "totalInvested": "uint256",
                    "totalInvestedWithBonuses": "uint256",
                    "hardCap": "uint256",
                    "softCap": "uint256",
                    "start": "uint256",
                    "end": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setAdvisoryPool(address)": [
                2257,
                493
            ],
            "withdrawBountyAndAdvisory()": [
                2125,
                405
            ],
            "releaseTokens(address)": [
                2671,
                669
            ],
            "balanceOf(address)": [
                2496,
                603
            ],
            "setEnd(uint256)": [
                2626,
                647
            ],
            "setBuyBackFund(address)": [
                3551,
                1065
            ],
            "updateState()": [
                1556,
                163
            ],
            "setToken(address)": [
                1446,
                119
            ],
            "withdraw()": [
                2035,
                361
            ],
            "setCreator(address)": [
                2058,
                383
            ],
            "returnOwnershipOfToken()": [
                2148,
                427
            ],
            "addSubscriptionBonus(address)": [
                2781,
                713
            ],
            "setBountyPool(address)": [
                1622,
                207
            ]
        },
        "block_CALL_mapping": {
            "block6725": [
                "CryptoCopyToken.issue(investorAddress, tokensToBeReleased - tokenBalances[investorAddress])"
            ],
            "jump5759": [
                "CryptoCopyToken.transferOwnership(creator)",
                "CryptoCopyToken.transferOwnership(creator)"
            ],
            "block5374": [
                "CryptoCopyToken.issue(advisoryPool, tokensForAdvisory)"
            ],
            "jump4489": [
                "creator.send(ethBalance)",
                "creator.send(ethBalance)"
            ],
            "jump6725": [
                "CryptoCopyToken.issue(investorAddress, tokensToBeReleased - tokenBalances[investorAddress])",
                "CryptoCopyToken.issue(investorAddress, tokensToBeReleased - tokenBalances[investorAddress])"
            ],
            "jump5374": [
                "CryptoCopyToken.issue(advisoryPool, tokensForAdvisory)",
                "CryptoCopyToken.issue(advisoryPool, tokensForAdvisory)"
            ],
            "block4489": [
                "creator.send(ethBalance)"
            ],
            "block5071": [
                "CryptoCopyToken.issue(bountyPool, tokensForBounty)"
            ],
            "jump5071": [
                "CryptoCopyToken.issue(bountyPool, tokensForBounty)",
                "CryptoCopyToken.issue(bountyPool, tokensForBounty)"
            ],
            "block5759": [
                "CryptoCopyToken.transferOwnership(creator)"
            ]
        }
    }
}