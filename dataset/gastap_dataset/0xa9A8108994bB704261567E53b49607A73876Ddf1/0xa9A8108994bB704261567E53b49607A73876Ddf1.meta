{
    "token": {
        "function_list": [
            "transfer(address,uint256)",
            "priviledgedAddressBurnUnsoldCoins()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "priviledgedAddressBurnUnsoldCoins()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                98,
                97
            ],
            "priviledgedAddressBurnUnsoldCoins()": [
                78,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [
            "owned()",
            "ownerTransferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "ownerTransferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "ownerTransferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSSafeAddSub": {
        "function_list": [
            "safeToAdd(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeToSubtract(uint256,uint256)",
            "safeSub(uint256,uint256)"
        ],
        "initial_state": {
            "safeToAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeToSubtract(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "EtherollCrowdfund": {
        "function_list": [
            "safeToAdd(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeToSubtract(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "owned()",
            "ownerTransferOwnership(address)",
            "EtherollCrowdfund(address,address,uint256,uint256,token)",
            "fallback()",
            "safeWithdraw()",
            "calcRefund(address)",
            "emergencyWithdraw()",
            "ownerSetEmergencyStatus(bool)",
            "ownerBurnUnsoldTokens()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeToAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "safeToSubtract(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "ownerTransferOwnership(address)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "EtherollCrowdfund(address,address,uint256,uint256,token)": {
                "argument": {
                    "_fundingGoalInEthers": "uint256",
                    "_durationInMinutes": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "safeWithdraw()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "calcRefund(address)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "emergencyWithdraw()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "ownerSetEmergencyStatus(bool)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            },
            "ownerBurnUnsoldTokens()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "weekTwoPriceRiseBegin": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "bankrollBeneficiaryAmount": "uint256",
                    "etherollBeneficiaryAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "ownerBurnUnsoldTokens()": [
                1251,
                75
            ],
            "safeWithdraw()": [
                1620,
                229
            ],
            "ownerSetEmergencyStatus(bool)": [
                1817,
                295
            ],
            "ownerTransferOwnership(address)": [
                1907,
                339
            ],
            "emergencyWithdraw()": [
                2288,
                493
            ]
        },
        "block_CALL_mapping": {
            "block579": [
                "tokenReward.transfer(msg.sender, ((msg.value*price)/price)*2)"
            ],
            "jump579_0": [
                "tokenReward.transfer(msg.sender, ((msg.value*price)/price)*2)",
                "tokenReward.transfer(msg.sender, ((msg.value*price)/price)*2)"
            ],
            "jump944": [
                "tokenReward.transfer(msg.sender, (msg.value*price)/price)",
                "tokenReward.transfer(msg.sender, (msg.value*price)/price)"
            ],
            "block4239_0": [
                "_addressToRefund.call.value(amount)()"
            ],
            "block3165": [
                "etherollBeneficiary.send(etherollBeneficiaryAmount)"
            ],
            "block3063": [
                "bankRollBeneficiary.send(bankrollBeneficiaryAmount)"
            ],
            "jump3063": [
                "bankRollBeneficiary.send(bankrollBeneficiaryAmount)",
                "bankRollBeneficiary.send(bankrollBeneficiaryAmount)"
            ],
            "jump944_0": [
                "tokenReward.transfer(msg.sender, (msg.value*price)/price)",
                "tokenReward.transfer(msg.sender, (msg.value*price)/price)"
            ],
            "block579_0": [
                "tokenReward.transfer(msg.sender, ((msg.value*price)/price)*2)"
            ],
            "block2585": [
                "tokenReward.priviledgedAddressBurnUnsoldCoins()"
            ],
            "jump2585": [
                "tokenReward.priviledgedAddressBurnUnsoldCoins()",
                "tokenReward.priviledgedAddressBurnUnsoldCoins()"
            ],
            "jump4239_0": [
                "_addressToRefund.call.value(amount)()",
                "_addressToRefund.call.value(amount)()"
            ],
            "jump4239": [
                "_addressToRefund.call.value(amount)()",
                "_addressToRefund.call.value(amount)()"
            ],
            "block944_0": [
                "tokenReward.transfer(msg.sender, (msg.value*price)/price)"
            ],
            "block944": [
                "tokenReward.transfer(msg.sender, (msg.value*price)/price)"
            ],
            "jump579": [
                "tokenReward.transfer(msg.sender, ((msg.value*price)/price)*2)",
                "tokenReward.transfer(msg.sender, ((msg.value*price)/price)*2)"
            ],
            "jump3165": [
                "etherollBeneficiary.send(etherollBeneficiaryAmount)",
                "etherollBeneficiary.send(etherollBeneficiaryAmount)"
            ],
            "block4239": [
                "_addressToRefund.call.value(amount)()"
            ]
        }
    }
}