{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                291,
                97
            ],
            "balanceOf(address)": [
                611,
                185
            ],
            "totalSupply()": [
                392,
                119
            ],
            "transferFrom(address,address,uint256)": [
                435,
                141
            ],
            "allowance(address,address)": [
                799,
                229
            ],
            "transfer(address,uint256)": [
                698,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "ValueToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "createValue(address,uint256)",
            "destroyValue(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "createValue(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            },
            "destroyValue(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "supplyNow": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                291,
                97
            ],
            "balanceOf(address)": [
                611,
                185
            ],
            "totalSupply()": [
                392,
                119
            ],
            "transferFrom(address,address,uint256)": [
                435,
                141
            ],
            "allowance(address,address)": [
                799,
                229
            ],
            "transfer(address,uint256)": [
                698,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "ValueTrader": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "createValue(address,uint256)",
            "destroyValue(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "fallback()",
            "toggleDrain()",
            "toggleBurn()",
            "die()",
            "validateToken(address,uint256,uint256,uint256)",
            "configureTokenDividend(address,bool,address,bytes)",
            "callDividend(address)",
            "invalidateToken(address)",
            "changeOwner(address)",
            "changeFee(uint256)",
            "changeEtherContract(address)",
            "ValueTrader()",
            "valueWithFee(uint256)",
            "currentPrice(address)",
            "currentLiquidity(address)",
            "valueToToken(address,uint256)",
            "tokenToValue(address,uint256)",
            "sellToken(address,uint256)",
            "buyToken(address,uint256)",
            "sellEther()",
            "buyEther(uint256)",
            "quickTrade(address,address,uint256)",
            "verifiedTransferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "createValue(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "destroyValue(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "toggleDrain()": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "toggleBurn()": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "die()": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "validateToken(address,uint256,uint256,uint256)": {
                "argument": {
                    "bP_": "uint256",
                    "bL_": "uint256",
                    "pF_": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "configureTokenDividend(address,bool,address,bytes)": {
                "argument": {
                    "dD_": "bytes"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "callDividend(address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "invalidateToken(address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "changeFee(uint256)": {
                "argument": {
                    "tradeFee": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "changeEtherContract(address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "ValueTrader()": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "valueWithFee(uint256)": {
                "argument": {
                    "tempValue": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "currentPrice(address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "currentLiquidity(address)": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "valueToToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "tokenToValue(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "sellToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "buyToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "sellEther()": {
                "argument": {},
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "buyEther(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "quickTrade(address,address,uint256)": {
                "argument": {
                    "input": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            },
            "verifiedTransferFrom(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tradeCoefficient": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                11339,
                889
            ],
            "totalSupply()": [
                598,
                119
            ],
            "invalidateToken(address)": [
                840,
                207
            ],
            "allowance(address,address)": [
                1823,
                515
            ],
            "transferFrom(address,address,uint256)": [
                11123,
                941
            ],
            "configureTokenDividend(address,bool,address,bytes)": [
                1417,
                405
            ],
            "approve(address,uint256)": [
                497,
                97
            ],
            "changeFee(uint256)": [
                1165,
                317
            ],
            "toggleDrain()": [
                2074,
                581
            ],
            "quickTrade(address,address,uint256)": [
                2261,
                647
            ],
            "currentPrice(address)": [
                1987,
                559
            ],
            "validateToken(address,uint256,uint256,uint256)": [
                1210,
                339
            ],
            "changeOwner(address)": [
                1645,
                449
            ],
            "sellEther()": [
                1813,
                493
            ],
            "changeEtherContract(address)": [
                907,
                229
            ],
            "currentLiquidity(address)": [
                2174,
                625
            ],
            "callDividend(address)": [
                1021,
                273
            ],
            "sellToken(address,uint256)": [
                2097,
                603
            ],
            "buyToken(address,uint256)": [
                1088,
                295
            ],
            "die()": [
                817,
                185
            ],
            "buyEther(uint256)": [
                1942,
                537
            ],
            "toggleBurn()": [
                1394,
                383
            ],
            "transfer(address,uint256)": [
                9721,
                862
            ]
        },
        "block_CALL_mapping": {
            "block9721": [
                "Token(tokenTo).transfer(msg.sender, outValue)"
            ],
            "jump8486": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump11339": [
                "Token(tokenFrom).balanceOf(this)",
                "Token(tokenFrom).balanceOf(this)"
            ],
            "jump10847_0": [
                "Token(tokenFrom).balanceOf(this)",
                "Token(tokenFrom).balanceOf(this)"
            ],
            "jump8486_8": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump8486_5": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump8486_4": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump8486_7": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump8486_6": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump8486_1": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump8486_0": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump8486_3": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "block11123": [
                "Token(tokenFrom).transferFrom(senderAdd, this, amount)"
            ],
            "jump11123_0": [
                "Token(tokenFrom).transferFrom(senderAdd, this, amount)",
                "Token(tokenFrom).transferFrom(senderAdd, this, amount)"
            ],
            "block11339_0": [
                "Token(tokenFrom).balanceOf(this)"
            ],
            "jump9210": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "jump11339_0": [
                "Token(tokenFrom).balanceOf(this)",
                "Token(tokenFrom).balanceOf(this)"
            ],
            "block4621": [
                "tokenManage[token_].divContractAddress.call.value(0)(tokenManage[token_].divData)"
            ],
            "jump9721": [
                "Token(tokenTo).transfer(msg.sender, outValue)",
                "Token(tokenTo).transfer(msg.sender, outValue)"
            ],
            "jump11123": [
                "Token(tokenFrom).transferFrom(senderAdd, this, amount)",
                "Token(tokenFrom).transferFrom(senderAdd, this, amount)"
            ],
            "block4928": [
                "Token(token).transfer(msg.sender, amount)"
            ],
            "jump4928": [
                "Token(token).transfer(msg.sender, amount)",
                "Token(token).transfer(msg.sender, amount)"
            ],
            "block9499": [
                "msg.sender.call.value(outValue)()"
            ],
            "block11339": [
                "Token(tokenFrom).balanceOf(this)"
            ],
            "block8486_7": [
                "Token(token).balanceOf(this)"
            ],
            "block8486_6": [
                "Token(token).balanceOf(this)"
            ],
            "block8486_5": [
                "Token(token).balanceOf(this)"
            ],
            "block8486_4": [
                "Token(token).balanceOf(this)"
            ],
            "block8486_3": [
                "Token(token).balanceOf(this)"
            ],
            "block10847_0": [
                "Token(tokenFrom).balanceOf(this)"
            ],
            "block8486_1": [
                "Token(token).balanceOf(this)"
            ],
            "block8486_0": [
                "Token(token).balanceOf(this)"
            ],
            "block10847": [
                "Token(tokenFrom).balanceOf(this)"
            ],
            "jump8486_2": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "block8486_8": [
                "Token(token).balanceOf(this)"
            ],
            "block8486": [
                "Token(token).balanceOf(this)"
            ],
            "block7562": [
                "msg.sender.call.value(amount)()"
            ],
            "jump10847": [
                "Token(tokenFrom).balanceOf(this)",
                "Token(tokenFrom).balanceOf(this)"
            ],
            "block9210": [
                "Token(token).balanceOf(this)"
            ],
            "block11123_0": [
                "Token(tokenFrom).transferFrom(senderAdd, this, amount)"
            ],
            "block8486_2": [
                "Token(token).balanceOf(this)"
            ]
        }
    },
    "ShopKeeper": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "fallback()",
            "ShopKeeper(address)",
            "giveAwayOwnership(address)",
            "splitProfits()",
            "toggleDrain()",
            "toggleBurn()",
            "die()",
            "validateToken(address,uint256,uint256,uint256)",
            "configureTokenDividend(address,bool,address,bytes)",
            "callDividend(address)",
            "invalidateToken(address)",
            "changeOwner(address)",
            "changeShop(address)",
            "changeFee(uint256)",
            "changeEtherContract(address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "ShopKeeper(address)": {
                "argument": {},
                "contract": {}
            },
            "giveAwayOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "splitProfits()": {
                "argument": {},
                "contract": {}
            },
            "toggleDrain()": {
                "argument": {},
                "contract": {}
            },
            "toggleBurn()": {
                "argument": {},
                "contract": {}
            },
            "die()": {
                "argument": {},
                "contract": {}
            },
            "validateToken(address,uint256,uint256,uint256)": {
                "argument": {
                    "bP_": "uint256",
                    "bL_": "uint256",
                    "pF_": "uint256"
                },
                "contract": {}
            },
            "configureTokenDividend(address,bool,address,bytes)": {
                "argument": {
                    "dD_": "bytes"
                },
                "contract": {}
            },
            "callDividend(address)": {
                "argument": {},
                "contract": {}
            },
            "invalidateToken(address)": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "changeShop(address)": {
                "argument": {},
                "contract": {}
            },
            "changeFee(uint256)": {
                "argument": {
                    "tradeFee": "uint256"
                },
                "contract": {}
            },
            "changeEtherContract(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "configureTokenDividend(address,bool,address,bytes)": [
                5433,
                26
            ],
            "changeOwner(address)": [
                5939,
                925
            ],
            "changeFee(uint256)": [
                4368,
                914
            ],
            "toggleDrain()": [
                6254,
                886
            ],
            "die()": [
                2656,
                886
            ],
            "giveAwayOwnership(address)": [
                226,
                75
            ],
            "invalidateToken(address)": [
                3324,
                926
            ],
            "splitProfits()": [
                380,
                119
            ],
            "toggleBurn()": [
                5036,
                886
            ],
            "changeEtherContract(address)": [
                3716,
                926
            ],
            "callDividend(address)": [
                4020,
                926
            ],
            "validateToken(address,uint256,uint256,uint256)": [
                4784,
                986
            ],
            "changeShop(address)": [
                426,
                163
            ]
        },
        "block_CALL_mapping": {
            "block1760": [
                "shop.balanceOf(this)"
            ],
            "jump5512": [
                "shop.configureTokenDividend(token_,hD_,dA_,dD_)",
                "shop.configureTokenDividend(token_,hD_,dA_,dD_)"
            ],
            "jump4368": [
                "shop.changeFee(tradeFee)",
                "shop.changeFee(tradeFee)"
            ],
            "block3716": [
                "shop.changeEtherContract(eC)"
            ],
            "jump6254": [
                "shop.toggleDrain()",
                "shop.toggleDrain()"
            ],
            "jump4784": [
                "shop.validateToken(token_,bP_,bL_,pF_)",
                "shop.validateToken(token_,bP_,bL_,pF_)"
            ],
            "block2069": [
                "shop.transfer(holderA,equalShare)"
            ],
            "jump5036": [
                "shop.toggleBurn()",
                "shop.toggleBurn()"
            ],
            "block5512": [
                "shop.configureTokenDividend(token_,hD_,dA_,dD_)"
            ],
            "block2366": [
                "shop.transfer(holderB,equalShare)"
            ],
            "block3324": [
                "shop.invalidateToken(token_)"
            ],
            "jump3716": [
                "shop.changeEtherContract(eC)",
                "shop.changeEtherContract(eC)"
            ],
            "jump3324": [
                "shop.invalidateToken(token_)",
                "shop.invalidateToken(token_)"
            ],
            "jump2366": [
                "shop.transfer(holderB,equalShare)",
                "shop.transfer(holderB,equalShare)"
            ],
            "block4784": [
                "shop.validateToken(token_,bP_,bL_,pF_)"
            ],
            "jump5939": [
                "shop.changeOwner(owner_)",
                "shop.changeOwner(owner_)"
            ],
            "block4020": [
                "shop.callDividend(token_)"
            ],
            "jump2069": [
                "shop.transfer(holderA,equalShare)",
                "shop.transfer(holderA,equalShare)"
            ],
            "jump2656": [
                "shop.die()",
                "shop.die()"
            ],
            "jump4020": [
                "shop.callDividend(token_)",
                "shop.callDividend(token_)"
            ],
            "jump1760": [
                "shop.balanceOf(this)",
                "shop.balanceOf(this)"
            ],
            "block2656": [
                "shop.die()"
            ],
            "block6254": [
                "shop.toggleDrain()"
            ],
            "block5939": [
                "shop.changeOwner(owner_)"
            ],
            "block4368": [
                "shop.changeFee(tradeFee)"
            ],
            "block5036": [
                "shop.toggleBurn()"
            ]
        }
    },
    "ProfitContainerAdapter": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "changeShop(address)",
            "changeKeeper(address)",
            "changeContainer(address)",
            "ProfitContainerAdapter(address,address,address)",
            "takeEtherProfits()",
            "takeTokenProfits(address)",
            "giveAwayHoldership(address)",
            "giveAwayOwnership(address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "changeShop(address)": {
                "argument": {},
                "contract": {}
            },
            "changeKeeper(address)": {
                "argument": {},
                "contract": {}
            },
            "changeContainer(address)": {
                "argument": {},
                "contract": {}
            },
            "ProfitContainerAdapter(address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "takeEtherProfits()": {
                "argument": {},
                "contract": {}
            },
            "takeTokenProfits(address)": {
                "argument": {},
                "contract": {}
            },
            "giveAwayHoldership(address)": {
                "argument": {},
                "contract": {}
            },
            "giveAwayOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeContainer(address)": [
                360,
                163
            ],
            "takeEtherProfits()": [
                270,
                119
            ],
            "changeKeeper(address)": [
                203,
                97
            ],
            "giveAwayHoldership(address)": [
                427,
                185
            ],
            "giveAwayOwnership(address)": [
                2118,
                926
            ],
            "takeTokenProfits(address)": [
                494,
                207
            ],
            "changeShop(address)": [
                293,
                141
            ]
        },
        "block_CALL_mapping": {
            "block2718": [
                "shop.buyToken(token,shop.balanceOf(this))"
            ],
            "jump2718": [
                "shop.buyToken(token,shop.balanceOf(this))",
                "shop.buyToken(token,shop.balanceOf(this))"
            ],
            "block2281": [
                "ShopKeeper(shopKeeperLocation).splitProfits()"
            ],
            "jump1252": [
                "shop.balanceOf(this)",
                "shop.balanceOf(this)"
            ],
            "block2963": [
                "Token(token).balanceOf(this)"
            ],
            "jump2281": [
                "ShopKeeper(shopKeeperLocation).splitProfits()",
                "ShopKeeper(shopKeeperLocation).splitProfits()"
            ],
            "block3155": [
                "Token(token).transfer(profitContainerLocation,Token(token).balanceOf(this))"
            ],
            "block2526": [
                "shop.balanceOf(this)"
            ],
            "jump1008": [
                "ShopKeeper(shopKeeperLocation).splitProfits()",
                "ShopKeeper(shopKeeperLocation).splitProfits()"
            ],
            "jump2118": [
                "ShopKeeper(shopKeeperLocation).giveAwayOwnership(holderB)",
                "ShopKeeper(shopKeeperLocation).giveAwayOwnership(holderB)"
            ],
            "block1008": [
                "ShopKeeper(shopKeeperLocation).splitProfits()"
            ],
            "block1252": [
                "shop.balanceOf(this)"
            ],
            "jump2526": [
                "shop.balanceOf(this)",
                "shop.balanceOf(this)"
            ],
            "jump1393": [
                "shop.buyEther(shop.balanceOf(this))",
                "shop.buyEther(shop.balanceOf(this))"
            ],
            "jump2963": [
                "Token(token).balanceOf(this)",
                "Token(token).balanceOf(this)"
            ],
            "block1393": [
                "shop.buyEther(shop.balanceOf(this))"
            ],
            "block1413": [
                "profitContainerLocation.call.value(this.balance)()"
            ],
            "jump3155": [
                "Token(token).transfer(profitContainerLocation,Token(token).balanceOf(this))",
                "Token(token).transfer(profitContainerLocation,Token(token).balanceOf(this))"
            ],
            "block2118": [
                "ShopKeeper(shopKeeperLocation).giveAwayOwnership(holderB)"
            ]
        }
    }
}