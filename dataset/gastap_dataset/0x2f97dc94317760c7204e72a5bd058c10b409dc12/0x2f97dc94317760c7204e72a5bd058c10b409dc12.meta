{
    "IERC20Token": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20StandardToken": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ERC20StandardToken()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "getRealTokenAmount(uint256)",
            "doTransfer(address,address,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "ERC20StandardToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "getRealTokenAmount(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "symbol()": [
                726,
                207
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "totalSupply()": [
                414,
                119
            ],
            "name()": [
                169,
                75
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "allowance(address,address)": [
                1036,
                273
            ],
            "transfer(address,uint256)": [
                870,
                229
            ],
            "getRealTokenAmount(uint256)": [
                971,
                251
            ],
            "decimals()": [
                590,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Manageable": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Manageable()": {
                "argument": {},
                "contract": {}
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setManager(address,bool)": [
                190,
                97
            ],
            "transferOwnership(address)": [
                269,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "ReturnableToken": {
        "function_list": [
            "ERC20StandardToken()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "getRealTokenAmount(uint256)",
            "doTransfer(address,address,uint256)",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "ReturnableToken()",
            "setReturnAgent(ReturnTokenAgent)",
            "removeReturnAgent(ReturnTokenAgent)",
            "doTransfer(address,address,uint256)"
        ],
        "initial_state": {
            "ERC20StandardToken()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "getRealTokenAmount(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "Manageable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "ReturnableToken()": {
                "argument": {},
                "contract": {}
            },
            "setReturnAgent(ReturnTokenAgent)": {
                "argument": {},
                "contract": {}
            },
            "removeReturnAgent(ReturnTokenAgent)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                390,
                97
            ],
            "symbol()": [
                957,
                251
            ],
            "name()": [
                246,
                75
            ],
            "totalSupply()": [
                491,
                119
            ],
            "balanceOf(address)": [
                783,
                207
            ],
            "setManager(address,bool)": [
                1259,
                317
            ],
            "transferFrom(address,address,uint256)": [
                534,
                141
            ],
            "transferOwnership(address)": [
                1623,
                405
            ],
            "allowance(address,address)": [
                1504,
                383
            ],
            "transfer(address,uint256)": [
                1338,
                339
            ],
            "getRealTokenAmount(uint256)": [
                1439,
                361
            ],
            "decimals()": [
                667,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump4537_0": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)",
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ],
            "block4537": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ],
            "jump4537": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)",
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ],
            "block4537_0": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ]
        }
    },
    "IInvestRestrictions": {
        "function_list": [
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "canInvest(address,uint256,uint256)",
            "investHappened(address,uint256)"
        ],
        "initial_state": {
            "Manageable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "canInvest(address,uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "tokensLeft": "uint256"
                },
                "contract": {}
            },
            "investHappened(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setManager(address,bool)": [
                400,
                141
            ],
            "investHappened(address,uint256)": [
                125,
                75
            ],
            "canInvest(address,uint256,uint256)": [
                202,
                97
            ],
            "transferOwnership(address)": [
                479,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ICrowdsaleFormula": {
        "function_list": [
            "howManyTokensForEther(uint256)",
            "tokensLeft()"
        ],
        "initial_state": {
            "howManyTokensForEther(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {}
            },
            "tokensLeft()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokensLeft()": [
                147,
                97
            ],
            "howManyTokensForEther(uint256)": [
                78,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "BCSCrowdsale": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "howManyTokensForEther(uint256)",
            "tokensLeft()",
            "BCSCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256)",
            "fallback()",
            "invest()",
            "canInvest(address,uint256)",
            "howManyTokensForEther(uint256)",
            "getCurrentBonusPct()",
            "tokensLeft()",
            "amountToBeneficiary()",
            "getState()",
            "refund()",
            "withdrawOverpay()",
            "transferToBeneficiary()",
            "makeFailed(bool)",
            "changeBeneficiary(address)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "Manageable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "howManyTokensForEther(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "tokensLeft()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "BCSCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_durationInHours": "uint256",
                    "_goalInWei": "uint256",
                    "_tokensForOneEther": "uint256",
                    "_bonusPct": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "invest()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "canInvest(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "getCurrentBonusPct()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "amountToBeneficiary()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "withdrawOverpay()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "transferToBeneficiary()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "makeFailed(bool)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "changeBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "invest()": [
                1929,
                647
            ],
            "refund()": [
                1210,
                361
            ],
            "makeFailed(bool)": [
                1772,
                581
            ],
            "howManyTokensForEther(uint256)": [
                394,
                75
            ],
            "changeBeneficiary(address)": [
                1862,
                625
            ],
            "setManager(address,bool)": [
                1563,
                515
            ],
            "amountToBeneficiary()": [
                1819,
                603
            ],
            "getCurrentBonusPct()": [
                777,
                207
            ],
            "transferToBeneficiary()": [
                1366,
                449
            ],
            "transferOwnership(address)": [
                1986,
                691
            ],
            "tokensLeft()": [
                1729,
                559
            ],
            "canInvest(address,uint256)": [
                466,
                97
            ],
            "withdrawOverpay()": [
                711,
                163
            ],
            "getState()": [
                654,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump6135_6": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_7": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block4079_1": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block4079_0": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump3431_0": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump3431_1": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block6135_6": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_7": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_4": [
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_20": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block6135_2": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_3": [
                "tokenPool.getTokenAmount()"
            ],
            "block2965": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block6135_1": [
                "tokenPool.getTokenAmount()"
            ],
            "jump2965": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump6135_24": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_10": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_22": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_21": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block3431": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block6135_9": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_24": [
                "tokenPool.getTokenAmount()"
            ],
            "jump4079": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block6135_8": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_21": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135": [
                "tokenPool.getTokenAmount()"
            ],
            "block2965_1": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block2965_0": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block4471": [
                "msg.sender.send(amount)"
            ],
            "block4079_2": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block4079": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block6135_10": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_11": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_12": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_13": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_14": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_15": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_16": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_17": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_18": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_19": [
                "tokenPool.getTokenAmount()"
            ],
            "jump2965_1": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump2965_0": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump6135_19": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block6135_5": [
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_4": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_18": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_16": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_17": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_14": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_15": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_12": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_13": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump3124": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "jump6135_11": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump3431": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump4079_1": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump4079_0": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block6135_0": [
                "tokenPool.getTokenAmount()"
            ],
            "jump5359": [
                "beneficiary.transfer(amount)",
                "beneficiary.transfer(amount)"
            ],
            "jump3124_1": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "jump3124_0": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "block3124_1": [
                "tokenPool.token()"
            ],
            "block3124_0": [
                "tokenPool.token()"
            ],
            "jump4471": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "jump6135_8": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_9": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump4079_2": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block5034": [
                "msg.sender.transfer(amount)"
            ],
            "block6135_20": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_23": [
                "tokenPool.getTokenAmount()"
            ],
            "block6135_22": [
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_0": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_1": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_2": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump6135_3": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block5359": [
                "beneficiary.transfer(amount)"
            ],
            "block3431_0": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block3431_1": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump6135_5": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block3124": [
                "tokenPool.token()"
            ],
            "jump6135_23": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump5034": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ]
        }
    }
}