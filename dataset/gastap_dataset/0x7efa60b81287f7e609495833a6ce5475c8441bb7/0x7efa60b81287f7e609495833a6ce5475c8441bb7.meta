{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "isToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isToken()": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                301,
                119
            ],
            "allowance(address,address)": [
                489,
                163
            ],
            "transferFrom(address,address,uint256)": [
                168,
                97
            ],
            "transfer(address,uint256)": [
                388,
                141
            ],
            "isToken()": [
                608,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "SmartNodeToken": {
        "function_list": [
            "isToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "SmartNodeToken(address)",
            "price()",
            "buy()",
            "sendSupplyTokens(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "burnRemainingTokens()",
            "fallback()",
            "freeze()",
            "unFreeze()",
            "changeOwner(address)",
            "changeFounder(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "isToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "SmartNodeToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "price()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "sendSupplyTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "burnRemainingTokens()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "freeze()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "unFreeze()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            },
            "changeFounder(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalTokens": "uint256",
                    "team": "uint256",
                    "bounty": "uint256",
                    "preTgeCap": "uint256",
                    "tgeCap": "uint256",
                    "presaleTokenSupply": "uint256",
                    "presaleEtherRaised": "uint256",
                    "preTgeTokenSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "price()": [
                1059,
                317
            ],
            "burnRemainingTokens()": [
                825,
                251
            ],
            "changeFounder(address)": [
                848,
                273
            ],
            "sendSupplyTokens(address,uint256)": [
                638,
                185
            ],
            "buy()": [
                1102,
                339
            ],
            "balanceOf(address)": [
                715,
                207
            ],
            "unFreeze()": [
                802,
                229
            ],
            "freeze()": [
                615,
                163
            ],
            "transferFrom(address,address,uint256)": [
                439,
                119
            ],
            "isToken()": [
                1423,
                427
            ],
            "allowance(address,address)": [
                1304,
                405
            ],
            "transfer(address,uint256)": [
                1203,
                383
            ],
            "changeOwner(address)": [
                1136,
                361
            ]
        },
        "block_CALL_mapping": {
            "jump1765_0": [
                "founder.transfer(msg.value)",
                "founder.transfer(msg.value)"
            ],
            "block1765": [
                "founder.transfer(msg.value)"
            ],
            "block1765_0": [
                "founder.transfer(msg.value)"
            ],
            "block1765_1": [
                "founder.transfer(msg.value)"
            ],
            "jump1765": [
                "founder.transfer(msg.value)",
                "founder.transfer(msg.value)"
            ],
            "jump1765_1": [
                "founder.transfer(msg.value)",
                "founder.transfer(msg.value)"
            ]
        }
    }
}