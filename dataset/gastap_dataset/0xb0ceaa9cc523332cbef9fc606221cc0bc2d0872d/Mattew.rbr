block0(g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, number)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, number))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, number)=>
	lt(s(1), s(0))
	call(block76(g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

jump0(s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, number)=>
	geq(s(1), s(0))
	call(block13(g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, caller, callvalue, number))

block13(g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, caller, callvalue, number)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3725935442
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block782(s(0),g(blockheight), l(l4), l(l0), callvalue, number))

jump13(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block65(s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

jump65(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block825(s(0),g(stake), l(l4), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block76_0(s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

block65(s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4228791696
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(blockheight)
	nop(SLOAD)
	s(3) = 200
	nop(PUSH1)
	s(4) = number
	nop(NUMBER)
	s(3) = s(4)-s(3)
	nop(SUB)
	call(jump76(s(3),s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	leq(s(3), s(2))
	call(block440(s(1), s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

jump76(s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	gt(s(3), s(2))
	call(block93(s(1), s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

block93(s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(whale)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2300
	nop(PUSH2)
	s(4) = 1
	nop(PUSH1)
	s(4) = g(stake)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = 37565202457673513963800177992666575408293855692360570901869595048495114652684
	nop(PUSH32)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(whale)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1
	nop(PUSH1)
	s(4) = g(stake)
	nop(SLOAD)
	s(5) = number
	nop(NUMBER)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(7)
	nop(DUP3)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 39
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 35000277246810603670418463359345109895009272144671148179130370697405764952939
	nop(PUSH32)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 47219715277443504783979282217829856592025648008545162740150409829252316790784
	nop(PUSH32)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(LOG1)
	s(2) = 435
	nop(PUSH2)
	s(3) = 868
	nop(PUSH2)
	call(block868_0(s(2),s(1),s(0),g(blockheight), g(stake), g(whale), caller, callvalue, number))
	nop(JUMP)

block435(s(1), s(0))=>
	nop(JUMPDEST)
	s(2) = 778
	nop(PUSH2)
	call(block778(s(1),s(0)))
	nop(JUMP)

jump440(s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	geq(s(3), s(2))
	call(block465(s(1), s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

jump440(s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	lt(s(3), s(2))
	call(block461(s(1), s(0)))

block440(s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(2) = 100000000000000000
	nop(PUSH8)
	s(3) = 1
	nop(PUSH1)
	s(3) = g(stake)
	nop(SLOAD)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = callvalue
	nop(CALLVALUE)
	call(jump440(s(3),s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block461(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block465(s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2300
	nop(PUSH2)
	s(4) = 1
	nop(PUSH1)
	s(4) = g(stake)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 530
	nop(PUSH2)
	s(3) = 868
	nop(PUSH2)
	call(block868(s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(JUMP)

block530(s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 53192969150875672327723907345944893893250636371707200016656137230147867107249
	nop(PUSH32)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(whale)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1
	nop(PUSH1)
	s(4) = g(stake)
	nop(SLOAD)
	s(5) = 2
	nop(PUSH1)
	s(5) = g(blockheight)
	nop(SLOAD)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(7)
	nop(DUP3)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 43
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 52221604211349734231366893622458757408594260965738025636734631474436862910562
	nop(PUSH32)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 49046593839779992957035801713871895429231121641212772843958588611324756885504
	nop(PUSH32)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(LOG1)
	call(block778(s(1),s(0)))

block778(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block782(s(0), g(blockheight), l(l4), l(l0), callvalue, number)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump782(s(2),s(1),s(0),g(blockheight), l(l4), l(l0), callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump782(s(2), s(1), s(0), g(blockheight), l(l4), l(l0), callvalue, number)=>
	eq(s(2), 0)
	call(block794(s(1), s(0),g(blockheight), l(l4), l(l0), number))

jump782(s(2), s(1), s(0), g(blockheight), l(l4), l(l0), callvalue, number)=>
	neq(s(2), 0)
	call(block790(s(1), s(0)))

block790(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block794(s(1), s(0), g(blockheight), l(l4), l(l0), number)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 803
	nop(PUSH2)
	s(2) = 948
	nop(PUSH2)
	call(block948(s(1),s(0),g(blockheight), l(l4), l(l0), number))
	nop(JUMP)

block803(s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump825(s(2), s(1), s(0), g(stake), l(l4), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block837(s(1), s(0),g(stake), l(l4), l(l0)))

jump825(s(2), s(1), s(0), g(stake), l(l4), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block833(s(1), s(0)))

block825(s(0), g(stake), l(l4), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump825(s(2),s(1),s(0),g(stake), l(l4), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block833(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block837(s(1), s(0), g(stake), l(l4), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 846
	nop(PUSH2)
	s(2) = 986
	nop(PUSH2)
	call(block986(s(1),s(0),g(stake), l(l4), l(l0)))
	nop(JUMP)

block846(s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block868(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(stake) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = number
	nop(NUMBER)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(blockheight) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(whale)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(whale) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block530(s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump948(s(4), s(3), s(2), s(1), s(0), g(blockheight), l(l4), l(l0), number)=>
	leq(s(4), s(3))
	call(block978(s(2), s(1), s(0), l(l4), l(l0)))

jump948(s(4), s(3), s(2), s(1), s(0), g(blockheight), l(l4), l(l0), number)=>
	gt(s(4), s(3))
	call(block964(s(2), s(1), s(0),g(blockheight), l(l4), l(l0), number))

block948(s(1), s(0), g(blockheight), l(l4), l(l0), number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = number
	nop(NUMBER)
	s(4) = 200
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(5) = g(blockheight)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	call(jump948(s(4),s(3),s(2),s(1),s(0),g(blockheight), l(l4), l(l0), number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block964(s(2), s(1), s(0), g(blockheight), l(l4), l(l0), number)=>
	s(3) = number
	nop(NUMBER)
	s(4) = 200
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(5) = g(blockheight)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 983
	nop(PUSH2)
	call(block983(s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block978(s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block983(s(2),s(1),s(0), l(l4), l(l0)))

block983(s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block803(s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block986(s(1), s(0), g(stake), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(3) = g(stake)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block846(s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block435_0(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(3) = 778
	nop(PUSH2)
	call(block778_0(s(2),s(1),s(0)))
	nop(JUMP)

jump440_0(s(4), s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	geq(s(4), s(3))
	call(block465_0(s(2), s(1), s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

jump440_0(s(4), s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	lt(s(4), s(3))
	call(block461_0(s(2), s(1), s(0)))

block440_0(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(3) = 100000000000000000
	nop(PUSH8)
	s(4) = 1
	nop(PUSH1)
	s(4) = g(stake)
	nop(SLOAD)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = callvalue
	nop(CALLVALUE)
	call(jump440_0(s(4),s(3),s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block461_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block465_0(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 1
	nop(PUSH1)
	s(5) = g(stake)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 530
	nop(PUSH2)
	s(4) = 868
	nop(PUSH2)
	call(block868_1(s(3),s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(JUMP)

block530_0(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 53192969150875672327723907345944893893250636371707200016656137230147867107249
	nop(PUSH32)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(whale)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(5) = g(stake)
	nop(SLOAD)
	s(6) = 2
	nop(PUSH1)
	s(6) = g(blockheight)
	nop(SLOAD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(8)
	nop(DUP3)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 43
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 52221604211349734231366893622458757408594260965738025636734631474436862910562
	nop(PUSH32)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 49046593839779992957035801713871895429231121641212772843958588611324756885504
	nop(PUSH32)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(4)
	s(4) = s(9)
	s(9) = s(10)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	call(block778_0(s(2),s(1),s(0)))

block76_0(s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 2
	nop(PUSH1)
	s(3) = g(blockheight)
	nop(SLOAD)
	s(4) = 200
	nop(PUSH1)
	s(5) = number
	nop(NUMBER)
	s(4) = s(5)-s(4)
	nop(SUB)
	call(jump76_0(s(4),s(3),s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump76_0(s(4), s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	leq(s(4), s(3))
	call(block440_0(s(2), s(1), s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

jump76_0(s(4), s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	gt(s(4), s(3))
	call(block93_0(s(2), s(1), s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

block778_0(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block868_0(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(stake) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = number
	nop(NUMBER)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(blockheight) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(whale)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(whale) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block435(s(1),s(0)))
	nop(JUMP)

block868_1(s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(stake) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = number
	nop(NUMBER)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(blockheight) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(whale)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(whale) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block530_0(s(2),s(1),s(0),g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block868_2(s(3), s(2), s(1), s(0), g(blockheight), g(stake), g(whale), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(stake) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = number
	nop(NUMBER)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(blockheight) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(whale)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(whale) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block435_0(s(2),s(1),s(0)))
	nop(JUMP)

block93_0(s(2), s(1), s(0), g(blockheight), g(stake), g(whale), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(whale)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 1
	nop(PUSH1)
	s(5) = g(stake)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 37565202457673513963800177992666575408293855692360570901869595048495114652684
	nop(PUSH32)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(whale)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(5) = g(stake)
	nop(SLOAD)
	s(6) = number
	nop(NUMBER)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(8)
	nop(DUP3)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 39
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 35000277246810603670418463359345109895009272144671148179130370697405764952939
	nop(PUSH32)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 47219715277443504783979282217829856592025648008545162740150409829252316790784
	nop(PUSH32)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(4)
	s(4) = s(9)
	s(9) = s(10)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = 435
	nop(PUSH2)
	s(4) = 868
	nop(PUSH2)
	call(block868_2(s(3),s(2),s(1),s(0),g(blockheight), g(stake), g(whale), caller, callvalue, number))
	nop(JUMP)

