{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                466,
                207
            ],
            "buyTokens(address)": [
                412,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump909_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump909_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334": [
                "wallet.transfer(msg.value)"
            ],
            "jump1334_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1334_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block909": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1334": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump909": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1334_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                952,
                361
            ],
            "buyTokens(address)": [
                898,
                339
            ]
        },
        "block_CALL_mapping": {
            "jump1418_1": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump1418_0": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump1418": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump2255": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump2801": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2255": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "block2801": [
                "wallet.transfer(msg.value)"
            ],
            "block1418": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump2801_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2801_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1418_1": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "block1418_0": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "block2801_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2801_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                326,
                141
            ],
            "hasEnded()": [
                710,
                295
            ],
            "buyTokens(address)": [
                656,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2472_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2472_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1170_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2472_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2472_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1743_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1743": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1743_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1170_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2472": [
                "wallet.transfer(msg.value)"
            ],
            "jump1743_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2472": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump2095": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "block2095": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "RefundableCrowdsale": {
        "function_list": [
            "finalize()",
            "finalization()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "finalize()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                790,
                317
            ],
            "finalize()": [
                413,
                163
            ],
            "hasEnded()": [
                867,
                361
            ],
            "buyTokens(address)": [
                813,
                339
            ],
            "goalReached()": [
                609,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3563": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block1987": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3400": [
                "vault.close()",
                "vault.close()"
            ],
            "jump1987": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2765": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump1414": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1987_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3563": [
                "vault.enableRefunds()"
            ],
            "block3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3400": [
                "vault.close()"
            ],
            "block2765": [
                "vault.refund(msg.sender)"
            ],
            "block1987_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1414_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1414_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1414": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1987_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1987_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ]
        }
    },
    "Destructible": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Destructible()",
            "destroy()",
            "destroyAndSend(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Destructible()": {
                "argument": {},
                "contract": {}
            },
            "destroy()": {
                "argument": {},
                "contract": {}
            },
            "destroyAndSend(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "destroyAndSend(address)": [
                280,
                141
            ],
            "destroy()": [
                103,
                75
            ],
            "transferOwnership(address)": [
                213,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DemeterCrowdsale": {
        "function_list": [
            "Destructible()",
            "destroy()",
            "destroyAndSend(address)",
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "WhiteListCrowdsale(uint256,uint256)",
            "buyTokens(address)",
            "addWhiteListedInvestor(address,string)",
            "loadWhiteList(address[],bytes32[])",
            "addReferredInvestor(string,address)",
            "loadReferredInvestors(bytes32[],address[])",
            "isReferred(address)",
            "validWhiteListedPurchase(address)",
            "computeBonusTokens(address,uint256)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "finalize()",
            "finalization()",
            "DemeterCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)",
            "buyTokens(address)",
            "destroy()",
            "destroyAndSend(address)",
            "updateGoal(uint256)",
            "issueCompanyTokens(address,uint256)",
            "createTokenContract()",
            "unlockTokens()",
            "finalization()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Destructible()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "destroy()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "destroyAndSend(address)": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "WhiteListCrowdsale(uint256,uint256)": {
                "argument": {
                    "_whiteListRegistrationEndTime": "uint256",
                    "_whiteListEndTime": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "addWhiteListedInvestor(address,string)": {
                "argument": {
                    "_referralCode": "string"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "loadWhiteList(address[],bytes32[])": {
                "argument": {
                    "_investors": "address[]",
                    "_referralCodes": "bytes32[]"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "addReferredInvestor(string,address)": {
                "argument": {
                    "_referralCode": "string"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "loadReferredInvestors(bytes32[],address[])": {
                "argument": {
                    "_referralCodes": "bytes32[]",
                    "_investors": "address[]"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "isReferred(address)": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "validWhiteListedPurchase(address)": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "computeBonusTokens(address,uint256)": {
                "argument": {
                    "_weiAmount": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "DemeterCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_whiteListRegistrationEndTime": "uint256",
                    "_whiteListEndTime": "uint256",
                    "_rate": "uint256",
                    "_cap": "uint256",
                    "_goal": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "updateGoal(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "issueCompanyTokens(address,uint256)": {
                "argument": {
                    "_weiAmount": "uint256"
                },
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "unlockTokens()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PERC_TOKENS_TO_INVESTOR": "uint8",
                    "PERC_TOKENS_TO_RELEASE": "uint8",
                    "PERC_TOKENS_TO_DEV": "uint8",
                    "PERC_TOKENS_TO_BIZDEV": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                2636,
                823
            ],
            "claimRefund()": [
                2024,
                669
            ],
            "destroy()": [
                1659,
                515
            ],
            "pause()": [
                1682,
                537
            ],
            "unpause()": [
                864,
                229
            ],
            "goalReached()": [
                1612,
                493
            ],
            "loadWhiteList(address[],bytes32[])": [
                2413,
                779
            ],
            "isReferred(address)": [
                2683,
                845
            ],
            "addReferredInvestor(string,address)": [
                2096,
                713
            ],
            "loadReferredInvestors(bytes32[],address[])": [
                1266,
                405
            ],
            "transferOwnership(address)": [
                2774,
                867
            ],
            "finalize()": [
                1022,
                317
            ],
            "addWhiteListedInvestor(address,string)": [
                2276,
                757
            ],
            "destroyAndSend(address)": [
                2841,
                889
            ],
            "updateGoal(uint256)": [
                684,
                141
            ],
            "buyTokens(address)": [
                2582,
                801
            ]
        },
        "block_CALL_mapping": {
            "block10183_1": [
                "token.mint(DEV_WALLET, devTokens)"
            ],
            "jump12579": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block9659_0": [
                "token.mint(_beneficiary, bonusTokens)"
            ],
            "jump10857_1": [
                "token.mint(RELEASE_WALLET, releaseTokens)",
                "token.mint(RELEASE_WALLET, releaseTokens)"
            ],
            "jump9065_1": [
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)",
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)"
            ],
            "block10521_0": [
                "token.mint(BIZDEV_WALLET, bizDevTokens)"
            ],
            "jump10183": [
                "token.mint(DEV_WALLET, devTokens)",
                "token.mint(DEV_WALLET, devTokens)"
            ],
            "jump9659_1": [
                "token.mint(_beneficiary, bonusTokens)",
                "token.mint(_beneficiary, bonusTokens)"
            ],
            "jump9659_0": [
                "token.mint(_beneficiary, bonusTokens)",
                "token.mint(_beneficiary, bonusTokens)"
            ],
            "jump10183_1": [
                "token.mint(DEV_WALLET, devTokens)",
                "token.mint(DEV_WALLET, devTokens)"
            ],
            "block10857": [
                "token.mint(RELEASE_WALLET, releaseTokens)"
            ],
            "block8070": [
                "vault.close()"
            ],
            "jump10521": [
                "token.mint(BIZDEV_WALLET, bizDevTokens)",
                "token.mint(BIZDEV_WALLET, bizDevTokens)"
            ],
            "jump10857_0": [
                "token.mint(RELEASE_WALLET, releaseTokens)",
                "token.mint(RELEASE_WALLET, releaseTokens)"
            ],
            "block11736": [
                "token.mint(beneficiary, tokens)"
            ],
            "block8714": [
                "token.mint(_beneficiary, bonusTokensForReferred)"
            ],
            "jump4544": [
                "vault.close()",
                "vault.close()"
            ],
            "block10183": [
                "token.mint(DEV_WALLET, devTokens)"
            ],
            "jump13227_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block10521": [
                "token.mint(BIZDEV_WALLET, bizDevTokens)"
            ],
            "jump13227_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block10857_1": [
                "token.mint(RELEASE_WALLET, releaseTokens)"
            ],
            "block10857_0": [
                "token.mint(RELEASE_WALLET, releaseTokens)"
            ],
            "block13227_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4544": [
                "vault.close()"
            ],
            "jump10521_1": [
                "token.mint(BIZDEV_WALLET, bizDevTokens)",
                "token.mint(BIZDEV_WALLET, bizDevTokens)"
            ],
            "jump12748": [
                "DemeterToken(token).unlockTime()",
                "DemeterToken(token).unlockTime()"
            ],
            "jump13227": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block12748": [
                "DemeterToken(token).unlockTime()"
            ],
            "jump10857": [
                "token.mint(RELEASE_WALLET, releaseTokens)",
                "token.mint(RELEASE_WALLET, releaseTokens)"
            ],
            "jump9065_0": [
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)",
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)"
            ],
            "block9065_0": [
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)"
            ],
            "jump10521_0": [
                "token.mint(BIZDEV_WALLET, bizDevTokens)",
                "token.mint(BIZDEV_WALLET, bizDevTokens)"
            ],
            "block8714_1": [
                "token.mint(_beneficiary, bonusTokensForReferred)"
            ],
            "block13227_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump12957": [
                "DemeterToken(token).setUnlockTime(block.timestamp)",
                "DemeterToken(token).setUnlockTime(block.timestamp)"
            ],
            "block8714_0": [
                "token.mint(_beneficiary, bonusTokensForReferred)"
            ],
            "block9659": [
                "token.mint(_beneficiary, bonusTokens)"
            ],
            "jump12416": [
                "vault.close()",
                "vault.close()"
            ],
            "block12957": [
                "DemeterToken(token).setUnlockTime(block.timestamp)"
            ],
            "block9065": [
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)"
            ],
            "block10183_0": [
                "token.mint(DEV_WALLET, devTokens)"
            ],
            "jump9065": [
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)",
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)"
            ],
            "block5310": [
                "vault.refund(msg.sender)"
            ],
            "jump11736_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump11736_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump5310": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block13227": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block11736_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block11736_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block12579": [
                "vault.enableRefunds()"
            ],
            "jump9659": [
                "token.mint(_beneficiary, bonusTokens)",
                "token.mint(_beneficiary, bonusTokens)"
            ],
            "jump8070": [
                "vault.close()",
                "vault.close()"
            ],
            "jump8714_1": [
                "token.mint(_beneficiary, bonusTokensForReferred)",
                "token.mint(_beneficiary, bonusTokensForReferred)"
            ],
            "jump8714_0": [
                "token.mint(_beneficiary, bonusTokensForReferred)",
                "token.mint(_beneficiary, bonusTokensForReferred)"
            ],
            "block9065_1": [
                "token.mint(referrals[_beneficiary], bonusTokensForReferral)"
            ],
            "block12416": [
                "vault.close()"
            ],
            "block10521_1": [
                "token.mint(BIZDEV_WALLET, bizDevTokens)"
            ],
            "jump11736": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump8714": [
                "token.mint(_beneficiary, bonusTokensForReferred)",
                "token.mint(_beneficiary, bonusTokensForReferred)"
            ],
            "jump10183_0": [
                "token.mint(DEV_WALLET, devTokens)",
                "token.mint(DEV_WALLET, devTokens)"
            ],
            "block9659_1": [
                "token.mint(_beneficiary, bonusTokens)"
            ]
        }
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "TimeLockedToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "setUnlockTime(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "unlockTime": "uint256"
                }
            },
            "setUnlockTime(uint256)": {
                "argument": {
                    "_unlockTime": "uint256"
                },
                "contract": {
                    "unlockTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                271,
                97
            ],
            "transfer(address,uint256)": [
                1014,
                295
            ],
            "increaseApproval(address,uint256)": [
                1115,
                317
            ],
            "mint(address,uint256)": [
                591,
                185
            ],
            "balanceOf(address)": [
                793,
                229
            ],
            "finishMinting()": [
                880,
                251
            ],
            "allowance(address,address)": [
                1261,
                361
            ],
            "decreaseApproval(address,uint256)": [
                692,
                207
            ],
            "transferOwnership(address)": [
                1380,
                383
            ],
            "transferFrom(address,address,uint256)": [
                415,
                141
            ],
            "setUnlockTime(uint256)": [
                1216,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "DemeterToken": {
        "function_list": [
            "Destructible()",
            "destroy()",
            "destroyAndSend(address)",
            "Ownable()",
            "transferOwnership(address)",
            "setUnlockTime(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Destructible()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "destroy()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "destroyAndSend(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setUnlockTime(uint256)": {
                "argument": {
                    "_unlockTime": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                470,
                119
            ],
            "destroyAndSend(address)": [
                1856,
                493
            ],
            "destroy()": [
                1169,
                317
            ],
            "transfer(address,uint256)": [
                1423,
                383
            ],
            "increaseApproval(address,uint256)": [
                1524,
                405
            ],
            "mint(address,uint256)": [
                833,
                229
            ],
            "finishMinting()": [
                1122,
                295
            ],
            "balanceOf(address)": [
                1035,
                273
            ],
            "decreaseApproval(address,uint256)": [
                934,
                251
            ],
            "setUnlockTime(uint256)": [
                1625,
                427
            ],
            "allowance(address,address)": [
                1670,
                449
            ],
            "transferFrom(address,address,uint256)": [
                614,
                163
            ],
            "transferOwnership(address)": [
                1789,
                471
            ]
        },
        "block_CALL_mapping": {}
    }
}