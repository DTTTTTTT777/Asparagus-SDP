{
    "ContractReceiver": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC23Token": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "isContract(address)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "symbol()": [
                726,
                207
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "totalSupply()": [
                414,
                119
            ],
            "name()": [
                169,
                75
            ],
            "transfer(address,uint256,bytes)": [
                971,
                251
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "allowance(address,address)": [
                1142,
                273
            ],
            "transfer(address,uint256)": [
                870,
                229
            ],
            "decimals()": [
                590,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3203_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump3203": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3203_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3203": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "DASToken": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "isContract(address)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DASToken(string,string,uint8,uint256,address)",
            "blockAccount(address)",
            "unblockAccount(address)",
            "isAccountBlocked(address)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "DASToken(string,string,uint8,uint256,address)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {}
            },
            "blockAccount(address)": {
                "argument": {},
                "contract": {}
            },
            "unblockAccount(address)": {
                "argument": {},
                "contract": {}
            },
            "isAccountBlocked(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unblockAccount(address)": [
                683,
                185
            ],
            "symbol()": [
                904,
                251
            ],
            "approve(address,uint256)": [
                357,
                97
            ],
            "name()": [
                213,
                75
            ],
            "totalSupply()": [
                458,
                119
            ],
            "isAccountBlocked(address)": [
                1407,
                339
            ],
            "blockAccount(address)": [
                837,
                229
            ],
            "balanceOf(address)": [
                750,
                207
            ],
            "transfer(address,uint256,bytes)": [
                1149,
                295
            ],
            "transferFrom(address,address,uint256)": [
                501,
                141
            ],
            "allowance(address,address)": [
                1498,
                361
            ],
            "transfer(address,uint256)": [
                1048,
                273
            ],
            "decimals()": [
                634,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump4319": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block4319_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump4319_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block4319": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "ABCToken": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "isContract(address)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ABCToken(string,string,uint8,uint256,address)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "value": "uint256",
                    "data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "ABCToken(string,string,uint8,uint256,address)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "symbol()": [
                726,
                207
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "totalSupply()": [
                414,
                119
            ],
            "name()": [
                169,
                75
            ],
            "transfer(address,uint256,bytes)": [
                971,
                251
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "allowance(address,address)": [
                1142,
                273
            ],
            "transfer(address,uint256)": [
                870,
                229
            ],
            "decimals()": [
                590,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3203_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump3203": [
                "reciever.tokenFallback(msg.sender, _value, _data)",
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3203_0": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3203": [
                "reciever.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "DAS": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)",
            "DAS(uint256,uint256,uint256,uint256,address)",
            "fallback()",
            "getProposalHash(address,uint256,bytes)",
            "blockTokens(address)",
            "unblockTokens(address)",
            "createProposal(address,uint256,string,bytes)",
            "vote(uint256,bool,string)",
            "finishProposalVoting(uint256)",
            "executeProposal(uint256,bytes)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "DAS(uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "_congressMemberThreshold": "uint256",
                    "_minimumQuorum": "uint256",
                    "_debatingPeriod": "uint256",
                    "_marginForMajority": "uint256"
                },
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "getProposalHash(address,uint256,bytes)": {
                "argument": {
                    "_etherAmount": "uint256",
                    "_transactionBytecode": "bytes"
                },
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "blockTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "unblockTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "createProposal(address,uint256,string,bytes)": {
                "argument": {
                    "_etherAmount": "uint256",
                    "_description": "string",
                    "_transactionBytecode": "bytes"
                },
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "vote(uint256,bool,string)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_justificationText": "string"
                },
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "finishProposalVoting(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            },
            "executeProposal(uint256,bytes)": {
                "argument": {
                    "_proposalID": "uint256",
                    "_transactionBytecode": "bytes"
                },
                "contract": {
                    "name": "string",
                    "congressMemberThreshold": "uint256",
                    "minimumQuorum": "uint256",
                    "debatingPeriod": "uint256",
                    "marginForMajority": "uint256",
                    "proposals": "DAS.Proposal[]",
                    "proposalsNumber": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "vote(uint256,bool,string)": [
                1330,
                317
            ],
            "tokenFallback(address,uint256,bytes)": [
                1097,
                251
            ],
            "createProposal(address,uint256,string,bytes)": [
                642,
                141
            ],
            "getProposalHash(address,uint256,bytes)": [
                1544,
                361
            ],
            "executeProposal(uint256,bytes)": [
                484,
                97
            ],
            "finishProposalVoting(uint256)": [
                1052,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump2191": [
                "dasToken.balanceOf(msg.sender)",
                "dasToken.balanceOf(msg.sender)"
            ],
            "block3823": [
                "dasToken.balanceOf(msg.sender)"
            ],
            "jump5310": [
                "dasToken.balanceOf(msg.sender)",
                "dasToken.balanceOf(msg.sender)"
            ],
            "block5310": [
                "dasToken.balanceOf(msg.sender)"
            ],
            "block7317": [
                "dasToken.blockAccount(_voter)"
            ],
            "jump7317": [
                "dasToken.blockAccount(_voter)",
                "dasToken.blockAccount(_voter)"
            ],
            "jump2549": [
                "p.beneficiary.call.value(p.etherAmount * 1 ether)(_transactionBytecode)",
                "p.beneficiary.call.value(p.etherAmount * 1 ether)(_transactionBytecode)"
            ],
            "block2191": [
                "dasToken.balanceOf(msg.sender)"
            ],
            "block2841": [
                "dasToken.balanceOf(msg.sender)"
            ],
            "jump6704": [
                "dasToken.unblockAccount(_voter)",
                "dasToken.unblockAccount(_voter)"
            ],
            "block4870": [
                "dasToken.balanceOf(msg.sender)"
            ],
            "block2549": [
                "p.beneficiary.call.value(p.etherAmount * 1 ether)(_transactionBytecode)"
            ],
            "block6704": [
                "dasToken.unblockAccount(_voter)"
            ],
            "jump3823": [
                "dasToken.balanceOf(msg.sender)",
                "dasToken.balanceOf(msg.sender)"
            ],
            "jump4870": [
                "dasToken.balanceOf(msg.sender)",
                "dasToken.balanceOf(msg.sender)"
            ],
            "jump2841": [
                "dasToken.balanceOf(msg.sender)",
                "dasToken.balanceOf(msg.sender)"
            ]
        }
    }
}