{
    "owned": {
        "function_list": [
            "owned()",
            "changeOwner(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "mortal": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "kill()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "kill()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                104,
                97
            ],
            "kill()": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSMath": {
        "function_list": [
            "hmore(uint128,uint128)",
            "hless(uint128,uint128)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "wmore(uint128,uint128)",
            "wless(uint128,uint128)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "cast(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "hmore(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "hless(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wmore(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wless(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD_Dec": "uint64",
                    "WAD": "uint128"
                }
            }
        },
        "function_block_mapping": {
            "wadd(uint128,uint128)": [
                239,
                97
            ],
            "wsub(uint128,uint128)": [
                92,
                75
            ],
            "wmul(uint128,uint128)": [
                386,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "I_minter": {
        "function_list": [
            "Leverage()",
            "RiskPrice(uint128,uint128,uint128,uint128)",
            "RiskPrice(uint128)",
            "PriceReturn(uint256,uint128)",
            "NewStatic()",
            "NewStaticAdr(address)",
            "NewRisk()",
            "NewRiskAdr(address)",
            "RetRisk(uint128)",
            "RetStatic(uint128)",
            "Strike()"
        ],
        "initial_state": {
            "Leverage()": {
                "argument": {},
                "contract": {}
            },
            "RiskPrice(uint128,uint128,uint128,uint128)": {
                "argument": {
                    "_currentPrice": "uint128",
                    "_StaticTotal": "uint128",
                    "_RiskTotal": "uint128",
                    "_ETHTotal": "uint128"
                },
                "contract": {}
            },
            "RiskPrice(uint128)": {
                "argument": {
                    "_currentPrice": "uint128"
                },
                "contract": {}
            },
            "PriceReturn(uint256,uint128)": {
                "argument": {
                    "_TransID": "uint256",
                    "_Price": "uint128"
                },
                "contract": {}
            },
            "NewStatic()": {
                "argument": {},
                "contract": {}
            },
            "NewStaticAdr(address)": {
                "argument": {},
                "contract": {}
            },
            "NewRisk()": {
                "argument": {},
                "contract": {}
            },
            "NewRiskAdr(address)": {
                "argument": {},
                "contract": {}
            },
            "RetRisk(uint128)": {
                "argument": {
                    "_Quantity": "uint128"
                },
                "contract": {}
            },
            "RetStatic(uint128)": {
                "argument": {
                    "_Quantity": "uint128"
                },
                "contract": {}
            },
            "Strike()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "PriceReturn(uint256,uint128)": [
                1007,
                220
            ],
            "RetStatic(uint128)": [
                412,
                44
            ],
            "NewStatic()": [
                750,
                132
            ],
            "NewRiskAdr(address)": [
                780,
                154
            ],
            "Leverage()": [
                482,
                66
            ],
            "RiskPrice(uint128)": [
                631,
                110
            ],
            "NewRisk()": [
                382,
                22
            ],
            "RetRisk(uint128)": [
                561,
                88
            ],
            "Strike()": [
                854,
                176
            ],
            "NewStaticAdr(address)": [
                933,
                198
            ]
        },
        "block_CALL_mapping": {}
    },
    "I_Pricer": {
        "function_list": [
            "__callback(bytes32,string)",
            "queryCost()",
            "QuickPrice()",
            "requestPrice(uint256)",
            "collectFee()",
            "fallback()"
        ],
        "initial_state": {
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "sURL": "string"
                }
            },
            "queryCost()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "sURL": "string"
                }
            },
            "QuickPrice()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "sURL": "string"
                }
            },
            "requestPrice(uint256)": {
                "argument": {
                    "_actionID": "uint256"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "sURL": "string"
                }
            },
            "collectFee()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "sURL": "string"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "sURL": "string"
                }
            }
        },
        "function_block_mapping": {
            "requestPrice(uint256)": [
                589,
                163
            ],
            "queryCost()": [
                698,
                229
            ],
            "collectFee()": [
                641,
                185
            ],
            "QuickPrice()": [
                688,
                207
            ],
            "__callback(bytes32,string)": [
                326,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "I_coin": {
        "function_list": [
            "kill()",
            "owned()",
            "changeOwner(address)",
            "mintCoin(address,uint256)",
            "meltCoin(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "setMinter(address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "kill()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "mintCoin(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "meltCoin(address,uint256)": {
                "argument": {
                    "meltedAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "setMinter(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "meltCoin(address,uint256)": [
                825,
                207
            ],
            "kill()": [
                926,
                229
            ],
            "setMinter(address)": [
                2061,
                471
            ],
            "approveAndCall(address,uint256,bytes)": [
                1593,
                383
            ],
            "increaseApproval(address,uint256)": [
                1740,
                405
            ],
            "mintCoin(address,uint256)": [
                1960,
                449
            ],
            "allowance(address,address)": [
                1841,
                427
            ],
            "balanceOf(address)": [
                1194,
                295
            ],
            "decreaseApproval(address,uint256)": [
                1093,
                273
            ],
            "transferFrom(address,address,uint256)": [
                643,
                163
            ],
            "transfer(address,uint256)": [
                1492,
                361
            ],
            "changeOwner(address)": [
                1425,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSBaseActor": {
        "function_list": [
            "tryExec(address,bytes,uint256)",
            "exec(address,bytes,uint256)"
        ],
        "initial_state": {
            "tryExec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {}
            },
            "exec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "canFreeze": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "Freeze()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "Freeze()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "Freeze()": [
                139,
                97
            ],
            "changeOwner(address)": [
                162,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "oneWrite": {
        "function_list": [
            "oneWrite()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "oneWrite()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "pricerControl": {
        "function_list": [
            "Freeze()",
            "owned()",
            "changeOwner(address)",
            "setPricer(address)",
            "update()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Freeze()": {
                "argument": {},
                "contract": {
                    "releaseTime": "uint256",
                    "PRICER_DELAY": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "releaseTime": "uint256",
                    "PRICER_DELAY": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "releaseTime": "uint256",
                    "PRICER_DELAY": "uint256"
                }
            },
            "setPricer(address)": {
                "argument": {},
                "contract": {
                    "releaseTime": "uint256",
                    "PRICER_DELAY": "uint256"
                }
            },
            "update()": {
                "argument": {},
                "contract": {
                    "releaseTime": "uint256",
                    "PRICER_DELAY": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setPricer(address)": [
                194,
                97
            ],
            "Freeze()": [
                261,
                119
            ],
            "changeOwner(address)": [
                458,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "minter": {
        "function_list": [
            "hmore(uint128,uint128)",
            "hless(uint128,uint128)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "wmore(uint128,uint128)",
            "wless(uint128,uint128)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "cast(uint256)",
            "setPricer(address)",
            "update()",
            "Freeze()",
            "owned()",
            "changeOwner(address)",
            "oneWrite()",
            "tryExec(address,bytes,uint256)",
            "exec(address,bytes,uint256)",
            "Leverage()",
            "RiskPrice(uint128,uint128,uint128,uint128)",
            "RiskPrice(uint128)",
            "PriceReturn(uint256,uint128)",
            "NewStatic()",
            "NewStaticAdr(address)",
            "NewRisk()",
            "NewRiskAdr(address)",
            "RetRisk(uint128)",
            "RetStatic(uint128)",
            "Strike()",
            "minter(string,uint128)",
            "fallback()",
            "Bailout()",
            "NewStatic()",
            "NewStaticAdr(address)",
            "NewRisk()",
            "NewRiskAdr(address)",
            "RetRisk(uint128)",
            "RetStatic(uint128)",
            "StaticEthAvailable()",
            "StaticEthAvailable(uint128,uint128)",
            "RiskPrice(uint128,uint128,uint128,uint128)",
            "RiskPrice(uint128)",
            "LastRiskPrice()",
            "Leverage()",
            "Strike()",
            "setFee(uint128)",
            "setCoins(address,address)",
            "PriceReturn(uint256,uint128)",
            "ActionNewStatic(minter.Trans,uint256,uint128)",
            "ActionNewRisk(minter.Trans,uint256,uint128)",
            "ActionRetStatic(minter.Trans,uint256,uint128)",
            "ActionRetRisk(minter.Trans,uint256,uint128)",
            "IsWallet(address)",
            "RetCoinInternal(uint128,uint128,address,minter.Action)",
            "NewCoinInternal(address,uint128,minter.Action)",
            "Bankrupt()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "hmore(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "hless(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wmore(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wless(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "setPricer(address)": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "update()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "Freeze()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "oneWrite()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "tryExec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "exec(address,bytes,uint256)": {
                "argument": {
                    "calldata": "bytes",
                    "value": "uint256"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "Leverage()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "RiskPrice(uint128,uint128,uint128,uint128)": {
                "argument": {
                    "_currentPrice": "uint128",
                    "_StaticTotal": "uint128",
                    "_RiskTotal": "uint128",
                    "_ETHTotal": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "RiskPrice(uint128)": {
                "argument": {
                    "_currentPrice": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "PriceReturn(uint256,uint128)": {
                "argument": {
                    "_TransID": "uint256",
                    "_Price": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "NewStatic()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "NewStaticAdr(address)": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "NewRisk()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "NewRiskAdr(address)": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "RetRisk(uint128)": {
                "argument": {
                    "_Quantity": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "RetStatic(uint128)": {
                "argument": {
                    "_Quantity": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "Strike()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "minter(string,uint128)": {
                "argument": {
                    "_currency": "string",
                    "_Multiplier": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "Bailout()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "StaticEthAvailable()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "StaticEthAvailable(uint128,uint128)": {
                "argument": {
                    "_RiskTotal": "uint128",
                    "_TotalETH": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "LastRiskPrice()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "setFee(uint128)": {
                "argument": {
                    "_newFee": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "setCoins(address,address)": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "ActionNewStatic(minter.Trans,uint256,uint128)": {
                "argument": {
                    "_TransID": "uint256",
                    "_Price": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "ActionNewRisk(minter.Trans,uint256,uint128)": {
                "argument": {
                    "_TransID": "uint256",
                    "_Price": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "ActionRetStatic(minter.Trans,uint256,uint128)": {
                "argument": {
                    "_TransID": "uint256",
                    "_Price": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "ActionRetRisk(minter.Trans,uint256,uint128)": {
                "argument": {
                    "_TransID": "uint256",
                    "_Price": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "IsWallet(address)": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "RetCoinInternal(uint128,uint128,address,minter.Action)": {
                "argument": {
                    "_Quantity": "uint128",
                    "_AmountETH": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "NewCoinInternal(address,uint128,minter.Action)": {
                "argument": {
                    "_amount": "uint128"
                },
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "Bankrupt()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "lastPrice": "uint128",
                    "PendingETH": "uint128",
                    "TransID": "uint256",
                    "TransCompleted": "uint256",
                    "Currency": "string",
                    "Multiplier": "uint128",
                    "levToll": "uint128",
                    "mintFee": "uint128",
                    "pending": "mapping(uint256 => minter.Trans[])"
                }
            }
        },
        "function_block_mapping": {
            "PriceReturn(uint256,uint128)": [
                3280,
                726
            ],
            "Leverage()": [
                1278,
                242
            ],
            "RiskPrice(uint128)": [
                1526,
                308
            ],
            "Freeze()": [
                1879,
                374
            ],
            "Bailout()": [
                1268,
                220
            ],
            "setCoins(address,address)": [
                1427,
                286
            ],
            "setFee(uint128)": [
                1135,
                176
            ],
            "wadd(uint128,uint128)": [
                2046,
                418
            ],
            "NewStaticAdr(address)": [
                2566,
                550
            ],
            "Strike()": [
                2297,
                484
            ],
            "StaticEthAvailable()": [
                3353,
                748
            ],
            "RetStatic(uint128)": [
                1198,
                198
            ],
            "wmul(uint128,uint128)": [
                2376,
                506
            ],
            "RetRisk(uint128)": [
                1357,
                264
            ],
            "StaticEthAvailable(uint128,uint128)": [
                3475,
                792
            ],
            "wsub(uint128,uint128)": [
                1645,
                330
            ],
            "setPricer(address)": [
                981,
                132
            ],
            "NewStatic()": [
                2193,
                440
            ],
            "NewRiskAdr(address)": [
                2223,
                462
            ],
            "changeOwner(address)": [
                3012,
                638
            ],
            "NewRisk()": [
                908,
                88
            ],
            "LastRiskPrice()": [
                3079,
                660
            ]
        },
        "block_CALL_mapping": {
            "block17244_2": [
                "target.call.value(value)(calldata)"
            ],
            "block17244_3": [
                "target.call.value(value)(calldata)"
            ],
            "block17244_0": [
                "target.call.value(value)(calldata)"
            ],
            "block17244_1": [
                "target.call.value(value)(calldata)"
            ],
            "block11342": [
                "Static.meltCoin(_details.holder,_details.amount)"
            ],
            "jump6113_0": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "block17244_4": [
                "target.call.value(value)(calldata)"
            ],
            "block10058": [
                "pricer.queryCost()"
            ],
            "block11909": [
                "Static.mintCoin(_details.holder,_details.amount)"
            ],
            "jump17636_0": [
                "Risk.kill()",
                "Risk.kill()"
            ],
            "jump6113_1": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "jump11002_0": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump12478_0": [
                "pricer.queryCost()",
                "pricer.queryCost()"
            ],
            "block14807": [
                "Risk.totalSupply()"
            ],
            "block10327": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "jump4984": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump14161_0": [
                "Risk.mintCoin(_details.holder,_details.amount)",
                "Risk.mintCoin(_details.holder,_details.amount)"
            ],
            "jump11909": [
                "Static.mintCoin(_details.holder,_details.amount)",
                "Static.mintCoin(_details.holder,_details.amount)"
            ],
            "jump6314": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump15324": [
                "Static.mintCoin(_details.holder, uint256(wmul(AmountMint , _Price)))",
                "Static.mintCoin(_details.holder, uint256(wmul(AmountMint , _Price)))"
            ],
            "jump10327": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)",
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "jump10058": [
                "pricer.queryCost()",
                "pricer.queryCost()"
            ],
            "block11002_0": [
                "Risk.totalSupply()"
            ],
            "block9129": [
                "Risk.totalSupply()"
            ],
            "block6314": [
                "Risk.totalSupply()"
            ],
            "jump13594_0": [
                "Risk.meltCoin(_details.holder,_details.amount )",
                "Risk.meltCoin(_details.holder,_details.amount )"
            ],
            "jump10058_0": [
                "pricer.queryCost()",
                "pricer.queryCost()"
            ],
            "block10327_2": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "block10327_1": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "block10327_0": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "block13594_0": [
                "Risk.meltCoin(_details.holder,_details.amount )"
            ],
            "jump17478": [
                "Static.kill()",
                "Static.kill()"
            ],
            "block6314_2": [
                "Risk.totalSupply()"
            ],
            "block12786_0": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "block6314_0": [
                "Risk.totalSupply()"
            ],
            "block12478_0": [
                "pricer.queryCost()"
            ],
            "block17636_0": [
                "Risk.kill()"
            ],
            "jump16040": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "block17636": [
                "Risk.kill()"
            ],
            "jump11909_0": [
                "Static.mintCoin(_details.holder,_details.amount)",
                "Static.mintCoin(_details.holder,_details.amount)"
            ],
            "block17244": [
                "target.call.value(value)(calldata)"
            ],
            "block4984": [
                "Risk.totalSupply()"
            ],
            "block16241": [
                "Risk.totalSupply()"
            ],
            "block7047": [
                "Static.totalSupply()"
            ],
            "jump11002": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "block11342_0": [
                "Static.meltCoin(_details.holder,_details.amount)"
            ],
            "jump13594": [
                "Risk.meltCoin(_details.holder,_details.amount )",
                "Risk.meltCoin(_details.holder,_details.amount )"
            ],
            "jump10327_1": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)",
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "jump11342_0": [
                "Static.meltCoin(_details.holder,_details.amount)",
                "Static.meltCoin(_details.holder,_details.amount)"
            ],
            "jump6113_2": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "jump10327_2": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)",
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "jump9129": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump7047": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "jump6314_1": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump6314_0": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump6314_3": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump6314_2": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "jump8429": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "block13174_0": [
                "_user.transfer(uint256(refund))"
            ],
            "block12478": [
                "pricer.queryCost()"
            ],
            "block13594": [
                "Risk.meltCoin(_details.holder,_details.amount )"
            ],
            "block6314_3": [
                "Risk.totalSupply()"
            ],
            "jump13174": [
                "_user.transfer(uint256(refund))",
                "_user.transfer(uint256(refund))"
            ],
            "jump8632": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "block10058_2": [
                "pricer.queryCost()"
            ],
            "block10058_0": [
                "pricer.queryCost()"
            ],
            "block10058_1": [
                "pricer.queryCost()"
            ],
            "jump14807": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "block14161": [
                "Risk.mintCoin(_details.holder,_details.amount)"
            ],
            "block12786": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "jump14161": [
                "Risk.mintCoin(_details.holder,_details.amount)",
                "Risk.mintCoin(_details.holder,_details.amount)"
            ],
            "block6314_1": [
                "Risk.totalSupply()"
            ],
            "block11909_0": [
                "Static.mintCoin(_details.holder,_details.amount)"
            ],
            "jump16655": [
                "Risk.mintCoin(_details.holder, uint256(quantity) )",
                "Risk.mintCoin(_details.holder, uint256(quantity) )"
            ],
            "block13174": [
                "_user.transfer(uint256(refund))"
            ],
            "block14161_0": [
                "Risk.mintCoin(_details.holder,_details.amount)"
            ],
            "block16655": [
                "Risk.mintCoin(_details.holder, uint256(quantity) )"
            ],
            "jump17636": [
                "Risk.kill()",
                "Risk.kill()"
            ],
            "jump10058_1": [
                "pricer.queryCost()",
                "pricer.queryCost()"
            ],
            "jump10058_2": [
                "pricer.queryCost()",
                "pricer.queryCost()"
            ],
            "jump10327_0": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)",
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "jump6113_3": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "jump12786_0": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)",
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "jump13174_0": [
                "_user.transfer(uint256(refund))",
                "_user.transfer(uint256(refund))"
            ],
            "jump16241": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "block5221": [
                "Risk.totalSupply()"
            ],
            "jump5221": [
                "Risk.totalSupply()",
                "Risk.totalSupply()"
            ],
            "block8632": [
                "Risk.totalSupply()"
            ],
            "block6113": [
                "Static.totalSupply()"
            ],
            "jump12478": [
                "pricer.queryCost()",
                "pricer.queryCost()"
            ],
            "block17478_0": [
                "Static.kill()"
            ],
            "jump17478_0": [
                "Static.kill()",
                "Static.kill()"
            ],
            "block16040": [
                "Static.totalSupply()"
            ],
            "block17478": [
                "Static.kill()"
            ],
            "block8429": [
                "Static.totalSupply()"
            ],
            "jump11342": [
                "Static.meltCoin(_details.holder,_details.amount)",
                "Static.meltCoin(_details.holder,_details.amount)"
            ],
            "jump6113": [
                "Static.totalSupply()",
                "Static.totalSupply()"
            ],
            "block15324": [
                "Static.mintCoin(_details.holder, uint256(wmul(AmountMint , _Price)))"
            ],
            "jump12786": [
                "pricer.requestPrice.value(uint256(Fee))(TransID)",
                "pricer.requestPrice.value(uint256(Fee))(TransID)"
            ],
            "block6113_2": [
                "Static.totalSupply()"
            ],
            "block6113_3": [
                "Static.totalSupply()"
            ],
            "block6113_0": [
                "Static.totalSupply()"
            ],
            "block6113_1": [
                "Static.totalSupply()"
            ],
            "block11002": [
                "Risk.totalSupply()"
            ]
        }
    }
}