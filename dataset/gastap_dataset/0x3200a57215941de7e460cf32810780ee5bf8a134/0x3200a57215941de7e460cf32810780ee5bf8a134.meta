{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "PayFairToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "PayFairToken()",
            "fallback()",
            "mint(address,uint256)",
            "setCrowdsaleAgent(address)",
            "releaseTokenTransfer()",
            "convertToDecimal(uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "PayFairToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "setCrowdsaleAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "convertToDecimal(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "MULTIPLIER": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                477,
                119
            ],
            "releaseTokenTransfer()": [
                1114,
                317
            ],
            "convertToDecimal(uint256)": [
                1765,
                493
            ],
            "mint(address,uint256)": [
                994,
                273
            ],
            "allowance(address,address)": [
                1646,
                471
            ],
            "balanceOf(address)": [
                1137,
                339
            ],
            "transferFrom(address,address,uint256)": [
                751,
                207
            ],
            "transferOwnership(address)": [
                1830,
                515
            ],
            "setCrowdsaleAgent(address)": [
                927,
                251
            ],
            "transfer(address,uint256)": [
                1545,
                449
            ]
        },
        "block_CALL_mapping": {}
    },
    "Killable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "kill()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "kill()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                202,
                119
            ],
            "kill()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "PayFairTokenCrowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "kill()",
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()",
            "PayFairTokenCrowdsale(address,address,uint256)",
            "fallback()",
            "getCurrentMilestone()",
            "investInternal(address)",
            "invest(address)",
            "sendPreIcoTokens(address,uint256)",
            "buy()",
            "finalize()",
            "finalizeCrowdsale()",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isCrowdsaleFull()",
            "getState()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "PayFairTokenCrowdsale(address,address,uint256)": {
                "argument": {
                    "_start": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "getCurrentMilestone()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "investInternal(address)": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "sendPreIcoTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "finalizeCrowdsale()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "PRE_ICO_MAX_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "ICO_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "preIcoTokensDistributed": "uint256",
                    "milestones": "PayFairTokenCrowdsale.Milestone[]",
                    "investments": "PayFairTokenCrowdsale.Investment[]"
                }
            }
        },
        "function_block_mapping": {
            "refund()": [
                778,
                251
            ],
            "buy()": [
                1348,
                493
            ],
            "isMinimumGoalReached()": [
                1030,
                383
            ],
            "invest(address)": [
                405,
                75
            ],
            "sendPreIcoTokens(address,uint256)": [
                910,
                339
            ],
            "transferOwnership(address)": [
                1730,
                691
            ],
            "isCrowdsaleFull()": [
                1604,
                647
            ],
            "loadRefund()": [
                1077,
                405
            ],
            "finalize()": [
                755,
                229
            ],
            "kill()": [
                689,
                185
            ],
            "halt()": [
                887,
                317
            ],
            "getState()": [
                459,
                97
            ],
            "unhalt()": [
                1581,
                625
            ]
        },
        "block_CALL_mapping": {
            "jump2352": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block5273_2": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "block5273_0": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "block5273_1": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump2352_1": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block2352_1": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block2352_0": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block2352_3": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block2352_2": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block2352_5": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block2352_4": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block3863": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block2352_6": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block5782": [
                "token.convertToDecimal(TOTAL_ICO_TOKENS)"
            ],
            "jump2352_7": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump2352_6": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump2352_5": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump2352_4": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump2352_3": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump2352_2": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump6329": [
                "token.releaseTokenTransfer()",
                "token.releaseTokenTransfer()"
            ],
            "jump2352_0": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block6329": [
                "token.releaseTokenTransfer()"
            ],
            "block2352_7": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "block3204": [
                "msg.sender.transfer(weiValue)"
            ],
            "block6599": [
                "token.mint(receiver, tokenAmount)"
            ],
            "block6599_0": [
                "token.mint(receiver, tokenAmount)"
            ],
            "jump5782": [
                "token.convertToDecimal(TOTAL_ICO_TOKENS)",
                "token.convertToDecimal(TOTAL_ICO_TOKENS)"
            ],
            "jump6599": [
                "token.mint(receiver, tokenAmount)",
                "token.mint(receiver, tokenAmount)"
            ],
            "block5273": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump5273": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump3863": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)",
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump3204": [
                "msg.sender.transfer(weiValue)",
                "msg.sender.transfer(weiValue)"
            ],
            "block2352": [
                "token.convertToDecimal(PRE_ICO_MAX_TOKENS)"
            ],
            "jump5273_0": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump5273_1": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump5273_2": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump6599_0": [
                "token.mint(receiver, tokenAmount)",
                "token.mint(receiver, tokenAmount)"
            ]
        }
    }
}