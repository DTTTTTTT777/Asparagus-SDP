{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ico": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "Ico(uint256,uint256,address[],uint256)",
            "participate(address)",
            "fallback()",
            "freeze(uint256)",
            "reportProfit(int256,address)",
            "drip(address)",
            "addNewDividends(uint256)",
            "liquidate()",
            "getOwedDividend(address)",
            "balanceOf(address)",
            "reconcileDividend(address)",
            "transfer(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "Ico(uint256,uint256,address[],uint256)": {
                "argument": {
                    "_icoStart": "uint256",
                    "_icoEnd": "uint256",
                    "_team": "address[]",
                    "_tokensPerEth": "uint256"
                },
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "participate(address)": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "freeze(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "reportProfit(int256,address)": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "drip(address)": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "addNewDividends(uint256)": {
                "argument": {
                    "profit": "uint256"
                },
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "liquidate()": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "getOwedDividend(address)": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "reconcileDividend(address)": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "teamNum": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokenPrecision": "uint256",
                    "hardCap": "uint256",
                    "tokensFrozen": "uint256",
                    "tokenValue": "uint256",
                    "dividendSnapshots": "Ico.DividendSnapshot[]",
                    "managementFees": "uint256",
                    "aum": "uint256",
                    "tokensPerEth": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "dripRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "liquidate()": [
                666,
                207
            ],
            "getOwedDividend(address)": [
                1620,
                515
            ],
            "reportProfit(int256,address)": [
                1209,
                383
            ],
            "freeze(uint256)": [
                1551,
                493
            ],
            "balanceOf(address)": [
                848,
                295
            ],
            "participate(address)": [
                1411,
                427
            ],
            "transfer(address,uint256)": [
                1310,
                405
            ]
        },
        "block_CALL_mapping": {
            "block2174": [
                "owner.transfer(ethAmount)"
            ],
            "jump2174": [
                "owner.transfer(ethAmount)",
                "owner.transfer(ethAmount)"
            ],
            "block2174_1": [
                "owner.transfer(ethAmount)"
            ],
            "block2174_0": [
                "owner.transfer(ethAmount)"
            ],
            "jump2174_1": [
                "owner.transfer(ethAmount)",
                "owner.transfer(ethAmount)"
            ],
            "jump2174_0": [
                "owner.transfer(ethAmount)",
                "owner.transfer(ethAmount)"
            ]
        }
    }
}