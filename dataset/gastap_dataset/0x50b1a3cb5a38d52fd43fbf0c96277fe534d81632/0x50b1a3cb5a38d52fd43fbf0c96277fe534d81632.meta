{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "amIOwner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "amIOwner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "amIOwner()": [
                92,
                75
            ],
            "transferOwnership(address)": [
                162,
                119
            ],
            "acceptOwnership()": [
                139,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Linkable": {
        "function_list": [
            "Ownable()",
            "amIOwner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "link(address)",
            "checkPermissions()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "linked": "address[]"
                }
            },
            "amIOwner()": {
                "argument": {},
                "contract": {
                    "linked": "address[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "linked": "address[]"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "linked": "address[]"
                }
            },
            "link(address)": {
                "argument": {},
                "contract": {
                    "linked": "address[]"
                }
            },
            "checkPermissions()": {
                "argument": {},
                "contract": {
                    "linked": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "amIOwner()": [
                114,
                75
            ],
            "link(address)": [
                184,
                119
            ],
            "transferOwnership(address)": [
                298,
                163
            ],
            "checkPermissions()": [
                251,
                141
            ],
            "acceptOwnership()": [
                161,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Activity": {
        "function_list": [
            "link(address)",
            "checkPermissions()",
            "Ownable()",
            "amIOwner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "newEvent(uint256,address[],uint256,uint256)",
            "getFeed(uint256,uint256,uint256)",
            "constructResponse(Activity.Event[])",
            "contructWinData(Activity.Event[])",
            "chooseWinnerToDisplay(address[],address)",
            "getFiltered(uint256,uint256,uint256)"
        ],
        "initial_state": {
            "link(address)": {
                "argument": {},
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "checkPermissions()": {
                "argument": {},
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "amIOwner()": {
                "argument": {},
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "newEvent(uint256,address[],uint256,uint256)": {
                "argument": {
                    "_gameId": "uint256",
                    "_winners": "address[]",
                    "_winningNumber": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "getFeed(uint256,uint256,uint256)": {
                "argument": {
                    "_gameId": "uint256",
                    "_page": "uint256",
                    "_pageSize": "uint256"
                },
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "constructResponse(Activity.Event[])": {
                "argument": {
                    "_events": "Activity.Event[]"
                },
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "contructWinData(Activity.Event[])": {
                "argument": {
                    "_events": "Activity.Event[]"
                },
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "chooseWinnerToDisplay(address[],address)": {
                "argument": {
                    "_winners": "address[]"
                },
                "contract": {
                    "events": "Activity.Event[]"
                }
            },
            "getFiltered(uint256,uint256,uint256)": {
                "argument": {
                    "_gameId": "uint256",
                    "_page": "uint256",
                    "_pageSize": "uint256"
                },
                "contract": {
                    "events": "Activity.Event[]"
                }
            }
        },
        "function_block_mapping": {
            "checkPermissions()": [
                1142,
                207
            ],
            "link(address)": [
                1075,
                185
            ],
            "newEvent(uint256,address[],uint256,uint256)": [
                920,
                141
            ],
            "amIOwner()": [
                873,
                119
            ],
            "getFeed(uint256,uint256,uint256)": [
                291,
                97
            ],
            "transferOwnership(address)": [
                1189,
                229
            ],
            "acceptOwnership()": [
                1052,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Affiliates": {
        "function_list": [
            "link(address)",
            "checkPermissions()",
            "Ownable()",
            "amIOwner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setRegistrationOpen(bool)",
            "isRegistrationOpen()",
            "setPromoted(bool)",
            "isPromoted()",
            "getCode()",
            "code(address)",
            "getAffiliation(address)",
            "setAffiliation(address,uint256)",
            "deposit(uint256[],uint256[])",
            "withdraw()",
            "getBalance()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "link(address)": {
                "argument": {},
                "contract": {}
            },
            "checkPermissions()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "amIOwner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "setRegistrationOpen(bool)": {
                "argument": {},
                "contract": {}
            },
            "isRegistrationOpen()": {
                "argument": {},
                "contract": {}
            },
            "setPromoted(bool)": {
                "argument": {},
                "contract": {}
            },
            "isPromoted()": {
                "argument": {},
                "contract": {}
            },
            "getCode()": {
                "argument": {},
                "contract": {}
            },
            "code(address)": {
                "argument": {},
                "contract": {}
            },
            "getAffiliation(address)": {
                "argument": {},
                "contract": {}
            },
            "setAffiliation(address,uint256)": {
                "argument": {
                    "_code": "uint256"
                },
                "contract": {}
            },
            "deposit(uint256[],uint256[])": {
                "argument": {
                    "_affiliateCodes": "uint256[]",
                    "_amounts": "uint256[]"
                },
                "contract": {}
            },
            "withdraw()": {
                "argument": {},
                "contract": {}
            },
            "getBalance()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "amIOwner()": [
                501,
                185
            ],
            "checkPermissions()": [
                685,
                273
            ],
            "getAffiliation(address)": [
                1045,
                383
            ],
            "setAffiliation(address,uint256)": [
                361,
                141
            ],
            "isRegistrationOpen()": [
                571,
                229
            ],
            "link(address)": [
                618,
                251
            ],
            "setPromoted(bool)": [
                224,
                75
            ],
            "getCode()": [
                779,
                317
            ],
            "withdraw()": [
                458,
                163
            ],
            "deposit(uint256[],uint256[])": [
                822,
                339
            ],
            "setRegistrationOpen(bool)": [
                314,
                119
            ],
            "isPromoted()": [
                732,
                295
            ],
            "getBalance()": [
                271,
                97
            ],
            "transferOwnership(address)": [
                978,
                361
            ],
            "acceptOwnership()": [
                548,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump1652": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block1652": [
                "msg.sender.transfer(_amount)"
            ]
        }
    },
    "Lottery": {
        "function_list": [
            "Ownable()",
            "amIOwner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Lottery()",
            "setId(uint256)",
            "link(uint256,address,address)",
            "initialized()",
            "linkActivity(address)",
            "postEvent(address[],uint256,uint256)",
            "postEvent(address,uint256,uint256)",
            "linkAffiliates(address)",
            "setUserAffiliate(uint256)",
            "userAffiliate()",
            "payoutToAffiliates(uint256[],uint256[],uint256)",
            "getRandomNumber(uint256)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "amIOwner()": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "Lottery()": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "setId(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "id": "uint256"
                }
            },
            "link(uint256,address,address)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "id": "uint256"
                }
            },
            "initialized()": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "linkActivity(address)": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "postEvent(address[],uint256,uint256)": {
                "argument": {
                    "_winners": "address[]",
                    "_winningNumber": "uint256",
                    "_jackpot": "uint256"
                },
                "contract": {
                    "id": "uint256"
                }
            },
            "postEvent(address,uint256,uint256)": {
                "argument": {
                    "_winningNumber": "uint256",
                    "_jackpot": "uint256"
                },
                "contract": {
                    "id": "uint256"
                }
            },
            "linkAffiliates(address)": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "setUserAffiliate(uint256)": {
                "argument": {
                    "_code": "uint256"
                },
                "contract": {
                    "id": "uint256"
                }
            },
            "userAffiliate()": {
                "argument": {},
                "contract": {
                    "id": "uint256"
                }
            },
            "payoutToAffiliates(uint256[],uint256[],uint256)": {
                "argument": {
                    "_addresses": "uint256[]",
                    "_amounts": "uint256[]",
                    "_total": "uint256"
                },
                "contract": {
                    "id": "uint256"
                }
            },
            "getRandomNumber(uint256)": {
                "argument": {
                    "_max": "uint256"
                },
                "contract": {
                    "id": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block325": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "jump700": [
                "msg.sender.send(msg.value % ticketPrice)",
                "msg.sender.send(msg.value % ticketPrice)"
            ],
            "jump325_0": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))",
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "block700_0": [
                "msg.sender.send(msg.value % ticketPrice)"
            ],
            "jump325": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))",
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "block325_0": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "block2565": [
                "winner.send(prize)"
            ],
            "jump700_0": [
                "msg.sender.send(msg.value % ticketPrice)",
                "msg.sender.send(msg.value % ticketPrice)"
            ],
            "jump2565": [
                "winner.send(prize)",
                "winner.send(prize)"
            ],
            "block700": [
                "msg.sender.send(msg.value % ticketPrice)"
            ]
        }
    },
    "SlotLottery": {
        "function_list": [
            "Lottery()",
            "setId(uint256)",
            "link(uint256,address,address)",
            "initialized()",
            "linkActivity(address)",
            "postEvent(address[],uint256,uint256)",
            "postEvent(address,uint256,uint256)",
            "linkAffiliates(address)",
            "setUserAffiliate(uint256)",
            "userAffiliate()",
            "payoutToAffiliates(uint256[],uint256[],uint256)",
            "getRandomNumber(uint256)",
            "Ownable()",
            "amIOwner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "SlotLottery()",
            "initialized()",
            "getState()",
            "startGame(uint256,uint256,uint256,uint256)",
            "suspendGame()",
            "gameShouldRestart()",
            "triggerFindWinner()",
            "setNextRules(uint256,uint256,uint256,uint256)",
            "getNextRules()",
            "nextGame(SlotLottery.GameRules)",
            "findWinner()",
            "winnerChosen(uint256)",
            "purchaseTickets(uint256[])",
            "purchaseTicketsWithReferral(uint256[],uint256)",
            "getMyTickets()",
            "verifiedGameRules(uint256,uint256,uint256,uint256)",
            "getCurrentGame()",
            "getLastGame()",
            "addAffiliate(uint256,uint256)",
            "payAffiliates()",
            "randomNumberFound(uint256,uint256)",
            "failPurchase(SlotLottery.PurchaseError)",
            "refund(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Lottery()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "setId(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "link(uint256,address,address)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "initialized()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "linkActivity(address)": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "postEvent(address[],uint256,uint256)": {
                "argument": {
                    "_winners": "address[]",
                    "_winningNumber": "uint256",
                    "_jackpot": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "postEvent(address,uint256,uint256)": {
                "argument": {
                    "_winningNumber": "uint256",
                    "_jackpot": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "linkAffiliates(address)": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "setUserAffiliate(uint256)": {
                "argument": {
                    "_code": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "userAffiliate()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "payoutToAffiliates(uint256[],uint256[],uint256)": {
                "argument": {
                    "_addresses": "uint256[]",
                    "_amounts": "uint256[]",
                    "_total": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "getRandomNumber(uint256)": {
                "argument": {
                    "_max": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "amIOwner()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "SlotLottery()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "startGame(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_jackpot": "uint256",
                    "_slots": "uint256",
                    "_price": "uint256",
                    "_max": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "suspendGame()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "gameShouldRestart()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "triggerFindWinner()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "setNextRules(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_jackpot": "uint256",
                    "_slots": "uint256",
                    "_price": "uint256",
                    "_max": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "getNextRules()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "nextGame(SlotLottery.GameRules)": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "findWinner()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "winnerChosen(uint256)": {
                "argument": {
                    "_winningNumber": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "purchaseTickets(uint256[])": {
                "argument": {
                    "_tickets": "uint256[]"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "purchaseTicketsWithReferral(uint256[],uint256)": {
                "argument": {
                    "_tickets": "uint256[]",
                    "_affiliateCode": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "getMyTickets()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "verifiedGameRules(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_jackpot": "uint256",
                    "_slots": "uint256",
                    "_price": "uint256",
                    "_max": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "getCurrentGame()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "getLastGame()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "addAffiliate(uint256,uint256)": {
                "argument": {
                    "_affiliate": "uint256",
                    "_ticketCount": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "payAffiliates()": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "randomNumberFound(uint256,uint256)": {
                "argument": {
                    "_number": "uint256",
                    "_secret": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "failPurchase(SlotLottery.PurchaseError)": {
                "argument": {},
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            },
            "refund(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "currentGameAffiliates": "uint256[]",
                    "numAffiliates": "uint256",
                    "affiliateCut": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getMyTickets()": [
                1373,
                405
            ],
            "gameShouldRestart()": [
                693,
                229
            ],
            "startGame(uint256,uint256,uint256,uint256)": [
                1081,
                295
            ],
            "link(uint256,address,address)": [
                1481,
                427
            ],
            "setId(uint256)": [
                1241,
                361
            ],
            "purchaseTicketsWithReferral(uint256[],uint256)": [
                378,
                119
            ],
            "getNextRules()": [
                1166,
                339
            ],
            "getCurrentGame()": [
                838,
                273
            ],
            "getLastGame()": [
                716,
                251
            ],
            "suspendGame()": [
                355,
                97
            ],
            "purchaseTickets(uint256[])": [
                534,
                163
            ],
            "getState()": [
                477,
                141
            ],
            "triggerFindWinner()": [
                1156,
                317
            ],
            "amIOwner()": [
                623,
                185
            ],
            "setNextRules(uint256,uint256,uint256,uint256)": [
                1590,
                449
            ],
            "transferOwnership(address)": [
                1665,
                471
            ],
            "acceptOwnership()": [
                670,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump6202_5": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump6202_4": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump6202_7": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump6202_6": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump6202_1": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block6118_8": [
                "msg.sender.transfer(_amount)"
            ],
            "jump6202_3": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump6202_2": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block6118_5": [
                "msg.sender.transfer(_amount)"
            ],
            "block6118_4": [
                "msg.sender.transfer(_amount)"
            ],
            "block6118_7": [
                "msg.sender.transfer(_amount)"
            ],
            "block6118_6": [
                "msg.sender.transfer(_amount)"
            ],
            "block6118_1": [
                "msg.sender.transfer(_amount)"
            ],
            "block6118_0": [
                "msg.sender.transfer(_amount)"
            ],
            "block6468": [
                "affiliates.getAffiliation(msg.sender)"
            ],
            "block6118_2": [
                "msg.sender.transfer(_amount)"
            ],
            "jump9049_1": [
                "_winner.transfer(game.rules.jackpot)",
                "_winner.transfer(game.rules.jackpot)"
            ],
            "jump9049_0": [
                "_winner.transfer(game.rules.jackpot)",
                "_winner.transfer(game.rules.jackpot)"
            ],
            "block6202_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump6731_0": [
                "affiliates.setAffiliation(msg.sender, _code)",
                "affiliates.setAffiliation(msg.sender, _code)"
            ],
            "block6202_7": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump6202_8": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump10971_0": [
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)",
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)"
            ],
            "block10971": [
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)"
            ],
            "jump6731": [
                "affiliates.setAffiliation(msg.sender, _code)",
                "affiliates.setAffiliation(msg.sender, _code)"
            ],
            "block9049_1": [
                "_winner.transfer(game.rules.jackpot)"
            ],
            "block9049_0": [
                "_winner.transfer(game.rules.jackpot)"
            ],
            "jump10705_1": [
                "affiliates.deposit.value(_total)(_addresses, _amounts)",
                "affiliates.deposit.value(_total)(_addresses, _amounts)"
            ],
            "jump10705_0": [
                "affiliates.deposit.value(_total)(_addresses, _amounts)",
                "affiliates.deposit.value(_total)(_addresses, _amounts)"
            ],
            "block6118": [
                "msg.sender.transfer(_amount)"
            ],
            "block10971_0": [
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)"
            ],
            "block6202_4": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump6202_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block9670_0": [
                "owner.transfer(this.balance)"
            ],
            "jump10971": [
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)",
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)"
            ],
            "block6202": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump6468_0": [
                "affiliates.getAffiliation(msg.sender)",
                "affiliates.getAffiliation(msg.sender)"
            ],
            "jump8743": [
                "affiliates.checkPermissions()",
                "affiliates.checkPermissions()"
            ],
            "jump10971_1": [
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)",
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)"
            ],
            "jump9670_1": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block6202_3": [
                "msg.sender.transfer(msg.value)"
            ],
            "block6202_2": [
                "msg.sender.transfer(msg.value)"
            ],
            "block6202_1": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump6118_8": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump6118": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block6202_6": [
                "msg.sender.transfer(msg.value)"
            ],
            "block6202_5": [
                "msg.sender.transfer(msg.value)"
            ],
            "block6731": [
                "affiliates.setAffiliation(msg.sender, _code)"
            ],
            "jump6118_3": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump6118_2": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump6118_1": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump6118_0": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump6118_7": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump6118_6": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block9670": [
                "owner.transfer(this.balance)"
            ],
            "jump6118_4": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump6118_5": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump9670_0": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block9049": [
                "_winner.transfer(game.rules.jackpot)"
            ],
            "jump10705": [
                "affiliates.deposit.value(_total)(_addresses, _amounts)",
                "affiliates.deposit.value(_total)(_addresses, _amounts)"
            ],
            "block9670_1": [
                "owner.transfer(this.balance)"
            ],
            "block6118_3": [
                "msg.sender.transfer(_amount)"
            ],
            "jump8215": [
                "activity.checkPermissions()",
                "activity.checkPermissions()"
            ],
            "block10971_1": [
                "activity.newEvent(id, _winners, _winningNumber, _jackpot)"
            ],
            "block6468_0": [
                "affiliates.getAffiliation(msg.sender)"
            ],
            "block8215": [
                "activity.checkPermissions()"
            ],
            "block6731_0": [
                "affiliates.setAffiliation(msg.sender, _code)"
            ],
            "jump6202": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump6468": [
                "affiliates.getAffiliation(msg.sender)",
                "affiliates.getAffiliation(msg.sender)"
            ],
            "block8743": [
                "affiliates.checkPermissions()"
            ],
            "jump9670": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block10705_1": [
                "affiliates.deposit.value(_total)(_addresses, _amounts)"
            ],
            "block10705_0": [
                "affiliates.deposit.value(_total)(_addresses, _amounts)"
            ],
            "block10705": [
                "affiliates.deposit.value(_total)(_addresses, _amounts)"
            ],
            "block6202_8": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump9049": [
                "_winner.transfer(game.rules.jackpot)",
                "_winner.transfer(game.rules.jackpot)"
            ]
        }
    }
}