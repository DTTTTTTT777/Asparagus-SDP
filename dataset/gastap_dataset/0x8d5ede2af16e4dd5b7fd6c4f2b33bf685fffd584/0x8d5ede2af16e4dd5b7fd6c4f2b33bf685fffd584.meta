{
    "BLOCKCHAIN_DEPOSIT_BETA": {
        "function_list": [
            "BLOCKCHAIN_DEPOSIT_BETA()",
            "fallback()",
            "Make_Deposit()",
            "status()",
            "performPayouts()",
            "addDepositor()",
            "changeFounderAddress(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "BLOCKCHAIN_DEPOSIT_BETA()": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            },
            "Make_Deposit()": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            },
            "status()": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            },
            "performPayouts()": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            },
            "addDepositor()": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            },
            "changeFounderAddress(address)": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PAYOUT_INTERVAL": "uint256",
                    "DEPONENT_INTEREST": "uint256",
                    "INTEREST_DENOMINATOR": "uint256",
                    "contract_latestPayoutTime": "uint256",
                    "contract_depositors": "BLOCKCHAIN_DEPOSIT_BETA.Depositor[]"
                }
            }
        },
        "function_block_mapping": {
            "performPayouts()": [
                249,
                141
            ],
            "changeFounderAddress(address)": [
                172,
                97
            ],
            "Make_Deposit()": [
                239,
                119
            ],
            "status()": [
                108,
                75
            ]
        },
        "block_CALL_mapping": {
            "block865": [
                "contract_depositors[idx].etherAddress.send(payout)"
            ],
            "jump865": [
                "contract_depositors[idx].etherAddress.send(payout)",
                "contract_depositors[idx].etherAddress.send(payout)"
            ]
        }
    }
}