{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                807,
                207
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "QUANTFund": {
        "function_list": [
            "perform_withdraw(address)",
            "refund_me()",
            "buy_the_tokens(string)",
            "change_sale_address(address,string)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "perform_withdraw(address)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "max_raised_amount": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "refund_me()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "max_raised_amount": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "buy_the_tokens(string)": {
                "argument": {
                    "_password": "string"
                },
                "contract": {
                    "contract_eth_value": "uint256",
                    "max_raised_amount": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "change_sale_address(address,string)": {
                "argument": {
                    "_password": "string"
                },
                "contract": {
                    "contract_eth_value": "uint256",
                    "max_raised_amount": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "max_raised_amount": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "max_raised_amount": "uint256",
                    "hash_pwd": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "refund_me()": [
                976,
                132
            ],
            "perform_withdraw(address)": [
                1085,
                198
            ],
            "change_sale_address(address,string)": [
                618,
                44
            ]
        },
        "block_CALL_mapping": {
            "jump2381": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block251_0": [
                "creator.transfer(fee)"
            ],
            "jump251": [
                "creator.transfer(fee)",
                "creator.transfer(fee)"
            ],
            "jump251_0": [
                "creator.transfer(fee)",
                "creator.transfer(fee)"
            ],
            "block2846": [
                "token.transfer(msg.sender, tokens_to_withdraw)"
            ],
            "block1965": [
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block251": [
                "creator.transfer(fee)"
            ],
            "block1374": [
                "sale.transfer(contract_eth_value)"
            ],
            "jump2846": [
                "token.transfer(msg.sender, tokens_to_withdraw)",
                "token.transfer(msg.sender, tokens_to_withdraw)"
            ],
            "jump1965": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block2381": [
                "token.balanceOf(address(this))"
            ],
            "jump1374": [
                "sale.transfer(contract_eth_value)",
                "sale.transfer(contract_eth_value)"
            ]
        }
    }
}