{
    "ERC20Token": {
        "function_list": [
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                662,
                163
            ],
            "balanceOf(address)": [
                972,
                295
            ],
            "transfer(address,uint256)": [
                1349,
                449
            ]
        },
        "block_CALL_mapping": {
            "block2508": [
                "founder.transfer(msg.value)"
            ],
            "block2508_0": [
                "founder.transfer(msg.value)"
            ],
            "block2508_1": [
                "founder.transfer(msg.value)"
            ],
            "jump2508": [
                "founder.transfer(msg.value)",
                "founder.transfer(msg.value)"
            ],
            "jump2508_0": [
                "founder.transfer(msg.value)",
                "founder.transfer(msg.value)"
            ],
            "jump2508_1": [
                "founder.transfer(msg.value)",
                "founder.transfer(msg.value)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "UnicornRefunds": {
        "function_list": [
            "getAllowedAmount(address)",
            "claimReward(uint256)",
            "sell(uint256)",
            "fallback()",
            "changeOwner(address)",
            "changeCardboardUnicornTokenAddress(address)",
            "changeUnicornRanchAddress(address)",
            "changePricePerUnicorn(uint256)",
            "changeRewardAmount(uint256)",
            "setAllowance(address,uint256)",
            "withdraw()",
            "withdrawForeignTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "getAllowedAmount(address)": {
                "argument": {},
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "claimReward(uint256)": {
                "argument": {
                    "_bookingIndex": "uint256"
                },
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "_unicornCount": "uint256"
                },
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "changeCardboardUnicornTokenAddress(address)": {
                "argument": {},
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "changeUnicornRanchAddress(address)": {
                "argument": {},
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "changePricePerUnicorn(uint256)": {
                "argument": {
                    "_newPrice": "uint256"
                },
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "changeRewardAmount(uint256)": {
                "argument": {
                    "_newAmount": "uint256"
                },
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "setAllowance(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            },
            "withdrawForeignTokens(address)": {
                "argument": {},
                "contract": {
                    "pricePerUnicorn": "uint256",
                    "rewardUnicornAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeCardboardUnicornTokenAddress(address)": [
                1184,
                317
            ],
            "changeUnicornRanchAddress(address)": [
                1408,
                405
            ],
            "changePricePerUnicorn(uint256)": [
                1251,
                339
            ],
            "changeRewardAmount(uint256)": [
                1096,
                273
            ],
            "withdrawForeignTokens(address)": [
                1341,
                383
            ],
            "getAllowedAmount(address)": [
                964,
                229
            ],
            "withdraw()": [
                657,
                119
            ],
            "claimReward(uint256)": [
                1051,
                251
            ],
            "sell(uint256)": [
                1296,
                361
            ],
            "changeOwner(address)": [
                897,
                207
            ],
            "setAllowance(address,uint256)": [
                493,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump4472": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block2478": [
                "ranch.getBooking(msg.sender, _bookingIndex)"
            ],
            "jump4664": [
                "token.transfer(owner, token.balanceOf(address(this)))",
                "token.transfer(owner, token.balanceOf(address(this)))"
            ],
            "block4472": [
                "token.balanceOf(address(this))"
            ],
            "block4664": [
                "token.transfer(owner, token.balanceOf(address(this)))"
            ],
            "jump3983": [
                "msg.sender.transfer(total)",
                "msg.sender.transfer(total)"
            ],
            "block1826": [
                "owner.transfer(this.balance)"
            ],
            "jump1826": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block3983": [
                "msg.sender.transfer(total)"
            ],
            "jump2478": [
                "ranch.getBooking(msg.sender, _bookingIndex)",
                "ranch.getBooking(msg.sender, _bookingIndex)"
            ],
            "block3938": [
                "cardboardUnicorns.transferFrom(msg.sender, owner, _unicornCount)"
            ],
            "jump3938": [
                "cardboardUnicorns.transferFrom(msg.sender, owner, _unicornCount)",
                "cardboardUnicorns.transferFrom(msg.sender, owner, _unicornCount)"
            ]
        }
    }
}