block0(g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	lt(s(1), s(0))
	call(block637(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump0(s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	geq(s(1), s(0))
	call(block13(g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump13(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block942(s(0),g(votingDeadline), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block65(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block13(g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 57600080
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block985(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block76(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block65(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 86896325
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1094(s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block87(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block87(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1238(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block98(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block98(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 174662471
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1315(s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))

jump98(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block109(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block109(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 230911786
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1338(s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block120(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump120(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1425(s(0),g(numberOfVotes), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block131(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block120(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 243091725
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 274359126
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1468(s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block142(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block142(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 348895501
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1511(s(0),g(yea), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block153(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump153(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1554(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block164(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block153(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1597(s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))

jump164(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block175(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block164(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 434608524
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 452119037
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1668(s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block186(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump186(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1711(s(0),g(collectedUSD), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block197(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block186(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1754(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump197(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block208(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block197(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 803891477
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1863(s(0),g(weiReqFund), l(l1), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block219(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block219(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1906(s(0),g(decimals), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block230(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump230(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1955(s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))

jump230(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block241(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block230(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1026513882
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2000(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))

jump241(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block252(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block241(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1233546944
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block252(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1268735128
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2045(s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))

jump252(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block263(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block263(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2112(s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))

jump263(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block274(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

jump274(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2256(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump274(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block285(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block274(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1868050891
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2375(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump285(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block296(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump296(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2482(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump296(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block307(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block296(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1870383550
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2576(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))

jump307(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block318(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block307(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2663(s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp))

jump318(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block329(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block318(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1977810789
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2049348175
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2730(s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))

jump329(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block340(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump340(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2773(s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block351(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block340(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2066067146
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2816(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump351(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block362(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block351(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2120681183
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2907(s(0),g(migrationAgent), l(l1), l(l0), callvalue))

jump362(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block373(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block362(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2200493005
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2237027717
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2994(s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block384(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block384(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3081(s(0),g(owner), l(l1), l(l0), callvalue))

jump384(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block395(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block395(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2413013888
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3168(s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize))

jump395(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block406(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump406(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3191(s(0),g(totalMigrated), l(l1), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block417(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block406(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2510353899
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3234(s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))

jump417(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block428(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block428(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514067504
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3378(s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))

jump428(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block439(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump439(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3465(s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))

jump439(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block450(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block439(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2542402010
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3508(s(0),g(etherPrice), l(l1), l(l0), callvalue))

jump450(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block461(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block461(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2762537194
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3551(s(0),g(migrationHost), l(l1), l(l0), callvalue))

jump461(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block472(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump472(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3638(s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))

jump472(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block483(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block472(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3705(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump483(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block494(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block483(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2884092046
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3782(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))

jump494(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block505(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block505(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3181079942
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3851(s(0),g(newOwner), g(owner), caller, callvalue))

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block516(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block516(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3874(s(0),g(state), l(l1), l(l0), callvalue))

jump516(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block527(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block527(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3572374928
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3931(s(0),g(newOwner), l(l1), l(l0), callvalue))

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block538(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4018(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block549(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block538(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3636458917
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4119(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block560(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))

block549(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3709204883
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4196(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block571(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))

jump571(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4315(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))

jump571(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block582(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block571(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3806082528
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3808182813
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4392(s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))

jump582(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block593(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block593(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3929006498
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4435(s(0),g(nay), l(l1), l(l0), callvalue))

jump593(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block604(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block604(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4159689736
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4478(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump604(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block615(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

jump615(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4587(s(0),g(migrationHost), g(owner), caller, callvalue))

jump615(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block626(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block615(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4172968727
	nop(PUSH4)
	call(jump615(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump626(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4610(s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))

jump626(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block637_0(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block626(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4184780803
	nop(PUSH4)
	call(jump626(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block637(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump637(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block653(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump637(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block652(s(2), s(1), s(0)))

block652(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block653(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump653(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump653(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block680(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump653(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block679(s(3), s(2), s(1), s(0)))

block679(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block680(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 729
	nop(PUSH2)
	call(jump680(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

jump680(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 1 )
	call(block729(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump680(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 1 )
	call(block687(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block687(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(2) = 3
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump687(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump687(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block700(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump687(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block699(s(2), s(1), s(0)))

block699(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block700(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump700(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump700(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block727(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump700(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block726(s(3), s(2), s(1), s(0)))

block726(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block727(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	call(block729(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block729(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump729(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump729(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block740(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump729(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block736(s(1), s(0)))

block736(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block740(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = timestamp
	nop(TIMESTAMP)
	call(jump740(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump740(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(3), s(2))
	call(block756(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump740(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(3), s(2))
	call(block752(s(1), s(0)))

block752(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump756(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block782(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump756(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block781(s(3), s(2), s(1), s(0)))

block756(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = 1000000000000000000
	nop(PUSH8)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = s(0)
	nop(DUP4)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump756(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block781(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block782(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 9
	nop(PUSH1)
	s(4) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(4)+s(3)
	nop(ADD)
	call(jump782(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump782(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(3), s(2))
	call(block910(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump782(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(3), s(2))
	call(block800(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block800(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump800(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump800(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block831(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump800(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block830(s(3), s(2), s(1), s(0)))

block830(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump831(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block896(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump831(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block892(s(1), s(0)))

block831(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 3000000
	nop(PUSH3)
	s(4) = s(0)
	nop(DUP4)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump831(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block892(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block896(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = 9
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 927
	nop(PUSH2)
	call(block927(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block910(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 9
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block927(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block927(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 938
	nop(PUSH2)
	s(3) = caller
	nop(CALLER)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(0)
	nop(DUP5)
	s(6) = 4677
	nop(PUSH2)
	call(block4677(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block938(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

jump942(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block954(s(1), s(0),g(votingDeadline), l(l1), l(l0)))

jump942(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block950(s(1), s(0)))

block942(s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump942(s(2),s(1),s(0),g(votingDeadline), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block950(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block954(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 963
	nop(PUSH2)
	s(2) = 5450
	nop(PUSH2)
	call(block5450(s(1),s(0),g(votingDeadline), l(l1), l(l0)))
	nop(JUMP)

block963(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump985(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block997(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump985(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block993(s(1), s(0)))

block985(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump985(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block993(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block997(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1028
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5456
	nop(PUSH2)
	call(block5456(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block1028(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1094(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1106(s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

jump1094(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1102(s(1), s(0)))

block1094(s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1094(s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1102(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1106(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1115
	nop(PUSH2)
	s(2) = 5507
	nop(PUSH2)
	call(block5507(s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1115(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1152(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump1152(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1179(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1152(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1161(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block1152(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1152(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1161(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1152
	nop(PUSH2)
	call(block1152(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump1179(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1224(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1179(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1199(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1179(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1179(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1199(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1224(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1224(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1238(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1238(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1238(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1250(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value))

jump1238(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1246(s(1), s(0)))

block1246(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1250(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1313
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5665
	nop(PUSH2)
	call(block5665(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block1313(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1315(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block1327(s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump1315(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block1323(s(1), s(0)))

block1315(s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1315(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1323(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1327(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1336
	nop(PUSH2)
	s(2) = 5951
	nop(PUSH2)
	call(block5951(s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMP)

block1336(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1338(s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1338(s(2),s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1338(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1350(s(1), s(0),g(migrationAgentCandidate), l(l1), l(l0)))

jump1338(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1346(s(1), s(0)))

block1346(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1350(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1359
	nop(PUSH2)
	s(2) = 6276
	nop(PUSH2)
	call(block6276(s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0)))
	nop(JUMP)

block1359(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1425(s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1425(s(2),s(1),s(0),g(numberOfVotes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1425(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1437(s(1), s(0),g(numberOfVotes), l(l1), l(l0)))

jump1425(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1433(s(1), s(0)))

block1433(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1437(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1446
	nop(PUSH2)
	s(2) = 6314
	nop(PUSH2)
	call(block6314(s(1),s(0),g(numberOfVotes), l(l1), l(l0)))
	nop(JUMP)

block1446(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1468(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1480(s(1), s(0),g(minimalSuccessUSD), l(l1), l(l0)))

jump1468(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1476(s(1), s(0)))

block1468(s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1468(s(2),s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1476(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1480(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1489
	nop(PUSH2)
	s(2) = 6320
	nop(PUSH2)
	call(block6320(s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0)))
	nop(JUMP)

block1489(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1511(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1523(s(1), s(0),g(yea), l(l1), l(l0)))

jump1511(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1519(s(1), s(0)))

block1511(s(0), g(yea), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1511(s(2),s(1),s(0),g(yea), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1519(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1523(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1532
	nop(PUSH2)
	s(2) = 6326
	nop(PUSH2)
	call(block6326(s(1),s(0),g(yea), l(l1), l(l0)))
	nop(JUMP)

block1532(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1554(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1554(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1554(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1566(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1554(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1562(s(1), s(0)))

block1562(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1566(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1575
	nop(PUSH2)
	s(2) = 6332
	nop(PUSH2)
	call(block6332(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1575(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1597(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block1609(s(1), s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))

jump1597(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block1605(s(1), s(0)))

block1597(s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1597(s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1605(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1609(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1618
	nop(PUSH2)
	s(2) = 6338
	nop(PUSH2)
	call(block6338(s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block1618(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(1)
	nop(DUP5)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1618(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1618(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block1646(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump1618(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block1645(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1645(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1646(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1668(s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1668(s(2),s(1),s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1668(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1680(s(1), s(0),g(numberOfInvestors), l(l1), l(l0)))

jump1668(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1676(s(1), s(0)))

block1676(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1680(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1689
	nop(PUSH2)
	s(2) = 6399
	nop(PUSH2)
	call(block6399(s(1),s(0),g(numberOfInvestors), l(l1), l(l0)))
	nop(JUMP)

block1689(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1711(s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1711(s(2),s(1),s(0),g(collectedUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1711(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1723(s(1), s(0),g(collectedUSD), l(l1), l(l0)))

jump1711(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1719(s(1), s(0)))

block1719(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1723(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1732
	nop(PUSH2)
	s(2) = 6405
	nop(PUSH2)
	call(block6405(s(1),s(0),g(collectedUSD), l(l1), l(l0)))
	nop(JUMP)

block1732(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1754(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1754(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1754(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1766(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1754(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1762(s(1), s(0)))

block1762(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1766(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1861
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6411
	nop(PUSH2)
	call(block6411(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block1861(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1863(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1875(s(1), s(0),g(weiReqFund), l(l1), l(l0)))

jump1863(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1871(s(1), s(0)))

block1863(s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1863(s(2),s(1),s(0),g(weiReqFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1871(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1875(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1884
	nop(PUSH2)
	s(2) = 7246
	nop(PUSH2)
	call(block7246(s(1),s(0),g(weiReqFund), l(l1), l(l0)))
	nop(JUMP)

block1884(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1906(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1918(s(1), s(0),g(decimals), l(l1), l(l0)))

jump1906(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1914(s(1), s(0)))

block1906(s(0), g(decimals), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1906(s(2),s(1),s(0),g(decimals), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1914(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1918(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1927
	nop(PUSH2)
	s(2) = 7252
	nop(PUSH2)
	call(block7252(s(1),s(0),g(decimals), l(l1), l(l0)))
	nop(JUMP)

block1927(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1955(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	eq(s(2), 0)
	call(block1967(s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund))

jump1955(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	neq(s(2), 0)
	call(block1963(s(1), s(0)))

block1955(s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1955(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1963(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1967(s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1998
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = weiReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7271
	nop(PUSH2)
	call(block7271(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block1998(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2000(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2000(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2000(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	eq(s(2), 0)
	call(block2012(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp))

jump2000(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	neq(s(2), 0)
	call(block2008(s(1), s(0)))

block2008(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2012(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2043
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investorsToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7492
	nop(PUSH2)
	call(block7492(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2043(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2045(s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2045(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2045(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	eq(s(2), 0)
	call(block2057(s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp))

jump2045(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	neq(s(2), 0)
	call(block2053(s(1), s(0)))

block2053(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2057(s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2090
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inSupport
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9341
	nop(PUSH2)
	call(block9341(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2090(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2112(s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2112(s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2112(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2124(s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

jump2112(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2120(s(1), s(0)))

block2120(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2124(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2133
	nop(PUSH2)
	s(2) = 10000
	nop(PUSH2)
	call(block10000(s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2133(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2170(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block2170(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2170(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2170(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block2197(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2170(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block2179(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block2179(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2170
	nop(PUSH2)
	call(block2170(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump2197(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2242(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2197(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2217(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2197(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2197(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2217(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2242(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2242(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2256(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2256(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2256(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2268(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump2256(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2264(s(1), s(0)))

block2264(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2268(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2353
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 10158
	nop(PUSH2)
	call(block10158(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2353(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2375(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	eq(s(2), 0)
	call(block2387(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump2375(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	neq(s(2), 0)
	call(block2383(s(1), s(0)))

block2375(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2375(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2383(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2387(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2480
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crowdsaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = crowdsaleDurationDays
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = totalLimitUSD
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = minimalSuccessUSD
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = etherPrice
	nop(CALLDATALOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 10195
	nop(PUSH2)
	call(block10195(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2480(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2482(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2494(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2482(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2490(s(1), s(0)))

block2482(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2482(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2490(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2494(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2547
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10720
	nop(PUSH2)
	call(block10720(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2547(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2576(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2576(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2576(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	eq(s(2), 0)
	call(block2588(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who))

jump2576(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	neq(s(2), 0)
	call(block2584(s(1), s(0)))

block2584(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2588(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2641
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10756
	nop(PUSH2)
	call(block10756(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2641(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2663(s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2663(s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2663(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2675(s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, timestamp))

jump2663(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2671(s(1), s(0)))

block2671(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2675(s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2728
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = agent
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10829
	nop(PUSH2)
	call(block10829(s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2728(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2730(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2742(s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump2730(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2738(s(1), s(0)))

block2730(s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2730(s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2738(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2742(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2751
	nop(PUSH2)
	s(2) = 11107
	nop(PUSH2)
	call(block11107(s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMP)

block2751(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2773(s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2773(s(2),s(1),s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2773(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2785(s(1), s(0),g(totalLimitUSD), l(l1), l(l0)))

jump2773(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2781(s(1), s(0)))

block2781(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2785(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2794
	nop(PUSH2)
	s(2) = 11239
	nop(PUSH2)
	call(block11239(s(1),s(0),g(totalLimitUSD), l(l1), l(l0)))
	nop(JUMP)

block2794(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2816(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2828(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump2816(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2824(s(1), s(0)))

block2816(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2816(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2824(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2828(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2881
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11245
	nop(PUSH2)
	call(block11245(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2881(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2907(s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2907(s(2),s(1),s(0),g(migrationAgent), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2907(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2919(s(1), s(0),g(migrationAgent), l(l1), l(l0)))

jump2907(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2915(s(1), s(0)))

block2915(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2919(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2928
	nop(PUSH2)
	s(2) = 11277
	nop(PUSH2)
	call(block11277(s(1),s(0),g(migrationAgent), l(l1), l(l0)))
	nop(JUMP)

block2928(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2994(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3006(s(1), s(0),g(crowdsaleOwner), l(l1), l(l0)))

jump2994(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3002(s(1), s(0)))

block2994(s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2994(s(2),s(1),s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3002(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3006(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3015
	nop(PUSH2)
	s(2) = 11315
	nop(PUSH2)
	call(block11315(s(1),s(0),g(crowdsaleOwner), l(l1), l(l0)))
	nop(JUMP)

block3015(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3081(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3081(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3081(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3093(s(1), s(0),g(owner), l(l1), l(l0)))

jump3081(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3089(s(1), s(0)))

block3089(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3093(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3102
	nop(PUSH2)
	s(2) = 11353
	nop(PUSH2)
	call(block11353(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3102(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3168(s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3168(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3168(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	eq(s(2), 0)
	call(block3180(s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump3168(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	neq(s(2), 0)
	call(block3176(s(1), s(0)))

block3176(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3180(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3189
	nop(PUSH2)
	s(2) = 11390
	nop(PUSH2)
	call(block11390(s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block3189(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3191(s(2), s(1), s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3203(s(1), s(0),g(totalMigrated), l(l1), l(l0)))

jump3191(s(2), s(1), s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3199(s(1), s(0)))

block3191(s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3191(s(2),s(1),s(0),g(totalMigrated), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3199(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3203(s(1), s(0), g(totalMigrated), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3212
	nop(PUSH2)
	s(2) = 12078
	nop(PUSH2)
	call(block12078(s(1),s(0),g(totalMigrated), l(l1), l(l0)))
	nop(JUMP)

block3212(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3234(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3246(s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

jump3234(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3242(s(1), s(0)))

block3234(s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3234(s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3242(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3246(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3255
	nop(PUSH2)
	s(2) = 12084
	nop(PUSH2)
	call(block12084(s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3255(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3292(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump3292(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block3319(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3292(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block3301(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block3292(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3292(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3301(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3292
	nop(PUSH2)
	call(block3292(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block3319(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3319(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3319(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block3364(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3319(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block3339(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3339(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3364(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3364(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3378(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3390(s(1), s(0),g(externalControllerCandidate), l(l1), l(l0)))

jump3378(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3386(s(1), s(0)))

block3378(s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3378(s(2),s(1),s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3386(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3390(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3399
	nop(PUSH2)
	s(2) = 12242
	nop(PUSH2)
	call(block12242(s(1),s(0),g(externalControllerCandidate), l(l1), l(l0)))
	nop(JUMP)

block3399(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3465(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3477(s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0)))

jump3465(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3473(s(1), s(0)))

block3465(s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3465(s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3473(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3477(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3486
	nop(PUSH2)
	s(2) = 12280
	nop(PUSH2)
	call(block12280(s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0)))
	nop(JUMP)

block3486(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3508(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3520(s(1), s(0),g(etherPrice), l(l1), l(l0)))

jump3508(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3516(s(1), s(0)))

block3508(s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3508(s(2),s(1),s(0),g(etherPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3516(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3520(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3529
	nop(PUSH2)
	s(2) = 12286
	nop(PUSH2)
	call(block12286(s(1),s(0),g(etherPrice), l(l1), l(l0)))
	nop(JUMP)

block3529(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3551(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3563(s(1), s(0),g(migrationHost), l(l1), l(l0)))

jump3551(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3559(s(1), s(0)))

block3551(s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3551(s(2),s(1),s(0),g(migrationHost), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3559(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3563(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3572
	nop(PUSH2)
	s(2) = 12292
	nop(PUSH2)
	call(block12292(s(1),s(0),g(migrationHost), l(l1), l(l0)))
	nop(JUMP)

block3572(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3638(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block3650(s(1), s(0),g(newOwner), g(owner), calldatasize, caller, owner))

jump3638(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block3646(s(1), s(0)))

block3638(s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3638(s(2),s(1),s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3646(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3650(s(1), s(0), g(newOwner), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3703
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12330
	nop(PUSH2)
	call(block12330(s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block3703(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3705(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3717(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value))

jump3705(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3713(s(1), s(0)))

block3705(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3705(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3713(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3717(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3780
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 12527
	nop(PUSH2)
	call(block12527(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block3780(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3782(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block3794(s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess))

jump3782(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block3790(s(1), s(0)))

block3782(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3782(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3790(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3794(s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3825
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = votesToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13084
	nop(PUSH2)
	call(block13084(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block3825(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3851(s(0), g(newOwner), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3851(s(2),s(1),s(0),g(newOwner), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3851(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block3863(s(1), s(0),g(newOwner), g(owner), caller))

jump3851(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block3859(s(1), s(0)))

block3859(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3863(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3872
	nop(PUSH2)
	s(2) = 14483
	nop(PUSH2)
	call(block14483(s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block3872(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3874(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3886(s(1), s(0),g(state), l(l1), l(l0)))

jump3874(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3882(s(1), s(0)))

block3874(s(0), g(state), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3874(s(2),s(1),s(0),g(state), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3882(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3886(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3895
	nop(PUSH2)
	s(2) = 14712
	nop(PUSH2)
	call(block14712(s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

jump3895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block3911(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump3895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block3910(s(5), s(4), s(3), s(2), s(1), s(0)))

block3895(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump3895(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3910(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3911(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3931(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3943(s(1), s(0),g(newOwner), l(l1), l(l0)))

jump3931(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3939(s(1), s(0)))

block3931(s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3931(s(2),s(1),s(0),g(newOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3939(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3943(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3952
	nop(PUSH2)
	s(2) = 14731
	nop(PUSH2)
	call(block14731(s(1),s(0),g(newOwner), l(l1), l(l0)))
	nop(JUMP)

block3952(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4018(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4018(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4018(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4030(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump4018(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4026(s(1), s(0)))

block4026(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4030(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4083
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14769
	nop(PUSH2)
	call(block14769(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

jump4083(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block4099(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump4083(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block4098(s(5), s(4), s(3), s(2), s(1), s(0)))

block4083(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4083(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4098(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4099(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4119(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4119(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4119(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	eq(s(2), 0)
	call(block4131(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who))

jump4119(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	neq(s(2), 0)
	call(block4127(s(1), s(0)))

block4127(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4131(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4194
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = valueUSD
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14801
	nop(PUSH2)
	call(block14801(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block4194(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4196(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4196(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4196(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4208(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender))

jump4196(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4204(s(1), s(0)))

block4204(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4208(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4293
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15061
	nop(PUSH2)
	call(block15061(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4293(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4315(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4327(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value))

jump4315(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4323(s(1), s(0)))

block4315(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4315(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4323(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4327(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4390
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15248
	nop(PUSH2)
	call(block15248(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(JUMP)

block4390(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4392(s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4392(s(2),s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4392(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4404(s(1), s(0),g(crowdsaleStartTime), l(l1), l(l0)))

jump4392(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4400(s(1), s(0)))

block4400(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4404(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4413
	nop(PUSH2)
	s(2) = 15816
	nop(PUSH2)
	call(block15816(s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0)))
	nop(JUMP)

block4413(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4435(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4447(s(1), s(0),g(nay), l(l1), l(l0)))

jump4435(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4443(s(1), s(0)))

block4435(s(0), g(nay), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4435(s(2),s(1),s(0),g(nay), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4443(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4447(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4456
	nop(PUSH2)
	s(2) = 15822
	nop(PUSH2)
	call(block15822(s(1),s(0),g(nay), l(l1), l(l0)))
	nop(JUMP)

block4456(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4478(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4478(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4478(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4490(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump4478(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4486(s(1), s(0)))

block4486(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4490(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4521
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15828
	nop(PUSH2)
	call(block15828(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4521(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4587(s(0), g(migrationHost), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4587(s(2),s(1),s(0),g(migrationHost), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4587(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4599(s(1), s(0),g(migrationHost), g(owner), caller))

jump4587(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4595(s(1), s(0)))

block4595(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4599(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4608
	nop(PUSH2)
	s(2) = 15879
	nop(PUSH2)
	call(block15879(s(1),s(0),g(migrationHost), g(owner), caller))
	nop(JUMP)

block4608(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4610(s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4610(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4610(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	eq(s(2), 0)
	call(block4622(s(1), s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder))

jump4610(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	neq(s(2), 0)
	call(block4618(s(1), s(0)))

block4618(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4622(s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4675
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tokensHolder
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16009
	nop(PUSH2)
	call(block16009(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block4675(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4677(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block4699(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4677(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block4698(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4677(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 100
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 1
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump4677(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4698(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4699(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4699(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4699(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4726(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4699(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4725(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4725(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4726(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4726(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4726(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block4780(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4726(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block4733(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4733(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), 0)
	call(block4756(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4733(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), 0)
	call(block4749(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4733(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(10) = s(9)
	nop(DUP1)
	call(jump4733(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4749(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(9) = 50000
	nop(PUSH2)
	s(10) = s(4)
	nop(DUP6)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	call(block4756(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4756(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4756(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4756(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(9), 0)
	call(block4770(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4756(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(9), 0)
	call(block4762(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4762(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 150
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 4775
	nop(PUSH2)
	call(block4775(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4770(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 125
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block4775(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4775(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 4873
	nop(PUSH2)
	call(block4873(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump4780(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block4793(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4780(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block4792(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4780(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 3
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump4780(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4792(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4793(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4793(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4793(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4820(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4793(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4819(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4819(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4820(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block4872(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4820(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block4827(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4820(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4820(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4827(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block4850(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4827(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block4842(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4827(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump4827(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4842(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 115
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 4871
	nop(PUSH2)
	call(block4871(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4850(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 604800
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump4850(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4850(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block4870(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4850(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block4866(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4866(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 110
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block4870(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4870(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4871(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4871(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4872(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4872(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4873(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4873(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	call(jump4873(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4873(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block5020(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4873(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block5016(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5016(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump5020(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block5035(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5020(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block5031(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5020(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	call(jump5020(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5031(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump5035(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), s(9))
	call(block5212(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5035(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), s(9))
	call(block5114(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5035(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	call(jump5035(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5114(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = s(3)
	nop(DUP6)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 15
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(numberOfInvestors)
	nop(SLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(13)
	nop(SSTORE)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = or(s(12), s(11))
	nop(OR)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	call(block5212(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5212(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	l(l1) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(totalSupply)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(totalSupply) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block938(s(1),s(0)))
	nop(JUMP)

block5450(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(votingDeadline)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block963(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5456(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 14
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1028(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5507(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump5507(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5507(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block5657(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5507(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block5587(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

block5587(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump5587(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump5587(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block5614(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump5587(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block5595(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block5595(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 5657
	nop(PUSH2)
	call(block5657(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5614(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block5628(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump5628(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump5628(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block5628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5628(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block5648(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block5648(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block5657(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5657(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1115(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5665(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5665(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5665(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5678(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))

jump5665(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5677(s(4), s(3), s(2), s(1), s(0)))

block5677(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5678(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5678(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5678(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block5705(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump5678(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block5704(s(5), s(4), s(3), s(2), s(1), s(0)))

block5704(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5705(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5705(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5705(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block5717(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump5705(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block5713(s(3), s(2), s(1), s(0)))

block5713(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5717(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1313(s(0)))
	nop(JUMP)

jump5951(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block5965(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump5951(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block5964(s(3), s(2), s(1), s(0)))

block5951(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5951(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5964(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5965(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5992(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump5965(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5991(s(4), s(3), s(2), s(1), s(0)))

block5965(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5965(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5991(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5992(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 6041
	nop(PUSH2)
	call(jump5992(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMPI)

jump5992(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	eq(s(4), 1 )
	call(block6041(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump5992(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	neq(s(4), 1 )
	call(block5999(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump5999(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block6012(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump5999(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block6011(s(3), s(2), s(1), s(0)))

block5999(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5999(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6011(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6012(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block6039(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6012(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block6038(s(4), s(3), s(2), s(1), s(0)))

block6012(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6012(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6038(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6039(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block6041(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))

block6041(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump6041(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6041(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block6052(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6041(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block6048(s(2), s(1), s(0)))

block6048(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump6052(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	leq(s(4), s(3))
	call(block6273(s(2), s(1), s(0)))

jump6052(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	gt(s(4), s(3))
	call(block6131(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

block6052(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump6052(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6131(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump6131(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6131(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block6272(s(2), s(1), s(0)))

jump6131(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block6268(s(2), s(1), s(0)))

block6268(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6272(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block6273(s(2),s(1),s(0)))

block6273(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1336(s(0)))
	nop(JUMP)

block6276(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 31
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1359(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6314(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(numberOfVotes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1446(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6320(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1489(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6326(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(yea)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1532(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6332(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1575(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6338(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block6386(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp))

jump6338(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block6378(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

block6338(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(weiReqFund)
	nop(SLOAD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	call(jump6338(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6378(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 6394
	nop(PUSH2)
	call(block6394(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6386(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	call(block6394(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))

block6394(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	call(block1618(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6399(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(2) = g(numberOfInvestors)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1689(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6405(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1732(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6411(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block6424(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6411(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block6423(s(5), s(4), s(3), s(2), s(1), s(0)))

block6411(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6411(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6423(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6424(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(8), s(7))
	call(block6451(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6424(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(8), s(7))
	call(block6450(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6424(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump6424(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6450(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6451(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(6), s(5))
	call(block6463(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6451(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(6), s(5))
	call(block6459(s(4), s(3), s(2), s(1), s(0)))

block6451(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump6451(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6459(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump6463(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(7), s(6))
	call(block6487(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6463(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(7), s(6))
	call(block6483(s(5), s(4), s(3), s(2), s(1), s(0)))

block6463(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 96
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = calldatasize
	nop(CALLDATASIZE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(jump6463(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6483(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6487(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump6487(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6487(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6565(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6487(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6561(s(5), s(4), s(3), s(2), s(1), s(0)))

block6561(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6565(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump6565(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6565(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6708(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6565(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6704(s(5), s(4), s(3), s(2), s(1), s(0)))

block6704(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump6708(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6847(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6708(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6843(s(5), s(4), s(3), s(2), s(1), s(0)))

block6708(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump6708(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6843(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6847(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1861(s(0)))
	nop(JUMP)

block7246(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(weiReqFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1884(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7252(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1927(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump7271(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7284(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7271(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7283(s(3), s(2), s(1), s(0)))

block7271(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7271(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7283(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7284(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7284(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7284(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7311(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7284(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7310(s(4), s(3), s(2), s(1), s(0)))

block7310(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7311(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 7359
	nop(PUSH2)
	call(jump7311(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7311(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), 1 )
	call(block7359(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7311(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), 1 )
	call(block7318(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

block7318(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7318(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7318(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7330(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7318(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7329(s(3), s(2), s(1), s(0)))

block7329(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7330(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7357(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7330(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7356(s(4), s(3), s(2), s(1), s(0)))

block7330(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7330(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7356(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7357(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block7359(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

block7359(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7359(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7359(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(3), 0)
	call(block7370(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7359(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(3), 0)
	call(block7366(s(2), s(1), s(0)))

block7366(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7370(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block7461(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7370(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block7457(s(2), s(1), s(0)))

block7370(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7370(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7457(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7461(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(4), s(3))
	call(block7476(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7461(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(4), s(3))
	call(block7472(s(2), s(1), s(0)))

block7461(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump7461(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7472(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7476(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 7489
	nop(PUSH2)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH1)
	s(6) = 7
	nop(PUSH1)
	s(7) = 16665
	nop(PUSH2)
	call(block16665(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block7489(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1998(s(0)))
	nop(JUMP)

block7492(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 7502
	nop(PUSH2)
	s(5) = 16902
	nop(PUSH2)
	call(block16902(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

jump7502(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block7517(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7502(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block7516(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7502(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7502(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7516(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7517(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block7544(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7517(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block7543(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7517(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump7517(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7543(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7544(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block7593(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7544(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block7551(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

block7544(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7593
	nop(PUSH2)
	call(jump7544(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7551(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block7564(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7551(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block7563(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7551(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7551(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7563(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7564(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block7591(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7564(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block7590(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7564(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump7564(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7590(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7591(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7593(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7593(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(6), 0)
	call(block7604(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7593(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(6), 0)
	call(block7600(s(5), s(4), s(3), s(2), s(1), s(0)))

block7593(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7593(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7600(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump7604(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block7624(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

jump7604(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block7616(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7604(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 12
	nop(PUSH1)
	s(6) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7624
	nop(PUSH2)
	call(jump7604(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

block7616(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7624(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7624(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7727
	nop(PUSH2)
	call(jump7624(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(JUMPI)

jump7624(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 1 )
	call(block7727(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7624(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 1 )
	call(block7630(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7630(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump7630(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7630(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 0)
	call(block7726(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7630(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 0)
	call(block7645(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7645(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7726(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

block7726(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block7727(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7727(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block7738(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7727(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block7734(s(5), s(4), s(3), s(2), s(1), s(0)))

block7727(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump7727(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7734(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump7738(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	geq(s(7), s(6))
	call(block8358(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7738(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	lt(s(7), s(6))
	call(block7751(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block7738(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	call(jump7738(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(7), 0)
	call(block7769(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

jump7751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(7), 0)
	call(block7762(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block7751(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump7751(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7762(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block7769(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

jump7769(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block8213(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))

jump7769(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block7775(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block7769(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	call(jump7769(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7775(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(numberOfInvestors) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 64
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	l(l0) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(9) = l(l3)
	nop(MLOAD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(4)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 7751
	nop(PUSH2)
	call(block7751(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(JUMP)

block8213(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump8213(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8213(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block8229(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8213(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block8225(s(5), s(4), s(3), s(2), s(1), s(0)))

block8225(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 9335
	nop(PUSH2)
	call(block9335(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block8229(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8229(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8229(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block8242(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8229(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block8241(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8241(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8242(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block8269(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8242(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block8268(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8242(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8242(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8268(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8269(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump8269(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8269(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	neq(s(7), s(6))
	call(block8316(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8269(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	eq(s(7), s(6))
	call(block8276(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8276(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8306(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8276(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8305(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8276(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8276(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8305(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8306(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 8353
	nop(PUSH2)
	call(block8353(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block8316(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8316(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8316(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8347(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8316(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8346(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8346(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8347(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block8353(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block8353(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 9250
	nop(PUSH2)
	call(block9250(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block8358(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block8359(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8359(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump8359(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8359(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), 0)
	call(block8377(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8359(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), 0)
	call(block8370(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8370(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block8377(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8377(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8602(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8377(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8383(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8377(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8377(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8383(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	s(6) = 15
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 14
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 15
	nop(PUSH1)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 8359
	nop(PUSH2)
	call(block8359(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(JUMP)

block8602(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump8602(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8602(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(7), s(6))
	call(block8618(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8602(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(7), s(6))
	call(block8614(s(5), s(4), s(3), s(2), s(1), s(0)))

block8614(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 9335
	nop(PUSH2)
	call(block9335(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block8618(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8618(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8618(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(8), s(7))
	call(block8631(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8618(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(8), s(7))
	call(block8630(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8630(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8631(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block8658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8631(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block8657(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8631(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8631(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8657(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), s(6))
	call(block8822(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), s(6))
	call(block8665(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))

block8658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8658(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8665(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump8665(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8665(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8781(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8665(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8777(s(5), s(4), s(3), s(2), s(1), s(0)))

block8777(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block8781(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8781(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8781(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8812(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8781(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8811(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8811(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8812(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 9249
	nop(PUSH2)
	call(block9249(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

jump8822(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(10), 0)
	call(block8908(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8822(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(10), 0)
	call(block8907(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8822(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = 5
	nop(PUSH1)
	s(8) = g(etherPrice)
	nop(SLOAD)
	s(9) = 1000000000000000000
	nop(PUSH8)
	s(10) = 8
	nop(PUSH1)
	s(10) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump8822(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8907(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8908(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block8941(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8908(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block8937(s(5), s(4), s(3), s(2), s(1), s(0)))

block8908(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump8908(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8937(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump8941(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(8), 0)
	call(block8958(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8941(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(8), 0)
	call(block8957(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8941(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 7
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump8941(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8957(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8958(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	leq(s(12), s(11))
	call(block9243(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8958(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	gt(s(12), s(11))
	call(block9242(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8958(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 4
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8958(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9242(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9243(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block9249(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block9249(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(block9250(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

jump9250(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block9315(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump9250(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block9314(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9250(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9250(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9314(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9315(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG1)
	call(block9335(s(5),s(4),s(3),s(2),s(1),s(0)))

block9335(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2043(s(0)))
	nop(JUMP)

jump9341(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9421(s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9341(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9417(s(3), s(2), s(1), s(0)))

block9341(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump9341(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9417(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9421(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block9434(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9421(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block9433(s(4), s(3), s(2), s(1), s(0)))

block9421(s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump9421(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9433(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9434(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9434(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9434(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block9461(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9434(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block9460(s(5), s(4), s(3), s(2), s(1), s(0)))

block9460(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9461(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9474(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9461(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9470(s(3), s(2), s(1), s(0)))

block9461(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump9461(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9470(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9474(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block9487(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9474(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block9486(s(4), s(3), s(2), s(1), s(0)))

block9474(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump9474(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9486(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9487(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block9575(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9487(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block9574(s(5), s(4), s(3), s(2), s(1), s(0)))

block9487(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9487(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9574(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9575(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9587(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9575(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9583(s(3), s(2), s(1), s(0)))

block9575(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump9575(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9583(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9587(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 23
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump9587(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9587(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block9603(s(3), s(2), s(1), s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))

jump9587(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block9599(s(3), s(2), s(1), s(0)))

block9599(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9603(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), 0)
	call(block9812(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump9603(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), 0)
	call(block9711(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

block9603(s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 24
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(numberOfVotes)
	nop(SLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	g(numberOfVotes) = s(5)
	nop(SSTORE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	call(jump9603(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9711(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block9802(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump9711(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block9801(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9711(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	s(4) = 1
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump9711(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9801(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9802(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 9910
	nop(PUSH2)
	call(block9910(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))
	nop(JUMP)

block9812(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump9812(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9812(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block9904(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump9812(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block9903(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9903(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9904(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block9910(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))

block9910(s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64553722568993200883443809638226739942484745337245721019031194148412713982255
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2090(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10000(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(standard)
	s(7) = g(standard)
	call(jump10000(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10000(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block10150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10000(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block10080(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

jump10080(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block10107(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump10080(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block10088(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l2), l(l1), l(l0)))

block10080(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump10080(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block10088(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 10150
	nop(PUSH2)
	call(block10150(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10107(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block10121(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block10121(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump10121(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump10121(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block10121(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10121(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block10141(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block10141(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block10150(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block10150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2133(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10158(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 20
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2353(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump10195(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	eq(s(8), s(7))
	call(block10286(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10195(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	neq(s(8), s(7))
	call(block10282(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10195(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump10195(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10282(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block10286(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10286(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10286(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10299(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10286(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10298(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10298(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10299(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block10326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10299(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block10325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10299(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10299(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10326(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(8), 1 )
	call(block10375(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10326(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(8), 1 )
	call(block10333(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

block10326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 10375
	nop(PUSH2)
	call(jump10326(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(JUMPI)

block10333(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(7) = 2
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10333(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10333(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10346(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10333(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10345(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10345(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10346(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block10373(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10346(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block10372(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10346(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10346(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10372(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10373(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	call(block10375(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10375(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block10386(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10375(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block10382(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10375(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump10375(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10382(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block10386(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = 11
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleStartTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(crowdsaleOwner)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleOwner) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(etherPrice) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 15
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 12
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 7
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalLimitUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10386(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10386(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10518(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10386(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10517(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10517(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10518(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block10545(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10518(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block10544(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10518(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10518(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10544(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10545(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump10545(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10545(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	neq(s(8), s(7))
	call(block10592(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10545(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	eq(s(8), s(7))
	call(block10552(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10552(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10582(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10552(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10581(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10552(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10552(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10581(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10582(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 10629
	nop(PUSH2)
	call(block10629(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

jump10592(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10623(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10592(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10622(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10592(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10592(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10622(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10623(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block10629(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))

block10629(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10629(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10629(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10694(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump10629(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10693(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10693(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10694(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2480(s(0)))
	nop(JUMP)

block10720(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block2547(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10756(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2641(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump10829(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block10920(s(2), s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10829(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block10916(s(2), s(1), s(0)))

block10829(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump10829(s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10916(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump10920(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block11015(s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10920(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block10987(s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block10920(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 30
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	call(jump10920(s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10987(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block11015(s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block11015(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump11015(s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11015(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(3), 0)
	call(block11026(s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11015(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(3), 0)
	call(block11022(s(2), s(1), s(0)))

block11022(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11026(s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 31
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(migrationAgentCandidate) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 11104
	nop(PUSH2)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 16665
	nop(PUSH2)
	call(block16665_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block11104(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2728(s(0)))
	nop(JUMP)

jump11107(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block11122(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11107(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block11121(s(3), s(2), s(1), s(0)))

block11107(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump11107(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11121(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11122(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11122(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11122(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block11149(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11122(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block11148(s(4), s(3), s(2), s(1), s(0)))

block11148(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11149(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 11198
	nop(PUSH2)
	call(jump11149(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump11149(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	eq(s(4), 1 )
	call(block11198(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11149(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	neq(s(4), 1 )
	call(block11156(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11156(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block11169(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11156(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block11168(s(3), s(2), s(1), s(0)))

block11156(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump11156(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11168(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11169(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11169(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11169(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block11196(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11169(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block11195(s(4), s(3), s(2), s(1), s(0)))

block11195(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11196(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block11198(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

block11198(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump11198(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11198(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block11209(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11198(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block11205(s(2), s(1), s(0)))

block11205(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11209(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump11209(s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11209(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	leq(s(4), s(3))
	call(block11228(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11209(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	gt(s(4), s(3))
	call(block11220(s(2), s(1), s(0), l(l1), l(l0)))

block11220(s(2), s(1), s(0), l(l1), l(l0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 11236
	nop(PUSH2)
	call(block11236(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11228(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block11236(s(2),s(1),s(0), l(l1), l(l0)))

block11236(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2751(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11239(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2794(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11245(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 21
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2881(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11277(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 30
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgent)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2928(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11315(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crowdsaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3015(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11353(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3102(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11390(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump11390(s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11390(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	leq(s(5), s(4))
	call(block11404(s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump11390(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	gt(s(5), s(4))
	call(block11403(s(3), s(2), s(1), s(0)))

block11403(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11404(s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11404(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11404(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	leq(s(6), s(5))
	call(block11431(s(4), s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump11404(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	gt(s(6), s(5))
	call(block11430(s(4), s(3), s(2), s(1), s(0)))

block11430(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11431(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block11443(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump11431(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block11439(s(2), s(1), s(0)))

block11431(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump11431(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11439(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11443(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalSupply) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalMigrated)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalMigrated) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 30
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2050044131
	nop(PUSH4)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l8) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l9) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(11)
	nop(DUP1)
	s(12) = extcodesize
	nop(EXTCODESIZE)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump11443(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11443(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(13), 0)
	call(block11916(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize))

jump11443(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(13), 0)
	call(block11912(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11912(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

block11916(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = gas
	nop(GAS)
	s(6) = 1
	nop(CALL)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump11916(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11916(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	eq(s(7), 0)
	call(block11936(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l1), l(l0), caller))

jump11916(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	neq(s(7), 0)
	call(block11927(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block11927(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block11936(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 30
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 11249535016889395155928029794464789214288252387144912394942407981344833784346
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	call(block3189(s(0)))
	nop(JUMP)

block12078(s(1), s(0), g(totalMigrated), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 33
	nop(PUSH1)
	s(2) = g(totalMigrated)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3212(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump12084(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block12234(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump12084(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block12164(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

block12084(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump12084(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12164(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump12164(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump12164(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block12191(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump12164(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block12172(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block12172(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 12234
	nop(PUSH2)
	call(block12234(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block12191(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block12205(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump12205(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block12205(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump12205(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block12225(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block12205(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump12205(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block12225(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block12234(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block12234(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3255(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block12242(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 32
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(externalControllerCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3399(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12280(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3486(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12286(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3529(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12292(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationHost)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3572(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump12330(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(4), s(3))
	call(block12421(s(2), s(1), s(0),g(newOwner)))

jump12330(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(4), s(3))
	call(block12417(s(2), s(1), s(0)))

block12330(s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12330(s(4),s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12417(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12421(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	neq(s(4), s(3))
	call(block12459(s(2), s(1), s(0),g(newOwner)))

jump12421(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	eq(s(4), s(3))
	call(block12455(s(2), s(1), s(0)))

block12421(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12421(s(4),s(3),s(2),s(1),s(0),g(newOwner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12455(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12459(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(newOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(newOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3703(s(0)))
	nop(JUMP)

block12527(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12527(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12527(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(6), s(5))
	call(block12540(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump12527(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(6), s(5))
	call(block12539(s(4), s(3), s(2), s(1), s(0)))

block12539(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12540(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block12567(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump12540(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block12566(s(5), s(4), s(3), s(2), s(1), s(0)))

block12540(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12540(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12566(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12567(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(5), s(4))
	call(block12579(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump12567(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(5), s(4))
	call(block12575(s(3), s(2), s(1), s(0)))

block12567(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump12567(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12575(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump12579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(6), s(5))
	call(block12603(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump12579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(6), s(5))
	call(block12599(s(4), s(3), s(2), s(1), s(0)))

block12579(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = calldatasize
	nop(CALLDATASIZE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	call(jump12579(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12599(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump12603(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block12681(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump12603(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block12677(s(4), s(3), s(2), s(1), s(0)))

block12603(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump12603(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12677(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block12681(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump12681(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12681(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block12824(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump12681(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block12820(s(4), s(3), s(2), s(1), s(0)))

block12820(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block12824(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3780(s(0)))
	nop(JUMP)

jump13084(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block13104(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump13084(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block13103(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13084(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13084(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13103(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13104(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block13131(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump13104(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block13130(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13104(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13104(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13130(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13131(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(9), s(8))
	call(block13144(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump13131(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(9), s(8))
	call(block13140(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13131(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump13131(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13140(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block13144(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 23
	nop(PUSH1)
	s(8) = g(votingDeadline)
	nop(SLOAD)
	s(9) = timestamp
	nop(TIMESTAMP)
	call(jump13144(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13144(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	geq(s(9), s(8))
	call(block13161(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13144(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	lt(s(9), s(8))
	call(block13157(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13157(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block13161(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block13162(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13162(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump13162(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13162(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), 0)
	call(block13180(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13162(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), 0)
	call(block13173(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13173(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block13180(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13180(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump13180(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13180(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block13646(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13180(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block13186(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13186(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfVotes)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(numberOfVotes) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13186(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13186(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block13412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13186(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block13411(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13411(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13412(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13412(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block13424(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13412(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block13423(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13423(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13424(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block13451(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13424(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block13431(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13424(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump13424(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13431(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(yea)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(yea) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 13499
	nop(PUSH2)
	call(block13499(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

jump13451(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block13463(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13451(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block13462(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13451(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13451(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13462(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13463(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13463(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13463(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block13475(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13463(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block13474(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13474(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13475(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump13475(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13475(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block13498(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13475(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block13482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(nay)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(nay) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block13498(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13498(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block13499(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13499(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(10) = g(numberOfVotes)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 13162
	nop(PUSH2)
	call(block13162(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

jump13646(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block13666(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13646(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block13658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block13646(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	call(jump13646(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13658(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 14474
	nop(PUSH2)
	call(block14474(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump13666(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block14396(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump13666(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block13705(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13666(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(8) = g(nay)
	nop(SLOAD)
	s(9) = 25
	nop(PUSH1)
	s(9) = g(yea)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(weiReqFund)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	s(8) = 24
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfVotes) = s(8)
	nop(SSTORE)
	s(8) = s(3)
	nop(DUP5)
	call(jump13666(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13705(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block13717(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13705(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block13716(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13705(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13705(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13716(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13717(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13717(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13717(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block13744(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13717(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block13743(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13743(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13744(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block13848(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13744(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block13751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(owner), l(l1), l(l0)))

block13744(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump13744(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13751(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block13843(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump13751(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block13839(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump13751(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(owner), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13839(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block13843(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 14395
	nop(PUSH2)
	call(block14395(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

jump13848(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block13861(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13848(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block13860(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13848(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13848(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13860(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13861(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13861(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13861(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block13888(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13861(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block13887(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13887(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13888(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump13888(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13888(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block14188(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump13888(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block13895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))

block13895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(migrationAgent)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(migrationAgent) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 30
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgent)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump13895(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13895(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block14110(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))

jump13895(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block14106(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14106(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14110(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(migrationAgentCandidate) = s(8)
	nop(SSTORE)
	s(8) = 5
	nop(PUSH1)
	s(9) = 10
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump14110(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14110(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block14178(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(state), l(l1), l(l0)))

jump14110(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block14177(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14177(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14178(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 14394
	nop(PUSH2)
	call(block14394(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

block14188(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14188(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14188(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block14200(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump14188(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block14199(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14199(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14200(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block14227(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump14200(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block14226(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14200(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14200(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14226(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14227(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump14227(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14227(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block14393(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump14227(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block14234(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

block14234(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 21
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(externalControllerCandidate)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(externalControllerCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(externalControllerCandidate) = s(8)
	nop(SSTORE)
	call(block14393(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14393(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block14394(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14394(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block14395(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14395(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block14396(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14396(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	s(8) = 75206971871473182631099251223774128077502725353986568989429243973252125172665
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	call(block14474(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block14474(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block3825(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14483(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(3), s(2))
	call(block14575(s(1), s(0),g(newOwner), g(owner)))

jump14483(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(3), s(2))
	call(block14571(s(1), s(0)))

block14483(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump14483(s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14571(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block14575(s(1), s(0), g(newOwner), g(owner))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(owner) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(newOwner) = s(2)
	nop(SSTORE)
	call(block3872(s(0)))
	nop(JUMP)

block14712(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3895(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14731(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3952(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14769(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 28
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4083(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14801(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block14892(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14801(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block14888(s(3), s(2), s(1), s(0)))

block14801(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump14801(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14888(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block14892(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump14892(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14892(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block14905(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14892(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block14904(s(4), s(3), s(2), s(1), s(0)))

block14904(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14905(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block14932(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14905(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block14931(s(5), s(4), s(3), s(2), s(1), s(0)))

block14905(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump14905(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14931(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14932(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(5), 1 )
	call(block14981(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14932(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(5), 1 )
	call(block14939(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block14932(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 14981
	nop(PUSH2)
	call(jump14932(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMPI)

jump14939(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block14952(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14939(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block14951(s(4), s(3), s(2), s(1), s(0)))

block14939(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump14939(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14951(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14952(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump14952(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14952(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block14979(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14952(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block14978(s(5), s(4), s(3), s(2), s(1), s(0)))

block14978(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14979(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block14981(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block14981(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump14981(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14981(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(4), 0)
	call(block14992(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14981(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(4), 0)
	call(block14988(s(3), s(2), s(1), s(0)))

block14988(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump14992(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(5), s(4))
	call(block15008(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump14992(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(5), s(4))
	call(block15004(s(3), s(2), s(1), s(0)))

block14992(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(5) = timestamp
	nop(TIMESTAMP)
	call(jump14992(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15004(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15008(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump15008(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15008(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(5), s(4))
	call(block15029(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15008(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(5), s(4))
	call(block15025(s(3), s(2), s(1), s(0)))

block15025(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15029(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(collectedUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 15057
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4677
	nop(PUSH2)
	call(block4677_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block15057(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block4194(s(0)))
	nop(JUMP)

jump15061(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block15076(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0)))

jump15061(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block15075(s(5), s(4), s(3), s(2), s(1), s(0)))

block15061(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump15061(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15075(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15076(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block15103(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump15076(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block15102(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15076(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump15076(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15102(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15103(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump15103(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15103(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block15115(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump15103(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block15111(s(4), s(3), s(2), s(1), s(0)))

block15111(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block15115(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4293(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15248(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 21
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump15248(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15248(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	neq(s(4), 0)
	call(block15336(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump15248(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	eq(s(4), 0)
	call(block15332(s(3), s(2), s(1), s(0)))

block15332(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15336(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block15414(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump15336(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block15410(s(3), s(2), s(1), s(0)))

block15336(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump15336(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15410(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15414(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block15557(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump15414(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block15553(s(3), s(2), s(1), s(0)))

block15414(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump15414(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15553(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15557(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4390(s(0)))
	nop(JUMP)

block15816(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4413(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15822(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 26
	nop(PUSH1)
	s(2) = g(nay)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4456(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15828(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4521(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15879(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump15879(s(3),s(2),s(1),s(0),g(migrationHost), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15879(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	eq(s(3), s(2))
	call(block15970(s(1), s(0),g(migrationHost)))

jump15879(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	neq(s(3), s(2))
	call(block15966(s(1), s(0)))

block15966(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block15970(s(1), s(0), g(migrationHost))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(migrationHost)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(migrationHost) = s(2)
	nop(SSTORE)
	call(block4608(s(0)))
	nop(JUMP)

jump16009(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block16102(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump16009(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block16098(s(3), s(2), s(1), s(0)))

block16009(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16009(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16098(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16102(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16102(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16102(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block16174(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump16102(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block16170(s(3), s(2), s(1), s(0)))

block16170(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump16174(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(14), 0)
	call(block16363(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))

jump16174(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(14), 0)
	call(block16359(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16174(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationHost)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1889567281
	nop(PUSH4)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l8) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 32
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = s(12)
	nop(DUP1)
	s(13) = extcodesize
	nop(EXTCODESIZE)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump16174(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16359(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

block16363(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = gas
	nop(GAS)
	s(7) = 1
	nop(CALL)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump16363(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16363(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	eq(s(8), 0)
	call(block16383(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))

jump16363(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	neq(s(8), 0)
	call(block16374(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block16374(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block16383(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16383(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16383(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	geq(s(7), s(6))
	call(block16405(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump16383(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	lt(s(7), s(6))
	call(block16401(s(5), s(4), s(3), s(2), s(1), s(0)))

block16401(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block16405(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 125
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump16405(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16405(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block16439(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump16405(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block16438(s(5), s(4), s(3), s(2), s(1), s(0)))

block16438(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16439(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4675(s(0)))
	nop(JUMP)

block16665(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump16665(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16665(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block16678(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump16665(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block16677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16678(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block16705(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump16678(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block16704(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16678(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump16678(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16704(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16705(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump16705(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16705(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block16741(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump16705(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block16713(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block16713(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block16741(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

block16741(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump16741(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16741(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block16752(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump16741(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block16748(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16748(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump16752(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block16803(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump16752(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block16802(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16752(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump16752(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16802(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16803(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump16803(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16803(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block16877(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump16803(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block16876(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16876(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16877(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block7489(s(2),s(1),s(0)))
	nop(JUMP)

block16902(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block7502(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block16665_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump16665_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16665_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block16678_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump16665_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block16677_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16677_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16678_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block16705_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump16678_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block16704_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16678_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump16678_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16704_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16705_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump16705_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16705_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block16741_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump16705_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block16713_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block16713_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block16741_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

block16741_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump16741_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16741_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block16752_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump16741_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block16748_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16748_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump16752_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block16803_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump16752_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block16802_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16752_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump16752_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16802_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16803_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump16803_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16803_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block16877_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump16803_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block16876_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16876_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16877_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block11104(s(2),s(1),s(0)))
	nop(JUMP)

jump4677_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4699_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4677_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4698_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4677_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 100
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4677_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4677_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4699_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4677_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4698_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4677_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 100
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4677_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4698_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4698_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4699_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block4726_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4699_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block4725_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4699_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump4699_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4699_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4699_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4699_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4726_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4699_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4725_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4725_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4725_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4726_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block4780_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4726_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block4733_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4726_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4726_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4726_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block4780_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4726_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block4733_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4726_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4726_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4733_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(12) = s(11)
	nop(DUP1)
	call(jump4733_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4733_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), 0)
	call(block4756_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4733_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), 0)
	call(block4749_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4733_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(11) = s(10)
	nop(DUP1)
	call(jump4733_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4733_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 0)
	call(block4756_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4733_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 0)
	call(block4749_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4749_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(11) = 50000
	nop(PUSH2)
	s(12) = s(6)
	nop(DUP6)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	call(block4756_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4749_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 50000
	nop(PUSH2)
	s(11) = s(5)
	nop(DUP6)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	call(block4756_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4756_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), 0)
	call(block4770_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4756_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), 0)
	call(block4762_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4756_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4756_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4756_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block4770_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4756_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block4762_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4756_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4756_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4762_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 150
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 4775
	nop(PUSH2)
	call(block4775_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4762_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 150
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 4775
	nop(PUSH2)
	call(block4775_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4770_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 125
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block4775_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4770_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 125
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block4775_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4775_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 4873
	nop(PUSH2)
	call(block4873_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4775_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 4873
	nop(PUSH2)
	call(block4873_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4780_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 3
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4780_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4780_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4793_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4780_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4792_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4780_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 3
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4780_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4780_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4793_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4780_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4792_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4792_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4792_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4793_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump4793_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4793_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block4820_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4793_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block4819_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4793_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4793_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4793_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4820_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4793_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4819_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4819_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4819_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4820_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4820_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4820_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block4872_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4820_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block4827_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4820_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4820_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4820_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block4872_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4820_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block4827_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4827_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump4827_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4827_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block4850_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4827_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block4842_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4827_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump4827_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4827_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block4850_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4827_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block4842_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4842_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 115
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 4871
	nop(PUSH2)
	call(block4871_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4842_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 115
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 4871
	nop(PUSH2)
	call(block4871_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4850_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 604800
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump4850_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4850_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block4870_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4850_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block4866_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4850_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 604800
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump4850_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4850_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block4870_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4850_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block4866_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4866_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 110
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block4870_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4866_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 110
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block4870_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4870_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4871_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4870_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4871_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4871_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4872_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4871_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4872_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4872_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4873_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4872_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4873_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4873_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(5)
	nop(DUP10)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l4) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l5) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	call(jump4873_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4873_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block5020_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4873_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block5016_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4873_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump4873_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4873_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block5020_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4873_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block5016_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5016_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block5016_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump5020_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block5035_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5020_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block5031_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5020_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	call(jump5020_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5020_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block5035_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5020_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block5031_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5020_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	call(jump5020_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5031_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block5031_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump5035_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(12), s(11))
	call(block5212_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5035_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(12), s(11))
	call(block5114_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5035_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 13
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	call(jump5035_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5035_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), s(10))
	call(block5212_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5035_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), s(10))
	call(block5114_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5035_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 13
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump5035_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5114_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = s(5)
	nop(DUP6)
	s(12) = 14
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = 15
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(numberOfInvestors)
	nop(SLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 1
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(15)
	nop(SSTORE)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = or(s(14), s(13))
	nop(OR)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	call(block5212_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5114_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = s(4)
	nop(DUP6)
	s(11) = 14
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 15
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(numberOfInvestors)
	nop(SLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(14)
	nop(SSTORE)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block5212_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5212_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(1)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(2)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(14) = s(9)
	nop(DUP5)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	l(l1) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG3)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	s(15) = g(totalSupply)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalSupply) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block15057(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5212_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = address
	nop(ADDRESS)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(totalSupply)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(totalSupply) = s(11)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block938_0(s(2),s(1),s(0)))
	nop(JUMP)

jump637_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block653_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump637_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block652_0(s(3), s(2), s(1), s(0)))

block637_0(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump637_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block652_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block653_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump653_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump653_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block680_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump653_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block679_0(s(4), s(3), s(2), s(1), s(0)))

block679_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block680_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 729
	nop(PUSH2)
	call(jump680_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

jump680_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 1 )
	call(block729_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump680_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 1 )
	call(block687_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block687_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump687_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump687_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block700_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump687_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block699_0(s(3), s(2), s(1), s(0)))

block699_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump700_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block727_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump700_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block726_0(s(4), s(3), s(2), s(1), s(0)))

block700_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump700_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block726_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block727_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block729_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump729_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block740_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump729_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block736_0(s(2), s(1), s(0)))

block729_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump729_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block736_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump740_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(4), s(3))
	call(block756_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump740_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(4), s(3))
	call(block752_0(s(2), s(1), s(0)))

block740_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump740_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block752_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block756_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(etherPrice)
	nop(SLOAD)
	s(5) = s(1)
	nop(DUP4)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump756_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump756_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block782_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump756_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block781_0(s(4), s(3), s(2), s(1), s(0)))

block781_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump782_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block910_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump782_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block800_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block782_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 9
	nop(PUSH1)
	s(5) = g(collectedUSD)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	call(jump782_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump800_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block831_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump800_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block830_0(s(4), s(3), s(2), s(1), s(0)))

block800_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(3) = 9
	nop(PUSH1)
	s(3) = g(collectedUSD)
	nop(SLOAD)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = 1000000000000000000
	nop(PUSH8)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump800_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block830_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump831_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block896_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump831_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block892_0(s(2), s(1), s(0)))

block831_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(1)
	nop(DUP4)
	s(6) = callvalue
	nop(CALLVALUE)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump831_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block892_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block896_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = 9
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 927
	nop(PUSH2)
	call(block927_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block910_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block927_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block927_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 938
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 4677
	nop(PUSH2)
	call(block4677_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block938_0(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

