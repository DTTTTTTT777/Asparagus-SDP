block0(g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	lt(s(1), s(0))
	call(block659(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump0(s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	geq(s(1), s(0))
	call(block13(g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump13(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block964(s(0),g(votingDeadline), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block65(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block13(g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 57600080
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1007(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block76(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block65(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 86896325
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1116(s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block87(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block87(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1260(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block98(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump98(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1337(s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))

jump98(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block109(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block98(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 174662471
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block109(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 230911786
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1360(s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block120(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump120(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1447(s(0),g(numberOfVotes), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block131(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block120(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 243091725
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 274359126
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1490(s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block142(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block142(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 348895501
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1533(s(0),g(yea), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block153(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump153(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1576(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block164(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block153(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1619(s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))

jump164(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block175(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block164(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 434608524
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 452119037
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1690(s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block186(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump186(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1733(s(0),g(collectedUSD), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block197(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block186(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1776(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump197(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block208(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block197(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 798703766
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1885(s(0),g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController))

jump208(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block219(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block219(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 803891477
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1952(s(0),g(weiReqFund), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block230(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump230(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1995(s(0),g(decimals), l(l1), l(l0), callvalue))

jump230(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block241(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block230(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1026513882
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block2044(s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))

jump241(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block252(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block252(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1233546944
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2089(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))

jump252(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block263(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block263(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1268735128
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2134(s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))

jump263(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block274(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

jump274(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2201(s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))

jump274(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block285(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block274(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2345(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump285(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block296(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

jump296(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2464(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump296(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block307(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block296(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1868050891
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2571(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump307(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block318(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block307(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1870383550
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2665(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))

jump318(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block329(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block318(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1977810789
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2752(s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp))

jump329(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block340(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump340(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2819(s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))

jump340(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block351(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block340(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2049348175
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2862(s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block362(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block351(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2066067146
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2905(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump362(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block373(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block362(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2120681183
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2200493005
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2996(s(0),g(migrationAgent), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block384(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block384(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2237027717
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3083(s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))

jump384(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block395(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block395(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3170(s(0),g(owner), l(l1), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block406(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump406(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3257(s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp))

jump406(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block417(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block406(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2391700987
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2413013888
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3324(s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize))

jump417(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l9), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block428(s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block428(s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2510353899
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3347(s(0),g(totalMigrated), l(l1), l(l0), callvalue))

jump428(s(2), s(1), s(0), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block439(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump439(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3390(s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))

jump439(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block450(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block439(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514067504
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3534(s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))

jump450(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block461(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block461(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2542402010
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3621(s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))

jump461(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block472(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump472(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3664(s(0),g(etherPrice), l(l1), l(l0), callvalue))

jump472(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block483(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block472(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3707(s(0),g(migrationHost), l(l1), l(l0), callvalue))

jump483(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block494(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block483(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2762537194
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3794(s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))

jump494(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block505(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block505(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3861(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump505(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block516(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block516(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2884092046
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3938(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))

jump516(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block527(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4007(s(0),g(newOwner), g(owner), caller, callvalue))

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block538(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block527(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3181079942
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4030(s(0),g(state), l(l1), l(l0), callvalue))

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block549(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block538(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4087(s(0),g(newOwner), l(l1), l(l0), callvalue))

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block560(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block549(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3572374928
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3636458917
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4174(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block571(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

jump571(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4275(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))

jump571(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block582(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))

block571(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3709204883
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4352(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump582(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block593(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))

block593(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3806082528
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4471(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))

jump593(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block604(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block604(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3808182813
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4548(s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))

jump604(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block615(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

jump615(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4591(s(0),g(nay), l(l1), l(l0), callvalue))

jump615(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block626(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block615(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3929006498
	nop(PUSH4)
	call(jump615(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump626(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4634(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump626(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block637(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block626(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4159689736
	nop(PUSH4)
	call(jump626(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block637(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4172968727
	nop(PUSH4)
	call(jump637(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4743(s(0),g(migrationHost), g(owner), caller, callvalue))

jump637(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block648(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

jump648(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4766(s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))

jump648(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block659_0(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block648(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4184780803
	nop(PUSH4)
	call(jump648(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block659(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump659(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump659(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block675(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump659(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block674(s(2), s(1), s(0)))

block674(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block675(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump675(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump675(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block702(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump675(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block701(s(3), s(2), s(1), s(0)))

block701(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block702(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 751
	nop(PUSH2)
	call(jump702(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

jump702(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 1 )
	call(block751(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump702(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 1 )
	call(block709(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block709(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(2) = 3
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump709(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump709(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block722(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump709(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block721(s(2), s(1), s(0)))

block721(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block722(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump722(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump722(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block749(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump722(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block748(s(3), s(2), s(1), s(0)))

block748(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block749(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	call(block751(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump751(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block762(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump751(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block758(s(1), s(0)))

block751(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump751(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block758(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump762(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(3), s(2))
	call(block778(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump762(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(3), s(2))
	call(block774(s(1), s(0)))

block762(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = timestamp
	nop(TIMESTAMP)
	call(jump762(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block774(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block778(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = 1000000000000000000
	nop(PUSH8)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = s(0)
	nop(DUP4)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump778(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump778(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block804(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump778(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block803(s(3), s(2), s(1), s(0)))

block803(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block804(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 9
	nop(PUSH1)
	s(4) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(4)+s(3)
	nop(ADD)
	call(jump804(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump804(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(3), s(2))
	call(block932(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump804(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(3), s(2))
	call(block822(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump822(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block853(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump822(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block852(s(3), s(2), s(1), s(0)))

block822(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump822(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block852(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump853(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block918(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump853(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block914(s(1), s(0)))

block853(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 3000000
	nop(PUSH3)
	s(4) = s(0)
	nop(DUP4)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump853(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block914(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block918(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = 9
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 949
	nop(PUSH2)
	call(block949(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block932(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 9
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block949(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block949(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 960
	nop(PUSH2)
	s(3) = caller
	nop(CALLER)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(0)
	nop(DUP5)
	s(6) = 4833
	nop(PUSH2)
	call(block4833(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block960(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block964(s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump964(s(2),s(1),s(0),g(votingDeadline), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump964(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block976(s(1), s(0),g(votingDeadline), l(l1), l(l0)))

jump964(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block972(s(1), s(0)))

block972(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block976(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 985
	nop(PUSH2)
	s(2) = 5606
	nop(PUSH2)
	call(block5606(s(1),s(0),g(votingDeadline), l(l1), l(l0)))
	nop(JUMP)

block985(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1007(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1019(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump1007(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1015(s(1), s(0)))

block1007(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1007(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1015(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1019(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1050
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5612
	nop(PUSH2)
	call(block5612(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block1050(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1116(s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1116(s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1116(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1128(s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

jump1116(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1124(s(1), s(0)))

block1124(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1128(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1137
	nop(PUSH2)
	s(2) = 5663
	nop(PUSH2)
	call(block5663(s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1137(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1174(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump1174(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1201(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1174(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1183(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block1174(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1174(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1183(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1174
	nop(PUSH2)
	call(block1174(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block1201(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1201(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1201(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1246(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1201(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1221(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1221(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1246(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1246(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1260(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1272(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value))

jump1260(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1268(s(1), s(0)))

block1260(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1260(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1268(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1272(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1335
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5821
	nop(PUSH2)
	call(block5821(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block1335(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1337(s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1337(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1337(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block1349(s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump1337(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block1345(s(1), s(0)))

block1345(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1349(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1358
	nop(PUSH2)
	s(2) = 6107
	nop(PUSH2)
	call(block6107(s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMP)

block1358(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1360(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1372(s(1), s(0),g(migrationAgentCandidate), l(l1), l(l0)))

jump1360(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1368(s(1), s(0)))

block1360(s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1360(s(2),s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1368(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1372(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1381
	nop(PUSH2)
	s(2) = 6432
	nop(PUSH2)
	call(block6432(s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0)))
	nop(JUMP)

block1381(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1447(s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1447(s(2),s(1),s(0),g(numberOfVotes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1447(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1459(s(1), s(0),g(numberOfVotes), l(l1), l(l0)))

jump1447(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1455(s(1), s(0)))

block1455(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1459(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1468
	nop(PUSH2)
	s(2) = 6470
	nop(PUSH2)
	call(block6470(s(1),s(0),g(numberOfVotes), l(l1), l(l0)))
	nop(JUMP)

block1468(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1490(s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1490(s(2),s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1490(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1502(s(1), s(0),g(minimalSuccessUSD), l(l1), l(l0)))

jump1490(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1498(s(1), s(0)))

block1498(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1502(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1511
	nop(PUSH2)
	s(2) = 6476
	nop(PUSH2)
	call(block6476(s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0)))
	nop(JUMP)

block1511(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1533(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1545(s(1), s(0),g(yea), l(l1), l(l0)))

jump1533(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1541(s(1), s(0)))

block1533(s(0), g(yea), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1533(s(2),s(1),s(0),g(yea), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1541(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1545(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1554
	nop(PUSH2)
	s(2) = 6482
	nop(PUSH2)
	call(block6482(s(1),s(0),g(yea), l(l1), l(l0)))
	nop(JUMP)

block1554(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1576(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1576(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1576(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1588(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1576(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1584(s(1), s(0)))

block1584(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1588(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1597
	nop(PUSH2)
	s(2) = 6488
	nop(PUSH2)
	call(block6488(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1597(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1619(s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1619(s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1619(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block1631(s(1), s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))

jump1619(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block1627(s(1), s(0)))

block1627(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1631(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1640
	nop(PUSH2)
	s(2) = 6494
	nop(PUSH2)
	call(block6494(s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block1640(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(1)
	nop(DUP5)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1640(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1640(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block1668(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump1640(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block1667(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1667(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1668(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1690(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1702(s(1), s(0),g(numberOfInvestors), l(l1), l(l0)))

jump1690(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1698(s(1), s(0)))

block1690(s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1690(s(2),s(1),s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1698(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1702(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1711
	nop(PUSH2)
	s(2) = 6555
	nop(PUSH2)
	call(block6555(s(1),s(0),g(numberOfInvestors), l(l1), l(l0)))
	nop(JUMP)

block1711(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1733(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1745(s(1), s(0),g(collectedUSD), l(l1), l(l0)))

jump1733(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1741(s(1), s(0)))

block1733(s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1733(s(2),s(1),s(0),g(collectedUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1741(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1745(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1754
	nop(PUSH2)
	s(2) = 6561
	nop(PUSH2)
	call(block6561(s(1),s(0),g(collectedUSD), l(l1), l(l0)))
	nop(JUMP)

block1754(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1776(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1788(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1776(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1784(s(1), s(0)))

block1776(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1776(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1784(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1788(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1883
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6567
	nop(PUSH2)
	call(block6567(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block1883(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1885(s(0), g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1885(s(2),s(1),s(0),g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1885(s(2), s(1), s(0), g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController)=>
	eq(s(2), 0)
	call(block1897(s(1), s(0),g(owner), l(l5), l(l4), calldatasize, caller, externalController))

jump1885(s(2), s(1), s(0), g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController)=>
	neq(s(2), 0)
	call(block1893(s(1), s(0)))

block1893(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1897(s(1), s(0), g(owner), l(l5), l(l4), calldatasize, caller, externalController)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1950
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = externalController
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7402
	nop(PUSH2)
	call(block7402(s(2),s(1),s(0),g(owner), l(l5), l(l4), caller))
	nop(JUMP)

block1950(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1952(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1964(s(1), s(0),g(weiReqFund), l(l1), l(l0)))

jump1952(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1960(s(1), s(0)))

block1952(s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1952(s(2),s(1),s(0),g(weiReqFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1960(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1964(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1973
	nop(PUSH2)
	s(2) = 7575
	nop(PUSH2)
	call(block7575(s(1),s(0),g(weiReqFund), l(l1), l(l0)))
	nop(JUMP)

block1973(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1995(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2007(s(1), s(0),g(decimals), l(l1), l(l0)))

jump1995(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2003(s(1), s(0)))

block1995(s(0), g(decimals), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1995(s(2),s(1),s(0),g(decimals), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2003(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2007(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2016
	nop(PUSH2)
	s(2) = 7581
	nop(PUSH2)
	call(block7581(s(1),s(0),g(decimals), l(l1), l(l0)))
	nop(JUMP)

block2016(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2044(s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2044(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2044(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	eq(s(2), 0)
	call(block2056(s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund))

jump2044(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	neq(s(2), 0)
	call(block2052(s(1), s(0)))

block2052(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2056(s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2087
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = weiReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7600
	nop(PUSH2)
	call(block7600(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2087(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2089(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2089(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2089(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	eq(s(2), 0)
	call(block2101(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp))

jump2089(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	neq(s(2), 0)
	call(block2097(s(1), s(0)))

block2097(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2101(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2132
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investorsToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7821
	nop(PUSH2)
	call(block7821(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2132(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2134(s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2134(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2134(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	eq(s(2), 0)
	call(block2146(s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp))

jump2134(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	neq(s(2), 0)
	call(block2142(s(1), s(0)))

block2142(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2146(s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2179
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inSupport
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9670
	nop(PUSH2)
	call(block9670(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2179(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2201(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2213(s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

jump2201(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2209(s(1), s(0)))

block2201(s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2201(s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2209(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2213(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2222
	nop(PUSH2)
	s(2) = 10329
	nop(PUSH2)
	call(block10329(s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2222(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2259(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block2259(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2259(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2259(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block2286(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2259(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block2268(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block2268(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2259
	nop(PUSH2)
	call(block2259(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block2286(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2286(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2286(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2331(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2286(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2306(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2306(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2331(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2331(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2345(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2345(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2345(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2357(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump2345(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2353(s(1), s(0)))

block2353(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2357(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2442
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 10487
	nop(PUSH2)
	call(block10487(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2442(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2464(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	eq(s(2), 0)
	call(block2476(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump2464(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	neq(s(2), 0)
	call(block2472(s(1), s(0)))

block2464(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2464(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2472(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2476(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2569
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crowdsaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = crowdsaleDurationDays
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = totalLimitUSD
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = minimalSuccessUSD
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = etherPrice
	nop(CALLDATALOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 10524
	nop(PUSH2)
	call(block10524(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2569(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2571(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2571(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2571(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2583(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2571(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2579(s(1), s(0)))

block2579(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2583(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2636
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11049
	nop(PUSH2)
	call(block11049(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2636(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2665(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2665(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2665(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	eq(s(2), 0)
	call(block2677(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who))

jump2665(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	neq(s(2), 0)
	call(block2673(s(1), s(0)))

block2673(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2677(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2730
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11085
	nop(PUSH2)
	call(block11085(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2730(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2752(s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2752(s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2752(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2764(s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, timestamp))

jump2752(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2760(s(1), s(0)))

block2760(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2764(s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2817
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = agent
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11158
	nop(PUSH2)
	call(block11158(s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2817(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2819(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2831(s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump2819(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2827(s(1), s(0)))

block2819(s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2819(s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2827(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2831(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2840
	nop(PUSH2)
	s(2) = 11436
	nop(PUSH2)
	call(block11436(s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMP)

block2840(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2862(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2874(s(1), s(0),g(totalLimitUSD), l(l1), l(l0)))

jump2862(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2870(s(1), s(0)))

block2862(s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2862(s(2),s(1),s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2870(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2874(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2883
	nop(PUSH2)
	s(2) = 11568
	nop(PUSH2)
	call(block11568(s(1),s(0),g(totalLimitUSD), l(l1), l(l0)))
	nop(JUMP)

block2883(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2905(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2905(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2905(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2917(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump2905(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2913(s(1), s(0)))

block2913(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2917(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2970
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11574
	nop(PUSH2)
	call(block11574(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2970(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2996(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3008(s(1), s(0),g(migrationAgent), l(l1), l(l0)))

jump2996(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3004(s(1), s(0)))

block2996(s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2996(s(2),s(1),s(0),g(migrationAgent), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3004(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3008(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3017
	nop(PUSH2)
	s(2) = 11606
	nop(PUSH2)
	call(block11606(s(1),s(0),g(migrationAgent), l(l1), l(l0)))
	nop(JUMP)

block3017(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3083(s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3083(s(2),s(1),s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3083(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3095(s(1), s(0),g(crowdsaleOwner), l(l1), l(l0)))

jump3083(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3091(s(1), s(0)))

block3091(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3095(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3104
	nop(PUSH2)
	s(2) = 11644
	nop(PUSH2)
	call(block11644(s(1),s(0),g(crowdsaleOwner), l(l1), l(l0)))
	nop(JUMP)

block3104(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3170(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3182(s(1), s(0),g(owner), l(l1), l(l0)))

jump3170(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3178(s(1), s(0)))

block3170(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3170(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3178(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3182(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3191
	nop(PUSH2)
	s(2) = 11682
	nop(PUSH2)
	call(block11682(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3191(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3257(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp)=>
	eq(s(2), 0)
	call(block3269(s(1), s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, externalControllerCandidate, timestamp))

jump3257(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp)=>
	neq(s(2), 0)
	call(block3265(s(1), s(0)))

block3257(s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3257(s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3265(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3269(s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, externalControllerCandidate, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3322
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = externalControllerCandidate
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11719
	nop(PUSH2)
	call(block11719(s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block3322(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3324(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	eq(s(2), 0)
	call(block3336(s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump3324(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	neq(s(2), 0)
	call(block3332(s(1), s(0)))

block3324(s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3324(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3332(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3336(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3345
	nop(PUSH2)
	s(2) = 11930
	nop(PUSH2)
	call(block11930(s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block3345(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3347(s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3347(s(2),s(1),s(0),g(totalMigrated), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3347(s(2), s(1), s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3359(s(1), s(0),g(totalMigrated), l(l1), l(l0)))

jump3347(s(2), s(1), s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3355(s(1), s(0)))

block3355(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3359(s(1), s(0), g(totalMigrated), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3368
	nop(PUSH2)
	s(2) = 12618
	nop(PUSH2)
	call(block12618(s(1),s(0),g(totalMigrated), l(l1), l(l0)))
	nop(JUMP)

block3368(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3390(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3402(s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

jump3390(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3398(s(1), s(0)))

block3390(s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3390(s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3398(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3402(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3411
	nop(PUSH2)
	s(2) = 12624
	nop(PUSH2)
	call(block12624(s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3411(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3448(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block3448(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3448(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3448(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block3475(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3448(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block3457(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block3457(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3448
	nop(PUSH2)
	call(block3448(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump3475(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block3520(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3475(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block3495(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3475(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3475(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3495(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3520(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3520(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3534(s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3534(s(2),s(1),s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3534(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3546(s(1), s(0),g(externalControllerCandidate), l(l1), l(l0)))

jump3534(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3542(s(1), s(0)))

block3542(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3546(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3555
	nop(PUSH2)
	s(2) = 12782
	nop(PUSH2)
	call(block12782(s(1),s(0),g(externalControllerCandidate), l(l1), l(l0)))
	nop(JUMP)

block3555(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3621(s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3621(s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3621(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3633(s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0)))

jump3621(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3629(s(1), s(0)))

block3629(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3633(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3642
	nop(PUSH2)
	s(2) = 12820
	nop(PUSH2)
	call(block12820(s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0)))
	nop(JUMP)

block3642(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3664(s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3664(s(2),s(1),s(0),g(etherPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3664(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3676(s(1), s(0),g(etherPrice), l(l1), l(l0)))

jump3664(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3672(s(1), s(0)))

block3672(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3676(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3685
	nop(PUSH2)
	s(2) = 12826
	nop(PUSH2)
	call(block12826(s(1),s(0),g(etherPrice), l(l1), l(l0)))
	nop(JUMP)

block3685(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3707(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3719(s(1), s(0),g(migrationHost), l(l1), l(l0)))

jump3707(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3715(s(1), s(0)))

block3707(s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3707(s(2),s(1),s(0),g(migrationHost), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3715(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3719(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3728
	nop(PUSH2)
	s(2) = 12832
	nop(PUSH2)
	call(block12832(s(1),s(0),g(migrationHost), l(l1), l(l0)))
	nop(JUMP)

block3728(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3794(s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3794(s(2),s(1),s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3794(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block3806(s(1), s(0),g(newOwner), g(owner), calldatasize, caller, owner))

jump3794(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block3802(s(1), s(0)))

block3802(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3806(s(1), s(0), g(newOwner), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3859
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12870
	nop(PUSH2)
	call(block12870(s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block3859(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3861(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3861(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3861(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3873(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value))

jump3861(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3869(s(1), s(0)))

block3869(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3873(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3936
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 13067
	nop(PUSH2)
	call(block13067(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block3936(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3938(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block3950(s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess))

jump3938(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block3946(s(1), s(0)))

block3938(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3938(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3946(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3950(s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3981
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = votesToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13624
	nop(PUSH2)
	call(block13624(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block3981(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4007(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4019(s(1), s(0),g(newOwner), g(owner), caller))

jump4007(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4015(s(1), s(0)))

block4007(s(0), g(newOwner), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4007(s(2),s(1),s(0),g(newOwner), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4015(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4019(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4028
	nop(PUSH2)
	s(2) = 15023
	nop(PUSH2)
	call(block15023(s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block4028(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4030(s(0), g(state), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4030(s(2),s(1),s(0),g(state), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4030(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4042(s(1), s(0),g(state), l(l1), l(l0)))

jump4030(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4038(s(1), s(0)))

block4038(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4042(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4051
	nop(PUSH2)
	s(2) = 15252
	nop(PUSH2)
	call(block15252(s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

jump4051(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block4067(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump4051(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block4066(s(5), s(4), s(3), s(2), s(1), s(0)))

block4051(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4051(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4066(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4067(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4087(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4099(s(1), s(0),g(newOwner), l(l1), l(l0)))

jump4087(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4095(s(1), s(0)))

block4087(s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4087(s(2),s(1),s(0),g(newOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4095(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4099(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4108
	nop(PUSH2)
	s(2) = 15271
	nop(PUSH2)
	call(block15271(s(1),s(0),g(newOwner), l(l1), l(l0)))
	nop(JUMP)

block4108(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4174(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4186(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump4174(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4182(s(1), s(0)))

block4174(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4174(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4182(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4186(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4239
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15309
	nop(PUSH2)
	call(block15309(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

jump4239(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block4255(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump4239(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block4254(s(5), s(4), s(3), s(2), s(1), s(0)))

block4239(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4239(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4254(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4255(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4275(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	eq(s(2), 0)
	call(block4287(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who))

jump4275(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	neq(s(2), 0)
	call(block4283(s(1), s(0)))

block4275(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4275(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4283(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4287(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4350
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = valueUSD
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15341
	nop(PUSH2)
	call(block15341(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block4350(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4352(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4364(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender))

jump4352(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4360(s(1), s(0)))

block4352(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4352(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4360(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4364(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4449
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15601
	nop(PUSH2)
	call(block15601(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4449(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4471(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4471(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4471(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4483(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value))

jump4471(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4479(s(1), s(0)))

block4479(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4483(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4546
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15788
	nop(PUSH2)
	call(block15788(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(JUMP)

block4546(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4548(s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4548(s(2),s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4548(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4560(s(1), s(0),g(crowdsaleStartTime), l(l1), l(l0)))

jump4548(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4556(s(1), s(0)))

block4556(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4560(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4569
	nop(PUSH2)
	s(2) = 16356
	nop(PUSH2)
	call(block16356(s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0)))
	nop(JUMP)

block4569(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4591(s(0), g(nay), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4591(s(2),s(1),s(0),g(nay), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4591(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4603(s(1), s(0),g(nay), l(l1), l(l0)))

jump4591(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4599(s(1), s(0)))

block4599(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4603(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4612
	nop(PUSH2)
	s(2) = 16362
	nop(PUSH2)
	call(block16362(s(1),s(0),g(nay), l(l1), l(l0)))
	nop(JUMP)

block4612(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4634(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4646(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump4634(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4642(s(1), s(0)))

block4634(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4634(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4642(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4646(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4677
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16368
	nop(PUSH2)
	call(block16368(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4677(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4743(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4755(s(1), s(0),g(migrationHost), g(owner), caller))

jump4743(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4751(s(1), s(0)))

block4743(s(0), g(migrationHost), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4743(s(2),s(1),s(0),g(migrationHost), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4751(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4755(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4764
	nop(PUSH2)
	s(2) = 16419
	nop(PUSH2)
	call(block16419(s(1),s(0),g(migrationHost), g(owner), caller))
	nop(JUMP)

block4764(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4766(s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4766(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4766(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	eq(s(2), 0)
	call(block4778(s(1), s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder))

jump4766(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	neq(s(2), 0)
	call(block4774(s(1), s(0)))

block4774(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4778(s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4831
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tokensHolder
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16549
	nop(PUSH2)
	call(block16549(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block4831(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4833(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 100
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 1
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump4833(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4833(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block4855(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4833(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block4854(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4854(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4855(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4882(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4855(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4881(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4855(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4855(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4881(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4882(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block4936(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4882(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block4889(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4882(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4882(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4889(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), 0)
	call(block4912(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4889(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), 0)
	call(block4905(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4889(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(10) = s(9)
	nop(DUP1)
	call(jump4889(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4905(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(9) = 50000
	nop(PUSH2)
	s(10) = s(4)
	nop(DUP6)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	call(block4912(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4912(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(9), 0)
	call(block4926(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4912(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(9), 0)
	call(block4918(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4912(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4912(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4918(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 150
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 4931
	nop(PUSH2)
	call(block4931(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4926(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 125
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block4931(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4931(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 5029
	nop(PUSH2)
	call(block5029(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4936(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 3
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump4936(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4936(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block4949(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4936(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block4948(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4948(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4949(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4976(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4949(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4975(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4949(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4949(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4975(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4976(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4976(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4976(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block5028(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4976(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block4983(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4983(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block5006(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4983(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block4998(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4983(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump4983(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4998(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 115
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 5027
	nop(PUSH2)
	call(block5027(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump5006(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block5026(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5006(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block5022(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5006(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 604800
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump5006(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5022(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 110
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block5026(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5026(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5027(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5027(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5028(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5028(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5029(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5029(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	call(jump5029(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5029(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block5176(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5029(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block5172(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5172(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump5176(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block5191(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5176(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block5187(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5176(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	call(jump5176(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5187(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump5191(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), s(9))
	call(block5368(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5191(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), s(9))
	call(block5270(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5191(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	call(jump5191(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5270(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = s(3)
	nop(DUP6)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 15
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(numberOfInvestors)
	nop(SLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(13)
	nop(SSTORE)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = or(s(12), s(11))
	nop(OR)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	call(block5368(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5368(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	l(l1) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(totalSupply)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(totalSupply) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block960(s(1),s(0)))
	nop(JUMP)

block5606(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(votingDeadline)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block985(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5612(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 14
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1050(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5663(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump5663(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5663(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block5813(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5663(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block5743(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

block5743(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump5743(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump5743(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block5770(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump5743(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block5751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block5751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 5813
	nop(PUSH2)
	call(block5813(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5770(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block5784(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5784(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump5784(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump5784(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block5784(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5784(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block5804(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block5804(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block5813(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5813(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1137(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5821(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5821(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5821(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5834(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))

jump5821(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5833(s(4), s(3), s(2), s(1), s(0)))

block5833(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5834(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block5861(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump5834(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block5860(s(5), s(4), s(3), s(2), s(1), s(0)))

block5834(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5834(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5860(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5861(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5861(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5861(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block5873(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump5861(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block5869(s(3), s(2), s(1), s(0)))

block5869(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5873(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1335(s(0)))
	nop(JUMP)

block6107(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6107(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6107(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block6121(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump6107(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block6120(s(3), s(2), s(1), s(0)))

block6120(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6121(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6121(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6121(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block6148(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump6121(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block6147(s(4), s(3), s(2), s(1), s(0)))

block6147(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6148(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 6197
	nop(PUSH2)
	call(jump6148(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMPI)

jump6148(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	eq(s(4), 1 )
	call(block6197(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6148(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	neq(s(4), 1 )
	call(block6155(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

block6155(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6155(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6155(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block6168(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump6155(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block6167(s(3), s(2), s(1), s(0)))

block6167(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6168(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6168(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6168(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block6195(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6168(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block6194(s(4), s(3), s(2), s(1), s(0)))

block6194(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6195(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block6197(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))

block6197(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump6197(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6197(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block6208(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6197(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block6204(s(2), s(1), s(0)))

block6204(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6208(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump6208(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6208(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	leq(s(4), s(3))
	call(block6429(s(2), s(1), s(0)))

jump6208(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	gt(s(4), s(3))
	call(block6287(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

block6287(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump6287(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6287(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block6428(s(2), s(1), s(0)))

jump6287(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block6424(s(2), s(1), s(0)))

block6424(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6428(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block6429(s(2),s(1),s(0)))

block6429(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1358(s(0)))
	nop(JUMP)

block6432(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 31
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1381(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6470(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(numberOfVotes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1468(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6476(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1511(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6482(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(yea)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1554(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6488(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1597(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6494(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(weiReqFund)
	nop(SLOAD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	call(jump6494(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6494(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block6542(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp))

jump6494(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block6534(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

block6534(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 6550
	nop(PUSH2)
	call(block6550(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6542(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	call(block6550(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))

block6550(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	call(block1640(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6555(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(2) = g(numberOfInvestors)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1711(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6561(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1754(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6567(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6567(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6567(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block6580(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6567(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block6579(s(5), s(4), s(3), s(2), s(1), s(0)))

block6579(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6580(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump6580(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6580(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(8), s(7))
	call(block6607(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6580(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(8), s(7))
	call(block6606(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6606(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6607(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(6), s(5))
	call(block6619(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6607(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(6), s(5))
	call(block6615(s(4), s(3), s(2), s(1), s(0)))

block6607(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump6607(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6615(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block6619(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 96
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = calldatasize
	nop(CALLDATASIZE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(jump6619(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6619(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(7), s(6))
	call(block6643(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6619(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(7), s(6))
	call(block6639(s(5), s(4), s(3), s(2), s(1), s(0)))

block6639(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump6643(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6721(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6643(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6717(s(5), s(4), s(3), s(2), s(1), s(0)))

block6643(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump6643(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6717(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6721(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump6721(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6864(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6860(s(5), s(4), s(3), s(2), s(1), s(0)))

block6860(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump6864(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block7003(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6864(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6999(s(5), s(4), s(3), s(2), s(1), s(0)))

block6864(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump6864(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6999(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block7003(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1883(s(0)))
	nop(JUMP)

block7402(s(2), s(1), s(0), g(owner), l(l5), l(l4), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7402(s(4),s(3),s(2),s(1),s(0),g(owner), l(l5), l(l4), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7402(s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l4), caller)=>
	eq(s(4), s(3))
	call(block7493(s(2), s(1), s(0), l(l5), l(l4)))

jump7402(s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l4), caller)=>
	neq(s(4), s(3))
	call(block7489(s(2), s(1), s(0)))

block7489(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7493(s(2), s(1), s(0), l(l5), l(l4))=>
	nop(JUMPDEST)
	s(3) = 21
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 255
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gs(1) = s(4)
	gs(2) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block1950(s(0)))
	nop(JUMP)

block7575(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(weiReqFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1973(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7581(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2016(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump7600(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7613(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7600(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7612(s(3), s(2), s(1), s(0)))

block7600(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7600(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7612(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7613(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7613(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7613(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7640(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7613(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7639(s(4), s(3), s(2), s(1), s(0)))

block7639(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7640(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 7688
	nop(PUSH2)
	call(jump7640(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7640(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), 1 )
	call(block7688(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7640(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), 1 )
	call(block7647(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7647(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7659(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7647(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7658(s(3), s(2), s(1), s(0)))

block7647(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7647(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7658(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7659(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7686(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7659(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7685(s(4), s(3), s(2), s(1), s(0)))

block7659(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7659(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7685(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7686(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block7688(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7688(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(3), 0)
	call(block7699(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7688(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(3), 0)
	call(block7695(s(2), s(1), s(0)))

block7688(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7688(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7695(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7699(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block7790(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7699(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block7786(s(2), s(1), s(0)))

block7699(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7699(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7786(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7790(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(4), s(3))
	call(block7805(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7790(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(4), s(3))
	call(block7801(s(2), s(1), s(0)))

block7790(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump7790(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7801(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7805(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 7818
	nop(PUSH2)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH1)
	s(6) = 7
	nop(PUSH1)
	s(7) = 17205
	nop(PUSH2)
	call(block17205(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block7818(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2087(s(0)))
	nop(JUMP)

block7821(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 7831
	nop(PUSH2)
	s(5) = 17442
	nop(PUSH2)
	call(block17442(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block7831(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7831(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7831(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block7846(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7831(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block7845(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7845(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7846(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block7873(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7846(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block7872(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7846(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump7846(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7872(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7873(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block7922(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7873(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block7880(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

block7873(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7922
	nop(PUSH2)
	call(jump7873(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7880(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block7893(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7880(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block7892(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7880(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7880(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7892(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7893(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block7920(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7893(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block7919(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7893(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump7893(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7919(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7920(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7922(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

block7922(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7922(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7922(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(6), 0)
	call(block7933(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7922(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(6), 0)
	call(block7929(s(5), s(4), s(3), s(2), s(1), s(0)))

block7929(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump7933(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block7953(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

jump7933(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block7945(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7933(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 12
	nop(PUSH1)
	s(6) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7953
	nop(PUSH2)
	call(jump7933(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

block7945(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7953(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7953(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 8056
	nop(PUSH2)
	call(jump7953(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(JUMPI)

jump7953(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 1 )
	call(block8056(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7953(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 1 )
	call(block7959(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

jump7959(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 0)
	call(block8055(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7959(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 0)
	call(block7974(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7959(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump7959(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7974(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block8055(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

block8055(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block8056(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

block8056(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8056(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8056(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8067(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8056(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8063(s(5), s(4), s(3), s(2), s(1), s(0)))

block8063(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump8067(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	geq(s(7), s(6))
	call(block8687(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8067(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	lt(s(7), s(6))
	call(block8080(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block8067(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	call(jump8067(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8080(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(7), 0)
	call(block8098(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

jump8080(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(7), 0)
	call(block8091(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block8080(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump8080(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8091(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block8098(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

jump8098(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block8542(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))

jump8098(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block8104(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block8098(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	call(jump8098(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8104(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(numberOfInvestors) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 64
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	l(l0) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(9) = l(l3)
	nop(MLOAD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(4)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 8080
	nop(PUSH2)
	call(block8080(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(JUMP)

block8542(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump8542(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8542(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block8558(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8542(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block8554(s(5), s(4), s(3), s(2), s(1), s(0)))

block8554(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 9664
	nop(PUSH2)
	call(block9664(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block8558(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8558(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8558(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block8571(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8558(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block8570(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8570(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8571(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8571(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8571(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block8598(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8571(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block8597(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8597(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8598(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump8598(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8598(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	neq(s(7), s(6))
	call(block8645(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8598(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	eq(s(7), s(6))
	call(block8605(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

block8605(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8605(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8605(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8635(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8605(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8634(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8634(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8635(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 8682
	nop(PUSH2)
	call(block8682(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block8645(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8645(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8645(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8676(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8645(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8675(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8675(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8676(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block8682(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block8682(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 9579
	nop(PUSH2)
	call(block9579(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block8687(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block8688(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8688(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), 0)
	call(block8706(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8688(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), 0)
	call(block8699(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8688(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump8688(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8699(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block8706(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8706(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8931(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8706(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8712(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8706(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8706(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8712(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	s(6) = 15
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 14
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 15
	nop(PUSH1)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 8688
	nop(PUSH2)
	call(block8688(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(JUMP)

jump8931(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(7), s(6))
	call(block8947(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8931(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(7), s(6))
	call(block8943(s(5), s(4), s(3), s(2), s(1), s(0)))

block8931(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump8931(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8943(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 9664
	nop(PUSH2)
	call(block9664(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump8947(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(8), s(7))
	call(block8960(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8947(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(8), s(7))
	call(block8959(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8947(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8947(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8959(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8960(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8960(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8960(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block8987(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8960(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block8986(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8986(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8987(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8987(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8987(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), s(6))
	call(block9151(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8987(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), s(6))
	call(block8994(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))

block8994(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump8994(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8994(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block9110(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8994(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block9106(s(5), s(4), s(3), s(2), s(1), s(0)))

block9106(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump9110(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block9141(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9110(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block9140(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9110(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9110(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9140(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9141(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 9578
	nop(PUSH2)
	call(block9578(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

jump9151(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(10), 0)
	call(block9237(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump9151(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(10), 0)
	call(block9236(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9151(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = 5
	nop(PUSH1)
	s(8) = g(etherPrice)
	nop(SLOAD)
	s(9) = 1000000000000000000
	nop(PUSH8)
	s(10) = 8
	nop(PUSH1)
	s(10) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump9151(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9236(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9237(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block9270(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump9237(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block9266(s(5), s(4), s(3), s(2), s(1), s(0)))

block9237(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump9237(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9266(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump9270(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(8), 0)
	call(block9287(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump9270(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(8), 0)
	call(block9286(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9270(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 7
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump9270(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9286(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9287(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	leq(s(12), s(11))
	call(block9572(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9287(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	gt(s(12), s(11))
	call(block9571(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9287(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 4
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9287(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9571(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9572(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block9578(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block9578(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(block9579(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block9579(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9579(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9579(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block9644(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump9579(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block9643(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9643(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9644(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG1)
	call(block9664(s(5),s(4),s(3),s(2),s(1),s(0)))

block9664(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2132(s(0)))
	nop(JUMP)

block9670(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump9670(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9670(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9750(s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9670(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9746(s(3), s(2), s(1), s(0)))

block9746(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9750(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block9763(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9750(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block9762(s(4), s(3), s(2), s(1), s(0)))

block9750(s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump9750(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9762(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9763(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block9790(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9763(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block9789(s(5), s(4), s(3), s(2), s(1), s(0)))

block9763(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9763(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9789(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9790(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump9790(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9790(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9803(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9790(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9799(s(3), s(2), s(1), s(0)))

block9799(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9803(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block9816(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9803(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block9815(s(4), s(3), s(2), s(1), s(0)))

block9803(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump9803(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9815(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9816(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block9904(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9816(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block9903(s(5), s(4), s(3), s(2), s(1), s(0)))

block9816(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9816(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9903(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9904(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9916(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9904(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9912(s(3), s(2), s(1), s(0)))

block9904(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump9904(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9912(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9916(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 23
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump9916(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9916(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block9932(s(3), s(2), s(1), s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))

jump9916(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block9928(s(3), s(2), s(1), s(0)))

block9928(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9932(s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 24
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(numberOfVotes)
	nop(SLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	g(numberOfVotes) = s(5)
	nop(SSTORE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	call(jump9932(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9932(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), 0)
	call(block10141(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump9932(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), 0)
	call(block10040(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump10040(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block10131(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump10040(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block10130(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10040(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	s(4) = 1
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10040(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10130(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10131(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 10239
	nop(PUSH2)
	call(block10239(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))
	nop(JUMP)

jump10141(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block10233(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump10141(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block10232(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10141(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10141(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10232(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10233(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block10239(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))

block10239(s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64553722568993200883443809638226739942484745337245721019031194148412713982255
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2179(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump10329(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block10479(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10329(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block10409(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

block10329(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(standard)
	s(7) = g(standard)
	call(jump10329(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10409(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block10436(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump10409(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block10417(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l2), l(l1), l(l0)))

block10409(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump10409(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block10417(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 10479
	nop(PUSH2)
	call(block10479(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10436(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block10450(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump10450(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block10450(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10450(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block10470(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block10450(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump10450(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block10470(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block10479(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block10479(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2222(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10487(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 20
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2442(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10524(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump10524(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10524(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	eq(s(8), s(7))
	call(block10615(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10524(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	neq(s(8), s(7))
	call(block10611(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10611(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump10615(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10615(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10627(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10615(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10615(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10627(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10628(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block10655(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10628(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block10654(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10628(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10654(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10655(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 10704
	nop(PUSH2)
	call(jump10655(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump10655(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(8), 1 )
	call(block10704(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10655(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(8), 1 )
	call(block10662(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

block10662(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(7) = 2
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10662(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10662(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10675(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10662(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10674(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10674(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10675(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10675(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10675(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block10702(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10675(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block10701(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10701(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10702(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	call(block10704(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

block10704(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump10704(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10704(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block10715(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10704(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block10711(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10711(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump10715(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10847(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10715(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10846(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10715(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = 11
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleStartTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(crowdsaleOwner)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleOwner) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(etherPrice) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 15
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 12
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 7
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalLimitUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10715(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10846(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10847(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10847(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10847(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block10874(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10847(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block10873(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10873(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10874(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump10874(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10874(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	neq(s(8), s(7))
	call(block10921(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10874(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	eq(s(8), s(7))
	call(block10881(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10881(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10911(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10881(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10910(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10881(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10881(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10910(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10911(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 10958
	nop(PUSH2)
	call(block10958(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

jump10921(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10952(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10921(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10951(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10921(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10921(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10951(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10952(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block10958(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))

block10958(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10958(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10958(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block11023(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump10958(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block11022(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11022(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11023(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2569(s(0)))
	nop(JUMP)

block11049(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block2636(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block11085(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2730(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump11158(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block11249(s(2), s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11158(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block11245(s(2), s(1), s(0)))

block11158(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump11158(s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11245(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11249(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 30
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	call(jump11249(s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11249(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block11344(s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11249(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block11316(s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block11316(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block11344(s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block11344(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump11344(s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11344(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(3), 0)
	call(block11355(s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11344(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(3), 0)
	call(block11351(s(2), s(1), s(0)))

block11351(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11355(s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 31
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(migrationAgentCandidate) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 11433
	nop(PUSH2)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 17205
	nop(PUSH2)
	call(block17205_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block11433(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2817(s(0)))
	nop(JUMP)

jump11436(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block11451(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11436(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block11450(s(3), s(2), s(1), s(0)))

block11436(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump11436(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11450(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11451(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block11478(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11451(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block11477(s(4), s(3), s(2), s(1), s(0)))

block11451(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11451(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11477(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11478(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 11527
	nop(PUSH2)
	call(jump11478(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump11478(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	eq(s(4), 1 )
	call(block11527(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11478(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	neq(s(4), 1 )
	call(block11485(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11485(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block11498(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump11485(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block11497(s(3), s(2), s(1), s(0)))

block11485(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump11485(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11497(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11498(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11498(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11498(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block11525(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11498(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block11524(s(4), s(3), s(2), s(1), s(0)))

block11524(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11525(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block11527(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11527(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block11538(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11527(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block11534(s(2), s(1), s(0)))

block11527(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump11527(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11534(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11538(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump11538(s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11538(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	leq(s(4), s(3))
	call(block11557(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump11538(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	gt(s(4), s(3))
	call(block11549(s(2), s(1), s(0), l(l1), l(l0)))

block11549(s(2), s(1), s(0), l(l1), l(l0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 11565
	nop(PUSH2)
	call(block11565(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11557(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block11565(s(2),s(1),s(0), l(l1), l(l0)))

block11565(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2840(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11568(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2883(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11574(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 21
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2970(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11606(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 30
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgent)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3017(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11644(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crowdsaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3104(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11682(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3191(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump11719(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block11810(s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11719(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block11806(s(2), s(1), s(0)))

block11719(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump11719(s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11806(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11810(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump11810(s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11810(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(4), s(3))
	call(block11848(s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11810(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(4), s(3))
	call(block11844(s(2), s(1), s(0)))

block11844(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11848(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(externalControllerCandidate)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(externalControllerCandidate) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 11927
	nop(PUSH2)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 17205
	nop(PUSH2)
	call(block17205_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block11927(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block3322(s(0)))
	nop(JUMP)

jump11930(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	leq(s(5), s(4))
	call(block11944(s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump11930(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	gt(s(5), s(4))
	call(block11943(s(3), s(2), s(1), s(0)))

block11930(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump11930(s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11943(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11944(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	leq(s(6), s(5))
	call(block11971(s(4), s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump11944(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	gt(s(6), s(5))
	call(block11970(s(4), s(3), s(2), s(1), s(0)))

block11944(s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11944(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11970(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11971(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block11983(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump11971(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block11979(s(2), s(1), s(0)))

block11971(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump11971(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11979(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump11983(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(13), 0)
	call(block12456(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize))

jump11983(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(13), 0)
	call(block12452(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11983(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalSupply) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalMigrated)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalMigrated) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 30
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2050044131
	nop(PUSH4)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l8) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l9) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(11)
	nop(DUP1)
	s(12) = extcodesize
	nop(EXTCODESIZE)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump11983(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l8), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12452(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

jump12456(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	eq(s(7), 0)
	call(block12476(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l1), l(l0), caller))

jump12456(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	neq(s(7), 0)
	call(block12467(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block12456(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = gas
	nop(GAS)
	s(6) = 1
	nop(CALL)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump12456(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12467(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block12476(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 30
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 11249535016889395155928029794464789214288252387144912394942407981344833784346
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	call(block3345(s(0)))
	nop(JUMP)

block12618(s(1), s(0), g(totalMigrated), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 33
	nop(PUSH1)
	s(2) = g(totalMigrated)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3368(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12624(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump12624(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12624(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block12774(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump12624(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block12704(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

block12704(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump12704(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump12704(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block12731(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump12704(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block12712(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block12712(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 12774
	nop(PUSH2)
	call(block12774(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block12731(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block12745(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump12745(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block12745(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump12745(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block12765(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block12745(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump12745(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block12765(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block12774(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block12774(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3411(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block12782(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 32
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(externalControllerCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3555(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12820(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3642(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12826(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3685(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12832(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationHost)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3728(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump12870(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(4), s(3))
	call(block12961(s(2), s(1), s(0),g(newOwner)))

jump12870(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(4), s(3))
	call(block12957(s(2), s(1), s(0)))

block12870(s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12870(s(4),s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12957(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12961(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12961(s(4),s(3),s(2),s(1),s(0),g(newOwner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12961(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	neq(s(4), s(3))
	call(block12999(s(2), s(1), s(0),g(newOwner)))

jump12961(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	eq(s(4), s(3))
	call(block12995(s(2), s(1), s(0)))

block12995(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12999(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(newOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(newOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3859(s(0)))
	nop(JUMP)

block13067(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump13067(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13067(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(6), s(5))
	call(block13080(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump13067(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(6), s(5))
	call(block13079(s(4), s(3), s(2), s(1), s(0)))

block13079(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13080(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block13107(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump13080(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block13106(s(5), s(4), s(3), s(2), s(1), s(0)))

block13080(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump13080(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13106(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13107(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(5), s(4))
	call(block13119(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump13107(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(5), s(4))
	call(block13115(s(3), s(2), s(1), s(0)))

block13107(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump13107(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13115(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13119(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = calldatasize
	nop(CALLDATASIZE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	call(jump13119(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13119(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(6), s(5))
	call(block13143(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump13119(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(6), s(5))
	call(block13139(s(4), s(3), s(2), s(1), s(0)))

block13139(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block13143(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump13143(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13143(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block13221(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump13143(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block13217(s(4), s(3), s(2), s(1), s(0)))

block13217(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block13221(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump13221(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13221(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block13364(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump13221(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block13360(s(4), s(3), s(2), s(1), s(0)))

block13360(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block13364(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3936(s(0)))
	nop(JUMP)

block13624(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13624(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13624(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block13644(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump13624(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block13643(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13643(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13644(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block13671(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump13644(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block13670(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13644(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13644(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13670(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13671(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump13671(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13671(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(9), s(8))
	call(block13684(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump13671(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(9), s(8))
	call(block13680(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13680(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block13684(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 23
	nop(PUSH1)
	s(8) = g(votingDeadline)
	nop(SLOAD)
	s(9) = timestamp
	nop(TIMESTAMP)
	call(jump13684(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13684(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	geq(s(9), s(8))
	call(block13701(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13684(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	lt(s(9), s(8))
	call(block13697(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13697(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block13701(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block13702(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13702(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), 0)
	call(block13720(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13702(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), 0)
	call(block13713(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13702(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump13702(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13713(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block13720(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13720(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump13720(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13720(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block14186(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13720(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block13726(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13726(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block13952(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13726(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block13951(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13726(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfVotes)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(numberOfVotes) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13726(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13951(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13952(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block13964(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13952(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block13963(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13952(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13952(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13963(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13964(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump13964(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13964(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block13991(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13964(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block13971(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block13971(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(yea)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(yea) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 14039
	nop(PUSH2)
	call(block14039(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

block13991(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13991(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13991(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block14003(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump13991(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block14002(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14002(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14003(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14003(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14003(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block14015(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14003(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block14014(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14014(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14015(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block14038(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14015(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block14022(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block14015(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump14015(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14022(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(nay)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(nay) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block14038(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block14038(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block14039(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block14039(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(10) = g(numberOfVotes)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 13702
	nop(PUSH2)
	call(block13702(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

block14186(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	call(jump14186(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14186(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block14206(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14186(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block14198(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block14198(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 15014
	nop(PUSH2)
	call(block15014(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14206(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block14936(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump14206(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block14245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block14206(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(8) = g(nay)
	nop(SLOAD)
	s(9) = 25
	nop(PUSH1)
	s(9) = g(yea)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(weiReqFund)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	s(8) = 24
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfVotes) = s(8)
	nop(SSTORE)
	s(8) = s(3)
	nop(DUP5)
	call(jump14206(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14245(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14245(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block14257(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14245(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block14256(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14256(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14257(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14257(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14257(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block14284(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14257(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block14283(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14283(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14284(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump14284(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14284(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block14388(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14284(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block14291(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(owner), l(l1), l(l0)))

jump14291(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block14383(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump14291(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block14379(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14291(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump14291(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(owner), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14379(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14383(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 14935
	nop(PUSH2)
	call(block14935(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

block14388(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14388(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14388(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block14401(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14388(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block14400(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14400(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14401(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14401(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14401(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block14428(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14401(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block14427(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14427(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14428(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block14728(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump14428(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block14435(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))

block14428(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump14428(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14435(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block14650(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))

jump14435(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block14646(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14435(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(migrationAgent)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(migrationAgent) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 30
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgent)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump14435(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14646(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14650(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(migrationAgentCandidate) = s(8)
	nop(SSTORE)
	s(8) = 5
	nop(PUSH1)
	s(9) = 10
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump14650(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14650(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block14718(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(state), l(l1), l(l0)))

jump14650(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block14717(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14717(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14718(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 14934
	nop(PUSH2)
	call(block14934(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

jump14728(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block14740(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump14728(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block14739(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14728(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14728(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14739(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14740(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block14767(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump14740(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block14766(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14740(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14740(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14766(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14767(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump14767(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14767(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block14933(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump14767(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block14774(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

block14774(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 21
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(externalControllerCandidate)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(externalControllerCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(externalControllerCandidate) = s(8)
	nop(SSTORE)
	call(block14933(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14933(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block14934(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14934(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block14935(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14935(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block14936(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block14936(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	s(8) = 75206971871473182631099251223774128077502725353986568989429243973252125172665
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	call(block15014(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block15014(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block3981(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump15023(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(3), s(2))
	call(block15115(s(1), s(0),g(newOwner), g(owner)))

jump15023(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(3), s(2))
	call(block15111(s(1), s(0)))

block15023(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump15023(s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15111(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block15115(s(1), s(0), g(newOwner), g(owner))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(owner) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(newOwner) = s(2)
	nop(SSTORE)
	call(block4028(s(0)))
	nop(JUMP)

block15252(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4051(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15271(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4108(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15309(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 28
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4239(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15341(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump15341(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15341(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block15432(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15341(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block15428(s(3), s(2), s(1), s(0)))

block15428(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15432(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump15432(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15432(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block15445(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15432(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block15444(s(4), s(3), s(2), s(1), s(0)))

block15444(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15445(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block15472(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15445(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block15471(s(5), s(4), s(3), s(2), s(1), s(0)))

block15445(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump15445(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15471(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15472(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(5), 1 )
	call(block15521(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15472(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(5), 1 )
	call(block15479(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block15472(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 15521
	nop(PUSH2)
	call(jump15472(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMPI)

jump15479(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block15492(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15479(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block15491(s(4), s(3), s(2), s(1), s(0)))

block15479(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump15479(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15491(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15492(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump15492(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block15519(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block15518(s(5), s(4), s(3), s(2), s(1), s(0)))

block15518(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15519(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block15521(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15521(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(4), 0)
	call(block15532(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15521(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(4), 0)
	call(block15528(s(3), s(2), s(1), s(0)))

block15521(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump15521(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15528(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15532(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(5), s(4))
	call(block15548(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15532(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(5), s(4))
	call(block15544(s(3), s(2), s(1), s(0)))

block15532(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(5) = timestamp
	nop(TIMESTAMP)
	call(jump15532(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15544(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15548(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(5), s(4))
	call(block15569(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump15548(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(5), s(4))
	call(block15565(s(3), s(2), s(1), s(0)))

block15548(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump15548(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15565(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15569(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(collectedUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 15597
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4833
	nop(PUSH2)
	call(block4833_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block15597(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block4350(s(0)))
	nop(JUMP)

jump15601(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block15616(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0)))

jump15601(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block15615(s(5), s(4), s(3), s(2), s(1), s(0)))

block15601(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump15601(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15615(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15616(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump15616(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15616(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block15643(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump15616(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block15642(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15642(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15643(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block15655(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump15643(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block15651(s(4), s(3), s(2), s(1), s(0)))

block15643(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump15643(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15651(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block15655(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4449(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump15788(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	neq(s(4), 0)
	call(block15876(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump15788(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	eq(s(4), 0)
	call(block15872(s(3), s(2), s(1), s(0)))

block15788(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 21
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump15788(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15872(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15876(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block15954(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump15876(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block15950(s(3), s(2), s(1), s(0)))

block15876(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump15876(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15950(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15954(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump15954(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15954(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block16097(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump15954(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block16093(s(3), s(2), s(1), s(0)))

block16093(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16097(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4546(s(0)))
	nop(JUMP)

block16356(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4569(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16362(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 26
	nop(PUSH1)
	s(2) = g(nay)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4612(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16368(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4677(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16419(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump16419(s(3),s(2),s(1),s(0),g(migrationHost), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16419(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	eq(s(3), s(2))
	call(block16510(s(1), s(0),g(migrationHost)))

jump16419(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	neq(s(3), s(2))
	call(block16506(s(1), s(0)))

block16506(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block16510(s(1), s(0), g(migrationHost))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(migrationHost)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(migrationHost) = s(2)
	nop(SSTORE)
	call(block4764(s(0)))
	nop(JUMP)

jump16549(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block16642(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump16549(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block16638(s(3), s(2), s(1), s(0)))

block16549(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16549(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16638(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump16642(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block16714(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump16642(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block16710(s(3), s(2), s(1), s(0)))

block16642(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16642(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16710(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump16714(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(14), 0)
	call(block16903(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))

jump16714(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(14), 0)
	call(block16899(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16714(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationHost)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1889567281
	nop(PUSH4)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l8) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 32
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = s(12)
	nop(DUP1)
	s(13) = extcodesize
	nop(EXTCODESIZE)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump16714(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16899(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

jump16903(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	eq(s(8), 0)
	call(block16923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))

jump16903(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	neq(s(8), 0)
	call(block16914(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block16903(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = gas
	nop(GAS)
	s(7) = 1
	nop(CALL)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump16903(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16914(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

jump16923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	geq(s(7), s(6))
	call(block16945(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump16923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	lt(s(7), s(6))
	call(block16941(s(5), s(4), s(3), s(2), s(1), s(0)))

block16923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16923(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16941(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block16945(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 125
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump16945(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16945(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block16979(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump16945(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block16978(s(5), s(4), s(3), s(2), s(1), s(0)))

block16978(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16979(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4831(s(0)))
	nop(JUMP)

block17205(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump17205(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17205(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block17218(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump17205(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block17217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17218(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump17218(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17218(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block17245(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump17218(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block17244(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17244(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17245(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump17245(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17245(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block17281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump17245(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block17253(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block17253(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block17281(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

block17281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump17281(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block17292(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump17281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block17288(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17288(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17292(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump17292(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17292(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block17343(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump17292(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block17342(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17342(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17343(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump17343(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17343(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block17417(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump17343(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block17416(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17416(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17417(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block7818(s(2),s(1),s(0)))
	nop(JUMP)

block17442(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block7831(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

jump17205_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block17218_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump17205_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block17217_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17205_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump17205_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17205_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump17205_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17205_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block17218_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump17205_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block17217_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17217_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17217_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17218_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump17218_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17218_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block17245_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump17218_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block17244_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump17218_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block17245_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump17218_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block17244_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17218_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump17218_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17244_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17244_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17245_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block17281_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump17245_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block17253_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block17245_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump17245_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17245_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block17281_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump17245_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block17253_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block17245_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump17245_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17253_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block17281_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

block17253_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block17281_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump17281_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block17292_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump17281_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block17288_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17281_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump17281_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17281_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump17281_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17281_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block17292_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump17281_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block17288_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17288_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17288_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump17292_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block17343_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump17292_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block17342_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17292_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump17292_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17292_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block17343_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump17292_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block17342_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17292_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump17292_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17342_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17342_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17343_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump17343_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17343_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block17417_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump17343_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block17416_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17343_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump17343_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17343_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block17417_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump17343_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block17416_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17416_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17416_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17417_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block11433(s(2),s(1),s(0)))
	nop(JUMP)

block17417_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block11927(s(2),s(1),s(0)))
	nop(JUMP)

block4833_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 100
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4833_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4833_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4855_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4833_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4854_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump4833_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4855_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4833_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4854_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4833_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 100
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4833_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4854_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4854_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4855_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block4882_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4855_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block4881_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4855_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump4855_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4855_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4882_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4855_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4881_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4855_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4855_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4881_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4881_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4882_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4882_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4882_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block4936_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4882_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block4889_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4882_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block4936_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4882_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block4889_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4882_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4882_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4889_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), 0)
	call(block4912_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4889_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), 0)
	call(block4905_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4889_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(12) = s(11)
	nop(DUP1)
	call(jump4889_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4889_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(11) = s(10)
	nop(DUP1)
	call(jump4889_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4889_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 0)
	call(block4912_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4889_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 0)
	call(block4905_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4905_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(11) = 50000
	nop(PUSH2)
	s(12) = s(6)
	nop(DUP6)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	call(block4912_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4905_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 50000
	nop(PUSH2)
	s(11) = s(5)
	nop(DUP6)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	call(block4912_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4912_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4912_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4912_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), 0)
	call(block4926_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4912_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), 0)
	call(block4918_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4912_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4912_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4912_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block4926_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4912_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block4918_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4918_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 150
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 4931
	nop(PUSH2)
	call(block4931_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4918_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 150
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 4931
	nop(PUSH2)
	call(block4931_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4926_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 125
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block4931_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4926_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 125
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block4931_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4931_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 5029
	nop(PUSH2)
	call(block5029_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4931_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 5029
	nop(PUSH2)
	call(block5029_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump4936_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4949_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4936_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4948_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4936_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 3
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4936_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4936_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4949_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4936_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4948_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4936_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 3
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4936_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4948_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4948_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4949_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump4949_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4949_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block4976_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4949_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block4975_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4949_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4949_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4949_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4976_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4949_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4975_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4975_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4975_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4976_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4976_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4976_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block5028_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4976_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block4983_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4976_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4976_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4976_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block5028_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4976_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block4983_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4983_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block5006_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4983_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block4998_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4983_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump4983_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4983_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block5006_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4983_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block4998_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4983_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump4983_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4998_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 115
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 5027
	nop(PUSH2)
	call(block5027_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4998_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 115
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 5027
	nop(PUSH2)
	call(block5027_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block5006_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 604800
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump5006_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5006_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block5026_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5006_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block5022_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5006_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block5026_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5006_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block5022_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5006_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 604800
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump5006_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5022_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 110
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block5026_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5022_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 110
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block5026_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5026_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5027_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5026_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5027_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5027_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5028_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5027_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5028_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5028_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5029_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5028_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5029_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5029_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(5)
	nop(DUP10)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l4) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l5) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	call(jump5029_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5029_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block5176_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5029_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block5172_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5029_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump5029_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5029_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block5176_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5029_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block5172_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5172_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block5172_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block5176_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	call(jump5176_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5176_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block5191_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5176_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block5187_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5176_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block5191_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5176_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block5187_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5176_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	call(jump5176_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5187_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block5187_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump5191_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(12), s(11))
	call(block5368_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5191_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(12), s(11))
	call(block5270_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5191_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 13
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	call(jump5191_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5191_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 13
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump5191_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5191_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), s(10))
	call(block5368_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5191_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), s(10))
	call(block5270_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5270_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = s(5)
	nop(DUP6)
	s(12) = 14
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = 15
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(numberOfInvestors)
	nop(SLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 1
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(15)
	nop(SSTORE)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = or(s(14), s(13))
	nop(OR)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	call(block5368_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5270_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = s(4)
	nop(DUP6)
	s(11) = 14
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 15
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(numberOfInvestors)
	nop(SLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(14)
	nop(SSTORE)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block5368_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5368_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(1)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(2)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(14) = s(9)
	nop(DUP5)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	l(l1) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG3)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	s(15) = g(totalSupply)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalSupply) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block15597(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5368_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = address
	nop(ADDRESS)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(totalSupply)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(totalSupply) = s(11)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block960_0(s(2),s(1),s(0)))
	nop(JUMP)

jump659_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block675_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump659_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block674_0(s(3), s(2), s(1), s(0)))

block659_0(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump659_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block674_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump675_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block702_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump675_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block701_0(s(4), s(3), s(2), s(1), s(0)))

block675_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump675_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block701_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump702_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 1 )
	call(block751_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump702_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 1 )
	call(block709_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block702_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 751
	nop(PUSH2)
	call(jump702_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

jump709_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block722_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump709_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block721_0(s(3), s(2), s(1), s(0)))

block709_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump709_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block721_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump722_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block749_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump722_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block748_0(s(4), s(3), s(2), s(1), s(0)))

block722_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump722_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block748_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block749_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block751_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block751_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump751_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump751_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block762_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump751_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block758_0(s(2), s(1), s(0)))

block758_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block762_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump762_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump762_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(4), s(3))
	call(block778_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump762_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(4), s(3))
	call(block774_0(s(2), s(1), s(0)))

block774_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump778_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block804_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump778_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block803_0(s(4), s(3), s(2), s(1), s(0)))

block778_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(etherPrice)
	nop(SLOAD)
	s(5) = s(1)
	nop(DUP4)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump778_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block803_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump804_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block932_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump804_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block822_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block804_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 9
	nop(PUSH1)
	s(5) = g(collectedUSD)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	call(jump804_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump822_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block853_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump822_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block852_0(s(4), s(3), s(2), s(1), s(0)))

block822_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(3) = 9
	nop(PUSH1)
	s(3) = g(collectedUSD)
	nop(SLOAD)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = 1000000000000000000
	nop(PUSH8)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump822_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block852_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block853_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(1)
	nop(DUP4)
	s(6) = callvalue
	nop(CALLVALUE)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump853_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump853_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block918_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump853_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block914_0(s(2), s(1), s(0)))

block914_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block918_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = 9
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 949
	nop(PUSH2)
	call(block949_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block932_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block949_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block949_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 960
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 4833
	nop(PUSH2)
	call(block4833_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block960_0(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

