jump0(s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	lt(s(1), s(0))
	call(block604(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump0(s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	geq(s(1), s(0))
	call(block13(g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block0(g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block909(s(0),g(votingDeadline), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block65(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block13(g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 57600080
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block952(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block76(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block65(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 86896325
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1061(s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block87(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block87(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1205(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block98(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block98(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 174662471
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1282(s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))

jump98(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block109(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block109(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 230911786
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1305(s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block120(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump120(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1392(s(0),g(numberOfVotes), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block131(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block120(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 243091725
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 274359126
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1435(s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block142(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block142(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 348895501
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1478(s(0),g(yea), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block153(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump153(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1521(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block164(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block153(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1564(s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))

jump164(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block175(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block164(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 434608524
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 452119037
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1635(s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block186(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump186(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1678(s(0),g(collectedUSD), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block197(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block186(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1721(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump197(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block208(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block197(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 803891477
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1830(s(0),g(weiReqFund), l(l1), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block219(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block219(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1873(s(0),g(decimals), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block230(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump230(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1922(s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))

jump230(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block241(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block230(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1026513882
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1233546944
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block1967(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))

jump241(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block252(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block252(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1268735128
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2012(s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))

jump252(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block263(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block263(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2079(s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))

jump263(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block274(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

jump274(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2223(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump274(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block285(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block274(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1868050891
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2342(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump285(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, gas, minimalSuccessUSD, owner, returndatasize, spender, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block296(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump296(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2449(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump296(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block307(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block296(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1870383550
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2543(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))

jump307(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block318(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block307(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2630(s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))

jump318(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block329(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block318(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2049348175
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2066067146
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2673(s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))

jump329(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block340(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump340(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2716(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump340(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block351(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block340(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2120681183
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2807(s(0),g(migrationAgent), l(l1), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block362(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block351(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2200493005
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2894(s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))

jump362(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block373(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block362(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2237027717
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2981(s(0),g(owner), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block384(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block373(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block384(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3068(s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))

jump384(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block395(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block395(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514067504
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3212(s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block406(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump406(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3299(s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block417(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block406(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2542402010
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3342(s(0),g(etherPrice), l(l1), l(l0), callvalue))

jump417(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block428(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block428(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2762537194
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3385(s(0),g(migrationHost), l(l1), l(l0), callvalue))

jump428(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block439(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump439(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3472(s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))

jump439(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block450(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block439(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3539(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump450(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block461(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block461(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2884092046
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3616(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))

jump461(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block472(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

jump472(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3685(s(0),g(newOwner), g(owner), caller, callvalue))

jump472(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block483(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block472(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3181079942
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3708(s(0),g(state), l(l1), l(l0), callvalue))

jump483(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block494(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block483(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3572374928
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3765(s(0),g(newOwner), l(l1), l(l0), callvalue))

jump494(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block505(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block505(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3636458917
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3852(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block516(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block516(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3709204883
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block3953(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))

jump516(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block527(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4030(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block538(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))

block527(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4149(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block549(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block538(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3806082528
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4226(s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block560(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block549(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3808182813
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3929006498
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4269(s(0),g(nay), l(l1), l(l0), callvalue))

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block571(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

jump571(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4312(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump571(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block582(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block571(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4159689736
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4172968727
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4421(s(0),g(migrationHost), g(owner), caller, callvalue))

jump582(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block593(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block593(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4184780803
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block4444(s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))

jump593(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block604_0(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block604(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump604(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block620(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump604(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block619(s(2), s(1), s(0)))

block619(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump620(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block647(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump620(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block646(s(3), s(2), s(1), s(0)))

block620(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump620(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block646(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump647(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 1 )
	call(block696(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump647(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 1 )
	call(block654(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block647(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 696
	nop(PUSH2)
	call(jump647(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

block654(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(2) = 3
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump654(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump654(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block667(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump654(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block666(s(2), s(1), s(0)))

block666(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump667(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block694(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump667(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block693(s(3), s(2), s(1), s(0)))

block667(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump667(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block693(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block694(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	call(block696(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block696(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump696(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump696(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block707(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump696(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block703(s(1), s(0)))

block703(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block707(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = timestamp
	nop(TIMESTAMP)
	call(jump707(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump707(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(3), s(2))
	call(block723(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump707(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(3), s(2))
	call(block719(s(1), s(0)))

block719(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump723(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block749(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump723(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block748(s(3), s(2), s(1), s(0)))

block723(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = 1000000000000000000
	nop(PUSH8)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = s(0)
	nop(DUP4)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump723(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block748(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block749(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 9
	nop(PUSH1)
	s(4) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(4)+s(3)
	nop(ADD)
	call(jump749(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump749(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(3), s(2))
	call(block877(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump749(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(3), s(2))
	call(block767(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump767(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block798(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump767(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block797(s(3), s(2), s(1), s(0)))

block767(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump767(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block797(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump798(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block863(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump798(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block859(s(1), s(0)))

block798(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 3000000
	nop(PUSH3)
	s(4) = s(0)
	nop(DUP4)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump798(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block859(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block863(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = 9
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 894
	nop(PUSH2)
	call(block894(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block877(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 9
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block894(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block894(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 905
	nop(PUSH2)
	s(3) = caller
	nop(CALLER)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(0)
	nop(DUP5)
	s(6) = 4511
	nop(PUSH2)
	call(block4511(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block905(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

jump909(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block921(s(1), s(0),g(votingDeadline), l(l1), l(l0)))

jump909(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block917(s(1), s(0)))

block909(s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump909(s(2),s(1),s(0),g(votingDeadline), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block917(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block921(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 930
	nop(PUSH2)
	s(2) = 5284
	nop(PUSH2)
	call(block5284(s(1),s(0),g(votingDeadline), l(l1), l(l0)))
	nop(JUMP)

block930(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block952(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump952(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump952(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block964(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump952(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block960(s(1), s(0)))

block960(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block964(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 995
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5290
	nop(PUSH2)
	call(block5290(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block995(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1061(s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1061(s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1061(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1073(s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

jump1061(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1069(s(1), s(0)))

block1069(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1073(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1082
	nop(PUSH2)
	s(2) = 5341
	nop(PUSH2)
	call(block5341(s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1082(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1119(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block1119(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1119(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1119(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1146(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1119(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1128(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block1128(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1119
	nop(PUSH2)
	call(block1119(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block1146(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1146(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1146(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1191(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1146(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1166(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1166(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1191(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1191(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1205(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1217(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value))

jump1205(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1213(s(1), s(0)))

block1205(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1205(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1213(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1217(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1280
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5499
	nop(PUSH2)
	call(block5499(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block1280(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1282(s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1282(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1282(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block1294(s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump1282(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block1290(s(1), s(0)))

block1290(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1294(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1303
	nop(PUSH2)
	s(2) = 5785
	nop(PUSH2)
	call(block5785(s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMP)

block1303(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1305(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1317(s(1), s(0),g(migrationAgentCandidate), l(l1), l(l0)))

jump1305(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1313(s(1), s(0)))

block1305(s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1305(s(2),s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1313(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1317(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1326
	nop(PUSH2)
	s(2) = 6110
	nop(PUSH2)
	call(block6110(s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0)))
	nop(JUMP)

block1326(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1392(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1404(s(1), s(0),g(numberOfVotes), l(l1), l(l0)))

jump1392(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1400(s(1), s(0)))

block1392(s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1392(s(2),s(1),s(0),g(numberOfVotes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1400(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1404(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1413
	nop(PUSH2)
	s(2) = 6148
	nop(PUSH2)
	call(block6148(s(1),s(0),g(numberOfVotes), l(l1), l(l0)))
	nop(JUMP)

block1413(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1435(s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1435(s(2),s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1435(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1447(s(1), s(0),g(minimalSuccessUSD), l(l1), l(l0)))

jump1435(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1443(s(1), s(0)))

block1443(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1447(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1456
	nop(PUSH2)
	s(2) = 6154
	nop(PUSH2)
	call(block6154(s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0)))
	nop(JUMP)

block1456(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1478(s(0), g(yea), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1478(s(2),s(1),s(0),g(yea), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1478(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1490(s(1), s(0),g(yea), l(l1), l(l0)))

jump1478(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1486(s(1), s(0)))

block1486(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1490(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1499
	nop(PUSH2)
	s(2) = 6160
	nop(PUSH2)
	call(block6160(s(1),s(0),g(yea), l(l1), l(l0)))
	nop(JUMP)

block1499(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1521(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1533(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1521(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1529(s(1), s(0)))

block1521(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1521(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1529(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1533(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1542
	nop(PUSH2)
	s(2) = 6166
	nop(PUSH2)
	call(block6166(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1542(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1564(s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1564(s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1564(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block1576(s(1), s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))

jump1564(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block1572(s(1), s(0)))

block1572(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1576(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1585
	nop(PUSH2)
	s(2) = 6172
	nop(PUSH2)
	call(block6172(s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block1585(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(1)
	nop(DUP5)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1585(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1585(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block1613(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump1585(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block1612(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1612(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1613(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1635(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1647(s(1), s(0),g(numberOfInvestors), l(l1), l(l0)))

jump1635(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1643(s(1), s(0)))

block1635(s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1635(s(2),s(1),s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1643(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1647(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1656
	nop(PUSH2)
	s(2) = 6233
	nop(PUSH2)
	call(block6233(s(1),s(0),g(numberOfInvestors), l(l1), l(l0)))
	nop(JUMP)

block1656(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1678(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1690(s(1), s(0),g(collectedUSD), l(l1), l(l0)))

jump1678(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1686(s(1), s(0)))

block1678(s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1678(s(2),s(1),s(0),g(collectedUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1686(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1690(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1699
	nop(PUSH2)
	s(2) = 6239
	nop(PUSH2)
	call(block6239(s(1),s(0),g(collectedUSD), l(l1), l(l0)))
	nop(JUMP)

block1699(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1721(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1721(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1721(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1733(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1721(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1729(s(1), s(0)))

block1729(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1733(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1828
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6245
	nop(PUSH2)
	call(block6245(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block1828(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1830(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1842(s(1), s(0),g(weiReqFund), l(l1), l(l0)))

jump1830(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1838(s(1), s(0)))

block1830(s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1830(s(2),s(1),s(0),g(weiReqFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1838(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1842(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1851
	nop(PUSH2)
	s(2) = 7080
	nop(PUSH2)
	call(block7080(s(1),s(0),g(weiReqFund), l(l1), l(l0)))
	nop(JUMP)

block1851(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1873(s(0), g(decimals), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1873(s(2),s(1),s(0),g(decimals), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1873(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1885(s(1), s(0),g(decimals), l(l1), l(l0)))

jump1873(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1881(s(1), s(0)))

block1881(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1885(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1894
	nop(PUSH2)
	s(2) = 7086
	nop(PUSH2)
	call(block7086(s(1),s(0),g(decimals), l(l1), l(l0)))
	nop(JUMP)

block1894(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1922(s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1922(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1922(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	eq(s(2), 0)
	call(block1934(s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund))

jump1922(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	neq(s(2), 0)
	call(block1930(s(1), s(0)))

block1930(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1934(s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1965
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = weiReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7105
	nop(PUSH2)
	call(block7105(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block1965(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1967(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1967(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1967(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	eq(s(2), 0)
	call(block1979(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp))

jump1967(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	neq(s(2), 0)
	call(block1975(s(1), s(0)))

block1975(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1979(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2010
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investorsToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7326
	nop(PUSH2)
	call(block7326(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2010(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2012(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	eq(s(2), 0)
	call(block2024(s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp))

jump2012(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	neq(s(2), 0)
	call(block2020(s(1), s(0)))

block2012(s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2012(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2020(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2024(s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2057
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inSupport
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9175
	nop(PUSH2)
	call(block9175(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2057(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2079(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2091(s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

jump2079(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2087(s(1), s(0)))

block2079(s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2079(s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2087(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2091(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2100
	nop(PUSH2)
	s(2) = 9834
	nop(PUSH2)
	call(block9834(s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2100(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2137(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block2137(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2137(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2137(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block2164(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2137(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block2146(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block2146(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2137
	nop(PUSH2)
	call(block2137(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump2164(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2209(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2164(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2184(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2164(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2164(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2184(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2209(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2209(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2223(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2235(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump2223(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2231(s(1), s(0)))

block2223(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2223(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2231(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2235(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2320
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 9992
	nop(PUSH2)
	call(block9992(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2320(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2342(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2342(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2342(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	eq(s(2), 0)
	call(block2354(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump2342(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	neq(s(2), 0)
	call(block2350(s(1), s(0)))

block2350(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2354(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2447
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crowdsaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = crowdsaleDurationDays
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = totalLimitUSD
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = minimalSuccessUSD
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = etherPrice
	nop(CALLDATALOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 10029
	nop(PUSH2)
	call(block10029(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2447(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2449(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2449(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2449(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2461(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2449(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2457(s(1), s(0)))

block2457(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2461(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2514
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10554
	nop(PUSH2)
	call(block10554(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2514(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2543(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	eq(s(2), 0)
	call(block2555(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who))

jump2543(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	neq(s(2), 0)
	call(block2551(s(1), s(0)))

block2543(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2543(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2551(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2555(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2608
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10590
	nop(PUSH2)
	call(block10590(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2608(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2630(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2642(s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump2630(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2638(s(1), s(0)))

block2630(s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2630(s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2638(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2642(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2651
	nop(PUSH2)
	s(2) = 10663
	nop(PUSH2)
	call(block10663(s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMP)

block2651(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2673(s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2673(s(2),s(1),s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2673(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2685(s(1), s(0),g(totalLimitUSD), l(l1), l(l0)))

jump2673(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2681(s(1), s(0)))

block2681(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2685(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2694
	nop(PUSH2)
	s(2) = 10795
	nop(PUSH2)
	call(block10795(s(1),s(0),g(totalLimitUSD), l(l1), l(l0)))
	nop(JUMP)

block2694(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2716(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2716(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2716(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2728(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump2716(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2724(s(1), s(0)))

block2724(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2728(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2781
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10801
	nop(PUSH2)
	call(block10801(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2781(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2807(s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2807(s(2),s(1),s(0),g(migrationAgent), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2807(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2819(s(1), s(0),g(migrationAgent), l(l1), l(l0)))

jump2807(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2815(s(1), s(0)))

block2815(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2819(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2828
	nop(PUSH2)
	s(2) = 10833
	nop(PUSH2)
	call(block10833(s(1),s(0),g(migrationAgent), l(l1), l(l0)))
	nop(JUMP)

block2828(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2894(s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2894(s(2),s(1),s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2894(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2906(s(1), s(0),g(crowdsaleOwner), l(l1), l(l0)))

jump2894(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2902(s(1), s(0)))

block2902(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2906(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2915
	nop(PUSH2)
	s(2) = 10871
	nop(PUSH2)
	call(block10871(s(1),s(0),g(crowdsaleOwner), l(l1), l(l0)))
	nop(JUMP)

block2915(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2981(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2981(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2981(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2993(s(1), s(0),g(owner), l(l1), l(l0)))

jump2981(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2989(s(1), s(0)))

block2989(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2993(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3002
	nop(PUSH2)
	s(2) = 10909
	nop(PUSH2)
	call(block10909(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3002(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3068(s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3068(s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3068(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3080(s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

jump3068(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3076(s(1), s(0)))

block3076(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3080(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3089
	nop(PUSH2)
	s(2) = 10946
	nop(PUSH2)
	call(block10946(s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3089(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3126(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block3126(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3126(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3126(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block3153(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3126(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block3135(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block3135(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3126
	nop(PUSH2)
	call(block3126(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block3153(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3153(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3153(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block3198(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3153(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block3173(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3173(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3198(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3198(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3212(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3224(s(1), s(0),g(externalControllerCandidate), l(l1), l(l0)))

jump3212(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3220(s(1), s(0)))

block3212(s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3212(s(2),s(1),s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3220(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3224(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3233
	nop(PUSH2)
	s(2) = 11104
	nop(PUSH2)
	call(block11104(s(1),s(0),g(externalControllerCandidate), l(l1), l(l0)))
	nop(JUMP)

block3233(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3299(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3311(s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0)))

jump3299(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3307(s(1), s(0)))

block3299(s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3299(s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3307(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3311(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3320
	nop(PUSH2)
	s(2) = 11142
	nop(PUSH2)
	call(block11142(s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0)))
	nop(JUMP)

block3320(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3342(s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3342(s(2),s(1),s(0),g(etherPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3342(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3354(s(1), s(0),g(etherPrice), l(l1), l(l0)))

jump3342(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3350(s(1), s(0)))

block3350(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3354(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3363
	nop(PUSH2)
	s(2) = 11148
	nop(PUSH2)
	call(block11148(s(1),s(0),g(etherPrice), l(l1), l(l0)))
	nop(JUMP)

block3363(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3385(s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3385(s(2),s(1),s(0),g(migrationHost), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3385(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3397(s(1), s(0),g(migrationHost), l(l1), l(l0)))

jump3385(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3393(s(1), s(0)))

block3393(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3397(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3406
	nop(PUSH2)
	s(2) = 11154
	nop(PUSH2)
	call(block11154(s(1),s(0),g(migrationHost), l(l1), l(l0)))
	nop(JUMP)

block3406(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3472(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block3484(s(1), s(0),g(newOwner), g(owner), calldatasize, caller, owner))

jump3472(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block3480(s(1), s(0)))

block3472(s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3472(s(2),s(1),s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3480(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3484(s(1), s(0), g(newOwner), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3537
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11192
	nop(PUSH2)
	call(block11192(s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block3537(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3539(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3539(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3539(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3551(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value))

jump3539(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3547(s(1), s(0)))

block3547(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3551(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3614
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 11389
	nop(PUSH2)
	call(block11389(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block3614(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3616(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3616(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3616(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block3628(s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess))

jump3616(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block3624(s(1), s(0)))

block3624(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3628(s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3659
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = votesToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11946
	nop(PUSH2)
	call(block11946(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block3659(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3685(s(0), g(newOwner), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3685(s(2),s(1),s(0),g(newOwner), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3685(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block3697(s(1), s(0),g(newOwner), g(owner), caller))

jump3685(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block3693(s(1), s(0)))

block3693(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3697(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3706
	nop(PUSH2)
	s(2) = 13345
	nop(PUSH2)
	call(block13345(s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block3706(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3708(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3720(s(1), s(0),g(state), l(l1), l(l0)))

jump3708(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3716(s(1), s(0)))

block3708(s(0), g(state), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3708(s(2),s(1),s(0),g(state), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3716(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3720(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3729
	nop(PUSH2)
	s(2) = 13574
	nop(PUSH2)
	call(block13574(s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

jump3729(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block3745(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump3729(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block3744(s(5), s(4), s(3), s(2), s(1), s(0)))

block3729(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump3729(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3744(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3745(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3765(s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3765(s(2),s(1),s(0),g(newOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3765(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3777(s(1), s(0),g(newOwner), l(l1), l(l0)))

jump3765(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3773(s(1), s(0)))

block3773(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3777(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3786
	nop(PUSH2)
	s(2) = 13593
	nop(PUSH2)
	call(block13593(s(1),s(0),g(newOwner), l(l1), l(l0)))
	nop(JUMP)

block3786(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3852(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3864(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump3852(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3860(s(1), s(0)))

block3852(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3852(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3860(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3864(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3917
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13631
	nop(PUSH2)
	call(block13631(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

jump3917(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block3933(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump3917(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block3932(s(5), s(4), s(3), s(2), s(1), s(0)))

block3917(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump3917(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3932(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3933(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3953(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	eq(s(2), 0)
	call(block3965(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who))

jump3953(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	neq(s(2), 0)
	call(block3961(s(1), s(0)))

block3953(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3953(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3961(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3965(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4028
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = valueUSD
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 13663
	nop(PUSH2)
	call(block13663(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block4028(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4030(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4030(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4030(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4042(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender))

jump4030(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4038(s(1), s(0)))

block4038(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4042(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4127
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 13923
	nop(PUSH2)
	call(block13923(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4127(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4149(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4161(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value))

jump4149(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4157(s(1), s(0)))

block4149(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4149(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4157(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4161(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4224
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14110
	nop(PUSH2)
	call(block14110(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(JUMP)

block4224(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4226(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4238(s(1), s(0),g(crowdsaleStartTime), l(l1), l(l0)))

jump4226(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4234(s(1), s(0)))

block4226(s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4226(s(2),s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4234(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4238(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4247
	nop(PUSH2)
	s(2) = 14678
	nop(PUSH2)
	call(block14678(s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0)))
	nop(JUMP)

block4247(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4269(s(0), g(nay), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4269(s(2),s(1),s(0),g(nay), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4269(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4281(s(1), s(0),g(nay), l(l1), l(l0)))

jump4269(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4277(s(1), s(0)))

block4277(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4281(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4290
	nop(PUSH2)
	s(2) = 14684
	nop(PUSH2)
	call(block14684(s(1),s(0),g(nay), l(l1), l(l0)))
	nop(JUMP)

block4290(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4312(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4324(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump4312(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4320(s(1), s(0)))

block4312(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4312(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4320(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4324(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4355
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14690
	nop(PUSH2)
	call(block14690(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4355(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4421(s(0), g(migrationHost), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4421(s(2),s(1),s(0),g(migrationHost), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4421(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4433(s(1), s(0),g(migrationHost), g(owner), caller))

jump4421(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4429(s(1), s(0)))

block4429(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4433(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4442
	nop(PUSH2)
	s(2) = 14741
	nop(PUSH2)
	call(block14741(s(1),s(0),g(migrationHost), g(owner), caller))
	nop(JUMP)

block4442(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4444(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	eq(s(2), 0)
	call(block4456(s(1), s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder))

jump4444(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	neq(s(2), 0)
	call(block4452(s(1), s(0)))

block4444(s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4444(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4452(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4456(s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4509
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tokensHolder
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14871
	nop(PUSH2)
	call(block14871(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block4509(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4511(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block4533(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4511(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block4532(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4511(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 100
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 1
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump4511(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4532(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4533(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4560(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4533(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4559(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4533(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4533(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4559(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4560(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block4614(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4560(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block4567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4560(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4560(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4567(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), 0)
	call(block4590(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4567(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), 0)
	call(block4583(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(10) = s(9)
	nop(DUP1)
	call(jump4567(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4583(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(9) = 50000
	nop(PUSH2)
	s(10) = s(4)
	nop(DUP6)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	call(block4590(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4590(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4590(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4590(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(9), 0)
	call(block4604(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4590(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(9), 0)
	call(block4596(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4596(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 150
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 4609
	nop(PUSH2)
	call(block4609(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4604(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 125
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block4609(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4609(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 4707
	nop(PUSH2)
	call(block4707(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump4614(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block4627(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4614(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block4626(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4614(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 3
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump4614(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4626(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4627(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4654(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4627(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4653(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4627(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4627(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4653(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4654(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4654(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4654(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block4706(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4654(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block4661(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4661(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block4684(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4661(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block4676(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4661(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump4661(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4676(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 115
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 4705
	nop(PUSH2)
	call(block4705(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4684(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 604800
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump4684(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4684(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block4704(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4684(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block4700(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4700(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 110
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block4704(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4704(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4705(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4705(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4706(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4706(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4707(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4707(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block4854(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4707(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block4850(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4707(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	call(jump4707(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4850(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump4854(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block4869(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4854(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block4865(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4854(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	call(jump4854(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4865(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump4869(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), s(9))
	call(block5046(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4869(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), s(9))
	call(block4948(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4869(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	call(jump4869(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4948(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = s(3)
	nop(DUP6)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 15
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(numberOfInvestors)
	nop(SLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(13)
	nop(SSTORE)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = or(s(12), s(11))
	nop(OR)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	call(block5046(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5046(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	l(l1) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(totalSupply)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(totalSupply) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block905(s(1),s(0)))
	nop(JUMP)

block5284(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(votingDeadline)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block930(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5290(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 14
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block995(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5341(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump5341(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5341(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block5491(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5341(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block5421(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

jump5421(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block5448(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump5421(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block5429(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block5421(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump5421(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block5429(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 5491
	nop(PUSH2)
	call(block5491(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5448(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block5462(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5462(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump5462(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump5462(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block5462(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5462(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block5482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block5482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block5491(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5491(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1082(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump5499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5512(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))

jump5499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5511(s(4), s(3), s(2), s(1), s(0)))

block5499(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5499(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5511(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5512(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block5539(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump5512(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block5538(s(5), s(4), s(3), s(2), s(1), s(0)))

block5512(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5512(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5538(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5539(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5539(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5539(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block5551(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump5539(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block5547(s(3), s(2), s(1), s(0)))

block5547(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5551(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1280(s(0)))
	nop(JUMP)

block5785(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5785(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5785(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block5799(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump5785(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block5798(s(3), s(2), s(1), s(0)))

block5798(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5799(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5826(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump5799(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5825(s(4), s(3), s(2), s(1), s(0)))

block5799(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5799(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5825(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5826(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 5875
	nop(PUSH2)
	call(jump5826(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMPI)

jump5826(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	eq(s(4), 1 )
	call(block5875(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump5826(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	neq(s(4), 1 )
	call(block5833(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

block5833(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5833(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5833(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block5846(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump5833(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block5845(s(3), s(2), s(1), s(0)))

block5845(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5846(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5873(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump5846(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5872(s(4), s(3), s(2), s(1), s(0)))

block5846(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5846(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5872(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5873(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block5875(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))

block5875(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5875(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5875(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block5886(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump5875(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block5882(s(2), s(1), s(0)))

block5882(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5886(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump5886(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5886(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	leq(s(4), s(3))
	call(block6107(s(2), s(1), s(0)))

jump5886(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	gt(s(4), s(3))
	call(block5965(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump5965(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block6106(s(2), s(1), s(0)))

jump5965(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block6102(s(2), s(1), s(0)))

block5965(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump5965(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6102(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6106(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block6107(s(2),s(1),s(0)))

block6107(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1303(s(0)))
	nop(JUMP)

block6110(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 31
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1326(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6148(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(numberOfVotes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1413(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6154(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1456(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6160(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(yea)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1499(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6166(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1542(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6172(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block6220(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp))

jump6172(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block6212(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

block6172(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(weiReqFund)
	nop(SLOAD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	call(jump6172(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6212(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 6228
	nop(PUSH2)
	call(block6228(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6220(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	call(block6228(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))

block6228(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	call(block1585(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6233(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(2) = g(numberOfInvestors)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1656(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6239(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1699(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block6258(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block6257(s(5), s(4), s(3), s(2), s(1), s(0)))

block6245(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6245(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6257(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6258(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(8), s(7))
	call(block6285(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6258(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(8), s(7))
	call(block6284(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6258(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump6258(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6284(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6285(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump6285(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6285(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(6), s(5))
	call(block6297(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump6285(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(6), s(5))
	call(block6293(s(4), s(3), s(2), s(1), s(0)))

block6293(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block6297(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 96
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = calldatasize
	nop(CALLDATASIZE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(jump6297(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6297(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(7), s(6))
	call(block6321(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6297(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(7), s(6))
	call(block6317(s(5), s(4), s(3), s(2), s(1), s(0)))

block6317(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump6321(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6399(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6321(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6395(s(5), s(4), s(3), s(2), s(1), s(0)))

block6321(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump6321(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6395(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6399(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump6399(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6399(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6542(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6399(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6538(s(5), s(4), s(3), s(2), s(1), s(0)))

block6538(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6542(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump6542(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6542(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block6681(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6542(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block6677(s(5), s(4), s(3), s(2), s(1), s(0)))

block6677(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6681(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1828(s(0)))
	nop(JUMP)

block7080(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(weiReqFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1851(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7086(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1894(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7105(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7105(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7105(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7118(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7105(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7117(s(3), s(2), s(1), s(0)))

block7117(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7118(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7145(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7118(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7144(s(4), s(3), s(2), s(1), s(0)))

block7118(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7118(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7144(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7145(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 7193
	nop(PUSH2)
	call(jump7145(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7145(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), 1 )
	call(block7193(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7145(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), 1 )
	call(block7152(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7152(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7164(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7152(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7163(s(3), s(2), s(1), s(0)))

block7152(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7152(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7163(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7164(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7164(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7164(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7191(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7164(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7190(s(4), s(3), s(2), s(1), s(0)))

block7190(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7191(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block7193(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

block7193(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7193(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7193(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(3), 0)
	call(block7204(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump7193(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(3), 0)
	call(block7200(s(2), s(1), s(0)))

block7200(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7204(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block7295(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7204(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block7291(s(2), s(1), s(0)))

block7204(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7204(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7291(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7295(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump7295(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7295(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(4), s(3))
	call(block7310(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7295(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(4), s(3))
	call(block7306(s(2), s(1), s(0)))

block7306(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7310(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 7323
	nop(PUSH2)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH1)
	s(6) = 7
	nop(PUSH1)
	s(7) = 15527
	nop(PUSH2)
	call(block15527(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block7323(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1965(s(0)))
	nop(JUMP)

block7326(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 7336
	nop(PUSH2)
	s(5) = 15764
	nop(PUSH2)
	call(block15764(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

jump7336(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block7351(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7336(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block7350(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7336(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7336(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7350(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7351(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump7351(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7351(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block7378(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7351(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block7377(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7377(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7378(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7427
	nop(PUSH2)
	call(jump7378(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7378(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block7427(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7378(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block7385(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

block7385(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7385(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7385(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block7398(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7385(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block7397(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7397(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7398(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block7425(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7398(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block7424(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7398(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump7398(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7424(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7425(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7427(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7427(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(6), 0)
	call(block7438(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump7427(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(6), 0)
	call(block7434(s(5), s(4), s(3), s(2), s(1), s(0)))

block7427(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7427(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7434(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block7438(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 12
	nop(PUSH1)
	s(6) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7458
	nop(PUSH2)
	call(jump7438(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7438(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block7458(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

jump7438(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block7450(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7450(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7458(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

jump7458(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 1 )
	call(block7561(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7458(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 1 )
	call(block7464(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7458(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 7561
	nop(PUSH2)
	call(jump7458(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(JUMPI)

jump7464(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 0)
	call(block7560(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7464(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 0)
	call(block7479(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block7464(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump7464(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7479(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block7560(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

block7560(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block7561(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

block7561(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump7561(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7561(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block7572(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7561(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block7568(s(5), s(4), s(3), s(2), s(1), s(0)))

block7568(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block7572(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	call(jump7572(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7572(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	geq(s(7), s(6))
	call(block8192(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump7572(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	lt(s(7), s(6))
	call(block7585(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

jump7585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(7), 0)
	call(block7603(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

jump7585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(7), 0)
	call(block7596(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block7585(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump7585(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7596(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block7603(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

jump7603(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block8047(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))

jump7603(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block7609(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))

block7603(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	call(jump7603(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7609(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address)=>
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(numberOfInvestors) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 64
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	l(l0) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(9) = l(l3)
	nop(MLOAD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(4)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 7585
	nop(PUSH2)
	call(block7585(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address))
	nop(JUMP)

block8047(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump8047(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8047(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block8063(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8047(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block8059(s(5), s(4), s(3), s(2), s(1), s(0)))

block8059(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 9169
	nop(PUSH2)
	call(block9169(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump8063(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block8076(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8063(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block8075(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8063(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8063(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8075(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8076(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8076(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8076(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block8103(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8076(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block8102(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8102(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8103(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump8103(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8103(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	neq(s(7), s(6))
	call(block8150(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8103(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	eq(s(7), s(6))
	call(block8110(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8110(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8140(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8110(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8139(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8110(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8110(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8139(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8140(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 8187
	nop(PUSH2)
	call(block8187(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

jump8150(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8181(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8150(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8180(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8150(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8150(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8180(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8181(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block8187(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block8187(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 9084
	nop(PUSH2)
	call(block9084(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block8192(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block8193(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8193(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump8193(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8193(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), 0)
	call(block8211(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8193(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), 0)
	call(block8204(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8204(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block8211(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8211(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8211(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8211(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8436(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8211(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8217(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block8217(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	s(6) = 15
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 14
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 15
	nop(PUSH1)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 8193
	nop(PUSH2)
	call(block8193(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(JUMP)

jump8436(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(7), s(6))
	call(block8452(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8436(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(7), s(6))
	call(block8448(s(5), s(4), s(3), s(2), s(1), s(0)))

block8436(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump8436(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8448(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 9169
	nop(PUSH2)
	call(block9169(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block8452(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8452(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8452(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(8), s(7))
	call(block8465(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8452(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(8), s(7))
	call(block8464(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8464(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8465(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8465(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8465(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block8492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8465(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block8491(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8491(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8492(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), s(6))
	call(block8656(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), s(6))
	call(block8499(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))

jump8499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8615(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8611(s(5), s(4), s(3), s(2), s(1), s(0)))

block8499(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump8499(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8611(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block8615(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8615(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8615(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block8646(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8615(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block8645(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8645(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8646(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 9083
	nop(PUSH2)
	call(block9083(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block8656(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = 5
	nop(PUSH1)
	s(8) = g(etherPrice)
	nop(SLOAD)
	s(9) = 1000000000000000000
	nop(PUSH8)
	s(10) = 8
	nop(PUSH1)
	s(10) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump8656(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8656(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(10), 0)
	call(block8742(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8656(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(10), 0)
	call(block8741(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8741(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8742(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block8775(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8742(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block8771(s(5), s(4), s(3), s(2), s(1), s(0)))

block8742(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump8742(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8771(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump8775(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(8), 0)
	call(block8792(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump8775(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(8), 0)
	call(block8791(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8775(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 7
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump8775(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8791(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8792(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	leq(s(12), s(11))
	call(block9077(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump8792(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	gt(s(12), s(11))
	call(block9076(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8792(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 4
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump8792(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9076(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9077(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block9083(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block9083(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(block9084(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block9084(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9084(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9084(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block9149(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump9084(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block9148(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9148(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9149(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG1)
	call(block9169(s(5),s(4),s(3),s(2),s(1),s(0)))

block9169(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2010(s(0)))
	nop(JUMP)

block9175(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump9175(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9175(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9255(s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9175(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9251(s(3), s(2), s(1), s(0)))

block9251(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9255(s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump9255(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9255(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block9268(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9255(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block9267(s(4), s(3), s(2), s(1), s(0)))

block9267(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9268(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9268(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9268(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block9295(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9268(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block9294(s(5), s(4), s(3), s(2), s(1), s(0)))

block9294(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9295(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9308(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9295(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9304(s(3), s(2), s(1), s(0)))

block9295(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump9295(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9304(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9308(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block9321(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9308(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block9320(s(4), s(3), s(2), s(1), s(0)))

block9308(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump9308(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9320(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9321(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9321(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9321(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block9409(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9321(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block9408(s(5), s(4), s(3), s(2), s(1), s(0)))

block9408(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9409(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump9409(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9409(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9421(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump9409(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9417(s(3), s(2), s(1), s(0)))

block9417(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9421(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 23
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump9421(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9421(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block9437(s(3), s(2), s(1), s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))

jump9421(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block9433(s(3), s(2), s(1), s(0)))

block9433(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9437(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), 0)
	call(block9646(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump9437(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), 0)
	call(block9545(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

block9437(s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 24
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(numberOfVotes)
	nop(SLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	g(numberOfVotes) = s(5)
	nop(SSTORE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	call(jump9437(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9545(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block9636(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump9545(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block9635(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9545(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	s(4) = 1
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump9545(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9635(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9636(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 9744
	nop(PUSH2)
	call(block9744(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))
	nop(JUMP)

jump9646(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block9738(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump9646(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block9737(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9646(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump9646(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9737(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9738(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block9744(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))

block9744(s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64553722568993200883443809638226739942484745337245721019031194148412713982255
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2057(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9834(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block9984(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump9834(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block9914(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

block9834(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(standard)
	s(7) = g(standard)
	call(jump9834(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9914(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump9914(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump9914(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block9941(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump9914(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block9922(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l2), l(l1), l(l0)))

block9922(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 9984
	nop(PUSH2)
	call(block9984(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block9941(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block9955(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block9955(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump9955(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump9955(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block9955(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump9955(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block9975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block9975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block9984(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block9984(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2100(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block9992(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 20
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2320(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10029(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump10029(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10029(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	eq(s(8), s(7))
	call(block10120(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10029(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	neq(s(8), s(7))
	call(block10116(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10116(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump10120(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10133(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10120(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10132(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10120(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10120(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10132(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10133(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10133(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10133(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block10160(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10133(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block10159(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10159(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10160(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 10209
	nop(PUSH2)
	call(jump10160(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump10160(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(8), 1 )
	call(block10209(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10160(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(8), 1 )
	call(block10167(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

block10167(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(7) = 2
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10167(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10167(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10180(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10167(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10179(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10179(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10180(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block10207(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10180(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block10206(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10180(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10180(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10206(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10207(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	call(block10209(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

block10209(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump10209(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10209(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block10220(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump10209(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block10216(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10216(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump10220(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block10352(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10220(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block10351(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10220(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = 11
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleStartTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(crowdsaleOwner)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleOwner) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(etherPrice) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 15
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 12
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 7
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalLimitUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump10220(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10351(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10352(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10352(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10352(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block10379(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10352(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block10378(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10378(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10379(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump10379(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10379(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	neq(s(8), s(7))
	call(block10426(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10379(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	eq(s(8), s(7))
	call(block10386(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10386(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10416(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10386(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10415(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10386(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10386(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10415(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10416(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 10463
	nop(PUSH2)
	call(block10463(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

block10426(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10426(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10426(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10457(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump10426(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10456(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10456(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10457(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block10463(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))

jump10463(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block10528(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump10463(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block10527(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10463(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump10463(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10527(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10528(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2447(s(0)))
	nop(JUMP)

block10554(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block2514(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10590(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2608(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10663(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump10663(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10663(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block10678(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump10663(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block10677(s(3), s(2), s(1), s(0)))

block10677(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10678(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump10678(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10678(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block10705(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump10678(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block10704(s(4), s(3), s(2), s(1), s(0)))

block10704(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10705(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	eq(s(4), 1 )
	call(block10754(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump10705(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	neq(s(4), 1 )
	call(block10712(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

block10705(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 10754
	nop(PUSH2)
	call(jump10705(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMPI)

block10712(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump10712(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10712(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block10725(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump10712(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block10724(s(3), s(2), s(1), s(0)))

block10724(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10725(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump10725(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10725(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block10752(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump10725(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block10751(s(4), s(3), s(2), s(1), s(0)))

block10751(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10752(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block10754(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump10754(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block10765(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump10754(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block10761(s(2), s(1), s(0)))

block10754(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump10754(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10761(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block10765(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump10765(s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10765(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	leq(s(4), s(3))
	call(block10784(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump10765(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	gt(s(4), s(3))
	call(block10776(s(2), s(1), s(0), l(l1), l(l0)))

block10776(s(2), s(1), s(0), l(l1), l(l0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 10792
	nop(PUSH2)
	call(block10792(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10784(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block10792(s(2),s(1),s(0), l(l1), l(l0)))

block10792(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2651(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10795(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2694(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10801(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 21
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2781(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10833(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 30
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgent)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2828(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10871(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crowdsaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2915(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10909(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3002(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10946(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump10946(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10946(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block11096(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10946(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block11026(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

jump11026(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11053(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump11026(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11034(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block11026(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump11026(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block11034(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 11096
	nop(PUSH2)
	call(block11096(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block11053(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block11067(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block11067(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump11067(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump11067(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block11067(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump11067(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block11087(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block11087(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block11096(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block11096(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3089(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block11104(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 32
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(externalControllerCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3233(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11142(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3320(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11148(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3363(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11154(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationHost)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3406(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump11192(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(4), s(3))
	call(block11283(s(2), s(1), s(0),g(newOwner)))

jump11192(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(4), s(3))
	call(block11279(s(2), s(1), s(0)))

block11192(s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump11192(s(4),s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11279(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11283(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump11283(s(4),s(3),s(2),s(1),s(0),g(newOwner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11283(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	neq(s(4), s(3))
	call(block11321(s(2), s(1), s(0),g(newOwner)))

jump11283(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	eq(s(4), s(3))
	call(block11317(s(2), s(1), s(0)))

block11317(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11321(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(newOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(newOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3537(s(0)))
	nop(JUMP)

block11389(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11389(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11389(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(6), s(5))
	call(block11402(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump11389(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(6), s(5))
	call(block11401(s(4), s(3), s(2), s(1), s(0)))

block11401(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11402(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump11402(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11402(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block11429(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump11402(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block11428(s(5), s(4), s(3), s(2), s(1), s(0)))

block11428(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11429(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(5), s(4))
	call(block11441(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump11429(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(5), s(4))
	call(block11437(s(3), s(2), s(1), s(0)))

block11429(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump11429(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11437(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block11441(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = calldatasize
	nop(CALLDATASIZE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	call(jump11441(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11441(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(6), s(5))
	call(block11465(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump11441(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(6), s(5))
	call(block11461(s(4), s(3), s(2), s(1), s(0)))

block11461(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump11465(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block11543(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump11465(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block11539(s(4), s(3), s(2), s(1), s(0)))

block11465(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump11465(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11539(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block11543(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump11543(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11543(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block11686(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump11543(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block11682(s(4), s(3), s(2), s(1), s(0)))

block11682(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block11686(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3614(s(0)))
	nop(JUMP)

block11946(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump11946(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11946(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block11966(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump11946(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block11965(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11965(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11966(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block11993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump11966(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block11992(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11966(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11966(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11992(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump11993(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(9), s(8))
	call(block12006(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump11993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(9), s(8))
	call(block12002(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12002(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump12006(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	geq(s(9), s(8))
	call(block12023(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12006(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	lt(s(9), s(8))
	call(block12019(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12006(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 23
	nop(PUSH1)
	s(8) = g(votingDeadline)
	nop(SLOAD)
	s(9) = timestamp
	nop(TIMESTAMP)
	call(jump12006(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12019(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block12023(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block12024(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12024(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), 0)
	call(block12042(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12024(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), 0)
	call(block12035(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block12024(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump12024(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12035(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block12042(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12042(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block12508(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12042(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block12048(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block12042(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump12042(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12048(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfVotes)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(numberOfVotes) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump12048(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12048(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block12274(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12048(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block12273(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12273(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12274(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block12286(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12274(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block12285(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12274(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump12274(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12285(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12286(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump12286(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12286(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block12313(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12286(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block12293(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block12293(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(yea)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(yea) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 12361
	nop(PUSH2)
	call(block12361(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

jump12313(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block12325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12313(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block12324(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12313(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump12313(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12324(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12325(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block12337(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12325(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block12336(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12325(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump12325(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12336(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12337(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block12360(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12337(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block12344(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block12337(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump12337(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12344(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(nay)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(nay) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block12360(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block12360(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block12361(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block12361(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(10) = g(numberOfVotes)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 12024
	nop(PUSH2)
	call(block12024(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

block12508(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	call(jump12508(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12508(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block12528(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12508(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block12520(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block12520(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 13336
	nop(PUSH2)
	call(block13336(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12528(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(8) = g(nay)
	nop(SLOAD)
	s(9) = 25
	nop(PUSH1)
	s(9) = g(yea)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(weiReqFund)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	s(8) = 24
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfVotes) = s(8)
	nop(SSTORE)
	s(8) = s(3)
	nop(DUP5)
	call(jump12528(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12528(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block13258(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump12528(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block12567(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12567(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block12579(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12567(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block12578(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12567(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump12567(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12578(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12579(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump12579(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12579(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block12606(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12579(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block12605(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12605(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12606(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump12606(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12606(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block12710(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12606(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block12613(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(owner), l(l1), l(l0)))

jump12613(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block12705(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump12613(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block12701(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12613(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump12613(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(owner), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12701(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block12705(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 13257
	nop(PUSH2)
	call(block13257(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

jump12710(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block12723(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12710(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block12722(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12710(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump12710(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12722(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12723(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump12723(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12723(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block12750(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump12723(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block12749(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12749(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12750(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block13050(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump12750(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block12757(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))

block12750(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump12750(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12757(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block12972(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))

jump12757(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block12968(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12757(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(migrationAgent)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(migrationAgent) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 30
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgent)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump12757(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12968(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump12972(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block13040(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(state), l(l1), l(l0)))

jump12972(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block13039(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12972(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(migrationAgentCandidate) = s(8)
	nop(SSTORE)
	s(8) = 5
	nop(PUSH1)
	s(9) = 10
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump12972(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13039(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13040(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 13256
	nop(PUSH2)
	call(block13256(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

jump13050(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block13062(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump13050(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block13061(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13050(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump13050(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13061(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13062(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump13062(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13062(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block13089(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump13062(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block13088(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13088(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13089(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block13255(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump13089(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block13096(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

block13089(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump13089(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13096(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 21
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(externalControllerCandidate)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(externalControllerCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(externalControllerCandidate) = s(8)
	nop(SSTORE)
	call(block13255(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block13255(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block13256(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block13256(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block13257(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block13257(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block13258(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block13258(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	s(8) = 75206971871473182631099251223774128077502725353986568989429243973252125172665
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	call(block13336(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block13336(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block3659(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump13345(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(3), s(2))
	call(block13437(s(1), s(0),g(newOwner), g(owner)))

jump13345(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(3), s(2))
	call(block13433(s(1), s(0)))

block13345(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump13345(s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13433(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block13437(s(1), s(0), g(newOwner), g(owner))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(owner) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(newOwner) = s(2)
	nop(SSTORE)
	call(block3706(s(0)))
	nop(JUMP)

block13574(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3729(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13593(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3786(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13631(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 28
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3917(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13663(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump13663(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13663(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block13754(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13663(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block13750(s(3), s(2), s(1), s(0)))

block13750(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump13754(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block13767(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13754(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block13766(s(4), s(3), s(2), s(1), s(0)))

block13754(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump13754(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13766(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13767(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump13767(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13767(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block13794(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13767(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block13793(s(5), s(4), s(3), s(2), s(1), s(0)))

block13793(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13794(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(5), 1 )
	call(block13843(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13794(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(5), 1 )
	call(block13801(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block13794(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 13843
	nop(PUSH2)
	call(jump13794(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMPI)

block13801(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump13801(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13801(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block13814(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13801(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block13813(s(4), s(3), s(2), s(1), s(0)))

block13813(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13814(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block13841(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13814(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block13840(s(5), s(4), s(3), s(2), s(1), s(0)))

block13814(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump13814(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13840(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13841(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block13843(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block13843(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump13843(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13843(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(4), 0)
	call(block13854(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13843(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(4), 0)
	call(block13850(s(3), s(2), s(1), s(0)))

block13850(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13854(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(5) = timestamp
	nop(TIMESTAMP)
	call(jump13854(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13854(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(5), s(4))
	call(block13870(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13854(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(5), s(4))
	call(block13866(s(3), s(2), s(1), s(0)))

block13866(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13870(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump13870(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13870(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(5), s(4))
	call(block13891(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump13870(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(5), s(4))
	call(block13887(s(3), s(2), s(1), s(0)))

block13887(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13891(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(collectedUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 13919
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4511
	nop(PUSH2)
	call(block4511_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block13919(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block4028(s(0)))
	nop(JUMP)

jump13923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block13938(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0)))

jump13923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block13937(s(5), s(4), s(3), s(2), s(1), s(0)))

block13923(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump13923(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13937(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13938(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block13965(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump13938(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block13964(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13938(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump13938(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13964(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13965(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump13965(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13965(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block13977(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump13965(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block13973(s(4), s(3), s(2), s(1), s(0)))

block13973(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block13977(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4127(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14110(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 21
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump14110(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14110(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	neq(s(4), 0)
	call(block14198(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump14110(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	eq(s(4), 0)
	call(block14194(s(3), s(2), s(1), s(0)))

block14194(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block14198(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump14198(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14198(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block14276(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump14198(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block14272(s(3), s(2), s(1), s(0)))

block14272(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump14276(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block14419(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump14276(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block14415(s(3), s(2), s(1), s(0)))

block14276(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump14276(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14415(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block14419(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4224(s(0)))
	nop(JUMP)

block14678(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4247(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14684(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 26
	nop(PUSH1)
	s(2) = g(nay)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4290(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14690(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4355(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14741(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	eq(s(3), s(2))
	call(block14832(s(1), s(0),g(migrationHost)))

jump14741(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	neq(s(3), s(2))
	call(block14828(s(1), s(0)))

block14741(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump14741(s(3),s(2),s(1),s(0),g(migrationHost), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14828(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block14832(s(1), s(0), g(migrationHost))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(migrationHost)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(migrationHost) = s(2)
	nop(SSTORE)
	call(block4442(s(0)))
	nop(JUMP)

jump14871(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block14964(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump14871(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block14960(s(3), s(2), s(1), s(0)))

block14871(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump14871(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14960(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block14964(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump14964(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14964(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block15036(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump14964(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block15032(s(3), s(2), s(1), s(0)))

block15032(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15036(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationHost)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1889567281
	nop(PUSH4)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l8) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 32
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = s(12)
	nop(DUP1)
	s(13) = extcodesize
	nop(EXTCODESIZE)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump15036(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15036(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(14), 0)
	call(block15225(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))

jump15036(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l8), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(14), 0)
	call(block15221(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15221(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

block15225(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = gas
	nop(GAS)
	s(7) = 1
	nop(CALL)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump15225(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15225(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	eq(s(8), 0)
	call(block15245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))

jump15225(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	neq(s(8), 0)
	call(block15236(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block15236(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

jump15245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	geq(s(7), s(6))
	call(block15267(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump15245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	lt(s(7), s(6))
	call(block15263(s(5), s(4), s(3), s(2), s(1), s(0)))

block15245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump15245(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15263(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump15267(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block15301(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump15267(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block15300(s(5), s(4), s(3), s(2), s(1), s(0)))

block15267(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 125
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump15267(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15300(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15301(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4509(s(0)))
	nop(JUMP)

jump15527(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block15540(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15527(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block15539(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15527(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump15527(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15539(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15540(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump15540(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15540(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block15567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15540(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block15566(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15566(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump15567(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block15603(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump15567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block15575(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block15575(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block15603(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump15603(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block15614(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump15603(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block15610(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15603(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump15603(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15610(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block15614(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump15614(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15614(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block15665(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump15614(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block15664(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15664(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15665(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump15665(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15665(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block15739(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump15665(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block15738(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15738(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15739(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block7323(s(2),s(1),s(0)))
	nop(JUMP)

block15764(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block7336(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block4511_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 100
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4511_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4511_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4533_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4511_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4532_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump4511_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4533_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4511_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4532_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4511_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 100
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4511_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4532_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4532_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4533_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump4533_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4533_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block4560_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4533_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block4559_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4533_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4533_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4533_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4560_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4533_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4559_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4559_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4559_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4560_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block4614_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4560_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block4567_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4560_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4560_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4560_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block4614_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4560_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block4567_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4560_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4560_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4567_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(12) = s(11)
	nop(DUP1)
	call(jump4567_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4567_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), 0)
	call(block4590_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4567_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), 0)
	call(block4583_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4567_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(11) = s(10)
	nop(DUP1)
	call(jump4567_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4567_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 0)
	call(block4590_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4567_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 0)
	call(block4583_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4583_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(11) = 50000
	nop(PUSH2)
	s(12) = s(6)
	nop(DUP6)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	call(block4590_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4583_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 50000
	nop(PUSH2)
	s(11) = s(5)
	nop(DUP6)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	call(block4590_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4590_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4590_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4590_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), 0)
	call(block4604_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4590_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), 0)
	call(block4596_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4590_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block4604_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4590_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block4596_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4590_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump4590_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4596_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 150
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 4609
	nop(PUSH2)
	call(block4609_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4596_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 150
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 4609
	nop(PUSH2)
	call(block4609_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4604_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 125
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block4609_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4604_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 125
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block4609_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4609_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 4707
	nop(PUSH2)
	call(block4707_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4609_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 4707
	nop(PUSH2)
	call(block4707_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump4614_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4627_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4614_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4626_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4614_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 3
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4614_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4614_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 3
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump4614_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4614_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block4627_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4614_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block4626_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4626_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4626_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4627_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block4654_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4627_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block4653_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4627_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump4627_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4627_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump4627_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4627_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block4654_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4627_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block4653_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4653_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4653_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4654_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4654_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4654_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block4706_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4654_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block4661_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4654_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump4654_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4654_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block4706_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4654_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block4661_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block4661_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump4661_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4661_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block4684_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4661_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block4676_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4661_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block4684_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump4661_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block4676_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4661_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump4661_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4676_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 115
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 4705
	nop(PUSH2)
	call(block4705_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block4676_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 115
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 4705
	nop(PUSH2)
	call(block4705_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump4684_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block4704_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4684_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block4700_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4684_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 604800
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump4684_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4684_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block4704_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4684_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block4700_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4684_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 604800
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump4684_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4700_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 110
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block4704_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4700_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 110
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block4704_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4704_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4705_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4704_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4705_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4705_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4706_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4705_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4706_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4706_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4707_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4706_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block4707_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4707_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block4854_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4707_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block4850_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4707_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(5)
	nop(DUP10)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l4) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l5) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	call(jump4707_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4707_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block4854_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4707_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block4850_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4707_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump4707_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4850_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block4850_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump4854_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block4869_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4854_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block4865_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4854_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	call(jump4854_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4854_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	call(jump4854_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4854_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block4869_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4854_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block4865_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4865_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block4865_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump4869_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(12), s(11))
	call(block5046_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4869_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(12), s(11))
	call(block4948_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4869_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 13
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	call(jump4869_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4869_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), s(10))
	call(block5046_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump4869_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), s(10))
	call(block4948_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4869_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 13
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump4869_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4948_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = s(5)
	nop(DUP6)
	s(12) = 14
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = 15
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(numberOfInvestors)
	nop(SLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 1
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(15)
	nop(SSTORE)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = or(s(14), s(13))
	nop(OR)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	call(block5046_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block4948_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = s(4)
	nop(DUP6)
	s(11) = 14
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 15
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(numberOfInvestors)
	nop(SLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(14)
	nop(SSTORE)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block5046_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5046_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(1)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(2)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(14) = s(9)
	nop(DUP5)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	l(l1) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG3)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	s(15) = g(totalSupply)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalSupply) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block13919(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5046_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = address
	nop(ADDRESS)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(totalSupply)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(totalSupply) = s(11)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block905_0(s(2),s(1),s(0)))
	nop(JUMP)

block604_0(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump604_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump604_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block620_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump604_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block619_0(s(3), s(2), s(1), s(0)))

block619_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump620_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block647_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump620_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block646_0(s(4), s(3), s(2), s(1), s(0)))

block620_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump620_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block646_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump647_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 1 )
	call(block696_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump647_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 1 )
	call(block654_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block647_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 696
	nop(PUSH2)
	call(jump647_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

block654_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump654_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump654_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block667_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump654_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block666_0(s(3), s(2), s(1), s(0)))

block666_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump667_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block694_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump667_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block693_0(s(4), s(3), s(2), s(1), s(0)))

block667_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump667_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block693_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block694_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block696_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump696_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block707_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump696_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block703_0(s(2), s(1), s(0)))

block696_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump696_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block703_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump707_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(4), s(3))
	call(block723_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump707_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(4), s(3))
	call(block719_0(s(2), s(1), s(0)))

block707_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump707_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block719_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump723_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block749_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump723_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block748_0(s(4), s(3), s(2), s(1), s(0)))

block723_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(etherPrice)
	nop(SLOAD)
	s(5) = s(1)
	nop(DUP4)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump723_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block748_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block749_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 9
	nop(PUSH1)
	s(5) = g(collectedUSD)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	call(jump749_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump749_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block877_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump749_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block767_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump767_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block798_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump767_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block797_0(s(4), s(3), s(2), s(1), s(0)))

block767_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(3) = 9
	nop(PUSH1)
	s(3) = g(collectedUSD)
	nop(SLOAD)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = 1000000000000000000
	nop(PUSH8)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump767_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block797_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block798_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(1)
	nop(DUP4)
	s(6) = callvalue
	nop(CALLVALUE)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump798_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump798_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block863_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump798_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block859_0(s(2), s(1), s(0)))

block859_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block863_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = 9
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 894
	nop(PUSH2)
	call(block894_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block877_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block894_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block894_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 905
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 4511
	nop(PUSH2)
	call(block4511_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block905_0(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

