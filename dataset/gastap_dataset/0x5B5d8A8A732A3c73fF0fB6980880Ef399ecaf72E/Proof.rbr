jump0(s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	lt(s(1), s(0))
	call(block736(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump0(s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	geq(s(1), s(0))
	call(block13(g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block0(g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1041(s(0),g(votingDeadline), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block65(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block13(g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 57600080
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1084(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block76(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block65(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 86896325
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1193(s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block87(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block87(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1337(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block98(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump98(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1414(s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))

jump98(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block109(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block98(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 174662471
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1437(s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block120(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block109(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 230911786
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump120(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1524(s(0),g(numberOfVotes), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block131(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block120(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 243091725
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 274359126
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1567(s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block142(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block142(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 348895501
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1610(s(0),g(yea), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block153(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump153(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1653(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block164(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block153(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1696(s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))

jump164(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block175(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block164(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 434608524
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 452119037
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1767(s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block186(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block186(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump186(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1810(s(0),g(collectedUSD), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block197(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block197(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1853(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump197(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, from, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block208(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

jump208(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block1962(s(0),g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController))

jump208(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block219(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block208(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 798703766
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalController, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block2029(s(0),g(weiReqFund), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block230(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block219(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 803891477
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump230(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block2072(s(0),g(decimals), l(l1), l(l0), callvalue))

jump230(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block241(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))

block230(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	eq(s(2), s(1))
	call(block2121(s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))

jump241(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	neq(s(2), s(1))
	call(block252(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block241(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1026513882
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, weiReqFund, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2166(s(0),g(proofImpl), l(l6), l(l1), l(l0), caller, callvalue, extcodesize, gas, returndatasize))

jump252(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block263(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block252(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1184324506
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2217(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))

jump263(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block274(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block263(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1233546944
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, investorsToProcess, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump274(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2262(s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))

jump274(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block285(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block274(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1268735128
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, inSupport, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2329(s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))

jump285(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block296(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block285(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump296(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2473(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump296(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block307(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block296(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2592(s(0),g(proofImpl), g(owner), calldatasize, caller, callvalue, proofImpl))

jump307(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block318(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))

block307(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1782548980
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, proofImpl, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block318(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1868050891
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2659(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump318(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, extcodesize, externalControllerCandidate, gas, hash, minimalSuccessUSD, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, totalLimitUSD, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block329(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump329(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2766(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump329(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block340(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block329(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1870383550
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block340(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump340(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2860(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))

jump340(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block351(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block351(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1977810789
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block2947(s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp))

jump351(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block362(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump362(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3014(s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))

jump362(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block373(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block362(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2049348175
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3057(s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block384(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block373(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2066067146
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3100(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump384(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block395(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block384(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2120681183
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block395(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2200493005
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3191(s(0),g(migrationAgent), l(l1), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block406(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block406(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2237027717
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump406(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3278(s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block417(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block417(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2270216919
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3365(s(0),g(priceInTokens), l(l1), l(l0), callvalue))

jump417(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block428(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block428(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3408(s(0),g(owner), l(l1), l(l0), callvalue))

jump428(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block439(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump439(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3495(s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp))

jump439(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block450(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block439(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2391700987
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, externalControllerCandidate, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3562(s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize))

jump450(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block461(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block450(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2413013888
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3585(s(0),g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens))

jump461(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block472(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block461(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2444752365
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, priceInTokens, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump472(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3630(s(0),g(proofImpl), l(l1), l(l0), callvalue))

jump472(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block483(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block472(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2456529586
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3717(s(0),g(totalMigrated), l(l1), l(l0), callvalue))

jump483(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block494(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block483(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2510353899
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(totalMigrated), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3760(s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))

jump494(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block505(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block494(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block505(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514067504
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3904(s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))

jump505(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block516(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block516(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2542402010
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block3991(s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))

jump516(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block527(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block527(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump527(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block4034(s(0),g(etherPrice), l(l1), l(l0), callvalue))

jump527(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block538(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block538(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2762537194
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump538(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block4077(s(0),g(migrationHost), l(l1), l(l0), callvalue))

jump538(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block549(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

jump549(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block4164(s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))

jump549(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block560(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block549(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block4231(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump560(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block571(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))

block571(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2884092046
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump571(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	eq(s(2), s(1))
	call(block4308(s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))

jump571(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, votesToProcess, who)=>
	neq(s(2), s(1))
	call(block582(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who))

block582(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3181079942
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4377(s(0),g(newOwner), g(owner), caller, callvalue))

jump582(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block593(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who))

block593(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4400(s(0),g(state), l(l1), l(l0), callvalue))

jump593(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block604(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who))

jump604(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4457(s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, hash, returndatasize, swype))

jump604(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block615(s(0),g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block604(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3278152285
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, hash, owner, returndatasize, spender, swype, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block615(s(0), g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3572374928
	nop(PUSH4)
	call(jump615(s(2),s(1),s(0),g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump615(s(2), s(1), s(0), g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4520(s(0),g(newOwner), l(l1), l(l0), callvalue))

jump615(s(2), s(1), s(0), g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(newOwner), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block626(s(0),g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

jump626(s(2), s(1), s(0), g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4607(s(0),g(teamFee), l(l1), l(l0), callvalue))

jump626(s(2), s(1), s(0), g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block637(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block626(s(0), g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3620294397
	nop(PUSH4)
	call(jump626(s(2),s(1),s(0),g(teamFee), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4650(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump637(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block648(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))

block637(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3636458917
	nop(PUSH4)
	call(jump637(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump648(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	eq(s(2), s(1))
	call(block4751(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))

jump648(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	neq(s(2), s(1))
	call(block659(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))

block648(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3709204883
	nop(PUSH4)
	call(jump648(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value, valueUSD, who))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block659(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump659(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump659(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4828(s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump659(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, owner, returndatasize, spender, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block670(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))

jump670(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	eq(s(2), s(1))
	call(block4947(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))

jump670(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	neq(s(2), s(1))
	call(block681(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block670(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3806082528
	nop(PUSH4)
	call(jump670(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, to, tokensHolder, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump681(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block5024(s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))

jump681(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block692(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block681(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3808182813
	nop(PUSH4)
	call(jump681(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump692(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block5067(s(0),g(nay), l(l1), l(l0), callvalue))

jump692(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block703(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block692(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3929006498
	nop(PUSH4)
	call(jump692(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump703(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block5110(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump703(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block714(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block703(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4159689736
	nop(PUSH4)
	call(jump703(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump714(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block5219(s(0),g(migrationHost), g(owner), caller, callvalue))

jump714(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block725(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))

block714(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4172968727
	nop(PUSH4)
	call(jump714(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block725(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4184780803
	nop(PUSH4)
	call(jump725(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump725(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	eq(s(2), s(1))
	call(block5242(s(0),g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))

jump725(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp, tokensHolder)=>
	neq(s(2), s(1))
	call(block736_0(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump736(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block752(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump736(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block751(s(2), s(1), s(0)))

block736(g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump736(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block751(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block752(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump752(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump752(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block779(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump752(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block778(s(3), s(2), s(1), s(0)))

block778(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block779(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 828
	nop(PUSH2)
	call(jump779(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

jump779(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 1 )
	call(block828(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump779(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 1 )
	call(block786(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block786(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(2) = 3
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump786(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump786(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block799(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump786(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block798(s(2), s(1), s(0)))

block798(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block799(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(state)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump799(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump799(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block826(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump799(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block825(s(3), s(2), s(1), s(0)))

block825(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block826(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	call(block828(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block828(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump828(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump828(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block839(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump828(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block835(s(1), s(0)))

block835(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block839(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = timestamp
	nop(TIMESTAMP)
	call(jump839(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump839(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(3), s(2))
	call(block855(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump839(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(3), s(2))
	call(block851(s(1), s(0)))

block851(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump855(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block881(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump855(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block880(s(3), s(2), s(1), s(0)))

block855(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = 1000000000000000000
	nop(PUSH8)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = s(0)
	nop(DUP4)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump855(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block880(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block881(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 9
	nop(PUSH1)
	s(4) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(4)+s(3)
	nop(ADD)
	call(jump881(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump881(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(3), s(2))
	call(block1009(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump881(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(3), s(2))
	call(block899(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump899(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 0)
	call(block930(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump899(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 0)
	call(block929(s(3), s(2), s(1), s(0)))

block899(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	nop(DUP2)
	call(jump899(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block929(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump930(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block995(s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump930(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block991(s(1), s(0)))

block930(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = s(0)
	s(0) = s(2)
	s(2) = s(3)
	nop(SWAP2)
	nop(POP)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 3000000
	nop(PUSH3)
	s(4) = s(0)
	nop(DUP4)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump930(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block991(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block995(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = 9
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 1026
	nop(PUSH2)
	call(block1026(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block1009(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 9
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(collectedUSD) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block1026(s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block1026(s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 1037
	nop(PUSH2)
	s(3) = caller
	nop(CALLER)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(0)
	nop(DUP5)
	s(6) = 5309
	nop(PUSH2)
	call(block5309(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block1037(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

jump1041(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1053(s(1), s(0),g(votingDeadline), l(l1), l(l0)))

jump1041(s(2), s(1), s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1049(s(1), s(0)))

block1041(s(0), g(votingDeadline), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1041(s(2),s(1),s(0),g(votingDeadline), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1049(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1053(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1062
	nop(PUSH2)
	s(2) = 6082
	nop(PUSH2)
	call(block6082(s(1),s(0),g(votingDeadline), l(l1), l(l0)))
	nop(JUMP)

block1062(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1084(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1096(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump1084(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1092(s(1), s(0)))

block1084(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1084(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1092(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1096(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1127
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6088
	nop(PUSH2)
	call(block6088(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block1127(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1193(s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1193(s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1193(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1205(s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

jump1193(s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1201(s(1), s(0)))

block1201(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1205(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1214
	nop(PUSH2)
	s(2) = 6139
	nop(PUSH2)
	call(block6139(s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1214(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1251(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block1251(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1251(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1251(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1278(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1251(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1260(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block1260(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1251
	nop(PUSH2)
	call(block1251(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block1278(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1278(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1278(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1323(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1278(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1298(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1298(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1323(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1323(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1337(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1349(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value))

jump1337(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1345(s(1), s(0)))

block1337(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1337(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1345(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1349(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1412
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 6297
	nop(PUSH2)
	call(block6297(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block1412(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1414(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block1426(s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump1414(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block1422(s(1), s(0)))

block1414(s(0), g(state), l(l5), l(l4), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1414(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1422(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1426(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1435
	nop(PUSH2)
	s(2) = 6583
	nop(PUSH2)
	call(block6583(s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMP)

block1435(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1437(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1449(s(1), s(0),g(migrationAgentCandidate), l(l1), l(l0)))

jump1437(s(2), s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1445(s(1), s(0)))

block1437(s(0), g(migrationAgentCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1437(s(2),s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1445(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1449(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1458
	nop(PUSH2)
	s(2) = 6908
	nop(PUSH2)
	call(block6908(s(1),s(0),g(migrationAgentCandidate), l(l1), l(l0)))
	nop(JUMP)

block1458(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1524(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1536(s(1), s(0),g(numberOfVotes), l(l1), l(l0)))

jump1524(s(2), s(1), s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1532(s(1), s(0)))

block1524(s(0), g(numberOfVotes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1524(s(2),s(1),s(0),g(numberOfVotes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1532(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1536(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1545
	nop(PUSH2)
	s(2) = 6946
	nop(PUSH2)
	call(block6946(s(1),s(0),g(numberOfVotes), l(l1), l(l0)))
	nop(JUMP)

block1545(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1567(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1579(s(1), s(0),g(minimalSuccessUSD), l(l1), l(l0)))

jump1567(s(2), s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1575(s(1), s(0)))

block1567(s(0), g(minimalSuccessUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1567(s(2),s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1575(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1579(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1588
	nop(PUSH2)
	s(2) = 6952
	nop(PUSH2)
	call(block6952(s(1),s(0),g(minimalSuccessUSD), l(l1), l(l0)))
	nop(JUMP)

block1588(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1610(s(0), g(yea), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1610(s(2),s(1),s(0),g(yea), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1610(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1622(s(1), s(0),g(yea), l(l1), l(l0)))

jump1610(s(2), s(1), s(0), g(yea), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1618(s(1), s(0)))

block1618(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1622(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1631
	nop(PUSH2)
	s(2) = 6958
	nop(PUSH2)
	call(block6958(s(1),s(0),g(yea), l(l1), l(l0)))
	nop(JUMP)

block1631(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1653(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1653(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1653(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1665(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1653(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1661(s(1), s(0)))

block1661(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1665(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1674
	nop(PUSH2)
	s(2) = 6964
	nop(PUSH2)
	call(block6964(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1674(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1696(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block1708(s(1), s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))

jump1696(s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block1704(s(1), s(0)))

block1696(s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1696(s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1704(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1708(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1717
	nop(PUSH2)
	s(2) = 6970
	nop(PUSH2)
	call(block6970(s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block1717(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(1)
	nop(DUP5)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1717(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1717(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block1745(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump1717(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block1744(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1744(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1745(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1767(s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1767(s(2),s(1),s(0),g(numberOfInvestors), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1767(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1779(s(1), s(0),g(numberOfInvestors), l(l1), l(l0)))

jump1767(s(2), s(1), s(0), g(numberOfInvestors), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1775(s(1), s(0)))

block1775(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1779(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1788
	nop(PUSH2)
	s(2) = 7031
	nop(PUSH2)
	call(block7031(s(1),s(0),g(numberOfInvestors), l(l1), l(l0)))
	nop(JUMP)

block1788(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1810(s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1810(s(2),s(1),s(0),g(collectedUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1810(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1822(s(1), s(0),g(collectedUSD), l(l1), l(l0)))

jump1810(s(2), s(1), s(0), g(collectedUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1818(s(1), s(0)))

block1818(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1822(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1831
	nop(PUSH2)
	s(2) = 7037
	nop(PUSH2)
	call(block7037(s(1),s(0),g(collectedUSD), l(l1), l(l0)))
	nop(JUMP)

block1831(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1853(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1853(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1853(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1865(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1853(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1861(s(1), s(0)))

block1861(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1865(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1960
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 7043
	nop(PUSH2)
	call(block7043(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block1960(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1962(s(0), g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1962(s(2),s(1),s(0),g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1962(s(2), s(1), s(0), g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController)=>
	eq(s(2), 0)
	call(block1974(s(1), s(0),g(owner), l(l5), l(l4), calldatasize, caller, externalController))

jump1962(s(2), s(1), s(0), g(owner), l(l5), l(l4), calldatasize, caller, callvalue, externalController)=>
	neq(s(2), 0)
	call(block1970(s(1), s(0)))

block1970(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1974(s(1), s(0), g(owner), l(l5), l(l4), calldatasize, caller, externalController)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2027
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = externalController
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7878
	nop(PUSH2)
	call(block7878(s(2),s(1),s(0),g(owner), l(l5), l(l4), caller))
	nop(JUMP)

block2027(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2029(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2041(s(1), s(0),g(weiReqFund), l(l1), l(l0)))

jump2029(s(2), s(1), s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2037(s(1), s(0)))

block2029(s(0), g(weiReqFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2029(s(2),s(1),s(0),g(weiReqFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2037(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2041(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2050
	nop(PUSH2)
	s(2) = 8051
	nop(PUSH2)
	call(block8051(s(1),s(0),g(weiReqFund), l(l1), l(l0)))
	nop(JUMP)

block2050(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2072(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2084(s(1), s(0),g(decimals), l(l1), l(l0)))

jump2072(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2080(s(1), s(0)))

block2072(s(0), g(decimals), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2072(s(2),s(1),s(0),g(decimals), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2080(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2084(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2093
	nop(PUSH2)
	s(2) = 8057
	nop(PUSH2)
	call(block8057(s(1),s(0),g(decimals), l(l1), l(l0)))
	nop(JUMP)

block2093(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2121(s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2121(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2121(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	eq(s(2), 0)
	call(block2133(s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund))

jump2121(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	neq(s(2), 0)
	call(block2129(s(1), s(0)))

block2129(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2133(s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2164
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = weiReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8076
	nop(PUSH2)
	call(block8076(s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2164(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2166(s(2), s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, callvalue, extcodesize, gas, returndatasize)=>
	eq(s(2), 0)
	call(block2178(s(1), s(0),g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump2166(s(2), s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, callvalue, extcodesize, gas, returndatasize)=>
	neq(s(2), 0)
	call(block2174(s(1), s(0)))

block2166(s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, callvalue, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2166(s(2),s(1),s(0),g(proofImpl), l(l6), l(l1), l(l0), caller, callvalue, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2174(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2178(s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2187
	nop(PUSH2)
	s(2) = 8297
	nop(PUSH2)
	call(block8297(s(1),s(0),g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block2187(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 65535
	nop(PUSH2)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 65535
	nop(PUSH2)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2217(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2217(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2217(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	eq(s(2), 0)
	call(block2229(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp))

jump2217(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investorsToProcess, timestamp)=>
	neq(s(2), 0)
	call(block2225(s(1), s(0)))

block2225(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2229(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2260
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investorsToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8623
	nop(PUSH2)
	call(block8623(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2260(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2262(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	eq(s(2), 0)
	call(block2274(s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp))

jump2262(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	neq(s(2), 0)
	call(block2270(s(1), s(0)))

block2262(s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2262(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2270(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2274(s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, inSupport, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2307
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inSupport
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10472
	nop(PUSH2)
	call(block10472(s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2307(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2329(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2341(s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

jump2329(s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2337(s(1), s(0)))

block2329(s(0), g(standard), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2329(s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2337(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2341(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2350
	nop(PUSH2)
	s(2) = 11131
	nop(PUSH2)
	call(block11131(s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2350(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2387(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block2387(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2387(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2387(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block2414(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2387(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block2396(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block2396(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2387
	nop(PUSH2)
	call(block2387(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block2414(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2414(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2414(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2459(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2414(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2434(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2434(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2459(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2459(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2473(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2473(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2473(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2485(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump2473(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2481(s(1), s(0)))

block2481(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2485(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2570
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 11289
	nop(PUSH2)
	call(block11289(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2570(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2592(s(0), g(proofImpl), g(owner), calldatasize, caller, callvalue, proofImpl)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2592(s(2),s(1),s(0),g(proofImpl), g(owner), calldatasize, caller, callvalue, proofImpl))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2592(s(2), s(1), s(0), g(proofImpl), g(owner), calldatasize, caller, callvalue, proofImpl)=>
	eq(s(2), 0)
	call(block2604(s(1), s(0),g(proofImpl), g(owner), calldatasize, caller, proofImpl))

jump2592(s(2), s(1), s(0), g(proofImpl), g(owner), calldatasize, caller, callvalue, proofImpl)=>
	neq(s(2), 0)
	call(block2600(s(1), s(0)))

block2600(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2604(s(1), s(0), g(proofImpl), g(owner), calldatasize, caller, proofImpl)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2657
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = proofImpl
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11326
	nop(PUSH2)
	call(block11326(s(2),s(1),s(0),g(proofImpl), g(owner), caller))
	nop(JUMP)

block2657(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2659(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	eq(s(2), 0)
	call(block2671(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))

jump2659(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	neq(s(2), 0)
	call(block2667(s(1), s(0)))

block2659(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2659(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2667(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2671(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), calldatasize, caller, crowdsaleDurationDays, crowdsaleOwner, etherPrice, minimalSuccessUSD, timestamp, totalLimitUSD)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2764
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crowdsaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = crowdsaleDurationDays
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = totalLimitUSD
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = minimalSuccessUSD
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = etherPrice
	nop(CALLDATALOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 11485
	nop(PUSH2)
	call(block11485(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2764(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2766(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2778(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2766(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2774(s(1), s(0)))

block2766(s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2766(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2774(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2778(s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2831
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12010
	nop(PUSH2)
	call(block12010(s(2),s(1),s(0), l(l5), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2831(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2860(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	eq(s(2), 0)
	call(block2872(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who))

jump2860(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	neq(s(2), 0)
	call(block2868(s(1), s(0)))

block2860(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2860(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2868(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2872(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2925
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12046
	nop(PUSH2)
	call(block12046(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2925(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2947(s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2947(s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2947(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2959(s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, timestamp))

jump2947(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2955(s(1), s(0)))

block2955(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2959(s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, agent, balance, calldatasize, caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3012
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = agent
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12119
	nop(PUSH2)
	call(block12119(s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block3012(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3014(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block3026(s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump3014(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block3022(s(1), s(0)))

block3014(s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3014(s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3022(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3026(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3035
	nop(PUSH2)
	s(2) = 12397
	nop(PUSH2)
	call(block12397(s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMP)

block3035(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump3057(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3069(s(1), s(0),g(totalLimitUSD), l(l1), l(l0)))

jump3057(s(2), s(1), s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3065(s(1), s(0)))

block3057(s(0), g(totalLimitUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3057(s(2),s(1),s(0),g(totalLimitUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3065(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3069(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3078
	nop(PUSH2)
	s(2) = 12529
	nop(PUSH2)
	call(block12529(s(1),s(0),g(totalLimitUSD), l(l1), l(l0)))
	nop(JUMP)

block3078(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3100(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3100(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3100(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3112(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump3100(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3108(s(1), s(0)))

block3108(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3112(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3165
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12535
	nop(PUSH2)
	call(block12535(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block3165(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3191(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3203(s(1), s(0),g(migrationAgent), l(l1), l(l0)))

jump3191(s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3199(s(1), s(0)))

block3191(s(0), g(migrationAgent), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3191(s(2),s(1),s(0),g(migrationAgent), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3199(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3203(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3212
	nop(PUSH2)
	s(2) = 12567
	nop(PUSH2)
	call(block12567(s(1),s(0),g(migrationAgent), l(l1), l(l0)))
	nop(JUMP)

block3212(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3278(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3290(s(1), s(0),g(crowdsaleOwner), l(l1), l(l0)))

jump3278(s(2), s(1), s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3286(s(1), s(0)))

block3278(s(0), g(crowdsaleOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3278(s(2),s(1),s(0),g(crowdsaleOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3286(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3290(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3299
	nop(PUSH2)
	s(2) = 12605
	nop(PUSH2)
	call(block12605(s(1),s(0),g(crowdsaleOwner), l(l1), l(l0)))
	nop(JUMP)

block3299(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3365(s(0), g(priceInTokens), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3365(s(2),s(1),s(0),g(priceInTokens), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3365(s(2), s(1), s(0), g(priceInTokens), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3377(s(1), s(0),g(priceInTokens), l(l1), l(l0)))

jump3365(s(2), s(1), s(0), g(priceInTokens), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3373(s(1), s(0)))

block3373(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3377(s(1), s(0), g(priceInTokens), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3386
	nop(PUSH2)
	s(2) = 12643
	nop(PUSH2)
	call(block12643(s(1),s(0),g(priceInTokens), l(l1), l(l0)))
	nop(JUMP)

block3386(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3408(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3408(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3408(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3420(s(1), s(0),g(owner), l(l1), l(l0)))

jump3408(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3416(s(1), s(0)))

block3416(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3420(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3429
	nop(PUSH2)
	s(2) = 12649
	nop(PUSH2)
	call(block12649(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3429(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3495(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp)=>
	eq(s(2), 0)
	call(block3507(s(1), s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, externalControllerCandidate, timestamp))

jump3495(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp)=>
	neq(s(2), 0)
	call(block3503(s(1), s(0)))

block3495(s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3495(s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, externalControllerCandidate, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3503(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3507(s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, externalControllerCandidate, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3560
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = externalControllerCandidate
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12686
	nop(PUSH2)
	call(block12686(s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block3560(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3562(s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3562(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3562(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	eq(s(2), 0)
	call(block3574(s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump3562(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, extcodesize, gas, returndatasize)=>
	neq(s(2), 0)
	call(block3570(s(1), s(0)))

block3570(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3574(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3583
	nop(PUSH2)
	s(2) = 12897
	nop(PUSH2)
	call(block12897(s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block3583(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3585(s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3585(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3585(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens)=>
	eq(s(2), 0)
	call(block3597(s(1), s(0),g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, priceInTokens))

jump3585(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens)=>
	neq(s(2), 0)
	call(block3593(s(1), s(0)))

block3593(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3597(s(1), s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, priceInTokens)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3628
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = priceInTokens
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13585
	nop(PUSH2)
	call(block13585(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(owner), caller))
	nop(JUMP)

block3628(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3630(s(0), g(proofImpl), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3630(s(2),s(1),s(0),g(proofImpl), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3630(s(2), s(1), s(0), g(proofImpl), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3642(s(1), s(0),g(proofImpl), l(l1), l(l0)))

jump3630(s(2), s(1), s(0), g(proofImpl), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3638(s(1), s(0)))

block3638(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3642(s(1), s(0), g(proofImpl), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3651
	nop(PUSH2)
	s(2) = 13745
	nop(PUSH2)
	call(block13745(s(1),s(0),g(proofImpl), l(l1), l(l0)))
	nop(JUMP)

block3651(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3717(s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3717(s(2),s(1),s(0),g(totalMigrated), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3717(s(2), s(1), s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3729(s(1), s(0),g(totalMigrated), l(l1), l(l0)))

jump3717(s(2), s(1), s(0), g(totalMigrated), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3725(s(1), s(0)))

block3725(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3729(s(1), s(0), g(totalMigrated), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3738
	nop(PUSH2)
	s(2) = 13783
	nop(PUSH2)
	call(block13783(s(1),s(0),g(totalMigrated), l(l1), l(l0)))
	nop(JUMP)

block3738(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3760(s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3760(s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3760(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3772(s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

jump3760(s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3768(s(1), s(0)))

block3768(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3772(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3781
	nop(PUSH2)
	s(2) = 13789
	nop(PUSH2)
	call(block13789(s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3781(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3818(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump3818(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block3845(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3818(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block3827(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block3818(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3818(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3827(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3818
	nop(PUSH2)
	call(block3818(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump3845(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block3890(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3845(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block3865(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3845(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3845(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3865(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3890(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3890(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3904(s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3904(s(2),s(1),s(0),g(externalControllerCandidate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3904(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3916(s(1), s(0),g(externalControllerCandidate), l(l1), l(l0)))

jump3904(s(2), s(1), s(0), g(externalControllerCandidate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3912(s(1), s(0)))

block3912(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3916(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3925
	nop(PUSH2)
	s(2) = 13947
	nop(PUSH2)
	call(block13947(s(1),s(0),g(externalControllerCandidate), l(l1), l(l0)))
	nop(JUMP)

block3925(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3991(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4003(s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0)))

jump3991(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3999(s(1), s(0)))

block3991(s(0), g(crowdsaleFinishTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3991(s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3999(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4003(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4012
	nop(PUSH2)
	s(2) = 13985
	nop(PUSH2)
	call(block13985(s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0)))
	nop(JUMP)

block4012(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4034(s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4034(s(2),s(1),s(0),g(etherPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4034(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4046(s(1), s(0),g(etherPrice), l(l1), l(l0)))

jump4034(s(2), s(1), s(0), g(etherPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4042(s(1), s(0)))

block4042(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4046(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4055
	nop(PUSH2)
	s(2) = 13991
	nop(PUSH2)
	call(block13991(s(1),s(0),g(etherPrice), l(l1), l(l0)))
	nop(JUMP)

block4055(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4077(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4089(s(1), s(0),g(migrationHost), l(l1), l(l0)))

jump4077(s(2), s(1), s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4085(s(1), s(0)))

block4077(s(0), g(migrationHost), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4077(s(2),s(1),s(0),g(migrationHost), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4085(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4089(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4098
	nop(PUSH2)
	s(2) = 13997
	nop(PUSH2)
	call(block13997(s(1),s(0),g(migrationHost), l(l1), l(l0)))
	nop(JUMP)

block4098(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4164(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block4176(s(1), s(0),g(newOwner), g(owner), calldatasize, caller, owner))

jump4164(s(2), s(1), s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block4172(s(1), s(0)))

block4164(s(0), g(newOwner), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4164(s(2),s(1),s(0),g(newOwner), g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4172(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4176(s(1), s(0), g(newOwner), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4229
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14035
	nop(PUSH2)
	call(block14035(s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block4229(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4231(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4243(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value))

jump4231(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4239(s(1), s(0)))

block4231(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4231(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4239(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4243(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4306
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14232
	nop(PUSH2)
	call(block14232(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(JUMP)

block4306(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4308(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block4320(s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess))

jump4308(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block4316(s(1), s(0)))

block4308(s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4308(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4316(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4320(s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4351
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = votesToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14789
	nop(PUSH2)
	call(block14789(s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block4351(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4377(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4389(s(1), s(0),g(newOwner), g(owner), caller))

jump4377(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4385(s(1), s(0)))

block4377(s(0), g(newOwner), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4377(s(2),s(1),s(0),g(newOwner), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4385(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4389(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4398
	nop(PUSH2)
	s(2) = 16188
	nop(PUSH2)
	call(block16188(s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block4398(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4400(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4412(s(1), s(0),g(state), l(l1), l(l0)))

jump4400(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4408(s(1), s(0)))

block4400(s(0), g(state), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4400(s(2),s(1),s(0),g(state), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4408(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4412(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4421
	nop(PUSH2)
	s(2) = 16417
	nop(PUSH2)
	call(block16417(s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

jump4421(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block4437(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump4421(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block4436(s(5), s(4), s(3), s(2), s(1), s(0)))

block4421(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4421(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4436(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4437(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4457(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, hash, returndatasize, swype)=>
	eq(s(2), 0)
	call(block4469(s(1), s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, hash, returndatasize, swype))

jump4457(s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, hash, returndatasize, swype)=>
	neq(s(2), 0)
	call(block4465(s(1), s(0)))

block4457(s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, hash, returndatasize, swype)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4457(s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, gas, hash, returndatasize, swype))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4465(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4469(s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, hash, returndatasize, swype)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4518
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = swype
	nop(CALLDATALOAD)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = hash
	nop(CALLDATALOAD)
	s(7) = 0
	nop(PUSH1)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16436
	nop(PUSH2)
	call(block16436(s(3),s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block4518(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4520(s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4520(s(2),s(1),s(0),g(newOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4520(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4532(s(1), s(0),g(newOwner), l(l1), l(l0)))

jump4520(s(2), s(1), s(0), g(newOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4528(s(1), s(0)))

block4528(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4532(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4541
	nop(PUSH2)
	s(2) = 16814
	nop(PUSH2)
	call(block16814(s(1),s(0),g(newOwner), l(l1), l(l0)))
	nop(JUMP)

block4541(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4607(s(0), g(teamFee), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4607(s(2),s(1),s(0),g(teamFee), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4607(s(2), s(1), s(0), g(teamFee), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4619(s(1), s(0),g(teamFee), l(l1), l(l0)))

jump4607(s(2), s(1), s(0), g(teamFee), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4615(s(1), s(0)))

block4615(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4619(s(1), s(0), g(teamFee), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4628
	nop(PUSH2)
	s(2) = 16852
	nop(PUSH2)
	call(block16852(s(1),s(0),g(teamFee), l(l1), l(l0)))
	nop(JUMP)

block4628(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4650(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4662(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump4650(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4658(s(1), s(0)))

block4650(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4650(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4658(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4662(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4715
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16858
	nop(PUSH2)
	call(block16858(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4715(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4715(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4715(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block4731(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump4715(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block4730(s(5), s(4), s(3), s(2), s(1), s(0)))

block4730(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4731(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4751(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	eq(s(2), 0)
	call(block4763(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who))

jump4751(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	neq(s(2), 0)
	call(block4759(s(1), s(0)))

block4751(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4751(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, timestamp, valueUSD, who))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4759(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4763(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, timestamp, valueUSD, who)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4826
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = who
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = valueUSD
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16890
	nop(PUSH2)
	call(block16890(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block4826(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4828(s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4828(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4828(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4840(s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender))

jump4828(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4836(s(1), s(0)))

block4836(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4840(s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4925
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 17150
	nop(PUSH2)
	call(block17150(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4925(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4947(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4959(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value))

jump4947(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4955(s(1), s(0)))

block4947(s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4947(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4955(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4959(s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5022
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 17337
	nop(PUSH2)
	call(block17337(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(JUMP)

block5022(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block5024(s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5024(s(2),s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5024(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block5036(s(1), s(0),g(crowdsaleStartTime), l(l1), l(l0)))

jump5024(s(2), s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block5032(s(1), s(0)))

block5032(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5036(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5045
	nop(PUSH2)
	s(2) = 17905
	nop(PUSH2)
	call(block17905(s(1),s(0),g(crowdsaleStartTime), l(l1), l(l0)))
	nop(JUMP)

block5045(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump5067(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block5079(s(1), s(0),g(nay), l(l1), l(l0)))

jump5067(s(2), s(1), s(0), g(nay), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block5075(s(1), s(0)))

block5067(s(0), g(nay), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5067(s(2),s(1),s(0),g(nay), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5075(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5079(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5088
	nop(PUSH2)
	s(2) = 17911
	nop(PUSH2)
	call(block17911(s(1),s(0),g(nay), l(l1), l(l0)))
	nop(JUMP)

block5088(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump5110(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block5122(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump5110(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block5118(s(1), s(0)))

block5110(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5110(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5118(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5122(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5153
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 17917
	nop(PUSH2)
	call(block17917(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block5153(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump5219(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block5231(s(1), s(0),g(migrationHost), g(owner), caller))

jump5219(s(2), s(1), s(0), g(migrationHost), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block5227(s(1), s(0)))

block5219(s(0), g(migrationHost), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5219(s(2),s(1),s(0),g(migrationHost), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5227(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5231(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5240
	nop(PUSH2)
	s(2) = 17968
	nop(PUSH2)
	call(block17968(s(1),s(0),g(migrationHost), g(owner), caller))
	nop(JUMP)

block5240(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump5242(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	eq(s(2), 0)
	call(block5254(s(1), s(0),g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder))

jump5242(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	neq(s(2), 0)
	call(block5250(s(1), s(0)))

block5242(s(0), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5242(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, tokensHolder))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5250(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5254(s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, tokensHolder)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5307
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tokensHolder
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 18098
	nop(PUSH2)
	call(block18098(s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block5307(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump5309(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block5331(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5309(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block5330(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5309(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 100
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 1
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump5309(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5330(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5331(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block5358(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5331(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block5357(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5331(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump5331(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5357(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5358(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block5412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5358(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block5365(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block5358(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump5358(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5365(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), 0)
	call(block5388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5365(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), 0)
	call(block5381(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5365(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(10) = s(9)
	nop(DUP1)
	call(jump5365(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5381(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(9) = 50000
	nop(PUSH2)
	s(10) = s(4)
	nop(DUP6)
	s(9) = lt(s(10), s(9))
	nop(LT)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	call(block5388(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump5388(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(9), 0)
	call(block5402(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(9), 0)
	call(block5394(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5394(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 150
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 5407
	nop(PUSH2)
	call(block5407(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block5402(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 125
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block5407(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5407(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 5505
	nop(PUSH2)
	call(block5505(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump5412(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block5425(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5412(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block5424(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 3
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump5412(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5424(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5425(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block5452(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5425(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block5451(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5425(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump5425(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5451(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5452(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(10), s(9))
	call(block5504(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5452(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(10), s(9))
	call(block5459(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block5452(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump5452(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5459(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block5482(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5459(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block5474(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5459(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(9) = 86400
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump5459(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5474(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 115
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 5503
	nop(PUSH2)
	call(block5503(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block5482(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(9) = 604800
	nop(PUSH3)
	s(10) = 11
	nop(PUSH1)
	s(10) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = timestamp
	nop(TIMESTAMP)
	call(jump5482(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5482(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(10), s(9))
	call(block5502(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5482(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(10), s(9))
	call(block5498(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5498(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = 110
	nop(PUSH1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	call(block5502(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5502(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5503(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5503(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5504(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5504(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5505(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5505(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block5652(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5505(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block5648(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5505(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	call(jump5505(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5648(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump5652(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(10), s(9))
	call(block5667(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5652(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(10), s(9))
	call(block5663(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5652(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	call(jump5652(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5663(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block5667(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	call(jump5667(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5667(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), s(9))
	call(block5844(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5667(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), s(9))
	call(block5746(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5746(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(9) = s(3)
	nop(DUP6)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 15
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(numberOfInvestors)
	nop(SLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(13)
	nop(SSTORE)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = or(s(12), s(11))
	nop(OR)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	call(block5844(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5844(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	l(l1) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(totalSupply)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(totalSupply) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1037(s(1),s(0)))
	nop(JUMP)

block6082(s(1), s(0), g(votingDeadline), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(votingDeadline)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1062(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6088(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 14
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1127(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6139(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block6289(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump6139(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block6219(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l2), l(l1), l(l0)))

block6139(s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump6139(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6219(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block6246(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump6219(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block6227(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block6219(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump6219(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block6227(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 6289
	nop(PUSH2)
	call(block6289(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6246(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block6260(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump6260(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block6260(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump6260(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block6280(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block6260(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump6260(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block6280(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block6289(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block6289(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1214(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6297(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6297(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6297(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block6310(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))

jump6297(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block6309(s(4), s(3), s(2), s(1), s(0)))

block6309(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6310(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block6337(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6310(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block6336(s(5), s(4), s(3), s(2), s(1), s(0)))

block6310(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6310(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6336(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6337(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block6349(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump6337(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block6345(s(3), s(2), s(1), s(0)))

block6337(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump6337(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6345(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block6349(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1412(s(0)))
	nop(JUMP)

jump6583(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block6597(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump6583(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block6596(s(3), s(2), s(1), s(0)))

block6583(s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6583(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6596(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6597(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block6624(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump6597(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block6623(s(4), s(3), s(2), s(1), s(0)))

block6597(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6597(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6623(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6624(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 6673
	nop(PUSH2)
	call(jump6624(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(JUMPI)

jump6624(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	eq(s(4), 1 )
	call(block6673(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6624(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	neq(s(4), 1 )
	call(block6631(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump6631(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(5), s(4))
	call(block6644(s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l0), caller))

jump6631(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(5), s(4))
	call(block6643(s(3), s(2), s(1), s(0)))

block6631(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6631(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6643(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6644(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	leq(s(6), s(5))
	call(block6671(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6644(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	gt(s(6), s(5))
	call(block6670(s(4), s(3), s(2), s(1), s(0)))

block6644(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6644(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6670(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6671(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block6673(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))

jump6673(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block6684(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

jump6673(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block6680(s(2), s(1), s(0)))

block6673(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump6673(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6680(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump6684(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	leq(s(4), s(3))
	call(block6905(s(2), s(1), s(0)))

jump6684(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	gt(s(4), s(3))
	call(block6763(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller))

block6684(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump6684(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6763(s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	s(3) = 13
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump6763(s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6763(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	neq(s(3), 0)
	call(block6904(s(2), s(1), s(0)))

jump6763(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0), caller)=>
	eq(s(3), 0)
	call(block6900(s(2), s(1), s(0)))

block6900(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6904(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block6905(s(2),s(1),s(0)))

block6905(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1435(s(0)))
	nop(JUMP)

block6908(s(1), s(0), g(migrationAgentCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 31
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1458(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6946(s(1), s(0), g(numberOfVotes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(numberOfVotes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1545(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6952(s(1), s(0), g(minimalSuccessUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1588(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6958(s(1), s(0), g(yea), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(yea)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1631(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6964(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1674(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6970(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block7018(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp))

jump6970(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block7010(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

block6970(s(1), s(0), g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(weiReqFund)
	nop(SLOAD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	call(jump6970(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(votingDeadline), g(weiReqFund), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7010(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 7026
	nop(PUSH2)
	call(block7026(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block7018(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 23
	nop(PUSH1)
	s(6) = g(votingDeadline)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	call(block7026(s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))

block7026(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	call(block1717(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block7031(s(1), s(0), g(numberOfInvestors), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(2) = g(numberOfInvestors)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1788(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7037(s(1), s(0), g(collectedUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1831(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7043(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump7043(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7043(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block7056(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump7043(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block7055(s(5), s(4), s(3), s(2), s(1), s(0)))

block7055(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7056(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7056(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7056(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(8), s(7))
	call(block7083(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump7056(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(8), s(7))
	call(block7082(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7082(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7083(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump7083(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7083(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(6), s(5))
	call(block7095(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump7083(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(6), s(5))
	call(block7091(s(4), s(3), s(2), s(1), s(0)))

block7091(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7095(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 96
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = calldatasize
	nop(CALLDATASIZE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(jump7095(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7095(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(7), s(6))
	call(block7119(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump7095(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(7), s(6))
	call(block7115(s(5), s(4), s(3), s(2), s(1), s(0)))

block7115(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump7119(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block7197(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump7119(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block7193(s(5), s(4), s(3), s(2), s(1), s(0)))

block7119(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump7119(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7193(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block7197(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump7197(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7197(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block7340(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump7197(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block7336(s(5), s(4), s(3), s(2), s(1), s(0)))

block7336(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump7340(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block7479(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump7340(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block7475(s(5), s(4), s(3), s(2), s(1), s(0)))

block7340(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump7340(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7475(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block7479(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 20
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1960(s(0)))
	nop(JUMP)

block7878(s(2), s(1), s(0), g(owner), l(l5), l(l4), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7878(s(4),s(3),s(2),s(1),s(0),g(owner), l(l5), l(l4), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7878(s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l4), caller)=>
	eq(s(4), s(3))
	call(block7969(s(2), s(1), s(0), l(l5), l(l4)))

jump7878(s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l4), caller)=>
	neq(s(4), s(3))
	call(block7965(s(2), s(1), s(0)))

block7965(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7969(s(2), s(1), s(0), l(l5), l(l4))=>
	nop(JUMPDEST)
	s(3) = 21
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 255
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gs(1) = s(4)
	gs(2) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block2027(s(0)))
	nop(JUMP)

block8051(s(1), s(0), g(weiReqFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(weiReqFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2050(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8057(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2093(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump8076(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block8089(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump8076(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block8088(s(3), s(2), s(1), s(0)))

block8076(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump8076(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8088(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8089(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block8116(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump8089(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block8115(s(4), s(3), s(2), s(1), s(0)))

block8089(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump8089(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8115(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8116(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), 1 )
	call(block8164(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump8116(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), 1 )
	call(block8123(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

block8116(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 8164
	nop(PUSH2)
	call(jump8116(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump8123(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block8135(s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump8123(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block8134(s(3), s(2), s(1), s(0)))

block8123(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump8123(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8134(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8135(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block8162(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump8135(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block8161(s(4), s(3), s(2), s(1), s(0)))

block8135(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump8135(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8161(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8162(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block8164(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump8164(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(3), 0)
	call(block8175(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))

jump8164(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(3), 0)
	call(block8171(s(2), s(1), s(0)))

block8164(s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump8164(s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8171(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block8175(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump8175(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8175(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block8266(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump8175(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block8262(s(2), s(1), s(0)))

block8262(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump8266(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(4), s(3))
	call(block8281(s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump8266(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(4), s(3))
	call(block8277(s(2), s(1), s(0)))

block8266(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump8266(s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8277(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block8281(s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 8294
	nop(PUSH2)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH1)
	s(6) = 7
	nop(PUSH1)
	s(7) = 18754
	nop(PUSH2)
	call(block18754(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block8294(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2164(s(0)))
	nop(JUMP)

block8297(s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 36
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(proofImpl)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump8297(s(4),s(3),s(2),s(1),s(0),g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8297(s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block8370(s(2), s(1), s(0),g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump8297(s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block8366(s(2), s(1), s(0)))

block8366(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump8370(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(13), 0)
	call(block8559(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize))

jump8370(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(13), 0)
	call(block8555(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8370(s(2), s(1), s(0), g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 36
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(proofImpl)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1642133416
	nop(PUSH4)
	s(5) = caller
	nop(CALLER)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 4
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 32
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(11)
	nop(DUP1)
	s(12) = extcodesize
	nop(EXTCODESIZE)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump8370(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8555(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

jump8559(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize)=>
	eq(s(7), 0)
	call(block8579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize))

jump8559(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize)=>
	neq(s(7), 0)
	call(block8570(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block8559(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = gas
	nop(GAS)
	s(6) = 1
	nop(CALL)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump8559(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8570(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

jump8579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize)=>
	geq(s(6), s(5))
	call(block8601(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump8579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize)=>
	lt(s(6), s(5))
	call(block8597(s(4), s(3), s(2), s(1), s(0)))

block8579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump8579(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8597(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block8601(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l1)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2187(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8623(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 8633
	nop(PUSH2)
	s(5) = 18991
	nop(PUSH2)
	call(block18991(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

jump8633(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block8648(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump8633(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block8647(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8633(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8633(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8647(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block8675(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump8648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block8674(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8648(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8648(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8674(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8675(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block8724(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump8675(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block8682(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

block8675(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 8724
	nop(PUSH2)
	call(jump8675(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump8682(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(8), s(7))
	call(block8695(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump8682(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(8), s(7))
	call(block8694(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8682(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8682(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8694(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8695(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(9), s(8))
	call(block8722(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump8695(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(9), s(8))
	call(block8721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8695(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump8695(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8722(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block8724(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

block8724(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump8724(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8724(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(6), 0)
	call(block8735(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))

jump8724(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(6), 0)
	call(block8731(s(5), s(4), s(3), s(2), s(1), s(0)))

block8731(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block8735(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 12
	nop(PUSH1)
	s(6) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 8755
	nop(PUSH2)
	call(jump8735(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump8735(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(7), 1 )
	call(block8755(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

jump8735(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(7), 1 )
	call(block8747(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block8747(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block8755(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block8755(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 8858
	nop(PUSH2)
	call(jump8755(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(JUMPI)

jump8755(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 1 )
	call(block8858(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8755(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 1 )
	call(block8761(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

jump8761(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 0)
	call(block8857(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8761(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 0)
	call(block8776(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller))

block8761(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump8761(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8776(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block8857(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance))

block8857(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block8858(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8858(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8869(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8858(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8865(s(5), s(4), s(3), s(2), s(1), s(0)))

block8858(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8858(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8865(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump8869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	geq(s(7), s(6))
	call(block9489(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump8869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	lt(s(7), s(6))
	call(block8882(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))

block8869(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	call(jump8869(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8882(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(7), 0)
	call(block8900(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))

jump8882(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(7), 0)
	call(block8893(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))

block8882(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump8882(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8893(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block8900(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))

block8900(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	call(jump8900(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8900(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block9344(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))

jump8900(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block8906(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))

block8906(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address)=>
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(numberOfInvestors) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 64
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	l(l0) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(9) = l(l3)
	nop(MLOAD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l8) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(4)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 8882
	nop(PUSH2)
	call(block8882(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address))
	nop(JUMP)

jump9344(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block9360(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9344(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block9356(s(5), s(4), s(3), s(2), s(1), s(0)))

block9344(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump9344(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9356(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 10466
	nop(PUSH2)
	call(block10466(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block9360(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump9360(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9360(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(8), s(7))
	call(block9373(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9360(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(8), s(7))
	call(block9372(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9372(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9373(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump9373(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9373(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block9400(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9373(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block9399(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9399(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9400(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	neq(s(7), s(6))
	call(block9447(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9400(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	eq(s(7), s(6))
	call(block9407(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

block9400(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump9400(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9407(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block9437(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9407(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block9436(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9407(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9407(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9436(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9437(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 9484
	nop(PUSH2)
	call(block9484(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block9447(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9447(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block9478(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block9477(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9477(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9478(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block9484(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block9484(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 10381
	nop(PUSH2)
	call(block10381(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block9489(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block9490(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block9490(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump9490(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9490(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), 0)
	call(block9508(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump9490(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), 0)
	call(block9501(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block9501(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block9508(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump9508(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block9733(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump9508(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block9514(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

block9508(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump9508(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9514(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	s(6) = 15
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 14
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 15
	nop(PUSH1)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 15
	nop(PUSH1)
	s(8) = g(numberOfInvestors)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 9490
	nop(PUSH2)
	call(block9490(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(JUMP)

block9733(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump9733(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9733(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(7), s(6))
	call(block9749(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump9733(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(7), s(6))
	call(block9745(s(5), s(4), s(3), s(2), s(1), s(0)))

block9745(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 10466
	nop(PUSH2)
	call(block10466(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block9749(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump9749(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9749(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(8), s(7))
	call(block9762(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump9749(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(8), s(7))
	call(block9761(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9761(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9762(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump9762(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9762(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block9789(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))

jump9762(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block9788(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9788(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9789(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	neq(s(7), s(6))
	call(block9953(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump9789(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	eq(s(7), s(6))
	call(block9796(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))

block9789(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump9789(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9796(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block9912(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9796(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block9908(s(5), s(4), s(3), s(2), s(1), s(0)))

block9796(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance)=>
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump9796(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), l(l3), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9908(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump9912(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block9943(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump9912(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block9942(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9912(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump9912(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9942(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9943(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 10380
	nop(PUSH2)
	call(block10380(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block9953(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3000000
	nop(PUSH3)
	s(8) = 5
	nop(PUSH1)
	s(8) = g(etherPrice)
	nop(SLOAD)
	s(9) = 1000000000000000000
	nop(PUSH8)
	s(10) = 8
	nop(PUSH1)
	s(10) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump9953(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9953(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(10), 0)
	call(block10039(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump9953(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(10), 0)
	call(block10038(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10038(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10039(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(6), 0)
	call(block10072(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump10039(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(6), 0)
	call(block10068(s(5), s(4), s(3), s(2), s(1), s(0)))

block10039(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump10039(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10068(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump10072(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	neq(s(8), 0)
	call(block10089(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))

jump10072(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	eq(s(8), 0)
	call(block10088(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10072(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = 7
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump10072(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10088(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10089(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 4
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump10089(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10089(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	leq(s(12), s(11))
	call(block10374(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l0)))

jump10089(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l0), address)=>
	gt(s(12), s(11))
	call(block10373(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10373(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10374(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(state) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block10380(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block10380(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(block10381(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

jump10381(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(12), s(11))
	call(block10446(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump10381(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(12), s(11))
	call(block10445(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10381(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump10381(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10445(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10446(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG1)
	call(block10466(s(5),s(4),s(3),s(2),s(1),s(0)))

block10466(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2260(s(0)))
	nop(JUMP)

block10472(s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump10472(s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10472(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block10552(s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump10472(s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block10548(s(3), s(2), s(1), s(0)))

block10548(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump10552(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block10565(s(4), s(3), s(2), s(1), s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump10552(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block10564(s(4), s(3), s(2), s(1), s(0)))

block10552(s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump10552(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10564(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10565(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block10592(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump10565(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block10591(s(5), s(4), s(3), s(2), s(1), s(0)))

block10565(s(4), s(3), s(2), s(1), s(0), g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(voteReason)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10565(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10591(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10592(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump10592(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10592(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block10605(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump10592(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block10601(s(3), s(2), s(1), s(0)))

block10601(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block10605(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump10605(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10605(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block10618(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump10605(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block10617(s(4), s(3), s(2), s(1), s(0)))

block10617(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10618(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10618(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10618(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block10706(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump10618(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block10705(s(5), s(4), s(3), s(2), s(1), s(0)))

block10705(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10706(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block10718(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))

jump10706(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block10714(s(3), s(2), s(1), s(0)))

block10706(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump10706(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10714(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump10718(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block10734(s(3), s(2), s(1), s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))

jump10718(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block10730(s(3), s(2), s(1), s(0)))

block10718(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 23
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump10718(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10730(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block10734(s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 24
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(numberOfVotes)
	nop(SLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	g(numberOfVotes) = s(5)
	nop(SSTORE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	call(jump10734(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10734(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), 0)
	call(block10943(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump10734(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), 0)
	call(block10842(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump10842(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block10933(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump10842(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block10932(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10842(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	s(4) = 1
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10842(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10932(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10933(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 11041
	nop(PUSH2)
	call(block11041(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))
	nop(JUMP)

jump10943(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block11035(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump10943(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block11034(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10943(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump10943(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11034(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11035(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block11041(s(3),s(2),s(1),s(0), l(l1), l(l0), caller))

block11041(s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64553722568993200883443809638226739942484745337245721019031194148412713982255
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2307(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump11131(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block11281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump11131(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block11211(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))

block11131(s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(standard)
	s(7) = g(standard)
	call(jump11131(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11211(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11238(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump11211(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11219(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l2), l(l1), l(l0)))

block11211(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump11211(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block11219(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 11281
	nop(PUSH2)
	call(block11281(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block11238(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block11252(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block11252(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump11252(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump11252(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block11252(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump11252(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block11272(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block11272(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block11281(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block11281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2350(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block11289(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 20
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2570(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11326(s(2), s(1), s(0), g(proofImpl), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump11326(s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11326(s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(owner), caller)=>
	eq(s(4), s(3))
	call(block11417(s(2), s(1), s(0),g(proofImpl)))

jump11326(s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(owner), caller)=>
	neq(s(4), s(3))
	call(block11413(s(2), s(1), s(0)))

block11413(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block11417(s(2), s(1), s(0), g(proofImpl))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 36
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(proofImpl)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(proofImpl) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2657(s(0)))
	nop(JUMP)

jump11485(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	eq(s(8), s(7))
	call(block11576(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11485(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	neq(s(8), s(7))
	call(block11572(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11485(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump11485(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11572(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump11576(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block11589(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11576(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block11588(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11576(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11576(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11588(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11589(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block11616(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11589(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block11615(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11589(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump11589(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11615(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11616(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(8), 1 )
	call(block11665(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11616(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(8), 1 )
	call(block11623(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

block11616(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 11665
	nop(PUSH2)
	call(jump11616(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump11623(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block11636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11623(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block11635(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11623(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(7) = 2
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11623(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11635(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11636(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block11663(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11636(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block11662(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump11636(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11662(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11663(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	call(block11665(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11665(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block11676(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))

jump11665(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block11672(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11665(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump11665(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11672(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump11676(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block11808(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump11676(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block11807(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11676(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = 11
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleStartTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(crowdsaleOwner)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleOwner) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(etherPrice) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 15
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(numberOfInvestors) = s(7)
	nop(SSTORE)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 12
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 7
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalLimitUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11676(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11807(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11808(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block11835(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump11808(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block11834(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11808(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump11808(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11834(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11835(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	neq(s(8), s(7))
	call(block11882(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump11835(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	eq(s(8), s(7))
	call(block11842(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

block11835(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump11835(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11842(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump11842(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11842(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block11872(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump11842(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block11871(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11871(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11872(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 11919
	nop(PUSH2)
	call(block11919(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

block11882(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump11882(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11882(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block11913(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l1), l(l0)))

jump11882(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block11912(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11912(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11913(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(state) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block11919(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))

block11919(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump11919(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11919(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block11984(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump11919(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block11983(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11983(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11984(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2764(s(0)))
	nop(JUMP)

block12010(s(2), s(1), s(0), l(l5), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 13
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block2831(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block12046(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2925(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump12119(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block12210(s(2), s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump12119(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block12206(s(2), s(1), s(0)))

block12119(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12119(s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12206(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12210(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block12305(s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump12210(s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block12277(s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block12210(s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 30
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	call(jump12210(s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12277(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block12305(s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block12305(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump12305(s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12305(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(3), 0)
	call(block12316(s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump12305(s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(3), 0)
	call(block12312(s(2), s(1), s(0)))

block12312(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12316(s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 31
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(migrationAgentCandidate) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 12394
	nop(PUSH2)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 18754
	nop(PUSH2)
	call(block18754_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block12394(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block3012(s(0)))
	nop(JUMP)

jump12397(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block12412(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump12397(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block12411(s(3), s(2), s(1), s(0)))

block12397(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump12397(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12411(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12412(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block12439(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump12412(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block12438(s(4), s(3), s(2), s(1), s(0)))

block12412(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12412(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12438(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12439(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 12488
	nop(PUSH2)
	call(jump12439(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump12439(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	eq(s(4), 1 )
	call(block12488(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump12439(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	neq(s(4), 1 )
	call(block12446(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

block12446(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump12446(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12446(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block12459(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))

jump12446(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block12458(s(3), s(2), s(1), s(0)))

block12458(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12459(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12459(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12459(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block12486(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump12459(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l1), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block12485(s(4), s(3), s(2), s(1), s(0)))

block12485(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12486(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block12488(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump12488(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block12499(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump12488(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block12495(s(2), s(1), s(0)))

block12488(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump12488(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12495(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12499(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump12499(s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12499(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	leq(s(4), s(3))
	call(block12518(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l1), l(l0), timestamp))

jump12499(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	gt(s(4), s(3))
	call(block12510(s(2), s(1), s(0), l(l1), l(l0)))

block12510(s(2), s(1), s(0), l(l1), l(l0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 12526
	nop(PUSH2)
	call(block12526(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12518(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block12526(s(2),s(1),s(0), l(l1), l(l0)))

block12526(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block3035(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12529(s(1), s(0), g(totalLimitUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3078(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12535(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 21
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3165(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12567(s(1), s(0), g(migrationAgent), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 30
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgent)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3212(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12605(s(1), s(0), g(crowdsaleOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crowdsaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3299(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12643(s(1), s(0), g(priceInTokens), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 34
	nop(PUSH1)
	s(2) = g(priceInTokens)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3386(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12649(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3429(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump12686(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block12777(s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump12686(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block12773(s(2), s(1), s(0)))

block12686(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12686(s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l2), l(l1), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12773(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12777(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(4), s(3))
	call(block12815(s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump12777(s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(4), s(3))
	call(block12811(s(2), s(1), s(0)))

block12777(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12777(s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12811(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12815(s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(externalControllerCandidate)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(externalControllerCandidate) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 12894
	nop(PUSH2)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 18754
	nop(PUSH2)
	call(block18754_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block12894(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block3560(s(0)))
	nop(JUMP)

jump12897(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	leq(s(5), s(4))
	call(block12911(s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump12897(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	gt(s(5), s(4))
	call(block12910(s(3), s(2), s(1), s(0)))

block12897(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump12897(s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12910(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12911(s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12911(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12911(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	leq(s(6), s(5))
	call(block12938(s(4), s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump12911(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	gt(s(6), s(5))
	call(block12937(s(4), s(3), s(2), s(1), s(0)))

block12937(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12938(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block12950(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

jump12938(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block12946(s(2), s(1), s(0)))

block12938(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump12938(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12946(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12950(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(13), 0)
	call(block13423(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize))

jump12950(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(13), 0)
	call(block13419(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12950(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalSupply) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalMigrated)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalMigrated) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 30
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2050044131
	nop(PUSH4)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l9) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(11)
	nop(DUP1)
	s(12) = extcodesize
	nop(EXTCODESIZE)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump12950(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13419(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

jump13423(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	eq(s(7), 0)
	call(block13443(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l1), l(l0), caller))

jump13423(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	neq(s(7), 0)
	call(block13434(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block13423(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = gas
	nop(GAS)
	s(6) = 1
	nop(CALL)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump13423(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l1), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13434(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block13443(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 30
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 11249535016889395155928029794464789214288252387144912394942407981344833784346
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	call(block3583(s(0)))
	nop(JUMP)

block13585(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump13585(s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13585(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), caller)=>
	eq(s(4), s(3))
	call(block13676(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13585(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), caller)=>
	neq(s(4), s(3))
	call(block13672(s(2), s(1), s(0)))

block13672(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13676(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump13676(s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13676(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	geq(s(4), s(3))
	call(block13692(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13676(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	lt(s(4), s(3))
	call(block13688(s(2), s(1), s(0)))

block13688(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13692(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	call(jump13692(s(5),s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13692(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	neq(s(5), 0)
	call(block13704(s(4), s(3), s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13692(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	eq(s(5), 0)
	call(block13703(s(4), s(3), s(2), s(1), s(0)))

block13703(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13704(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	neq(s(4), s(3))
	call(block13731(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13704(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	eq(s(4), s(3))
	call(block13723(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

block13704(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 35
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(teamFee) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 35
	nop(PUSH1)
	s(4) = g(teamFee)
	nop(SLOAD)
	call(jump13704(s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13723(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	s(3) = 1
	nop(PUSH1)
	s(4) = 35
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(teamFee) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block13731(s(2),s(1),s(0),g(teamFee), g(priceInTokens)))

block13731(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = 35
	nop(PUSH1)
	s(3) = g(teamFee)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = 34
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(priceInTokens) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3628(s(0)))
	nop(JUMP)

block13745(s(1), s(0), g(proofImpl), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 36
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(proofImpl)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3651(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13783(s(1), s(0), g(totalMigrated), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 33
	nop(PUSH1)
	s(2) = g(totalMigrated)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3738(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13789(s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump13789(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13789(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block13939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump13789(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block13869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))

block13869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump13869(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump13869(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block13896(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump13869(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block13877(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block13877(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 13939
	nop(PUSH2)
	call(block13939(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block13896(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block13910(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block13910(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump13910(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump13910(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block13910(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump13910(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block13930(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block13930(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block13939(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block13939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3781(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block13947(s(1), s(0), g(externalControllerCandidate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 32
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(externalControllerCandidate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3925(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13985(s(1), s(0), g(crowdsaleFinishTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4012(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13991(s(1), s(0), g(etherPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4055(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13997(s(1), s(0), g(migrationHost), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationHost)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4098(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14035(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(4), s(3))
	call(block14126(s(2), s(1), s(0),g(newOwner)))

jump14035(s(4), s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(4), s(3))
	call(block14122(s(2), s(1), s(0)))

block14035(s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump14035(s(4),s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14122(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block14126(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump14126(s(4),s(3),s(2),s(1),s(0),g(newOwner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14126(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	neq(s(4), s(3))
	call(block14164(s(2), s(1), s(0),g(newOwner)))

jump14126(s(4), s(3), s(2), s(1), s(0), g(newOwner))=>
	eq(s(4), s(3))
	call(block14160(s(2), s(1), s(0)))

block14160(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block14164(s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(newOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(newOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4229(s(0)))
	nop(JUMP)

jump14232(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(6), s(5))
	call(block14245(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump14232(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(6), s(5))
	call(block14244(s(4), s(3), s(2), s(1), s(0)))

block14232(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump14232(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14244(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	leq(s(7), s(6))
	call(block14272(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump14245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	gt(s(7), s(6))
	call(block14271(s(5), s(4), s(3), s(2), s(1), s(0)))

block14245(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump14245(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14271(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14272(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	eq(s(5), s(4))
	call(block14284(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))

jump14272(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	neq(s(5), s(4))
	call(block14280(s(3), s(2), s(1), s(0)))

block14272(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	call(jump14272(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14280(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump14284(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	geq(s(6), s(5))
	call(block14308(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump14284(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	lt(s(6), s(5))
	call(block14304(s(4), s(3), s(2), s(1), s(0)))

block14284(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller)=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = calldatasize
	nop(CALLDATASIZE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	call(jump14284(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14304(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block14308(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump14308(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14308(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block14386(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump14308(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block14382(s(4), s(3), s(2), s(1), s(0)))

block14382(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block14386(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump14386(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14386(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block14529(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller))

jump14386(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block14525(s(4), s(3), s(2), s(1), s(0)))

block14525(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block14529(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4306(s(0)))
	nop(JUMP)

block14789(s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14789(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14789(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block14809(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump14789(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block14808(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14808(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14809(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block14836(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump14809(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block14835(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14809(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14809(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14835(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14836(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(9), s(8))
	call(block14849(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))

jump14836(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(9), s(8))
	call(block14845(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14836(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump14836(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14845(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14849(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 23
	nop(PUSH1)
	s(8) = g(votingDeadline)
	nop(SLOAD)
	s(9) = timestamp
	nop(TIMESTAMP)
	call(jump14849(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14849(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	geq(s(9), s(8))
	call(block14866(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14849(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance, timestamp)=>
	lt(s(9), s(8))
	call(block14862(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14862(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14866(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block14867(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block14867(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump14867(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14867(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), 0)
	call(block14885(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14867(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), 0)
	call(block14878(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block14878(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block14885(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14885(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block15351(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14885(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block14891(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block14885(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump14885(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14891(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfVotes)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(numberOfVotes) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14891(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14891(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block15117(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump14891(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block15116(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15116(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15117(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block15129(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15117(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block15128(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15117(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump15117(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15128(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15129(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block15156(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15129(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block15136(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block15129(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump15129(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15136(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(yea)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(yea) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 15204
	nop(PUSH2)
	call(block15204(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

block15156(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump15156(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15156(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block15168(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15156(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block15167(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15167(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15168(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump15168(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15168(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block15180(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15168(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block15179(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15179(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15180(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump15180(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15180(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block15203(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15180(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block15187(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block15187(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(nay)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(nay) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block15203(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block15203(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block15204(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block15204(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 28
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 24
	nop(PUSH1)
	s(10) = g(numberOfVotes)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 14867
	nop(PUSH2)
	call(block14867(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(JUMP)

block15351(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	call(jump15351(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15351(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block15371(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15351(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block15363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block15363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 16179
	nop(PUSH2)
	call(block16179(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump15371(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block16101(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump15371(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block15410(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

block15371(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(8) = g(nay)
	nop(SLOAD)
	s(9) = 25
	nop(PUSH1)
	s(9) = g(yea)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(weiReqFund)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	s(8) = 24
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfVotes) = s(8)
	nop(SSTORE)
	s(8) = s(3)
	nop(DUP5)
	call(jump15371(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15410(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump15410(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15410(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block15422(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15410(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block15421(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15421(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15422(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump15422(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15422(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block15449(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15422(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block15448(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15448(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15449(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block15553(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15449(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block15456(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(owner), l(l1), l(l0)))

block15449(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump15449(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), g(owner), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15456(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump15456(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(owner), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15456(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block15548(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump15456(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(owner), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block15544(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15544(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block15548(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 16100
	nop(PUSH2)
	call(block16100(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

block15553(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump15553(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(10), s(9))
	call(block15566(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(10), s(9))
	call(block15565(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15565(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15566(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	leq(s(11), s(10))
	call(block15593(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))

jump15566(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	gt(s(11), s(10))
	call(block15592(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15566(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump15566(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15592(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15593(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block15893(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump15593(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block15600(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))

block15593(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump15593(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l5), l(l4), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15600(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(migrationAgent)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(migrationAgent) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 30
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgent)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3000000
	nop(PUSH3)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump15600(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15600(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block15815(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))

jump15600(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(migrationAgent), g(voteReason), g(state), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block15811(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15811(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump15815(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block15883(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(state), l(l1), l(l0)))

jump15815(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block15882(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15815(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 31
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(migrationAgentCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(migrationAgentCandidate) = s(8)
	nop(SSTORE)
	s(8) = 5
	nop(PUSH1)
	s(9) = 10
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump15815(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgentCandidate), g(voteReason), g(state), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15882(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15883(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 16099
	nop(PUSH2)
	call(block16099(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))
	nop(JUMP)

block15893(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump15893(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15893(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block15905(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump15893(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block15904(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15904(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15905(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block15932(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

jump15905(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block15931(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15905(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump15905(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15931(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15932(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block16098(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), l(l1), l(l0)))

jump15932(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block15939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))

block15932(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump15932(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(externalControllerCandidate), g(voteReason), l(l5), l(l4), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 21
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(externalControllerCandidate)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(externalControllerCandidate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(externalControllerCandidate) = s(8)
	nop(SSTORE)
	call(block16098(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block16098(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block16099(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block16099(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block16100(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block16100(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block16101(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), l(l1), l(l0)))

block16101(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	s(8) = 75206971871473182631099251223774128077502725353986568989429243973252125172665
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	call(block16179(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block16179(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block4351(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16188(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump16188(s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16188(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(3), s(2))
	call(block16280(s(1), s(0),g(newOwner), g(owner)))

jump16188(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(3), s(2))
	call(block16276(s(1), s(0)))

block16276(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block16280(s(1), s(0), g(newOwner), g(owner))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(owner) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(newOwner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(newOwner) = s(2)
	nop(SSTORE)
	call(block4398(s(0)))
	nop(JUMP)

block16417(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4421(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16436(s(3), s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 36
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(proofImpl)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16436(s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16436(s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block16508(s(3), s(2), s(1), s(0),g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))

jump16436(s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block16504(s(3), s(2), s(1), s(0)))

block16504(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16508(s(3), s(2), s(1), s(0), g(proofImpl), g(teamFee), g(priceInTokens), g(state), g(owner), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 16553
	nop(PUSH2)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 35
	nop(PUSH1)
	s(6) = g(teamFee)
	nop(SLOAD)
	s(7) = 14232
	nop(PUSH2)
	call(block14232_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block16553(s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 16565
	nop(PUSH2)
	s(5) = address
	nop(ADDRESS)
	s(6) = 34
	nop(PUSH1)
	s(6) = g(priceInTokens)
	nop(SLOAD)
	s(7) = 14232
	nop(PUSH2)
	call(block14232_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block16565(s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 36
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(proofImpl)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 995601040
	nop(PUSH4)
	s(6) = caller
	nop(CALLER)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 4
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(6)
	nop(DUP5)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 65535
	nop(PUSH2)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 65535
	nop(PUSH2)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l9) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 0
	nop(PUSH1)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 0
	nop(PUSH1)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = s(12)
	nop(DUP1)
	s(13) = extcodesize
	nop(EXTCODESIZE)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump16565(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16565(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(14), 0)
	call(block16786(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), gas, returndatasize))

jump16565(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(14), 0)
	call(block16782(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16782(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

jump16786(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), gas, returndatasize)=>
	eq(s(8), 0)
	call(block16806(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump16786(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), gas, returndatasize)=>
	neq(s(8), 0)
	call(block16797(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block16786(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = gas
	nop(GAS)
	s(7) = 1
	nop(CALL)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump16786(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16797(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block16806(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4518(s(0)))
	nop(JUMP)

block16814(s(1), s(0), g(newOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4541(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16852(s(1), s(0), g(teamFee), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 35
	nop(PUSH1)
	s(2) = g(teamFee)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4628(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16858(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 28
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4715(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump16890(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block16981(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump16890(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block16977(s(3), s(2), s(1), s(0)))

block16890(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16890(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), g(owner), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16977(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16981(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump16981(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16981(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block16994(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump16981(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block16993(s(4), s(3), s(2), s(1), s(0)))

block16993(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16994(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16994(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16994(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block17021(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump16994(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block17020(s(5), s(4), s(3), s(2), s(1), s(0)))

block17020(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17021(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 17070
	nop(PUSH2)
	call(jump17021(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMPI)

jump17021(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(5), 1 )
	call(block17070(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump17021(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(5), 1 )
	call(block17028(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block17028(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump17028(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17028(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(6), s(5))
	call(block17041(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump17028(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(6), s(5))
	call(block17040(s(4), s(3), s(2), s(1), s(0)))

block17040(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17041(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump17041(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17041(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(7), s(6))
	call(block17068(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump17041(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(7), s(6))
	call(block17067(s(5), s(4), s(3), s(2), s(1), s(0)))

block17067(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17068(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block17070(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump17070(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(4), 0)
	call(block17081(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump17070(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(4), 0)
	call(block17077(s(3), s(2), s(1), s(0)))

block17070(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump17070(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17077(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump17081(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(5), s(4))
	call(block17097(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump17081(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(5), s(4))
	call(block17093(s(3), s(2), s(1), s(0)))

block17081(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 12
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(5) = timestamp
	nop(TIMESTAMP)
	call(jump17081(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17093(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump17097(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(5), s(4))
	call(block17118(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump17097(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(5), s(4))
	call(block17114(s(3), s(2), s(1), s(0)))

block17097(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump17097(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17114(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block17118(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(collectedUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 17146
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 5309
	nop(PUSH2)
	call(block5309_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block17146(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block4826(s(0)))
	nop(JUMP)

block17150(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump17150(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block17165(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l1), l(l0)))

jump17150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block17164(s(5), s(4), s(3), s(2), s(1), s(0)))

block17164(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17165(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump17165(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17165(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block17192(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump17165(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block17191(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17191(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17192(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block17204(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0)))

jump17192(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block17200(s(4), s(3), s(2), s(1), s(0)))

block17192(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump17192(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17200(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block17204(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 20
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4925(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block17337(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 21
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump17337(s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17337(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	neq(s(4), 0)
	call(block17425(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump17337(s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address, caller)=>
	eq(s(4), 0)
	call(block17421(s(3), s(2), s(1), s(0)))

block17421(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump17425(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block17503(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump17425(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block17499(s(3), s(2), s(1), s(0)))

block17425(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump17425(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17499(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump17503(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block17646(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address))

jump17503(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block17642(s(3), s(2), s(1), s(0)))

block17503(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump17503(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17642(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block17646(s(3), s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block5022(s(0)))
	nop(JUMP)

block17905(s(1), s(0), g(crowdsaleStartTime), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block5045(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block17911(s(1), s(0), g(nay), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 26
	nop(PUSH1)
	s(2) = g(nay)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block5088(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block17917(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block5153(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block17968(s(1), s(0), g(migrationHost), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump17968(s(3),s(2),s(1),s(0),g(migrationHost), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17968(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	eq(s(3), s(2))
	call(block18059(s(1), s(0),g(migrationHost)))

jump17968(s(3), s(2), s(1), s(0), g(migrationHost), g(owner), caller)=>
	neq(s(3), s(2))
	call(block18055(s(1), s(0)))

block18055(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block18059(s(1), s(0), g(migrationHost))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(migrationHost)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(4) = not(s(4))
	nop(NOT)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(migrationHost) = s(2)
	nop(SSTORE)
	call(block5240(s(0)))
	nop(JUMP)

block18098(s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump18098(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18098(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block18191(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump18098(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block18187(s(3), s(2), s(1), s(0)))

block18187(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump18191(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block18263(s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump18191(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block18259(s(3), s(2), s(1), s(0)))

block18191(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump18191(s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18259(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block18263(s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationHost)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1889567281
	nop(PUSH4)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 32
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = s(12)
	nop(DUP1)
	s(13) = extcodesize
	nop(EXTCODESIZE)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump18263(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18263(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(14), 0)
	call(block18452(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))

jump18263(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l6), l(l5), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(14), 0)
	call(block18448(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18448(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

jump18452(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	eq(s(8), 0)
	call(block18472(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))

jump18452(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	neq(s(8), 0)
	call(block18463(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block18452(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = gas
	nop(GAS)
	s(7) = 1
	nop(CALL)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump18452(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18463(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block18472(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump18472(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18472(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	geq(s(7), s(6))
	call(block18494(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump18472(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0), returndatasize)=>
	lt(s(7), s(6))
	call(block18490(s(5), s(4), s(3), s(2), s(1), s(0)))

block18490(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump18494(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block18528(s(5), s(4), s(3), s(2), s(1), s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))

jump18494(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block18527(s(5), s(4), s(3), s(2), s(1), s(0)))

block18494(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 125
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump18494(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18527(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18528(s(5), s(4), s(3), s(2), s(1), s(0), g(migrationHost), g(totalSupply), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(migrationHost)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block5307(s(0)))
	nop(JUMP)

block18754(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump18754(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18754(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block18767(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump18754(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block18766(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18766(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18767(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump18767(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18767(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block18794(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump18767(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block18793(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18793(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18794(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump18794(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18794(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block18830(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump18794(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block18802(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block18802(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block18830(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump18830(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block18841(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump18830(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block18837(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18830(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump18830(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18837(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump18841(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block18892(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump18841(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block18891(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18841(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump18841(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18891(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18892(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump18892(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18892(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block18966(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump18892(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block18965(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18965(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18966(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block8294(s(2),s(1),s(0)))
	nop(JUMP)

block18991(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block8633(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l5), l(l4), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block1009_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block1026_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

block1026_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 1037
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 5309
	nop(PUSH2)
	call(block5309_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block1037_0(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block14232_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump14232_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14232_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	leq(s(9), s(8))
	call(block14245_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))

jump14232_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	gt(s(9), s(8))
	call(block14244_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14232_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump14232_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14232_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	leq(s(9), s(8))
	call(block14245_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))

jump14232_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	gt(s(9), s(8))
	call(block14244_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14244_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14244_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14245_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14245_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14245_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	leq(s(10), s(9))
	call(block14272_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))

jump14245_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	gt(s(10), s(9))
	call(block14271_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14245_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14245_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14245_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	leq(s(10), s(9))
	call(block14272_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))

jump14245_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	gt(s(10), s(9))
	call(block14271_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14271_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14271_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14272_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump14272_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14272_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	eq(s(8), s(7))
	call(block14284_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))

jump14272_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	neq(s(8), s(7))
	call(block14280_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14272_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump14272_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14272_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	eq(s(8), s(7))
	call(block14284_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))

jump14272_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	neq(s(8), s(7))
	call(block14280_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14280_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block14280_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block14284_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 64
	nop(PUSH1)
	s(8) = 4
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = calldatasize
	nop(CALLDATASIZE)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(jump14284_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14284_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	geq(s(9), s(8))
	call(block14308_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))

jump14284_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	lt(s(9), s(8))
	call(block14304_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14284_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 64
	nop(PUSH1)
	s(8) = 4
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = calldatasize
	nop(CALLDATASIZE)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(jump14284_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14284_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	geq(s(9), s(8))
	call(block14308_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump14284_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize)=>
	lt(s(9), s(8))
	call(block14304_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14304_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14304_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump14308_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	geq(s(9), s(8))
	call(block14386_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))

jump14308_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	lt(s(9), s(8))
	call(block14382_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14308_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump14308_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14308_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	geq(s(9), s(8))
	call(block14386_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump14308_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	lt(s(9), s(8))
	call(block14382_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14308_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump14308_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14382_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14382_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump14386_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	geq(s(9), s(8))
	call(block14529_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))

jump14386_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	lt(s(9), s(8))
	call(block14525_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14386_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(jump14386_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14386_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	geq(s(9), s(8))
	call(block14529_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump14386_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	lt(s(9), s(8))
	call(block14525_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14386_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(jump14386_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14525_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14525_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14529_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(11) = s(6)
	nop(DUP5)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block16553(s(3),s(2),s(1),s(0),g(proofImpl), g(priceInTokens), g(state), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block14529_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(proofImpl), l(l10), l(l9), l(l6), l(l5), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(11) = s(6)
	nop(DUP5)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block16565(s(3),s(2),s(1),s(0),g(proofImpl), l(l10), l(l9), l(l6), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

jump18754_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block18767_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump18754_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block18766_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18754_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump18754_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18754_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(9), s(8))
	call(block18767_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump18754_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(9), s(8))
	call(block18766_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18754_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump18754_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18766_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18766_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump18767_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block18794_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump18767_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block18793_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18767_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump18767_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18767_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block18794_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

jump18767_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block18793_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18767_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(voteReason)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 3
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump18767_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18793_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18793_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18794_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump18794_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18794_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block18830_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump18794_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block18802_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block18794_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	call(jump18794_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18794_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block18830_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump18794_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block18802_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp))

block18802_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block18830_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

block18802_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(4)
	nop(DUP4)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(block18830_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

block18830_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump18830_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18830_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block18841_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump18830_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block18837_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18830_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump18830_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18830_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block18841_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))

jump18830_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block18837_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18837_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block18837_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump18841_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block18892_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump18841_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block18891_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18841_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump18841_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18841_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block18892_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))

jump18841_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block18891_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18841_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 22
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 86400
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 23
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(voteReason)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump18841_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18891_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18891_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump18892_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block18966_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump18892_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block18965_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18892_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump18892_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18892_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(voteReason) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 25
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(yea) = s(7)
	nop(SSTORE)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(nay) = s(7)
	nop(SSTORE)
	s(7) = 30581271215690974159237201894293200371549389630521122399165222468614189639741
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump18892_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18892_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block18966_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump18892_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(voteReason), g(nay), g(yea), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block18965_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18965_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18965_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18966_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block12394(s(2),s(1),s(0)))
	nop(JUMP)

block18966_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block12894(s(2),s(1),s(0)))
	nop(JUMP)

jump5309_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block5331_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5309_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block5330_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5309_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 100
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump5309_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5309_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block5331_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5309_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block5330_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5309_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 100
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump5309_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5330_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5330_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5331_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block5358_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5331_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block5357_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5331_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump5331_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5331_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block5358_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5331_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block5357_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5331_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump5331_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5357_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5357_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5358_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block5412_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5358_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block5365_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block5358_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump5358_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5358_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block5412_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5358_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block5365_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block5358_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump5358_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5365_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(12) = s(11)
	nop(DUP1)
	call(jump5365_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5365_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), 0)
	call(block5388_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5365_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), 0)
	call(block5381_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5365_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(11) = s(10)
	nop(DUP1)
	call(jump5365_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5365_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 0)
	call(block5388_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5365_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 0)
	call(block5381_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5381_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(11) = 50000
	nop(PUSH2)
	s(12) = s(6)
	nop(DUP6)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	call(block5388_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5381_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 50000
	nop(PUSH2)
	s(11) = s(5)
	nop(DUP6)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	call(block5388_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5388_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), 0)
	call(block5402_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5388_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), 0)
	call(block5394_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5388_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump5388_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5388_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block5402_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5388_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block5394_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5388_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump5388_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5394_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 150
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 5407
	nop(PUSH2)
	call(block5407_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block5394_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 150
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 5407
	nop(PUSH2)
	call(block5407_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block5402_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 125
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block5407_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5402_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 125
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block5407_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5407_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 5505
	nop(PUSH2)
	call(block5505_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block5407_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 5505
	nop(PUSH2)
	call(block5505_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump5412_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block5425_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5412_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block5424_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5412_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 3
	nop(PUSH1)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump5412_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5412_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block5425_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5412_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block5424_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5412_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 3
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump5412_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5424_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5424_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5425_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(12) = 10
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(state)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 5
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump5425_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5425_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(14), s(13))
	call(block5452_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5425_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(14), s(13))
	call(block5451_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5425_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 10
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump5425_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5425_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block5452_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5425_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block5451_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5451_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5451_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5452_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump5452_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5452_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(12), s(11))
	call(block5504_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5452_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(12), s(11))
	call(block5459_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block5452_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump5452_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5452_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	neq(s(11), s(10))
	call(block5504_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5452_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	eq(s(11), s(10))
	call(block5459_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

block5459_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(11) = 86400
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump5459_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5459_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block5482_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5459_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block5474_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5459_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	s(10) = 86400
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump5459_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5459_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block5482_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))

jump5459_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block5474_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5474_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 115
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 5503
	nop(PUSH2)
	call(block5503_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

block5474_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 115
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 5503
	nop(PUSH2)
	call(block5503_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(JUMP)

jump5482_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(12), s(11))
	call(block5502_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5482_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(12), s(11))
	call(block5498_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5482_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 604800
	nop(PUSH3)
	s(12) = 11
	nop(PUSH1)
	s(12) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump5482_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5482_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	geq(s(11), s(10))
	call(block5502_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5482_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	lt(s(11), s(10))
	call(block5498_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5482_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 604800
	nop(PUSH3)
	s(11) = 11
	nop(PUSH1)
	s(11) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = timestamp
	nop(TIMESTAMP)
	call(jump5482_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5498_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = 110
	nop(PUSH1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block5502_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5498_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = 110
	nop(PUSH1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	call(block5502_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5502_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5503_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5502_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5503_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5503_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5504_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5503_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5504_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5504_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5505_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5504_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block5505_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5505_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block5652_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5505_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block5648_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5505_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 3
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(5)
	nop(DUP10)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l4) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l5) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	call(jump5505_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5505_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block5652_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5505_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block5648_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5505_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump5505_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5648_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block5648_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump5652_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(12), s(11))
	call(block5667_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5652_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(12), s(11))
	call(block5663_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5652_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	call(jump5652_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5652_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block5667_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5652_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block5663_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5652_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	call(jump5652_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5663_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block5663_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump5667_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(12), s(11))
	call(block5844_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5667_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(12), s(11))
	call(block5746_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5667_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = 13
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	call(jump5667_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5667_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	neq(s(11), s(10))
	call(block5844_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

jump5667_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	eq(s(11), s(10))
	call(block5746_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5667_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 13
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump5667_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5746_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(11) = s(5)
	nop(DUP6)
	s(12) = 14
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = 15
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(numberOfInvestors)
	nop(SLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 1
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(15)
	nop(SSTORE)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = or(s(14), s(13))
	nop(OR)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	call(block5844_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5746_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	s(10) = s(4)
	nop(DUP6)
	s(11) = 14
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 15
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(numberOfInvestors)
	nop(SLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(14)
	nop(SSTORE)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block5844_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l5), l(l4), l(l1), l(l0), address))

block5844_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(1)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(2)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(14) = s(9)
	nop(DUP5)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	l(l1) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG3)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	s(15) = g(totalSupply)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalSupply) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block17146(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5844_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = address
	nop(ADDRESS)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(totalSupply)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(totalSupply) = s(11)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1037_0(s(2),s(1),s(0)))
	nop(JUMP)

jump736_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block752_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump736_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block751_0(s(3), s(2), s(1), s(0)))

block736_0(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump736_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block751_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump752_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block779_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump752_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block778_0(s(4), s(3), s(2), s(1), s(0)))

block752_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump752_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block778_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump779_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(4), 1 )
	call(block828_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump779_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(4), 1 )
	call(block786_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block779_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 828
	nop(PUSH2)
	call(jump779_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(JUMPI)

block786_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump786_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump786_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(5), s(4))
	call(block799_0(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump786_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(5), s(4))
	call(block798_0(s(3), s(2), s(1), s(0)))

block798_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block799_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump799_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump799_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(6), s(5))
	call(block826_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump799_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(6), s(5))
	call(block825_0(s(4), s(3), s(2), s(1), s(0)))

block825_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block826_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block828_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

block828_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump828_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump828_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block839_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump828_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block835_0(s(2), s(1), s(0)))

block835_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump839_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	lt(s(4), s(3))
	call(block855_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump839_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	geq(s(4), s(3))
	call(block851_0(s(2), s(1), s(0)))

block839_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump839_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block851_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump855_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block881_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump855_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block880_0(s(4), s(3), s(2), s(1), s(0)))

block855_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(etherPrice)
	nop(SLOAD)
	s(5) = s(1)
	nop(DUP4)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump855_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block880_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block881_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 9
	nop(PUSH1)
	s(5) = g(collectedUSD)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	call(jump881_0(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump881_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	leq(s(4), s(3))
	call(block1009_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump881_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	gt(s(4), s(3))
	call(block899_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump899_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(5), 0)
	call(block930_0(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))

jump899_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(5), 0)
	call(block929_0(s(4), s(3), s(2), s(1), s(0)))

block899_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	s(3) = 9
	nop(PUSH1)
	s(3) = g(collectedUSD)
	nop(SLOAD)
	s(4) = 7
	nop(PUSH1)
	s(4) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(etherPrice)
	nop(SLOAD)
	s(4) = 1000000000000000000
	nop(PUSH8)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump899_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block929_0(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block930_0(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3000000
	nop(PUSH3)
	s(5) = s(1)
	nop(DUP4)
	s(6) = callvalue
	nop(CALLVALUE)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump930_0(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump930_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	neq(s(3), 0)
	call(block995_0(s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))

jump930_0(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, callvalue, timestamp)=>
	eq(s(3), 0)
	call(block991_0(s(2), s(1), s(0)))

block991_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block995_0(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(totalLimitUSD)
	nop(SLOAD)
	s(4) = 9
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 1026
	nop(PUSH2)
	call(block1026_0(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(totalSupply), l(l5), l(l4), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

