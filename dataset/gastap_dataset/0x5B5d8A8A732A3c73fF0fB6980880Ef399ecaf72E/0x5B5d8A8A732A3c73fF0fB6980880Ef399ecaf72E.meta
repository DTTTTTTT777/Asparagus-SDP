{
    "owned": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "confirmOwner()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "confirmOwner()": [
                257,
                119
            ],
            "changeOwner(address)": [
                190,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "ManualMigration(address)",
            "migrateManual(address)",
            "sealManualMigration()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "Crowdsale(address)",
            "fallback()",
            "depositUSD(address,uint256)",
            "mintTokens(address,uint256,uint256)",
            "startTokensSale(address,uint256,uint256,uint256,uint256)",
            "timeToFinishTokensSale()",
            "finishTokensSale(uint256)",
            "withdrawBack()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "ManualMigration(address)": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "migrateManual(address)": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "sealManualMigration()": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "Crowdsale(address)": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_valueUSD": "uint256"
                },
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "mintTokens(address,uint256,uint256)": {
                "argument": {
                    "_valueUSD": "uint256",
                    "_valueWei": "uint256"
                },
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "startTokensSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_crowdsaleDurationDays": "uint256",
                    "_totalLimitUSD": "uint256",
                    "_minimalSuccessUSD": "uint256",
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "timeToFinishTokensSale()": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "finishTokensSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "etherPrice": "uint256",
                    "totalLimitUSD": "uint256",
                    "minimalSuccessUSD": "uint256",
                    "collectedUSD": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "numberOfInvestors": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block3351": [
                "multisigEther.send(this.balance)"
            ],
            "jump2032_0": [
                "coin.transfer(beneficiary, coinToSend)",
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "jump2032": [
                "coin.transfer(beneficiary, coinToSend)",
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "jump6002": [
                "coin.transfer(owner, remains)",
                "coin.transfer(owner, remains)"
            ],
            "jump5127": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "jump2766": [
                "coin.transferFrom(msg.sender, address(this), _value)",
                "coin.transferFrom(msg.sender, address(this), _value)"
            ],
            "jump4787": [
                "coin.transferOwnership(owner)",
                "coin.transferOwnership(owner)"
            ],
            "jump3876": [
                "coin.burn(remains)",
                "coin.burn(remains)"
            ],
            "block5127": [
                "owner.send(this.balance)"
            ],
            "jump4099": [
                "payee.send(payment)",
                "payee.send(payment)"
            ],
            "block4099": [
                "payee.send(payment)"
            ],
            "block3661": [
                "coin.balanceOf(this)"
            ],
            "jump3661": [
                "coin.balanceOf(this)",
                "coin.balanceOf(this)"
            ],
            "block4787": [
                "coin.transferOwnership(owner)"
            ],
            "block2935": [
                "coin.burn(_value)"
            ],
            "block3876": [
                "coin.burn(remains)"
            ],
            "block2766": [
                "coin.transferFrom(msg.sender, address(this), _value)"
            ],
            "jump2935": [
                "coin.burn(_value)",
                "coin.burn(_value)"
            ],
            "block6002": [
                "coin.transfer(owner, remains)"
            ],
            "block2032_0": [
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "block2032": [
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "jump3351": [
                "multisigEther.send(this.balance)",
                "multisigEther.send(this.balance)"
            ]
        }
    },
    "Fund": {
        "function_list": [
            "transferFund(address,uint256)"
        ],
        "initial_state": {
            "transferFund(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump4585": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)",
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ],
            "block4894_2": [
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "block3792": [
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "block4894_0": [
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "block4894_1": [
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "block3792_2": [
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "block3792_0": [
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "block3792_1": [
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "jump5167_0": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)",
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "jump5167_1": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)",
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "jump5167_2": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)",
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "jump1855_0": [
                "ethAddress.send(roundedInvestment)",
                "ethAddress.send(roundedInvestment)"
            ],
            "jump1855_1": [
                "ethAddress.send(roundedInvestment)",
                "ethAddress.send(roundedInvestment)"
            ],
            "block4585_1": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ],
            "jump4093_2": [
                "tokenFund.issueTokens(supportAddress, percent)",
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "jump4093_1": [
                "tokenFund.issueTokens(supportAddress, percent)",
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "jump4093_0": [
                "tokenFund.issueTokens(supportAddress, percent)",
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "jump4894_0": [
                "tokenFund.issueTokens(multisig, 3 * percent)",
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "jump4894_1": [
                "tokenFund.issueTokens(multisig, 3 * percent)",
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "jump4894_2": [
                "tokenFund.issueTokens(multisig, 3 * percent)",
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "jump1855": [
                "ethAddress.send(roundedInvestment)",
                "ethAddress.send(roundedInvestment)"
            ],
            "jump5167": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)",
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "block1855": [
                "ethAddress.send(roundedInvestment)"
            ],
            "jump4585_2": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)",
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ],
            "jump4585_1": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)",
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ],
            "jump4585_0": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)",
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ],
            "block5167_2": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "block5167_0": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "block5167_1": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "block4093": [
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "jump4093": [
                "tokenFund.issueTokens(supportAddress, percent)",
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "block4093_2": [
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "block2439": [
                "tokenFund.withdrawTokens(tokenCount)"
            ],
            "block5167": [
                "tokenFund.issueTokens(_for, tokenCount - 5 * percent)"
            ],
            "block4585": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ],
            "jump2439": [
                "tokenFund.withdrawTokens(tokenCount)",
                "tokenFund.withdrawTokens(tokenCount)"
            ],
            "block1788_1": [
                "beneficiary.send(msg.value - roundedInvestment)"
            ],
            "block1788_0": [
                "beneficiary.send(msg.value - roundedInvestment)"
            ],
            "block1855_0": [
                "ethAddress.send(roundedInvestment)"
            ],
            "block1855_1": [
                "ethAddress.send(roundedInvestment)"
            ],
            "block4585_2": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ],
            "block4093_1": [
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "block4093_0": [
                "tokenFund.issueTokens(supportAddress, percent)"
            ],
            "jump3792": [
                "tokenFund.issueTokens(multisig, percent)",
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "block1788": [
                "beneficiary.send(msg.value - roundedInvestment)"
            ],
            "block4894": [
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "jump3792_0": [
                "tokenFund.issueTokens(multisig, percent)",
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "jump3792_1": [
                "tokenFund.issueTokens(multisig, percent)",
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "jump3792_2": [
                "tokenFund.issueTokens(multisig, percent)",
                "tokenFund.issueTokens(multisig, percent)"
            ],
            "jump4894": [
                "tokenFund.issueTokens(multisig, 3 * percent)",
                "tokenFund.issueTokens(multisig, 3 * percent)"
            ],
            "block4585_0": [
                "tokenFund.issueTokens(referrals[_for], 3 * percent)"
            ]
        }
    },
    "Token": {
        "function_list": [
            "transferFund(address,uint256)",
            "Crowdsale(address)",
            "fallback()",
            "depositUSD(address,uint256)",
            "mintTokens(address,uint256,uint256)",
            "startTokensSale(address,uint256,uint256,uint256,uint256)",
            "timeToFinishTokensSale()",
            "finishTokensSale(uint256)",
            "withdrawBack()",
            "ManualMigration(address)",
            "migrateManual(address)",
            "sealManualMigration()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "Token(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transferFund(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transferFund(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Crowdsale(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_valueUSD": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mintTokens(address,uint256,uint256)": {
                "argument": {
                    "_valueUSD": "uint256",
                    "_valueWei": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "startTokensSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_crowdsaleDurationDays": "uint256",
                    "_totalLimitUSD": "uint256",
                    "_minimalSuccessUSD": "uint256",
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "timeToFinishTokensSale()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "finishTokensSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "ManualMigration(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "migrateManual(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "sealManualMigration()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Token(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "startTokensSale(address,uint256,uint256,uint256,uint256)": [
                1746,
                361
            ],
            "allowance(address,address)": [
                3090,
                757
            ],
            "transferFrom(address,address,uint256)": [
                1280,
                251
            ],
            "finishTokensSale(uint256)": [
                1438,
                295
            ],
            "approve(address,uint256)": [
                1008,
                119
            ],
            "sealManualMigration()": [
                3329,
                823
            ],
            "transferFund(address,uint256)": [
                3209,
                779
            ],
            "changeOwner(address)": [
                2702,
                625
            ],
            "withdrawBack()": [
                1085,
                141
            ],
            "timeToFinishTokensSale()": [
                2034,
                427
            ],
            "balanceOf(address)": [
                11566,
                926
            ],
            "migrateManual(address)": [
                3352,
                845
            ],
            "confirmOwner()": [
                2846,
                669
            ],
            "transfer(address,uint256)": [
                2769,
                647
            ],
            "depositUSD(address,uint256)": [
                3013,
                735
            ]
        },
        "block_CALL_mapping": {
            "jump11566": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)",
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "block7306": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "block4867": [
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block7063": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "jump7306": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()",
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "jump644": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "block11566": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "jump7063": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()",
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "block644_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump644_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump4867": [
                "msg.sender.call.gas(3000000).value(value)()",
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block644": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ]
        }
    },
    "ProofVote": {
        "function_list": [
            "Token(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transferFund(address,uint256)",
            "transferFund(address,uint256)",
            "Crowdsale(address)",
            "fallback()",
            "depositUSD(address,uint256)",
            "mintTokens(address,uint256,uint256)",
            "startTokensSale(address,uint256,uint256,uint256,uint256)",
            "timeToFinishTokensSale()",
            "finishTokensSale(uint256)",
            "withdrawBack()",
            "ManualMigration(address)",
            "migrateManual(address)",
            "sealManualMigration()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "ProofVote(address)",
            "startVoting(uint256)",
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)",
            "votingInfo()",
            "vote(bool)",
            "finishVoting(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Token(address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "transferFund(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "Crowdsale(address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_valueUSD": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "mintTokens(address,uint256,uint256)": {
                "argument": {
                    "_valueUSD": "uint256",
                    "_valueWei": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "startTokensSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_crowdsaleDurationDays": "uint256",
                    "_totalLimitUSD": "uint256",
                    "_minimalSuccessUSD": "uint256",
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "timeToFinishTokensSale()": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "finishTokensSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "ManualMigration(address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "migrateManual(address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "sealManualMigration()": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "ProofVote(address)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "startVoting(uint256)": {
                "argument": {
                    "_weiReqFund": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)": {
                "argument": {
                    "_weiReqFund": "uint256",
                    "_votingDurationDays": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "votingInfo()": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "vote(bool)": {
                "argument": {},
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            },
            "finishVoting(uint256)": {
                "argument": {
                    "_votesToProcess": "uint256"
                },
                "contract": {
                    "weiReqFund": "uint256",
                    "votingDeadline": "uint256",
                    "numberOfVotes": "uint256",
                    "yea": "uint256",
                    "nay": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "votingInfo()": [
                1564,
                295
            ],
            "startTokensSale(address,uint256,uint256,uint256,uint256)": [
                2342,
                537
            ],
            "allowance(address,address)": [
                4030,
                1021
            ],
            "transferFrom(address,address,uint256)": [
                1721,
                361
            ],
            "finishTokensSale(uint256)": [
                1967,
                449
            ],
            "approve(address,uint256)": [
                1205,
                141
            ],
            "finishVoting(uint256)": [
                3616,
                889
            ],
            "sealManualMigration()": [
                4421,
                1131
            ],
            "transferFund(address,uint256)": [
                4149,
                1043
            ],
            "vote(bool)": [
                2012,
                471
            ],
            "changeOwner(address)": [
                3472,
                845
            ],
            "withdrawBack()": [
                1282,
                163
            ],
            "timeToFinishTokensSale()": [
                2630,
                603
            ],
            "balanceOf(address)": [
                15225,
                926
            ],
            "startVoting(uint256)": [
                1922,
                427
            ],
            "migrateManual(address)": [
                4444,
                1153
            ],
            "confirmOwner()": [
                3685,
                911
            ],
            "transfer(address,uint256)": [
                3539,
                867
            ],
            "depositUSD(address,uint256)": [
                3953,
                999
            ]
        },
        "block_CALL_mapping": {
            "block15225": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "jump8499": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()",
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "jump12613": [
                "owner.call.gas(3000000).value(weiForSend)()",
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "block798_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump15225": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)",
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "block5965": [
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block12613": [
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "block8742": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "block8499": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "jump5965": [
                "msg.sender.call.gas(3000000).value(value)()",
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block798": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump798_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump8742": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()",
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "jump798": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump12757": [
                "migrationAgent.call.gas(3000000).value(this.balance)()",
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ],
            "block12757": [
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ]
        }
    },
    "TokenMigration": {
        "function_list": [
            "ProofVote(address)",
            "startVoting(uint256)",
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)",
            "votingInfo()",
            "vote(bool)",
            "finishVoting(uint256)",
            "Token(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transferFund(address,uint256)",
            "transferFund(address,uint256)",
            "Crowdsale(address)",
            "fallback()",
            "depositUSD(address,uint256)",
            "mintTokens(address,uint256,uint256)",
            "startTokensSale(address,uint256,uint256,uint256,uint256)",
            "timeToFinishTokensSale()",
            "finishTokensSale(uint256)",
            "withdrawBack()",
            "ManualMigration(address)",
            "migrateManual(address)",
            "sealManualMigration()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "TokenMigration(address)",
            "migrate()",
            "setMigrationAgent(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "ProofVote(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "startVoting(uint256)": {
                "argument": {
                    "_weiReqFund": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)": {
                "argument": {
                    "_weiReqFund": "uint256",
                    "_votingDurationDays": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "votingInfo()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "vote(bool)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "finishVoting(uint256)": {
                "argument": {
                    "_votesToProcess": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "Token(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "transferFund(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "Crowdsale(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_valueUSD": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "mintTokens(address,uint256,uint256)": {
                "argument": {
                    "_valueUSD": "uint256",
                    "_valueWei": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "startTokensSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_crowdsaleDurationDays": "uint256",
                    "_totalLimitUSD": "uint256",
                    "_minimalSuccessUSD": "uint256",
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "timeToFinishTokensSale()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "finishTokensSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "ManualMigration(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "migrateManual(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "sealManualMigration()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "TokenMigration(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "migrate()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "votingInfo()": [
                1597,
                295
            ],
            "startTokensSale(address,uint256,uint256,uint256,uint256)": [
                2375,
                537
            ],
            "allowance(address,address)": [
                4196,
                1087
            ],
            "transferFrom(address,address,uint256)": [
                1754,
                361
            ],
            "sealManualMigration()": [
                4587,
                1197
            ],
            "finishTokensSale(uint256)": [
                2000,
                449
            ],
            "approve(address,uint256)": [
                1238,
                141
            ],
            "finishVoting(uint256)": [
                3782,
                955
            ],
            "migrate()": [
                3168,
                757
            ],
            "transferFund(address,uint256)": [
                4315,
                1109
            ],
            "vote(bool)": [
                2045,
                471
            ],
            "setMigrationAgent(address)": [
                2663,
                603
            ],
            "withdrawBack()": [
                1315,
                163
            ],
            "timeToFinishTokensSale()": [
                2730,
                625
            ],
            "balanceOf(address)": [
                16363,
                926
            ],
            "startVoting(uint256)": [
                1955,
                427
            ],
            "migrateManual(address)": [
                4610,
                1219
            ],
            "confirmOwner()": [
                3851,
                977
            ],
            "changeOwner(address)": [
                3638,
                911
            ],
            "transfer(address,uint256)": [
                3705,
                933
            ],
            "depositUSD(address,uint256)": [
                4119,
                1065
            ]
        },
        "block_CALL_mapping": {
            "block831": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump6131": [
                "msg.sender.call.gas(3000000).value(value)()",
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "jump13751": [
                "owner.call.gas(3000000).value(weiForSend)()",
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "block6131": [
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block13751": [
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "block13895": [
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ],
            "jump831_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "block831_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump831": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump13895": [
                "migrationAgent.call.gas(3000000).value(this.balance)()",
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ],
            "block8665": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "block11916": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "block8908": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "jump8665": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()",
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "block16363": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "jump16363": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)",
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "jump8908": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()",
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "jump11916": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ]
        }
    },
    "ProofFund": {
        "function_list": [
            "TokenMigration(address)",
            "migrate()",
            "setMigrationAgent(address)",
            "ProofVote(address)",
            "startVoting(uint256)",
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)",
            "votingInfo()",
            "vote(bool)",
            "finishVoting(uint256)",
            "Token(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transferFund(address,uint256)",
            "transferFund(address,uint256)",
            "Crowdsale(address)",
            "fallback()",
            "depositUSD(address,uint256)",
            "mintTokens(address,uint256,uint256)",
            "startTokensSale(address,uint256,uint256,uint256,uint256)",
            "timeToFinishTokensSale()",
            "finishTokensSale(uint256)",
            "withdrawBack()",
            "ManualMigration(address)",
            "migrateManual(address)",
            "sealManualMigration()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "ProofFund(address)",
            "addExternalController(address)",
            "removeExternalController(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "TokenMigration(address)": {
                "argument": {},
                "contract": {}
            },
            "migrate()": {
                "argument": {},
                "contract": {}
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "ProofVote(address)": {
                "argument": {},
                "contract": {}
            },
            "startVoting(uint256)": {
                "argument": {
                    "_weiReqFund": "uint256"
                },
                "contract": {}
            },
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)": {
                "argument": {
                    "_weiReqFund": "uint256",
                    "_votingDurationDays": "uint256"
                },
                "contract": {}
            },
            "votingInfo()": {
                "argument": {},
                "contract": {}
            },
            "vote(bool)": {
                "argument": {},
                "contract": {}
            },
            "finishVoting(uint256)": {
                "argument": {
                    "_votesToProcess": "uint256"
                },
                "contract": {}
            },
            "Token(address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFund(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "Crowdsale(address)": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_valueUSD": "uint256"
                },
                "contract": {}
            },
            "mintTokens(address,uint256,uint256)": {
                "argument": {
                    "_valueUSD": "uint256",
                    "_valueWei": "uint256"
                },
                "contract": {}
            },
            "startTokensSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_crowdsaleDurationDays": "uint256",
                    "_totalLimitUSD": "uint256",
                    "_minimalSuccessUSD": "uint256",
                    "_etherPrice": "uint256"
                },
                "contract": {}
            },
            "timeToFinishTokensSale()": {
                "argument": {},
                "contract": {}
            },
            "finishTokensSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {}
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {}
            },
            "ManualMigration(address)": {
                "argument": {},
                "contract": {}
            },
            "migrateManual(address)": {
                "argument": {},
                "contract": {}
            },
            "sealManualMigration()": {
                "argument": {},
                "contract": {}
            },
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {}
            },
            "ProofFund(address)": {
                "argument": {},
                "contract": {}
            },
            "addExternalController(address)": {
                "argument": {},
                "contract": {}
            },
            "removeExternalController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "votingInfo()": [
                1619,
                295
            ],
            "removeExternalController(address)": [
                1885,
                383
            ],
            "startTokensSale(address,uint256,uint256,uint256,uint256)": [
                2464,
                559
            ],
            "allowance(address,address)": [
                4352,
                1131
            ],
            "transferFrom(address,address,uint256)": [
                1776,
                361
            ],
            "sealManualMigration()": [
                4743,
                1241
            ],
            "finishTokensSale(uint256)": [
                2089,
                471
            ],
            "approve(address,uint256)": [
                1260,
                141
            ],
            "addExternalController(address)": [
                3257,
                779
            ],
            "finishVoting(uint256)": [
                3938,
                999
            ],
            "migrate()": [
                3324,
                801
            ],
            "transferFund(address,uint256)": [
                4471,
                1153
            ],
            "vote(bool)": [
                2134,
                493
            ],
            "setMigrationAgent(address)": [
                2752,
                625
            ],
            "withdrawBack()": [
                1337,
                163
            ],
            "timeToFinishTokensSale()": [
                2819,
                647
            ],
            "balanceOf(address)": [
                16903,
                926
            ],
            "startVoting(uint256)": [
                2044,
                449
            ],
            "migrateManual(address)": [
                4766,
                1263
            ],
            "confirmOwner()": [
                4007,
                1021
            ],
            "changeOwner(address)": [
                3794,
                955
            ],
            "transfer(address,uint256)": [
                3861,
                977
            ],
            "depositUSD(address,uint256)": [
                4275,
                1109
            ]
        },
        "block_CALL_mapping": {
            "block8994": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "jump14435": [
                "migrationAgent.call.gas(3000000).value(this.balance)()",
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ],
            "block14291": [
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "jump12456": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "block12456": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "block853_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump16903": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)",
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "jump6287": [
                "msg.sender.call.gas(3000000).value(value)()",
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "jump8994": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()",
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "jump14291": [
                "owner.call.gas(3000000).value(weiForSend)()",
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "block853": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump9237": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()",
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "block9237": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "block6287": [
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block16903": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "jump853_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "block14435": [
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ],
            "jump853": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ]
        }
    },
    "Proof": {
        "function_list": [
            "ProofFund(address)",
            "addExternalController(address)",
            "removeExternalController(address)",
            "TokenMigration(address)",
            "migrate()",
            "setMigrationAgent(address)",
            "ProofVote(address)",
            "startVoting(uint256)",
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)",
            "votingInfo()",
            "vote(bool)",
            "finishVoting(uint256)",
            "Token(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transferFund(address,uint256)",
            "transferFund(address,uint256)",
            "Crowdsale(address)",
            "fallback()",
            "depositUSD(address,uint256)",
            "mintTokens(address,uint256,uint256)",
            "startTokensSale(address,uint256,uint256,uint256,uint256)",
            "timeToFinishTokensSale()",
            "finishTokensSale(uint256)",
            "withdrawBack()",
            "ManualMigration(address)",
            "migrateManual(address)",
            "sealManualMigration()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "Proof(address)",
            "setPrice(uint256)",
            "setProofImpl(address)",
            "swypeCode()",
            "setHash(uint16,bytes32)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "ProofFund(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "addExternalController(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "removeExternalController(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "TokenMigration(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "migrate()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "ProofVote(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "startVoting(uint256)": {
                "argument": {
                    "_weiReqFund": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "internalStartVoting(uint256,ProofVote.VoteReason,uint256)": {
                "argument": {
                    "_weiReqFund": "uint256",
                    "_votingDurationDays": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "votingInfo()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "vote(bool)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "finishVoting(uint256)": {
                "argument": {
                    "_votesToProcess": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "Token(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "transferFund(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "Crowdsale(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_valueUSD": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "mintTokens(address,uint256,uint256)": {
                "argument": {
                    "_valueUSD": "uint256",
                    "_valueWei": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "startTokensSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_crowdsaleDurationDays": "uint256",
                    "_totalLimitUSD": "uint256",
                    "_minimalSuccessUSD": "uint256",
                    "_etherPrice": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "timeToFinishTokensSale()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "finishTokensSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "ManualMigration(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "migrateManual(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "sealManualMigration()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "Proof(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "_priceInTokens": "uint256"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "setProofImpl(address)": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "swypeCode()": {
                "argument": {},
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            },
            "setHash(uint16,bytes32)": {
                "argument": {
                    "_swype": "uint16",
                    "_hash": "bytes32"
                },
                "contract": {
                    "priceInTokens": "uint256",
                    "teamFee": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "votingInfo()": [
                1696,
                295
            ],
            "removeExternalController(address)": [
                1962,
                383
            ],
            "startTokensSale(address,uint256,uint256,uint256,uint256)": [
                2659,
                603
            ],
            "transferFrom(address,address,uint256)": [
                1853,
                361
            ],
            "sealManualMigration()": [
                5219,
                1395
            ],
            "finishTokensSale(uint256)": [
                2217,
                493
            ],
            "approve(address,uint256)": [
                1337,
                141
            ],
            "addExternalController(address)": [
                3495,
                845
            ],
            "finishVoting(uint256)": [
                4308,
                1109
            ],
            "migrate()": [
                3562,
                867
            ],
            "transferFund(address,uint256)": [
                4947,
                1307
            ],
            "vote(bool)": [
                2262,
                515
            ],
            "setMigrationAgent(address)": [
                2947,
                669
            ],
            "swypeCode()": [
                2166,
                471
            ],
            "withdrawBack()": [
                1414,
                163
            ],
            "setPrice(uint256)": [
                3585,
                889
            ],
            "timeToFinishTokensSale()": [
                3014,
                691
            ],
            "balanceOf(address)": [
                18452,
                926
            ],
            "startVoting(uint256)": [
                2121,
                449
            ],
            "migrateManual(address)": [
                5242,
                1417
            ],
            "confirmOwner()": [
                4377,
                1131
            ],
            "depositUSD(address,uint256)": [
                4751,
                1263
            ],
            "setProofImpl(address)": [
                2592,
                581
            ],
            "changeOwner(address)": [
                4164,
                1065
            ],
            "transfer(address,uint256)": [
                4231,
                1087
            ],
            "allowance(address,address)": [
                4828,
                1285
            ],
            "setHash(uint16,bytes32)": [
                4457,
                1175
            ]
        },
        "block_CALL_mapping": {
            "jump13423": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "block6763": [
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block8559": [
                "ProofAbstract(proofImpl).swypeCode(msg.sender)"
            ],
            "block15600": [
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ],
            "block15456": [
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "jump16786": [
                "ProofAbstract(proofImpl).setHash(msg.sender, _swype, _hash)",
                "ProofAbstract(proofImpl).setHash(msg.sender, _swype, _hash)"
            ],
            "jump15456": [
                "owner.call.gas(3000000).value(weiForSend)()",
                "owner.call.gas(3000000).value(weiForSend)()"
            ],
            "block16786": [
                "ProofAbstract(proofImpl).setHash(msg.sender, _swype, _hash)"
            ],
            "jump8559": [
                "ProofAbstract(proofImpl).swypeCode(msg.sender)",
                "ProofAbstract(proofImpl).swypeCode(msg.sender)"
            ],
            "jump10039": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()",
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "block10039": [
                "crowdsaleOwner.call.gas(3000000).value(minimalSuccessUSD * 1000000000000000000 / etherPrice)()"
            ],
            "jump930_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump930": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()",
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "jump9796": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()",
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "jump18452": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)",
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "block18452": [
                "ERC20(migrationHost).balanceOf(_tokensHolder)"
            ],
            "jump6763": [
                "msg.sender.call.gas(3000000).value(value)()",
                "msg.sender.call.gas(3000000).value(value)()"
            ],
            "block930_0": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ],
            "block9796": [
                "crowdsaleOwner.call.gas(3000000).value(this.balance)()"
            ],
            "block13423": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "jump15600": [
                "migrationAgent.call.gas(3000000).value(this.balance)()",
                "migrationAgent.call.gas(3000000).value(this.balance)()"
            ],
            "block930": [
                "msg.sender.call.gas(3000000).value(msg.value - valueWei)()"
            ]
        }
    }
}