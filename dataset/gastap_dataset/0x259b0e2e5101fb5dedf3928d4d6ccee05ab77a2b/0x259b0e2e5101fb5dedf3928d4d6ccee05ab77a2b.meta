{
    "Utils": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                126,
                97
            ],
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Managed": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {}
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptManagement()": [
                277,
                119
            ],
            "transferManagement(address)": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptOwnership()": [
                223,
                97
            ],
            "transferOwnership(address)": [
                420,
                163
            ],
            "owner()": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump876": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block876": [
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "SmartTokenController": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {}
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {}
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "disableTokenTransfers(bool)": [
                500,
                185
            ],
            "transferTokenOwnership(address)": [
                169,
                75
            ],
            "owner()": [
                547,
                207
            ],
            "acceptTokenOwnership()": [
                236,
                97
            ],
            "transferOwnership(address)": [
                721,
                251
            ],
            "acceptOwnership()": [
                477,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2182": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump1401": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "block1764": [
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "block1152": [
                "token.transferOwnership(_newOwner)"
            ],
            "block2182": [
                "_token.transfer(_to, _amount)"
            ],
            "block2970": [
                "token.disableTransfers(_disable)"
            ],
            "jump1764": [
                "token.withdrawTokens(_token, _to, _amount)",
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "jump2970": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block1401": [
                "token.acceptOwnership()"
            ],
            "jump1152": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ]
        }
    },
    "IERC20Token": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BancorChanger": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "changeableTokenCount()",
            "changeableToken(uint16)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "BancorChanger(ISmartToken,IBancorFormula,uint32,IERC20Token,uint32)",
            "reserveTokenCount()",
            "changeableTokenCount()",
            "changeableToken(uint16)",
            "setFormula(IBancorFormula)",
            "setQuickBuyPath(IERC20Token[])",
            "clearQuickBuyPath()",
            "getQuickBuyPathLength()",
            "hasQuickBuyEtherToken()",
            "getQuickBuyEtherToken()",
            "disableChanging(bool)",
            "setChangeFee(uint32)",
            "getChangeFeeAmount(uint256)",
            "addReserve(IERC20Token,uint32,bool)",
            "updateReserve(IERC20Token,uint32,bool,uint256)",
            "disableReservePurchases(IERC20Token,bool)",
            "getReserveBalance(IERC20Token)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "getPurchaseReturn(IERC20Token,uint256)",
            "getSaleReturn(IERC20Token,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "buy(IERC20Token,uint256,uint256)",
            "sell(IERC20Token,uint256,uint256)",
            "quickChange(IERC20Token[],uint256,uint256)",
            "quickBuy(uint256)",
            "getSaleReturn(IERC20Token,uint256,uint256)",
            "ensureAllowance(IERC20Token,address,uint256)",
            "claimTokens(IERC20Token,address,uint256)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "Utils()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "changeableTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "changeableToken(uint16)": {
                "argument": {
                    "_tokenIndex": "uint16"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getReturn(IERC20Token,IERC20Token,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "change(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "BancorChanger(ISmartToken,IBancorFormula,uint32,IERC20Token,uint32)": {
                "argument": {
                    "_maxChangeFee": "uint32",
                    "_reserveRatio": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "reserveTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "setFormula(IBancorFormula)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "setQuickBuyPath(IERC20Token[])": {
                "argument": {
                    "_path": "IERC20Token[]"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "clearQuickBuyPath()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getQuickBuyPathLength()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "hasQuickBuyEtherToken()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getQuickBuyEtherToken()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "disableChanging(bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "setChangeFee(uint32)": {
                "argument": {
                    "_changeFee": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getChangeFeeAmount(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "addReserve(IERC20Token,uint32,bool)": {
                "argument": {
                    "_ratio": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "updateReserve(IERC20Token,uint32,bool,uint256)": {
                "argument": {
                    "_ratio": "uint32",
                    "_virtualBalance": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "disableReservePurchases(IERC20Token,bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getReserveBalance(IERC20Token)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getPurchaseReturn(IERC20Token,uint256)": {
                "argument": {
                    "_depositAmount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256)": {
                "argument": {
                    "_sellAmount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "buy(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_depositAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "sell(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "quickChange(IERC20Token[],uint256,uint256)": {
                "argument": {
                    "_path": "IERC20Token[]",
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "quickBuy(uint256)": {
                "argument": {
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "ensureAllowance(IERC20Token,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "claimTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CHANGE_FEE": "uint32",
                    "version": "string",
                    "changerType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxChangeFee": "uint32",
                    "changeFee": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "clearQuickBuyPath()": [
                1665,
                286
            ],
            "disableChanging(bool)": [
                638,
                22
            ],
            "changeableToken(uint16)": [
                1688,
                308
            ],
            "getQuickBuyEtherToken()": [
                3347,
                748
            ],
            "disableTokenTransfers(bool)": [
                2570,
                528
            ],
            "transferTokenOwnership(address)": [
                901,
                88
            ],
            "acceptTokenOwnership()": [
                1207,
                154
            ],
            "getChangeFeeAmount(uint256)": [
                1513,
                242
            ],
            "reserveTokenCount()": [
                2798,
                616
            ],
            "acceptManagement()": [
                3434,
                770
            ],
            "quickBuy(uint256)": [
                2495,
                484
            ],
            "owner()": [
                15214,
                831
            ],
            "setChangeFee(uint32)": [
                2617,
                550
            ],
            "transferOwnership(address)": [
                4271,
                990
            ],
            "getQuickBuyPathLength()": [
                2755,
                594
            ],
            "changeableTokenCount()": [
                1945,
                352
            ],
            "transferManagement(address)": [
                3949,
                902
            ],
            "hasQuickBuyEtherToken()": [
                3300,
                726
            ],
            "acceptOwnership()": [
                2547,
                506
            ]
        },
        "block_CALL_mapping": {
            "jump13689_1": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump11756": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13689_3": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump13689_2": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump13689_4": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump13689_0": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block5675_18": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump11756_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block13416": [
                "token.totalSupply()"
            ],
            "block11091_0": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block11091_1": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block15945": [
                "changer.getQuickBuyEtherToken()"
            ],
            "jump14457_1": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump14457_0": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "block14457_1": [
                "token.issue(msg.sender, amount)"
            ],
            "block14457_0": [
                "token.issue(msg.sender, amount)"
            ],
            "jump5675_16": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_17": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump10248_1": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump10248_0": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block14193": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump4558_1": [
                "etherToken.deposit.value(msg.value)()",
                "etherToken.deposit.value(msg.value)()"
            ],
            "jump14193_0": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump20808": [
                "_token.transferFrom(_from, this, _amount)",
                "_token.transferFrom(_from, this, _amount)"
            ],
            "jump15945": [
                "changer.getQuickBuyEtherToken()",
                "changer.getQuickBuyEtherToken()"
            ],
            "jump16199": [
                "etherToken.withdrawTo(msg.sender, _amount)",
                "etherToken.withdrawTo(msg.sender, _amount)"
            ],
            "jump19356_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump5675_19": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_10": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_11": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_12": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_13": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump8259": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "jump5675_15": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump16444": [
                "toToken.transfer(msg.sender, _amount)",
                "toToken.transfer(msg.sender, _amount)"
            ],
            "block10904": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block5119": [
                "toToken.transfer(msg.sender, returnAmount)"
            ],
            "block10248_0": [
                "token.balanceOf(msg.sender)"
            ],
            "jump5675_2": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block11324_1": [
                "token.totalSupply()"
            ],
            "block11324_0": [
                "token.totalSupply()"
            ],
            "jump13006_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump13006_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump11091_0": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump11091_1": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump13006_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump13689": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block5675_20": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_11": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_6": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block10492_0": [
                "token.totalSupply()"
            ],
            "block10492_1": [
                "token.totalSupply()"
            ],
            "jump13416": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block15214": [
                "smartToken.owner()"
            ],
            "jump5675_20": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump19831_4": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump21089": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "jump19831_0": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump19831_1": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump19831_2": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump19831_3": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump11756_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11756_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11756_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block10904_1": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block13006_2": [
                "token.owner()"
            ],
            "block13006_3": [
                "token.owner()"
            ],
            "block13006_0": [
                "token.owner()"
            ],
            "block13006_1": [
                "token.owner()"
            ],
            "block13006_4": [
                "token.owner()"
            ],
            "block11756": [
                "token.totalSupply()"
            ],
            "block5675_19": [
                "_reserveToken.balanceOf(this)"
            ],
            "block4827": [
                "this.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block19356": [
                "token.owner()"
            ],
            "block10248": [
                "token.balanceOf(msg.sender)"
            ],
            "jump4827": [
                "this.quickChange(quickBuyPath, msg.value, _minReturn)",
                "this.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "jump10492_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump10492_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block20343": [
                "token.destroy(_from, _amount)"
            ],
            "jump13416_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13416_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13416_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13416_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block13416_1": [
                "token.totalSupply()"
            ],
            "block13416_0": [
                "token.totalSupply()"
            ],
            "block13416_3": [
                "token.totalSupply()"
            ],
            "block13416_2": [
                "token.totalSupply()"
            ],
            "jump19356_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19356_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19356_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19356_1": [
                "token.owner()",
                "token.owner()"
            ],
            "block16444": [
                "toToken.transfer(msg.sender, _amount)"
            ],
            "jump13006_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump11324": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump10904_1": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block14647_0": [
                "token.totalSupply()"
            ],
            "jump13006_3": [
                "token.owner()",
                "token.owner()"
            ],
            "block10248_1": [
                "token.balanceOf(msg.sender)"
            ],
            "block13416_4": [
                "token.totalSupply()"
            ],
            "jump11324_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump6534": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "jump8622": [
                "token.withdrawTokens(_token, _to, _amount)",
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "block14193_0": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block14193_1": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump11324_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14647": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block15581": [
                "changer.change(fromToken, toToken, _amount, i == pathLength - 2 ? _minReturn : 1)"
            ],
            "block21599": [
                "_token.approve(_spender, 0)"
            ],
            "block5119_1": [
                "toToken.transfer(msg.sender, returnAmount)"
            ],
            "block10492": [
                "token.totalSupply()"
            ],
            "jump13416_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump21599": [
                "_token.approve(_spender, 0)",
                "_token.approve(_spender, 0)"
            ],
            "jump5119_1": [
                "toToken.transfer(msg.sender, returnAmount)",
                "toToken.transfer(msg.sender, returnAmount)"
            ],
            "jump5119_0": [
                "toToken.transfer(msg.sender, returnAmount)",
                "toToken.transfer(msg.sender, returnAmount)"
            ],
            "jump19356": [
                "token.owner()",
                "token.owner()"
            ],
            "block9628": [
                "_token.transfer(_to, _amount)"
            ],
            "block14457": [
                "token.issue(msg.sender, amount)"
            ],
            "block10904_0": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block13006": [
                "token.owner()"
            ],
            "block19831_0": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump5675_14": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block19831": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20808": [
                "_token.transferFrom(_from, this, _amount)"
            ],
            "block6176": [
                "token.totalSupply()"
            ],
            "block19831_2": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block21830": [
                "_token.approve(_spender, _value)"
            ],
            "jump10904_0": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block5675": [
                "_reserveToken.balanceOf(this)"
            ],
            "block13689_3": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block13689_2": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block13689_1": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block13689_0": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump14193_1": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block13689_4": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump12560": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "jump10248": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump13006": [
                "token.owner()",
                "token.owner()"
            ],
            "block11756_0": [
                "token.totalSupply()"
            ],
            "jump10492": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block21369": [
                "_token.allowance(this, _spender)"
            ],
            "block11756_3": [
                "token.totalSupply()"
            ],
            "jump14457": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "block11091": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block5675_17": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_4": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_5": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_6": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_7": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_0": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_1": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_2": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_3": [
                "_reserveToken.balanceOf(this)"
            ],
            "block15756": [
                "changer.hasQuickBuyEtherToken()"
            ],
            "block5675_8": [
                "_reserveToken.balanceOf(this)"
            ],
            "block5675_9": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump4558_0": [
                "etherToken.deposit.value(msg.value)()",
                "etherToken.deposit.value(msg.value)()"
            ],
            "jump5675_8": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_9": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump20564": [
                "token.issue(this, _amount)",
                "token.issue(this, _amount)"
            ],
            "jump5675_3": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_0": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_1": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block13689": [
                "formula.calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump5675_7": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_4": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5675_5": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump11091": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block20564": [
                "token.issue(this, _amount)"
            ],
            "jump21369": [
                "_token.allowance(this, _spender)",
                "_token.allowance(this, _spender)"
            ],
            "block6964": [
                "token.owner()"
            ],
            "jump19831": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block11324": [
                "token.totalSupply()"
            ],
            "block19831_3": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump15214": [
                "smartToken.owner()",
                "smartToken.owner()"
            ],
            "block19831_1": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block19831_4": [
                "formula.calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump14193": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump15756": [
                "changer.hasQuickBuyEtherToken()",
                "changer.hasQuickBuyEtherToken()"
            ],
            "block11756_1": [
                "token.totalSupply()"
            ],
            "block5675_16": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump21830": [
                "_token.approve(_spender, _value)",
                "_token.approve(_spender, _value)"
            ],
            "block5675_14": [
                "_reserveToken.balanceOf(this)"
            ],
            "block21089": [
                "_token.allowance(this, _spender)"
            ],
            "block5675_12": [
                "_reserveToken.balanceOf(this)"
            ],
            "block11756_2": [
                "token.totalSupply()"
            ],
            "block5675_10": [
                "_reserveToken.balanceOf(this)"
            ],
            "block12560": [
                "token.disableTransfers(_disable)"
            ],
            "block19356_0": [
                "token.owner()"
            ],
            "block19356_1": [
                "token.owner()"
            ],
            "block19356_2": [
                "token.owner()"
            ],
            "block19356_3": [
                "token.owner()"
            ],
            "block19356_4": [
                "token.owner()"
            ],
            "jump5675": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump4827_0": [
                "this.quickChange(quickBuyPath, msg.value, _minReturn)",
                "this.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "jump4827_1": [
                "this.quickChange(quickBuyPath, msg.value, _minReturn)",
                "this.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block16199": [
                "etherToken.withdrawTo(msg.sender, _amount)"
            ],
            "jump9628": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump6964": [
                "token.owner()",
                "token.owner()"
            ],
            "block4827_0": [
                "this.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block6534": [
                "token.transferOwnership(_newOwner)"
            ],
            "block4827_1": [
                "this.quickChange(quickBuyPath, msg.value, _minReturn)"
            ],
            "block5119_0": [
                "toToken.transfer(msg.sender, returnAmount)"
            ],
            "jump6176": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block14647_1": [
                "token.totalSupply()"
            ],
            "block5675_15": [
                "_reserveToken.balanceOf(this)"
            ],
            "block4558_1": [
                "etherToken.deposit.value(msg.value)()"
            ],
            "block4558_0": [
                "etherToken.deposit.value(msg.value)()"
            ],
            "block8259": [
                "token.acceptOwnership()"
            ],
            "jump5119": [
                "toToken.transfer(msg.sender, returnAmount)",
                "toToken.transfer(msg.sender, returnAmount)"
            ],
            "block5675_13": [
                "_reserveToken.balanceOf(this)"
            ],
            "block4558": [
                "etherToken.deposit.value(msg.value)()"
            ],
            "jump5675_18": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block14647": [
                "token.totalSupply()"
            ],
            "block8622": [
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "jump4558": [
                "etherToken.deposit.value(msg.value)()",
                "etherToken.deposit.value(msg.value)()"
            ],
            "jump15581": [
                "changer.change(fromToken, toToken, _amount, i == pathLength - 2 ? _minReturn : 1)",
                "changer.change(fromToken, toToken, _amount, i == pathLength - 2 ? _minReturn : 1)"
            ],
            "jump10904": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump20343": [
                "token.destroy(_from, _amount)",
                "token.destroy(_from, _amount)"
            ],
            "jump14647_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14647_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ]
        }
    }
}