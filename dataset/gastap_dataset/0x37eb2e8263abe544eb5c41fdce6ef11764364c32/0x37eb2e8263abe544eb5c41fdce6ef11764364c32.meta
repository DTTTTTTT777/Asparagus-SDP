{
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "LegendsCrowdfund": {
        "function_list": [
            "LegendsCrowdfund(address,uint256,uint256)",
            "setTokenContract(LegendsToken)",
            "purchaseMembership(address,address)"
        ],
        "initial_state": {
            "LegendsCrowdfund(address,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_limitVIP": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "limitVIP": "uint256",
                    "totalETH": "uint256",
                    "totalVIP": "uint256"
                }
            },
            "setTokenContract(LegendsToken)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "limitVIP": "uint256",
                    "totalETH": "uint256",
                    "totalVIP": "uint256"
                }
            },
            "purchaseMembership(address,address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "limitVIP": "uint256",
                    "totalETH": "uint256",
                    "totalVIP": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "purchaseMembership(address,address)": [
                483,
                185
            ]
        },
        "block_CALL_mapping": {
            "block1302": [
                "exitAddress.send(msg.value)"
            ],
            "jump1840": [
                "legendsToken.addTokens(recipient, VIP)",
                "legendsToken.addTokens(recipient, VIP)"
            ],
            "block1840": [
                "legendsToken.addTokens(recipient, VIP)"
            ],
            "jump1302": [
                "exitAddress.send(msg.value)",
                "exitAddress.send(msg.value)"
            ]
        }
    },
    "LegendsToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "LegendsToken(address,address,uint256,bool)",
            "addTokens(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "fallback()",
            "purchaseMembership(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "LegendsToken(address,address,uint256,bool)": {
                "argument": {
                    "_start": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "addTokens(address,uint256)": {
                "argument": {
                    "VIP": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "purchaseMembership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                1795,
                405
            ],
            "approve(address,uint256)": [
                642,
                97
            ],
            "purchaseMembership(address)": [
                1319,
                273
            ],
            "totalSupply()": [
                743,
                119
            ],
            "balanceOf(address)": [
                1373,
                295
            ],
            "transferFrom(address,address,uint256)": [
                786,
                141
            ],
            "addTokens(address,uint256)": [
                1155,
                229
            ],
            "transfer(address,uint256)": [
                1651,
                361
            ]
        },
        "block_CALL_mapping": {
            "block471_0": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, msg.sender)"
            ],
            "block471": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, msg.sender)"
            ],
            "jump471_0": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, msg.sender)",
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, msg.sender)"
            ],
            "jump471": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, msg.sender)",
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, msg.sender)"
            ],
            "block3998": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, recipient)"
            ],
            "jump3998": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, recipient)",
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender, recipient)"
            ]
        }
    }
}