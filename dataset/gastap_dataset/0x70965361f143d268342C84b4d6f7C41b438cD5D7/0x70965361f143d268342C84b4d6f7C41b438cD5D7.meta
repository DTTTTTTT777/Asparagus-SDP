{
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "ERC20Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "allowance(address,address)": [
                1310,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "block3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ],
            "jump3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)",
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "LuckcoinContract": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "fallback()",
            "LuckcoinContract(uint256,uint256)",
            "setLKCExchangeRate(uint256)",
            "crowdsaleOpen(bool)",
            "LKCTotalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "allowance(address,address)",
            "withdraw(address)",
            "mintLKCToken(address,uint256)",
            "mintTokens(address,uint256)",
            "burnTokens(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "LuckcoinContract(uint256,uint256)": {
                "argument": {
                    "_totalSupply": "uint256",
                    "__LKCExchangeRate": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "setLKCExchangeRate(uint256)": {
                "argument": {
                    "_LKCExchangeRate": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "crowdsaleOpen(bool)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "LKCTotalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "withdraw(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "mintLKCToken(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "mintTokens(address,uint256)": {
                "argument": {
                    "_sendAmount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "etherChange": "uint256",
                    "totalRemainSupply": "uint256",
                    "LKCExchangeRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1366,
                339
            ],
            "allowance(address,address)": [
                2162,
                537
            ],
            "withdraw(address)": [
                1025,
                251
            ],
            "burnTokens(address,uint256)": [
                643,
                119
            ],
            "transferFrom(address,address,uint256)": [
                763,
                163
            ],
            "approve(address,uint256)": [
                542,
                97
            ],
            "crowdsaleOpen(bool)": [
                1899,
                471
            ],
            "changeOwner(address)": [
                1731,
                427
            ],
            "setLKCExchangeRate(uint256)": [
                2117,
                515
            ],
            "approveAndCall(address,uint256,bytes)": [
                1946,
                493
            ],
            "mintTokens(address,uint256)": [
                2281,
                559
            ],
            "LKCTotalSupply()": [
                1323,
                317
            ],
            "transfer(address,uint256)": [
                1798,
                449
            ]
        },
        "block_CALL_mapping": {
            "block4410": [
                "multisigAddress.transfer(this.balance)"
            ],
            "block5918": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump5918": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4410": [
                "multisigAddress.transfer(this.balance)",
                "multisigAddress.transfer(this.balance)"
            ]
        }
    }
}