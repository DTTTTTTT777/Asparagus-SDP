{
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20StandardToken": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ERC20StandardToken()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "getRealTokenAmount(uint256)",
            "doTransfer(address,address,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "ERC20StandardToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "getRealTokenAmount(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensIssued": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "symbol()": [
                726,
                207
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "totalSupply()": [
                414,
                119
            ],
            "name()": [
                169,
                75
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "allowance(address,address)": [
                1036,
                273
            ],
            "transfer(address,uint256)": [
                870,
                229
            ],
            "getRealTokenAmount(uint256)": [
                971,
                251
            ],
            "decimals()": [
                590,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "Owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                81,
                75
            ],
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Manageable": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "owner()",
            "transferOwnership(address)",
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "Manageable()": {
                "argument": {},
                "contract": {}
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                103,
                75
            ],
            "setManager(address,bool)": [
                190,
                97
            ],
            "transferOwnership(address)": [
                269,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "ReturnableToken": {
        "function_list": [
            "ERC20StandardToken()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "getRealTokenAmount(uint256)",
            "doTransfer(address,address,uint256)",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "owner()",
            "transferOwnership(address)",
            "ReturnableToken()",
            "setReturnAgent(ReturnTokenAgent)",
            "removeReturnAgent(ReturnTokenAgent)",
            "doTransfer(address,address,uint256)"
        ],
        "initial_state": {
            "ERC20StandardToken()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "getRealTokenAmount(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "Manageable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "ReturnableToken()": {
                "argument": {},
                "contract": {}
            },
            "setReturnAgent(ReturnTokenAgent)": {
                "argument": {},
                "contract": {}
            },
            "removeReturnAgent(ReturnTokenAgent)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                390,
                97
            ],
            "symbol()": [
                957,
                251
            ],
            "name()": [
                246,
                75
            ],
            "totalSupply()": [
                491,
                119
            ],
            "owner()": [
                870,
                229
            ],
            "balanceOf(address)": [
                783,
                207
            ],
            "setManager(address,bool)": [
                1259,
                317
            ],
            "transferFrom(address,address,uint256)": [
                534,
                141
            ],
            "transferOwnership(address)": [
                1623,
                405
            ],
            "allowance(address,address)": [
                1504,
                383
            ],
            "transfer(address,uint256)": [
                1338,
                339
            ],
            "getRealTokenAmount(uint256)": [
                1439,
                361
            ],
            "decimals()": [
                667,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump4549": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)",
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ],
            "block4549_0": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ],
            "block4549": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ],
            "jump4549_0": [
                "ReturnTokenAgent(_to).returnToken(_from, _value)",
                "ReturnTokenAgent(_to).returnToken(_from, _value)"
            ]
        }
    },
    "IInvestRestrictions": {
        "function_list": [
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "owner()",
            "transferOwnership(address)",
            "canInvest(address,uint256,uint256)",
            "investHappened(address,uint256)"
        ],
        "initial_state": {
            "Manageable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "canInvest(address,uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "tokensLeft": "uint256"
                },
                "contract": {}
            },
            "investHappened(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setManager(address,bool)": [
                400,
                141
            ],
            "investHappened(address,uint256)": [
                125,
                75
            ],
            "owner()": [
                313,
                119
            ],
            "canInvest(address,uint256,uint256)": [
                202,
                97
            ],
            "transferOwnership(address)": [
                479,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ICrowdsaleFormula": {
        "function_list": [
            "howManyTokensForEther(uint256)",
            "tokensLeft()"
        ],
        "initial_state": {
            "howManyTokensForEther(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {}
            },
            "tokensLeft()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokensLeft()": [
                147,
                97
            ],
            "howManyTokensForEther(uint256)": [
                78,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "owner()",
            "transferOwnership(address)",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Manageable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                223,
                97
            ],
            "setManager(address,bool)": [
                310,
                119
            ],
            "transferOwnership(address)": [
                389,
                141
            ]
        },
        "block_CALL_mapping": {
            "block798": [
                "_token.transfer(_to, _amount)"
            ],
            "jump798": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "BCSCrowdsale": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "howManyTokensForEther(uint256)",
            "tokensLeft()",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "owner()",
            "transferOwnership(address)",
            "withdrawTokens(IERC20Token,address,uint256)",
            "returnToken(address,uint256)",
            "setReturnableToken(ReturnableToken)",
            "removeReturnableToken(ReturnableToken)",
            "BCSCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256)",
            "fallback()",
            "invest()",
            "returnToken(address,uint256)",
            "canInvest(address,uint256)",
            "howManyTokensForEther(uint256)",
            "getCurrentBonusPct(uint256)",
            "tokensLeft()",
            "amountToBeneficiary()",
            "getState()",
            "withdrawOverpay()",
            "transferToBeneficiary()",
            "makeFailed(bool)",
            "changeBeneficiary(address)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "howManyTokensForEther(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "tokensLeft()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "Manageable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "returnToken(address,uint256)": {
                "argument": {
                    "amountReturned": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "setReturnableToken(ReturnableToken)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "removeReturnableToken(ReturnableToken)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "BCSCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_durationInHours": "uint256",
                    "_goalInWei": "uint256",
                    "_tokensForOneEther": "uint256",
                    "_bonusPct": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "invest()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "canInvest(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "getCurrentBonusPct(uint256)": {
                "argument": {
                    "investment": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "amountToBeneficiary()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "withdrawOverpay()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "transferToBeneficiary()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "makeFailed(bool)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            },
            "changeBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "minimumGoalInWei": "uint256",
                    "tokensForOneEther": "uint256",
                    "realAmountForOneEther": "uint256",
                    "bonusPct": "uint256",
                    "weiCollected": "uint256",
                    "tokensSold": "uint256",
                    "totalInvestments": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "invest()": [
                2535,
                779
            ],
            "makeFailed(bool)": [
                2378,
                713
            ],
            "changeBeneficiary(address)": [
                2468,
                757
            ],
            "tokensLeft()": [
                2335,
                691
            ],
            "howManyTokensForEther(uint256)": [
                460,
                75
            ],
            "amountToBeneficiary()": [
                2425,
                735
            ],
            "owner()": [
                1995,
                603
            ],
            "getCurrentBonusPct(uint256)": [
                1500,
                405
            ],
            "transferToBeneficiary()": [
                1818,
                537
            ],
            "transferOwnership(address)": [
                2592,
                823
            ],
            "setManager(address,bool)": [
                2169,
                647
            ],
            "canInvest(address,uint256)": [
                532,
                97
            ],
            "withdrawOverpay()": [
                777,
                163
            ],
            "getState()": [
                720,
                141
            ],
            "returnToken(address,uint256)": [
                1741,
                515
            ]
        },
        "block_CALL_mapping": {
            "jump8088_22": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_23": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_20": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_21": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_24": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block8088_8": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_1": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_0": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_3": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_2": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_5": [
                "tokenPool.getTokenAmount()"
            ],
            "jump4702": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block8088_7": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_6": [
                "tokenPool.getTokenAmount()"
            ],
            "jump8088": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block4702_0": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block4702_1": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block4702_2": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump6491": [
                "from.transfer(returnedTo[from])",
                "from.transfer(returnedTo[from])"
            ],
            "block8088_24": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_20": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_21": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_22": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_23": [
                "tokenPool.getTokenAmount()"
            ],
            "jump3571": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block3730_0": [
                "tokenPool.token()"
            ],
            "block8088_4": [
                "tokenPool.getTokenAmount()"
            ],
            "block4037": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump7106": [
                "beneficiary.transfer(amount)",
                "beneficiary.transfer(amount)"
            ],
            "block5107": [
                "msg.sender.send(amount)"
            ],
            "block5742": [
                "_token.transfer(_to, _amount)"
            ],
            "block6491": [
                "from.transfer(returnedTo[from])"
            ],
            "block3730_1": [
                "tokenPool.token()"
            ],
            "jump5742": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block8088_15": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_14": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_17": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_16": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_11": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_10": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_13": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_12": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_19": [
                "tokenPool.getTokenAmount()"
            ],
            "block8088_18": [
                "tokenPool.getTokenAmount()"
            ],
            "jump4702_2": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump4702_0": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump4702_1": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump4037": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump8088_0": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump4037_1": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump4037_0": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block6264": [
                "tokenPool.token()"
            ],
            "jump8088_19": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_18": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_13": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_12": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_11": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_10": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_17": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_16": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_15": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_14": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block8088": [
                "tokenPool.getTokenAmount()"
            ],
            "block4037_1": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block4037_0": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block8088_9": [
                "tokenPool.getTokenAmount()"
            ],
            "block3571_1": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block3571_0": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump5107": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "block3730": [
                "tokenPool.token()"
            ],
            "jump6264": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "block3571": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block4702": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block7106": [
                "beneficiary.transfer(amount)"
            ],
            "jump3571_1": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump3571_0": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump8088_9": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_8": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_3": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_2": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_1": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump3730": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "jump8088_7": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_6": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_5": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8088_4": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump3730_0": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "jump3730_1": [
                "tokenPool.token()",
                "tokenPool.token()"
            ]
        }
    },
    "BCSAddBonusCrowdsale": {
        "function_list": [
            "BCSCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256)",
            "fallback()",
            "invest()",
            "returnToken(address,uint256)",
            "canInvest(address,uint256)",
            "howManyTokensForEther(uint256)",
            "getCurrentBonusPct(uint256)",
            "tokensLeft()",
            "amountToBeneficiary()",
            "getState()",
            "withdrawOverpay()",
            "transferToBeneficiary()",
            "makeFailed(bool)",
            "changeBeneficiary(address)",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "howManyTokensForEther(uint256)",
            "tokensLeft()",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Manageable()",
            "transferOwnership(address)",
            "setManager(address,bool)",
            "Owned()",
            "transferOwnership(address)",
            "owner()",
            "transferOwnership(address)",
            "withdrawTokens(IERC20Token,address,uint256)",
            "returnToken(address,uint256)",
            "setReturnableToken(ReturnableToken)",
            "removeReturnableToken(ReturnableToken)",
            "BCSAddBonusCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint8[])",
            "getCurrentBonusPct(uint256)"
        ],
        "initial_state": {
            "BCSCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_durationInHours": "uint256",
                    "_goalInWei": "uint256",
                    "_tokensForOneEther": "uint256",
                    "_bonusPct": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "invest()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "returnToken(address,uint256)": {
                "argument": {
                    "amountReturned": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "canInvest(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "howManyTokensForEther(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "getCurrentBonusPct(uint256)": {
                "argument": {
                    "investment": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "tokensLeft()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "amountToBeneficiary()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "withdrawOverpay()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "transferToBeneficiary()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "makeFailed(bool)": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "changeBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "Manageable()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "setManager(address,bool)": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "setReturnableToken(ReturnableToken)": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "removeReturnableToken(ReturnableToken)": {
                "argument": {},
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            },
            "BCSAddBonusCrowdsale(ITokenPool,IInvestRestrictions,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint8[])": {
                "argument": {
                    "_startTime": "uint256",
                    "_durationInHours": "uint256",
                    "_goalInWei": "uint256",
                    "_tokensForOneEther": "uint256",
                    "_bonusPct": "uint256",
                    "_maxDecreasePct": "uint256",
                    "_decreaseStepPct": "uint256",
                    "_stepDurationDays": "uint256",
                    "_investSteps": "uint256[]",
                    "_bonusPctSteps": "uint8[]"
                },
                "contract": {
                    "decreaseStepPct": "uint256",
                    "stepDuration": "uint256",
                    "maxDecreasePct": "uint256",
                    "investSteps": "uint256[]",
                    "bonusPctSteps": "uint8[]"
                }
            }
        },
        "function_block_mapping": {
            "invest()": [
                2812,
                867
            ],
            "makeFailed(bool)": [
                2655,
                801
            ],
            "howManyTokensForEther(uint256)": [
                515,
                75
            ],
            "changeBeneficiary(address)": [
                2745,
                845
            ],
            "transferOwnership(address)": [
                2869,
                911
            ],
            "tokensLeft()": [
                2612,
                779
            ],
            "amountToBeneficiary()": [
                2702,
                823
            ],
            "owner()": [
                2158,
                647
            ],
            "getCurrentBonusPct(uint256)": [
                1663,
                449
            ],
            "transferToBeneficiary()": [
                1981,
                581
            ],
            "setManager(address,bool)": [
                2446,
                735
            ],
            "canInvest(address,uint256)": [
                587,
                97
            ],
            "withdrawOverpay()": [
                897,
                185
            ],
            "getState()": [
                840,
                163
            ],
            "returnToken(address,uint256)": [
                1904,
                559
            ]
        },
        "block_CALL_mapping": {
            "jump7681": [
                "beneficiary.transfer(amount)",
                "beneficiary.transfer(amount)"
            ],
            "jump8720_6": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block8720_13": [
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_4": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block8720_11": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_16": [
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_3": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_0": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block8720_15": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_18": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_19": [
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_8": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_9": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_21": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_20": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_23": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_22": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_24": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block7066": [
                "from.transfer(returnedTo[from])"
            ],
            "jump3891_0": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump3891_1": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump7066": [
                "from.transfer(returnedTo[from])",
                "from.transfer(returnedTo[from])"
            ],
            "block8720_12": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_0": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_1": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_2": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_3": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_4": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_5": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_6": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_7": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_8": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_9": [
                "tokenPool.getTokenAmount()"
            ],
            "jump6103": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block4050_0": [
                "tokenPool.token()"
            ],
            "block4050_1": [
                "tokenPool.token()"
            ],
            "block4050": [
                "tokenPool.token()"
            ],
            "jump3891": [
                "restrictions.investHappened(msg.sender, msg.value)",
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block4357_0": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block4357_1": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block4357": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump5022_0": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block7681": [
                "beneficiary.transfer(amount)"
            ],
            "jump4357_1": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block8720_10": [
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_5": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_2": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "block3891_0": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "block8720_17": [
                "tokenPool.getTokenAmount()"
            ],
            "block5462": [
                "msg.sender.send(amount)"
            ],
            "jump5022": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block8720_14": [
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_1": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_7": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump4357_0": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "jump5022_1": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump5022_2": [
                "restrictions.canInvest(investor, amount, tokensLeft())",
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block6839": [
                "tokenPool.token()"
            ],
            "jump8720": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump4050_0": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "jump4050_1": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "block3891_1": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump4357": [
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)",
                "tokenPool.token().transferFrom(tokenPool, msg.sender, tokensToBuy)"
            ],
            "block8720": [
                "tokenPool.getTokenAmount()"
            ],
            "block6103": [
                "_token.transfer(_to, _amount)"
            ],
            "jump4050": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "block5022": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump6839": [
                "tokenPool.token()",
                "tokenPool.token()"
            ],
            "block5022_2": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block5022_0": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "block5022_1": [
                "restrictions.canInvest(investor, amount, tokensLeft())"
            ],
            "jump5462": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "block8720_24": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_23": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_22": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_21": [
                "tokenPool.getTokenAmount()"
            ],
            "block8720_20": [
                "tokenPool.getTokenAmount()"
            ],
            "block3891": [
                "restrictions.investHappened(msg.sender, msg.value)"
            ],
            "jump8720_18": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_19": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_14": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_15": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_16": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_17": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_10": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_11": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_12": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ],
            "jump8720_13": [
                "tokenPool.getTokenAmount()",
                "tokenPool.getTokenAmount()"
            ]
        }
    }
}