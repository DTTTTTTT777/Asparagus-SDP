{
    "Bounty": {
        "function_list": [
            "payout(string)",
            "propose_beneficiary(address)",
            "vote_beneficiary(string)",
            "refund()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "payout(string)": {
                "argument": {
                    "_password": "string"
                },
                "contract": {
                    "count_donors": "uint256",
                    "votes_for": "uint256",
                    "votes_against": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "propose_beneficiary(address)": {
                "argument": {},
                "contract": {
                    "count_donors": "uint256",
                    "votes_for": "uint256",
                    "votes_against": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "vote_beneficiary(string)": {
                "argument": {
                    "_vote": "string"
                },
                "contract": {
                    "count_donors": "uint256",
                    "votes_for": "uint256",
                    "votes_against": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "count_donors": "uint256",
                    "votes_for": "uint256",
                    "votes_against": "uint256",
                    "hash_pwd": "bytes32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "count_donors": "uint256",
                    "votes_for": "uint256",
                    "votes_against": "uint256",
                    "hash_pwd": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "propose_beneficiary(address)": [
                1193,
                220
            ],
            "refund()": [
                975,
                132
            ],
            "vote_beneficiary(string)": [
                1045,
                176
            ],
            "payout(string)": [
                610,
                22
            ]
        },
        "block_CALL_mapping": {
            "jump1659": [
                "proposed_beneficiary.transfer(this.balance)",
                "proposed_beneficiary.transfer(this.balance)"
            ],
            "block1659": [
                "proposed_beneficiary.transfer(this.balance)"
            ],
            "jump2007": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block2007": [
                "msg.sender.transfer(eth_to_withdraw)"
            ]
        }
    }
}