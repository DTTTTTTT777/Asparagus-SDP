{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "myUsingOraclize": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "myUsingOraclize()",
            "update_oraclize()",
            "oraclize_query(string,string,string)",
            "oraclize_getPrice(string)",
            "oraclize_setGasPrice(uint256)",
            "setGasLimit(uint256)",
            "oraclize_setNetwork()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "myUsingOraclize()": {
                "argument": {},
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "update_oraclize()": {
                "argument": {},
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "oraclize_setGasPrice(uint256)": {
                "argument": {
                    "_gasPrice": "uint256"
                },
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "setGasLimit(uint256)": {
                "argument": {
                    "_newLimit": "uint256"
                },
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "oraclize_setNetwork()": {
                "argument": {},
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "oraclize_gaslimit": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setGasLimit(uint256)": [
                421,
                185
            ],
            "oraclize_setGasPrice(uint256)": [
                333,
                141
            ],
            "transferOwnership(address)": [
                466,
                207
            ],
            "update_oraclize()": [
                223,
                97
            ]
        },
        "block_CALL_mapping": {
            "jump796": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block1194": [
                "oraclize.setCustomGasPrice(_gasPrice)"
            ],
            "jump1194": [
                "oraclize.setCustomGasPrice(_gasPrice)",
                "oraclize.setCustomGasPrice(_gasPrice)"
            ],
            "block796": [
                "OAR.getAddress()"
            ]
        }
    },
    "InterCrypto": {
        "function_list": [
            "myUsingOraclize()",
            "update_oraclize()",
            "oraclize_query(string,string,string)",
            "oraclize_getPrice(string)",
            "oraclize_setGasPrice(uint256)",
            "setGasLimit(uint256)",
            "oraclize_setNetwork()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "Ownable()",
            "transferOwnership(address)",
            "InterCrypto()",
            "kill()",
            "fallback()",
            "convert1(string,string)",
            "convert2(string,string,address)",
            "__callback(bytes32,string)",
            "cancelConversion(uint256)",
            "recover()",
            "getInterCryptoPrice()",
            "engine(string,string,address)",
            "isValidString(string,uint256)",
            "concatBytes(bytes,bytes,bytes,bytes,bytes,bytes,bytes)",
            "createShapeShiftConversionPost(string,string)",
            "nibbleToChar(uint256)",
            "addressToBytes(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "myUsingOraclize()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "update_oraclize()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "oraclize_setGasPrice(uint256)": {
                "argument": {
                    "_gasPrice": "uint256"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "setGasLimit(uint256)": {
                "argument": {
                    "_newLimit": "uint256"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "oraclize_setNetwork()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "InterCrypto()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "convert1(string,string)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "convert2(string,string,address)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "cancelConversion(uint256)": {
                "argument": {
                    "conversionID": "uint256"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "recover()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "getInterCryptoPrice()": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "engine(string,string,address)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "isValidString(string,uint256)": {
                "argument": {
                    "_string": "string",
                    "maxSize": "uint256"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "concatBytes(bytes,bytes,bytes,bytes,bytes,bytes,bytes)": {
                "argument": {
                    "b1": "bytes",
                    "b2": "bytes",
                    "b3": "bytes",
                    "b4": "bytes",
                    "b5": "bytes",
                    "b6": "bytes",
                    "b7": "bytes"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "createShapeShiftConversionPost(string,string)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "nibbleToChar(uint256)": {
                "argument": {
                    "nibble": "uint256"
                },
                "contract": {
                    "conversionCount": "uint256"
                }
            },
            "addressToBytes(address)": {
                "argument": {},
                "contract": {
                    "conversionCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "convert1(string,string)": [
                589,
                141
            ],
            "convert2(string,string,address)": [
                232,
                75
            ],
            "setGasLimit(uint256)": [
                1185,
                383
            ],
            "kill()": [
                789,
                207
            ],
            "oraclize_setGasPrice(uint256)": [
                1074,
                317
            ],
            "cancelConversion(uint256)": [
                986,
                273
            ],
            "getInterCryptoPrice()": [
                1031,
                295
            ],
            "recover()": [
                1162,
                361
            ],
            "update_oraclize()": [
                766,
                185
            ],
            "transferOwnership(address)": [
                1230,
                405
            ],
            "__callback(bytes32,string)": [
                470,
                119
            ]
        },
        "block_CALL_mapping": {
            "block1628": [
                "oraclize.cbAddress()"
            ],
            "block3162": [
                "OAR.getAddress()"
            ],
            "block8662_0": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "jump7398": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)",
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "block2221": [
                "depositAddress.send(sendAmount)"
            ],
            "jump4232": [
                "oraclize.setCustomGasPrice(_gasPrice)",
                "oraclize.setCustomGasPrice(_gasPrice)"
            ],
            "block4232": [
                "oraclize.setCustomGasPrice(_gasPrice)"
            ],
            "block9240_0": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oraclize_gaslimit)"
            ],
            "block7398_0": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "block7398_1": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "jump2221": [
                "depositAddress.send(sendAmount)",
                "depositAddress.send(sendAmount)"
            ],
            "jump7398_0": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)",
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "jump7398_1": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)",
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "jump3162": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump4265": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "jump9240_0": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oraclize_gaslimit)",
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oraclize_gaslimit)"
            ],
            "block9240": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oraclize_gaslimit)"
            ],
            "block8662": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "jump8662_0": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)",
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "jump9240": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oraclize_gaslimit)",
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oraclize_gaslimit)"
            ],
            "jump8662": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)",
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ],
            "jump1628": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "block4265": [
                "msg.sender.send(amount)"
            ],
            "block7398": [
                "oraclize.getPrice(datasource, oraclize_gaslimit)"
            ]
        }
    }
}