{
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1499_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSNote": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSStop": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "stop()",
            "start()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                159,
                97
            ],
            "start()": [
                427,
                185
            ],
            "stop()": [
                136,
                75
            ]
        },
        "block_CALL_mapping": {
            "block2161_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2161_2": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "RewardSharedPool": {
        "function_list": [
            "stop()",
            "start()",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "RewardSharedPool()",
            "consume(uint256)",
            "available(uint256)",
            "changeMaxReward(uint256)",
            "addConsumer(address)",
            "removeConsumer(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "stop()": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "RewardSharedPool()": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "consume(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "available(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "changeMaxReward(uint256)": {
                "argument": {
                    "_maxReward": "uint256"
                },
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "addConsumer(address)": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            },
            "removeConsumer(address)": {
                "argument": {},
                "contract": {
                    "maxReward": "uint256",
                    "consumed": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                472,
                163
            ],
            "changeMaxReward(uint256)": [
                539,
                185
            ],
            "removeConsumer(address)": [
                338,
                119
            ],
            "start()": [
                1009,
                361
            ],
            "available(uint256)": [
                940,
                339
            ],
            "addConsumer(address)": [
                405,
                141
            ],
            "consume(uint256)": [
                584,
                207
            ],
            "stop()": [
                224,
                75
            ]
        },
        "block_CALL_mapping": {
            "block3631_5": [
                "authority.canCall(src, this, sig)"
            ],
            "jump3631_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3631_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3631": [
                "authority.canCall(src, this, sig)"
            ],
            "jump3631_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3631_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3631_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3631_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3631_4": [
                "authority.canCall(src, this, sig)"
            ],
            "jump3631": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3631_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block3631_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block3631_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block3631_1": [
                "authority.canCall(src, this, sig)"
            ]
        }
    }
}