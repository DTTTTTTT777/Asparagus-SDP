block0(l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize))
	nop(LT)
	nop(PUSH1)
	nop(JUMPI)

jump0(s(1), s(0), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	lt(s(1), s(0))
	call(block63())

jump0(s(1), s(0), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	geq(s(1), s(0))
	call(block12(l(l0), address, balance, calldataload, caller, callvalue, returndatasize))

jump12(s(2), s(1), s(0), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block65(s(0), l(l0), address, balance, caller, callvalue, returndatasize))

jump12(s(2), s(1), s(0), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block63_0(s(0)))

block12(l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1288800899
	nop(PUSH4)
	call(jump12(s(2),s(1),s(0), l(l0), address, balance, calldataload, caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH1)
	nop(JUMPI)

block63()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block65(s(0), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump65(s(2),s(1),s(0), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH1)
	nop(JUMPI)

jump65(s(2), s(1), s(0), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block76(s(1), s(0), l(l0), address, balance, caller, returndatasize))

jump65(s(2), s(1), s(0), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block72(s(1), s(0)))

block72(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block76(s(1), s(0), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 83
	nop(PUSH1)
	s(2) = 85
	nop(PUSH1)
	call(block85(s(1),s(0), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block83(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block85(s(1), s(0), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2300
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2)= eq(s(2), 0)
	nop(ISZERO)
	s(3) = s(2)
	nop(DUP1)
	call(jump85(s(3),s(2),s(1),s(0), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH1)
	nop(JUMPI)

jump85(s(3), s(2), s(1), s(0), l(l0), address, balance, caller, returndatasize)=>
	eq(s(3), 0)
	call(block177(s(2), s(1), s(0)))

jump85(s(3), s(2), s(1), s(0), l(l0), address, balance, caller, returndatasize)=>
	neq(s(3), 0)
	call(block168(s(2), s(1), s(0), returndatasize))

block168(s(2), s(1), s(0), returndatasize)=>
	s(3) = returndatasize
	nop(RETURNDATASIZE)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	nop(REVERT)

block177(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block83(s(0)))
	nop(JUMP)

block63_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

