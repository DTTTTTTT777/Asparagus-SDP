{
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                1494,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump6522": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block6003": [
                "_to.send(minBalanceForAccounts)"
            ],
            "jump3667": [
                "msg.sender.send(eth)",
                "msg.sender.send(eth)"
            ],
            "block3667": [
                "msg.sender.send(eth)"
            ],
            "block6522": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block4362_0": [
                "msg.sender.send(revenue)"
            ],
            "block5900": [
                "msg.sender.send(minBalanceForAccounts * 3)"
            ],
            "jump6003": [
                "_to.send(minBalanceForAccounts)",
                "_to.send(minBalanceForAccounts)"
            ],
            "jump4362_0": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump5900": [
                "msg.sender.send(minBalanceForAccounts * 3)",
                "msg.sender.send(minBalanceForAccounts * 3)"
            ],
            "block4362": [
                "msg.sender.send(revenue)"
            ],
            "jump4362": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ]
        }
    },
    "PornTokenV2Crowdsale": {
        "function_list": [
            "PornTokenV2Crowdsale(address,uint256,uint256,address)",
            "fallback()",
            "checkGoalReached()",
            "safeWithdrawal()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "PornTokenV2Crowdsale(address,uint256,uint256,address)": {
                "argument": {
                    "fundingGoalInEthers": "uint256",
                    "durationInMinutes": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "currentBalance": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "currentBalance": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "currentBalance": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "safeWithdrawal()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "currentBalance": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "checkGoalReached()": [
                754,
                75
            ],
            "safeWithdrawal()": [
                1210,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump725_0": [
                "tokenReward.transfer(msg.sender, (amount / price) * 1 ether)",
                "tokenReward.transfer(msg.sender, (amount / price) * 1 ether)"
            ],
            "block286_0": [
                "beneficiary.send(currentBalance)"
            ],
            "jump725": [
                "tokenReward.transfer(msg.sender, (amount / price) * 1 ether)",
                "tokenReward.transfer(msg.sender, (amount / price) * 1 ether)"
            ],
            "block286": [
                "beneficiary.send(currentBalance)"
            ],
            "block725_0": [
                "tokenReward.transfer(msg.sender, (amount / price) * 1 ether)"
            ],
            "block725": [
                "tokenReward.transfer(msg.sender, (amount / price) * 1 ether)"
            ]
        }
    }
}