{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "claimOwnership()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "claimOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "claimOwnership()": [
                103,
                75
            ],
            "transferOwnership(address)": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "MultiOwnable": {
        "function_list": [
            "MultiOwnable()",
            "ownerCount()",
            "isOwner(address)",
            "addOwner(address)",
            "removeOwner(address)"
        ],
        "initial_state": {
            "MultiOwnable()": {
                "argument": {},
                "contract": {
                    "owners": "address[]"
                }
            },
            "ownerCount()": {
                "argument": {},
                "contract": {
                    "owners": "address[]"
                }
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]"
                }
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "isOwner(address)": [
                357,
                141
            ],
            "ownerCount()": [
                223,
                97
            ],
            "addOwner(address)": [
                448,
                163
            ],
            "removeOwner(address)": [
                266,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "claimOwnership()",
            "pause()",
            "resume()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "claimOwnership()": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "resume()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "resume()": [
                136,
                75
            ],
            "pause()": [
                229,
                141
            ],
            "claimOwnership()": [
                159,
                97
            ],
            "transferOwnership(address)": [
                426,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "CommonBsToken": {
        "function_list": [
            "MultiOwnable()",
            "ownerCount()",
            "isOwner(address)",
            "addOwner(address)",
            "removeOwner(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "CommonBsToken(address,string,string,uint256,uint256)",
            "changeSeller(address)",
            "sellNoDecimals(address,uint256)",
            "sell(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "lock()",
            "unlock()",
            "burn(uint256)",
            "approveAndCall(address,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MultiOwnable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "ownerCount()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "CommonBsToken(address,string,string,uint256,uint256)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_totalSupplyNoDecimals": "uint256",
                    "_saleLimitNoDecimals": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "changeSeller(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "sellNoDecimals(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "sell(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "lock()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "unlock()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "approveAndCall(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "version": "string",
                    "saleLimit": "uint256",
                    "tokensSold": "uint256",
                    "totalSales": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "lock()": [
                2669,
                669
            ],
            "addOwner(address)": [
                1822,
                449
            ],
            "balanceOf(address)": [
                1913,
                471
            ],
            "allowance(address,address)": [
                2550,
                647
            ],
            "transferFrom(address,address,uint256)": [
                1072,
                251
            ],
            "unlock()": [
                2288,
                559
            ],
            "approve(address,uint256)": [
                794,
                163
            ],
            "changeSeller(address)": [
                2412,
                603
            ],
            "ownerCount()": [
                895,
                185
            ],
            "isOwner(address)": [
                1205,
                273
            ],
            "approveAndCall(address,uint256)": [
                1345,
                317
            ],
            "sellNoDecimals(address,uint256)": [
                2000,
                493
            ],
            "removeOwner(address)": [
                938,
                207
            ],
            "sell(address,uint256)": [
                1721,
                427
            ],
            "burn(uint256)": [
                1422,
                339
            ],
            "transfer(address,uint256)": [
                2311,
                581
            ]
        },
        "block_CALL_mapping": {
            "block4141": [
                "spender.receiveApproval(msg.sender, _value)"
            ],
            "jump4141": [
                "spender.receiveApproval(msg.sender, _value)",
                "spender.receiveApproval(msg.sender, _value)"
            ]
        }
    },
    "CommonBsCrowdsale": {
        "function_list": [
            "pause()",
            "resume()",
            "Ownable()",
            "transferOwnership(address)",
            "claimOwnership()",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "CommonBsCrowdsale(address,address,address)",
            "addNextStage(uint256,uint256)",
            "toMilTokens(uint256)",
            "getNow()",
            "setSaleEnabled(bool)",
            "setBeneficiary(address)",
            "fallback()",
            "sellTokensForEth(address,uint256)",
            "weiToTokens(uint256)",
            "stageCount()",
            "isMaxCapReached()",
            "isSaleOn()",
            "isSaleOver()",
            "isFinalized()",
            "finalize()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "resume()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "claimOwnership()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "CommonBsCrowdsale(address,address,address)": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "addNextStage(uint256,uint256)": {
                "argument": {
                    "_maxMilTokens": "uint256",
                    "_stagePrice": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "toMilTokens(uint256)": {
                "argument": {
                    "_num": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "getNow()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "setSaleEnabled(bool)": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "sellTokensForEth(address,uint256)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "weiToTokens(uint256)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "stageCount()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "isMaxCapReached()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "isSaleOn()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "isSaleOver()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "isFinalized()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "minContributionWei": "uint256",
                    "maxCapWei": "uint256",
                    "tokensPerWei": "uint256",
                    "bonusTokensLeft": "uint256",
                    "stages": "CommonBsCrowdsale.Stage[]",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalInWei": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEthSales": "uint256",
                    "weiReceived": "uint256",
                    "finalizedTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getNow()": [
                1652,
                603
            ],
            "pause()": [
                1236,
                449
            ],
            "setSaleEnabled(bool)": [
                584,
                141
            ],
            "weiToTokens(uint256)": [
                850,
                273
            ],
            "isMaxCapReached()": [
                1099,
                383
            ],
            "isFinalized()": [
                1338,
                493
            ],
            "claimOwnership()": [
                827,
                251
            ],
            "isSaleOver()": [
                915,
                295
            ],
            "transferOwnership(address)": [
                1868,
                691
            ],
            "resume()": [
                451,
                75
            ],
            "isSaleOn()": [
                1146,
                405
            ],
            "finalize()": [
                761,
                207
            ],
            "stageCount()": [
                1935,
                713
            ],
            "setBeneficiary(address)": [
                474,
                97
            ]
        },
        "block_CALL_mapping": {
            "block3506": [
                "beneficiary.transfer(this.balance)"
            ],
            "block2482": [
                "token.sell(_buyer, tokensE18)"
            ],
            "jump2482_0": [
                "token.sell(_buyer, tokensE18)",
                "token.sell(_buyer, tokensE18)"
            ],
            "jump3506": [
                "beneficiary.transfer(this.balance)",
                "beneficiary.transfer(this.balance)"
            ],
            "jump2482": [
                "token.sell(_buyer, tokensE18)",
                "token.sell(_buyer, tokensE18)"
            ],
            "block2482_0": [
                "token.sell(_buyer, tokensE18)"
            ]
        }
    },
    "CrowdsaleDeployer": {
        "function_list": [
            "CrowdsaleDeployer()"
        ],
        "initial_state": {
            "CrowdsaleDeployer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    }
}