{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "percent(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "percent(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10086,
                26
            ],
            "claimTokens(address)": [
                2804,
                537
            ],
            "totalSupply()": [
                931,
                141
            ],
            "allowance(address,address)": [
                2685,
                515
            ],
            "transferFrom(address,address,uint256)": [
                974,
                163
            ],
            "approve(address,uint256)": [
                787,
                97
            ],
            "totalSupplyAt(uint256)": [
                10086,
                26
            ],
            "enableTransfers(bool)": [
                2958,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1464,
                273
            ],
            "changeController(address)": [
                6193,
                889
            ],
            "balanceOf(address)": [
                8600,
                847
            ],
            "generateTokens(address,uint256)": [
                1912,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2413,
                471
            ],
            "destroyTokens(address,uint256)": [
                2584,
                493
            ],
            "transfer(address,uint256)": [
                8857,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump5977": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block7175_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8857": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block5977": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block5206_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9708_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump9708_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7175_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3784": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5206": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9708": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7175": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8857": [
                "token.transfer(controller, balance)"
            ],
            "jump3784_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump5206_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9708": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3784_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block3784": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block6193": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7175_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7175_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7689": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block7175_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7175_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7689": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block8600": [
                "token.balanceOf(this)"
            ],
            "jump8311": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump8600": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block8311": [
                "controller.transfer(this.balance)"
            ],
            "block7175": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6193": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ]
        }
    },
    "RealistoToken": {
        "function_list": [
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "RealistoToken(address)",
            "setGenerateAddr(address)",
            "fallback()",
            "generate_token_for(address,uint256)",
            "generateTokens(address,uint256)",
            "finalize()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "RealistoToken(address)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "setGenerateAddr(address)": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "generate_token_for(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "checkpointBlock": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "checkpointBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10683,
                26
            ],
            "claimTokens(address)": [
                2784,
                625
            ],
            "totalSupply()": [
                677,
                141
            ],
            "setGenerateAddr(address)": [
                1233,
                295
            ],
            "allowance(address,address)": [
                2665,
                603
            ],
            "transferFrom(address,address,uint256)": [
                720,
                163
            ],
            "approve(address,uint256)": [
                533,
                97
            ],
            "totalSupplyAt(uint256)": [
                10683,
                26
            ],
            "enableTransfers(bool)": [
                2938,
                669
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1300,
                317
            ],
            "changeController(address)": [
                6556,
                889
            ],
            "balanceOf(address)": [
                9099,
                847
            ],
            "generateTokens(address,uint256)": [
                1748,
                383
            ],
            "approveAndCall(address,uint256,bytes)": [
                2393,
                559
            ],
            "finalize()": [
                969,
                229
            ],
            "destroyTokens(address,uint256)": [
                2564,
                581
            ],
            "generate_token_for(address,uint256)": [
                2101,
                471
            ],
            "transfer(address,uint256)": [
                9356,
                996
            ]
        },
        "block_CALL_mapping": {
            "block5372_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5372_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block3791": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block7306_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3791_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block7306_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8188": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump6340": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump7306_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8188": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump5372_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5372_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5372_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5372_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6340": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block5372_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block3791_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5372_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5372_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8810": [
                "controller.transfer(this.balance)"
            ],
            "block9099": [
                "token.balanceOf(this)"
            ],
            "block10305": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump5372_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump10305_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump5372_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5372_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9099": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump5372_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5372_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6556": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block7306": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7306_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump10305": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block10305_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump5372": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7306_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3791": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump6556": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "block9356": [
                "token.transfer(controller, balance)"
            ],
            "block5372": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7306": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7306_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9356": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "jump8810": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ]
        }
    },
    "TokenVault": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "TokenVault(address,address,uint256)",
            "extract(address)",
            "balance()",
            "get_unlock_time()",
            "availableNow()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "tDuration": "uint256",
                    "tLock": "uint256",
                    "extracted": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "tDuration": "uint256",
                    "tLock": "uint256",
                    "extracted": "uint256"
                }
            },
            "TokenVault(address,address,uint256)": {
                "argument": {
                    "_tDuration": "uint256"
                },
                "contract": {
                    "tDuration": "uint256",
                    "tLock": "uint256",
                    "extracted": "uint256"
                }
            },
            "extract(address)": {
                "argument": {},
                "contract": {
                    "tDuration": "uint256",
                    "tLock": "uint256",
                    "extracted": "uint256"
                }
            },
            "balance()": {
                "argument": {},
                "contract": {
                    "tDuration": "uint256",
                    "tLock": "uint256",
                    "extracted": "uint256"
                }
            },
            "get_unlock_time()": {
                "argument": {},
                "contract": {
                    "tDuration": "uint256",
                    "tLock": "uint256",
                    "extracted": "uint256"
                }
            },
            "availableNow()": {
                "argument": {},
                "contract": {
                    "tDuration": "uint256",
                    "tLock": "uint256",
                    "extracted": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "availableNow()": [
                345,
                163
            ],
            "changeController(address)": [
                125,
                75
            ],
            "get_unlock_time()": [
                192,
                97
            ],
            "extract(address)": [
                278,
                141
            ],
            "balance()": [
                235,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump1028_0": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump1028_1": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump772_1": [
                "campaign.tFinalized()",
                "campaign.tFinalized()"
            ],
            "jump772": [
                "campaign.tFinalized()",
                "campaign.tFinalized()"
            ],
            "block772_0": [
                "campaign.tFinalized()"
            ],
            "jump1472": [
                "token.transfer(_to, available)",
                "token.transfer(_to, available)"
            ],
            "block772_1": [
                "campaign.tFinalized()"
            ],
            "block1028_0": [
                "token.balanceOf(address(this))"
            ],
            "jump1028": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block1028": [
                "token.balanceOf(address(this))"
            ],
            "jump772_0": [
                "campaign.tFinalized()",
                "campaign.tFinalized()"
            ],
            "block1472": [
                "token.transfer(_to, available)"
            ],
            "block1028_1": [
                "token.balanceOf(address(this))"
            ],
            "block772": [
                "campaign.tFinalized()"
            ]
        }
    },
    "TokenCampaign": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "TokenCampaign(address,address,address,address,address)",
            "get_presale_goal()",
            "get_rate()",
            "setRobotAddr(address)",
            "setTeamAddr(address)",
            "startSale()",
            "pauseSale()",
            "resumeSale()",
            "closeSale()",
            "finalizeCampaign()",
            "do_grant_tokens(address,uint256)",
            "process_contribution(address)",
            "grant_token_from_offchain(address,uint256,string)",
            "proxy_contribution(address)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "TokenCampaign(address,address,address,address,address)": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "get_presale_goal()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "get_rate()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "setRobotAddr(address)": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "setTeamAddr(address)": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "startSale()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "pauseSale()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "resumeSale()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "closeSale()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "finalizeCampaign()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "do_grant_tokens(address,uint256)": {
                "argument": {
                    "_nTokens": "uint256"
                },
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "process_contribution(address)": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "grant_token_from_offchain(address,uint256,string)": {
                "argument": {
                    "_nTokens": "uint256",
                    "_ref": "string"
                },
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "proxy_contribution(address)": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PRCT_TEAM": "uint256",
                    "PRCT_BOUNTY": "uint256",
                    "PRCT_ETH_OP": "uint256",
                    "decimals": "uint8",
                    "scale": "uint256",
                    "baseRate": "uint256",
                    "bonusTokenThreshold": "uint256",
                    "minContribution": "uint256",
                    "bonusMinContribution": "uint256",
                    "bonusAdd": "uint256",
                    "stage_1_add": "uint256",
                    "stage_2_add": "uint256",
                    "stage_3_add": "uint256",
                    "campaignState": "uint8",
                    "tokensGenerated": "uint256",
                    "amountRaised": "uint256",
                    "tCampaignStart": "uint256",
                    "tBonusStageEnd": "uint256",
                    "tRegSaleStart": "uint256",
                    "t_1st_StageEnd": "uint256",
                    "t_2nd_StageEnd": "uint256",
                    "t_3rd_StageEnd": "uint256",
                    "tCampaignEnd": "uint256",
                    "tFinalized": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimTokens(address)": [
                2648,
                911
            ],
            "proxy_contribution(address)": [
                2202,
                713
            ],
            "setRobotAddr(address)": [
                1130,
                273
            ],
            "get_rate()": [
                1414,
                361
            ],
            "finalizeCampaign()": [
                2093,
                647
            ],
            "startSale()": [
                2299,
                757
            ],
            "changeController(address)": [
                1063,
                251
            ],
            "pauseSale()": [
                1457,
                383
            ],
            "setTeamAddr(address)": [
                2495,
                845
            ],
            "resumeSale()": [
                1040,
                229
            ],
            "closeSale()": [
                2758,
                955
            ],
            "get_presale_goal()": [
                1917,
                559
            ],
            "grant_token_from_offchain(address,uint256,string)": [
                629,
                75
            ]
        },
        "block_CALL_mapping": {
            "block3379": [
                "opVaultAddr.transfer(opEth)"
            ],
            "jump3379_1": [
                "opVaultAddr.transfer(opEth)",
                "opVaultAddr.transfer(opEth)"
            ],
            "jump3379_0": [
                "opVaultAddr.transfer(opEth)",
                "opVaultAddr.transfer(opEth)"
            ],
            "jump8217_2": [
                "token.generate_token_for(_to, _nTokens)",
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block7416": [
                "some_token.transfer(controller, balance)"
            ],
            "jump5910": [
                "token.finalize()",
                "token.finalize()"
            ],
            "jump7159": [
                "some_token.balanceOf(this)",
                "some_token.balanceOf(this)"
            ],
            "jump5423": [
                "trusteeVaultAddr.transfer(this.balance)",
                "trusteeVaultAddr.transfer(this.balance)"
            ],
            "block8217_4": [
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block8217_3": [
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block8217_2": [
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block8217_1": [
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block8217_0": [
                "token.generate_token_for(_to, _nTokens)"
            ],
            "jump8217": [
                "token.generate_token_for(_to, _nTokens)",
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block8217": [
                "token.generate_token_for(_to, _nTokens)"
            ],
            "jump8217_3": [
                "token.generate_token_for(_to, _nTokens)",
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block7159": [
                "some_token.balanceOf(this)"
            ],
            "jump8217_4": [
                "token.generate_token_for(_to, _nTokens)",
                "token.generate_token_for(_to, _nTokens)"
            ],
            "jump8217_1": [
                "token.generate_token_for(_to, _nTokens)",
                "token.generate_token_for(_to, _nTokens)"
            ],
            "jump8217_0": [
                "token.generate_token_for(_to, _nTokens)",
                "token.generate_token_for(_to, _nTokens)"
            ],
            "block3379_1": [
                "opVaultAddr.transfer(opEth)"
            ],
            "block3379_0": [
                "opVaultAddr.transfer(opEth)"
            ],
            "block5910": [
                "token.finalize()"
            ],
            "block5423": [
                "trusteeVaultAddr.transfer(this.balance)"
            ],
            "jump3379": [
                "opVaultAddr.transfer(opEth)",
                "opVaultAddr.transfer(opEth)"
            ],
            "jump7416": [
                "some_token.transfer(controller, balance)",
                "some_token.transfer(controller, balance)"
            ]
        }
    }
}