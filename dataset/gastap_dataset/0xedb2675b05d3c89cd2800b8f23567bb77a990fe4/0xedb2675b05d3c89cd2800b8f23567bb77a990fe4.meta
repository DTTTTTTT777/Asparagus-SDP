{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale()",
            "startSale(uint256)",
            "stopSale()",
            "setPrice(uint256)",
            "setMinBuy(uint256)",
            "setMaxBuy(uint256)",
            "changeWallet(address)",
            "changeTokenReward(address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "withdrawTokens(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "startSale(uint256)": {
                "argument": {
                    "_delayInMinutes": "uint256"
                },
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "stopSale()": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "setMinBuy(uint256)": {
                "argument": {
                    "_minBuy": "uint256"
                },
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "setMaxBuy(uint256)": {
                "argument": {
                    "_maxBuy": "uint256"
                },
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "changeWallet(address)": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "changeTokenReward(address)": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "withdrawTokens(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "price": "uint256",
                    "minBuy": "uint256",
                    "maxBuy": "uint256",
                    "startTime": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setMinBuy(uint256)": [
                715,
                273
            ],
            "stopSale()": [
                1002,
                383
            ],
            "buyTokens(address)": [
                1025,
                405
            ],
            "changeWallet(address)": [
                892,
                339
            ],
            "setPrice(uint256)": [
                847,
                317
            ],
            "startSale(uint256)": [
                252,
                75
            ],
            "changeTokenReward(address)": [
                389,
                141
            ],
            "setMaxBuy(uint256)": [
                1079,
                427
            ],
            "withdrawTokens(uint256)": [
                344,
                119
            ]
        },
        "block_CALL_mapping": {
            "block3076": [
                "wallet.send(msg.value)"
            ],
            "block1494_0": [
                "tokenReward.transfer(beneficiary, tokens)"
            ],
            "jump3076_1": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "jump1494_1": [
                "tokenReward.transfer(beneficiary, tokens)",
                "tokenReward.transfer(beneficiary, tokens)"
            ],
            "jump3076_0": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ],
            "block1494_1": [
                "tokenReward.transfer(beneficiary, tokens)"
            ],
            "block2113": [
                "tokenReward.transfer(wallet,_amount)"
            ],
            "block1494": [
                "tokenReward.transfer(beneficiary, tokens)"
            ],
            "jump1494_0": [
                "tokenReward.transfer(beneficiary, tokens)",
                "tokenReward.transfer(beneficiary, tokens)"
            ],
            "block3076_1": [
                "wallet.send(msg.value)"
            ],
            "block3076_0": [
                "wallet.send(msg.value)"
            ],
            "jump2113": [
                "tokenReward.transfer(wallet,_amount)",
                "tokenReward.transfer(wallet,_amount)"
            ],
            "jump1494": [
                "tokenReward.transfer(beneficiary, tokens)",
                "tokenReward.transfer(beneficiary, tokens)"
            ],
            "jump3076": [
                "wallet.send(msg.value)",
                "wallet.send(msg.value)"
            ]
        }
    }
}