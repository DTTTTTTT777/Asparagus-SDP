{
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1499_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSNote": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSStop": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "stop()",
            "start()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                159,
                97
            ],
            "start()": [
                427,
                185
            ],
            "stop()": [
                136,
                75
            ]
        },
        "block_CALL_mapping": {
            "block2161_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2161_2": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "totalSupply()": [
                414,
                119
            ],
            "allowance(address,address)": [
                1118,
                273
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "transfer(address,uint256)": [
                870,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "DSMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSTokenBase": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DSTokenBase(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "DSTokenBase(uint256)": {
                "argument": {
                    "supply": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSToken": {
        "function_list": [
            "stop()",
            "start()",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "DSTokenBase(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DSToken(bytes32)",
            "trusted(address,address)",
            "trust(address,bool)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "push(address,uint256)",
            "pull(address,uint256)",
            "move(address,address,uint256)",
            "mint(uint256)",
            "burn(uint256)",
            "mint(address,uint256)",
            "burn(address,uint256)",
            "setName(bytes32)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "stop()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSTokenBase(uint256)": {
                "argument": {
                    "supply": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "DSToken(bytes32)": {
                "argument": {
                    "symbol_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "trusted(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "trust(address,bool)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "push(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "pull(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "move(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mint(uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "burn(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "setName(bytes32)": {
                "argument": {
                    "name_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "decimals": "uint256",
                    "name": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                666,
                185
            ],
            "transferFrom(address,address,uint256)": [
                709,
                207
            ],
            "move(address,address,uint256)": [
                1818,
                537
            ],
            "trusted(address,address)": [
                1257,
                383
            ],
            "setName(bytes32)": [
                1007,
                295
            ],
            "approve(address,uint256)": [
                498,
                141
            ],
            "start()": [
                1927,
                559
            ],
            "trust(address,bool)": [
                345,
                75
            ],
            "setOwner(address)": [
                599,
                163
            ],
            "mint(uint256)": [
                1595,
                471
            ],
            "balanceOf(address)": [
                1056,
                317
            ],
            "pull(address,uint256)": [
                2156,
                625
            ],
            "push(address,uint256)": [
                1741,
                515
            ],
            "mint(address,uint256)": [
                885,
                251
            ],
            "burn(uint256)": [
                962,
                273
            ],
            "burn(address,uint256)": [
                1518,
                449
            ],
            "transfer(address,uint256)": [
                1640,
                493
            ],
            "stop()": [
                475,
                119
            ],
            "allowance(address,address)": [
                2037,
                603
            ]
        },
        "block_CALL_mapping": {
            "jump6744_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_6": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block6744_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744": [
                "authority.canCall(src, this, sig)"
            ],
            "jump6744_7": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block6744_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump6744": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block6744_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_5": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_6": [
                "authority.canCall(src, this, sig)"
            ],
            "block6744_7": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "ERC223ReceivingContract": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "PLS": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "DSToken(bytes32)",
            "trusted(address,address)",
            "trust(address,bool)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "push(address,uint256)",
            "pull(address,uint256)",
            "move(address,address,uint256)",
            "mint(uint256)",
            "burn(uint256)",
            "mint(address,uint256)",
            "burn(address,uint256)",
            "setName(bytes32)",
            "stop()",
            "start()",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "DSTokenBase(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wmul(uint256,uint256)",
            "rmul(uint256,uint256)",
            "wdiv(uint256,uint256)",
            "rdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "PLS()",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256,bytes)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "burn(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "isContract(address)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "DSToken(bytes32)": {
                "argument": {
                    "symbol_": "bytes32"
                },
                "contract": {}
            },
            "trusted(address,address)": {
                "argument": {},
                "contract": {}
            },
            "trust(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "push(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {}
            },
            "pull(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {}
            },
            "move(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {}
            },
            "mint(uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {}
            },
            "burn(uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_wad": "uint256"
                },
                "contract": {}
            },
            "burn(address,uint256)": {
                "argument": {
                    "_wad": "uint256"
                },
                "contract": {}
            },
            "setName(bytes32)": {
                "argument": {
                    "name_": "bytes32"
                },
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            },
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "DSTokenBase(uint256)": {
                "argument": {
                    "supply": "uint256"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "wmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "rmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "wdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "rdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {}
            },
            "PLS()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "claimTokens(address)": [
                2935,
                691
            ],
            "totalSupply()": [
                1036,
                185
            ],
            "transferFrom(address,address,uint256)": [
                1079,
                207
            ],
            "move(address,address,uint256)": [
                2255,
                559
            ],
            "trusted(address,address)": [
                1694,
                405
            ],
            "setName(bytes32)": [
                1444,
                317
            ],
            "approve(address,uint256)": [
                868,
                141
            ],
            "start()": [
                2535,
                603
            ],
            "trust(address,bool)": [
                715,
                75
            ],
            "setOwner(address)": [
                969,
                163
            ],
            "changeController(address)": [
                1255,
                251
            ],
            "mint(uint256)": [
                2032,
                493
            ],
            "balanceOf(address)": [
                7906,
                847
            ],
            "transfer(address,uint256,bytes)": [
                2364,
                581
            ],
            "approveAndCall(address,uint256,bytes)": [
                2645,
                647
            ],
            "pull(address,uint256)": [
                3002,
                713
            ],
            "push(address,uint256)": [
                2178,
                537
            ],
            "mint(address,uint256)": [
                1322,
                273
            ],
            "burn(uint256)": [
                1399,
                295
            ],
            "burn(address,uint256)": [
                1955,
                471
            ],
            "transfer(address,uint256)": [
                8164,
                996
            ],
            "stop()": [
                845,
                119
            ],
            "allowance(address,address)": [
                2816,
                669
            ]
        },
        "block_CALL_mapping": {
            "block8984_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block7319": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block4698": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block632": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump8984_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump4698_4": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump4698_2": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump4698_3": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump4698_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump4698_1": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump4075": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump6638": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump8984_10": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8984_11": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7906": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block6638": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block4698_4": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block4075": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump7319": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block8164": [
                "token.transfer(controller, balance)"
            ],
            "block4698_2": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block4698_3": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump8984_6": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8984_7": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8984_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8984_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block7906": [
                "token.balanceOf(this)"
            ],
            "jump8984_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8984_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8984_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump8984_9": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump4075_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block4806": [
                "_to.call(bytes4(bytes32(keccak256(\"receiveToken(address,uint256,address)\"))), _from, _amount, this)"
            ],
            "block8984_5": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_6": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_7": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_3": [
                "authority.canCall(src, this, sig)"
            ],
            "jump8984": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block8984_8": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_9": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_10": [
                "authority.canCall(src, this, sig)"
            ],
            "block8984_11": [
                "authority.canCall(src, this, sig)"
            ],
            "block4698_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block4698_1": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block4075_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump7616": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump8984_8": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block8984": [
                "authority.canCall(src, this, sig)"
            ],
            "block7616": [
                "controller.transfer(this.balance)"
            ],
            "jump4698": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block632_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump632": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block4806_4": [
                "_to.call(bytes4(bytes32(keccak256(\"receiveToken(address,uint256,address)\"))), _from, _amount, this)"
            ],
            "block4806_3": [
                "_to.call(bytes4(bytes32(keccak256(\"receiveToken(address,uint256,address)\"))), _from, _amount, this)"
            ],
            "block4806_2": [
                "_to.call(bytes4(bytes32(keccak256(\"receiveToken(address,uint256,address)\"))), _from, _amount, this)"
            ],
            "block4806_1": [
                "_to.call(bytes4(bytes32(keccak256(\"receiveToken(address,uint256,address)\"))), _from, _amount, this)"
            ],
            "block4806_0": [
                "_to.call(bytes4(bytes32(keccak256(\"receiveToken(address,uint256,address)\"))), _from, _amount, this)"
            ],
            "jump632_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump8164": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ]
        }
    },
    "MigrateController": {
        "function_list": [
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "MigrateController(address)",
            "changeController(address)",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "mint(address,uint256,bytes)",
            "isContract(address)",
            "time()",
            "getBlockNumber()",
            "claimTokens(address)"
        ],
        "initial_state": {
            "proxyPayment(address)": {
                "argument": {},
                "contract": {}
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {}
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {}
            },
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "MigrateController(address)": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "data": "bytes"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "time()": {
                "argument": {},
                "contract": {}
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {}
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                191,
                75
            ],
            "onApprove(address,address,uint256)": [
                976,
                273
            ],
            "proxyPayment(address)": [
                1176,
                317
            ],
            "claimTokens(address)": [
                3192,
                925
            ],
            "changeController(address)": [
                1810,
                926
            ],
            "onTransfer(address,address,uint256)": [
                455,
                163
            ],
            "mint(address,uint256,bytes)": [
                742,
                229
            ],
            "time()": [
                258,
                97
            ]
        },
        "block_CALL_mapping": {
            "block3797": [
                "token.transfer(owner, balance)"
            ],
            "jump3539": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump4571_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump4571_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3539": [
                "token.balanceOf(this)"
            ],
            "jump4571_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3192": [
                "pls.claimTokens(_token)"
            ],
            "block1810": [
                "pls.changeController(_newController)"
            ],
            "block2433": [
                "pls.mint(_th, _amount)"
            ],
            "jump2433": [
                "pls.mint(_th, _amount)",
                "pls.mint(_th, _amount)"
            ],
            "block3249": [
                "owner.transfer(this.balance)"
            ],
            "jump3249": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump4571_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3797": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "block2916": [
                "pls.controller()"
            ],
            "jump2916": [
                "pls.controller()",
                "pls.controller()"
            ],
            "block4571_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block4571_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block4571_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block4571_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block4571": [
                "authority.canCall(src, this, sig)"
            ],
            "jump4571": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump1810": [
                "pls.changeController(_newController)",
                "pls.changeController(_newController)"
            ],
            "jump3192": [
                "pls.claimTokens(_token)",
                "pls.claimTokens(_token)"
            ]
        }
    }
}