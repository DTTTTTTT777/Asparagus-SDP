{
    "SafeMath": {
        "function_list": [
            "safeSub(uint256,uint256)",
            "safeSub(int256,int256)",
            "safeAdd(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [
            "owned()",
            "changeOwner(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "mortal": {
        "function_list": [
            "owned()",
            "changeOwner(address)",
            "closeContract(uint256)",
            "open()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "closeAt": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "closeAt": "uint256"
                }
            },
            "closeContract(uint256)": {
                "argument": {
                    "playerBalance": "uint256"
                },
                "contract": {
                    "closeAt": "uint256"
                }
            },
            "open()": {
                "argument": {},
                "contract": {
                    "closeAt": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                190,
                97
            ],
            "open()": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "chargingGas": {
        "function_list": [
            "safeSub(uint256,uint256)",
            "safeSub(int256,int256)",
            "safeAdd(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "closeContract(uint256)",
            "open()",
            "owned()",
            "changeOwner(address)",
            "setGasUsage(bytes4[3],uint256[3])",
            "addGas(uint256)",
            "subtractGas(uint256)",
            "setGasPrice(uint8)",
            "getGasCost()"
        ],
        "initial_state": {
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "safeSub(int256,int256)": {
                "argument": {},
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "closeContract(uint256)": {
                "argument": {
                    "playerBalance": "uint256"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "open()": {
                "argument": {},
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "setGasUsage(bytes4[3],uint256[3])": {
                "argument": {
                    "signatures": "bytes4[3]",
                    "gasNeeded": "uint256[3]"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "addGas(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "subtractGas(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "setGasPrice(uint8)": {
                "argument": {
                    "price": "uint8"
                },
                "contract": {
                    "gasPrice": "uint256"
                }
            },
            "getGasCost()": {
                "argument": {},
                "contract": {
                    "gasPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "open()": [
                477,
                185
            ],
            "setGasPrice(uint8)": [
                136,
                75
            ],
            "changeOwner(address)": [
                271,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                92,
                75
            ],
            "transfer(address,uint256)": [
                312,
                119
            ],
            "balanceOf(address)": [
                225,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "CasinoBank": {
        "function_list": [
            "setGasUsage(bytes4[3],uint256[3])",
            "addGas(uint256)",
            "subtractGas(uint256)",
            "setGasPrice(uint8)",
            "getGasCost()",
            "safeSub(uint256,uint256)",
            "safeSub(int256,int256)",
            "safeAdd(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "closeContract(uint256)",
            "open()",
            "owned()",
            "changeOwner(address)",
            "CasinoBank(address,uint256)",
            "deposit(address,uint256,bool)",
            "requestWithdrawal()",
            "cancelWithdrawalRequest()",
            "withdraw(uint256)",
            "withdrawBankroll(uint256)",
            "bankroll()",
            "setMaxDeposit(uint256)",
            "setWaitingTime(uint256)",
            "close()"
        ],
        "initial_state": {
            "setGasUsage(bytes4[3],uint256[3])": {
                "argument": {
                    "signatures": "bytes4[3]",
                    "gasNeeded": "uint256[3]"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "addGas(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "subtractGas(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "setGasPrice(uint8)": {
                "argument": {
                    "price": "uint8"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "getGasCost()": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "safeSub(int256,int256)": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "closeContract(uint256)": {
                "argument": {
                    "playerBalance": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "open()": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "CasinoBank(address,uint256)": {
                "argument": {
                    "depositLimit": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "deposit(address,uint256,bool)": {
                "argument": {
                    "numTokens": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "requestWithdrawal()": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "cancelWithdrawalRequest()": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "withdrawBankroll(uint256)": {
                "argument": {
                    "numTokens": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "bankroll()": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "setMaxDeposit(uint256)": {
                "argument": {
                    "newMax": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "setWaitingTime(uint256)": {
                "argument": {
                    "newWaitingTime": "uint256"
                },
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            },
            "close()": {
                "argument": {},
                "contract": {
                    "playerBalance": "uint256",
                    "maxDeposit": "uint256",
                    "waitingTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setWaitingTime(uint256)": [
                1270,
                471
            ],
            "deposit(address,uint256,bool)": [
                471,
                163
            ],
            "withdrawBankroll(uint256)": [
                333,
                97
            ],
            "bankroll()": [
                290,
                75
            ],
            "setMaxDeposit(uint256)": [
                1179,
                405
            ],
            "withdraw(uint256)": [
                426,
                141
            ],
            "open()": [
                1315,
                493
            ],
            "cancelWithdrawalRequest()": [
                1247,
                449
            ],
            "setGasPrice(uint8)": [
                378,
                119
            ],
            "requestWithdrawal()": [
                1224,
                427
            ],
            "close()": [
                560,
                185
            ],
            "changeOwner(address)": [
                930,
                317
            ]
        },
        "block_CALL_mapping": {
            "block1575": [
                "edg.balanceOf(address(this))"
            ],
            "jump2004": [
                "edg.transfer(owner, numTokens)",
                "edg.transfer(owner, numTokens)"
            ],
            "block2004": [
                "edg.transfer(owner, numTokens)"
            ],
            "jump1575_0": [
                "edg.balanceOf(address(this))",
                "edg.balanceOf(address(this))"
            ],
            "jump3433": [
                "edg.transferFrom(msg.sender, address(this), numTokens)",
                "edg.transferFrom(msg.sender, address(this), numTokens)"
            ],
            "block2794": [
                "edg.transfer(msg.sender, amount)"
            ],
            "block3433": [
                "edg.transferFrom(msg.sender, address(this), numTokens)"
            ],
            "jump2794": [
                "edg.transfer(msg.sender, amount)",
                "edg.transfer(msg.sender, amount)"
            ],
            "block1575_0": [
                "edg.balanceOf(address(this))"
            ],
            "jump1575": [
                "edg.balanceOf(address(this))",
                "edg.balanceOf(address(this))"
            ]
        }
    },
    "EdgelessCasino": {
        "function_list": [
            "CasinoBank(address,uint256)",
            "deposit(address,uint256,bool)",
            "requestWithdrawal()",
            "cancelWithdrawalRequest()",
            "withdraw(uint256)",
            "withdrawBankroll(uint256)",
            "bankroll()",
            "setMaxDeposit(uint256)",
            "setWaitingTime(uint256)",
            "close()",
            "setGasUsage(bytes4[3],uint256[3])",
            "addGas(uint256)",
            "subtractGas(uint256)",
            "setGasPrice(uint8)",
            "getGasCost()",
            "safeSub(uint256,uint256)",
            "safeSub(int256,int256)",
            "safeAdd(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "closeContract(uint256)",
            "open()",
            "owned()",
            "changeOwner(address)",
            "EdgelessCasino(address,address,uint256,uint8)",
            "withdrawFor(address,uint256,uint8,bytes32,bytes32)",
            "authorize(address)",
            "deauthorize(address)",
            "updateState(int128,uint128,uint8,bytes32,bytes32)",
            "determinePlayer(int128,uint128,uint8,bytes32,bytes32)",
            "updatePlayerBalance(address,int128,int128,uint256)",
            "logGameData(bytes32[],bytes32[],int256[],uint8,bytes32,bytes32)",
            "determinePlayer(bytes32[],bytes32[],int256[],uint8,bytes32,bytes32)"
        ],
        "initial_state": {
            "CasinoBank(address,uint256)": {
                "argument": {
                    "depositLimit": "uint256"
                },
                "contract": {}
            },
            "deposit(address,uint256,bool)": {
                "argument": {
                    "numTokens": "uint256"
                },
                "contract": {}
            },
            "requestWithdrawal()": {
                "argument": {},
                "contract": {}
            },
            "cancelWithdrawalRequest()": {
                "argument": {},
                "contract": {}
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "withdrawBankroll(uint256)": {
                "argument": {
                    "numTokens": "uint256"
                },
                "contract": {}
            },
            "bankroll()": {
                "argument": {},
                "contract": {}
            },
            "setMaxDeposit(uint256)": {
                "argument": {
                    "newMax": "uint256"
                },
                "contract": {}
            },
            "setWaitingTime(uint256)": {
                "argument": {
                    "newWaitingTime": "uint256"
                },
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "setGasUsage(bytes4[3],uint256[3])": {
                "argument": {
                    "signatures": "bytes4[3]",
                    "gasNeeded": "uint256[3]"
                },
                "contract": {}
            },
            "addGas(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "subtractGas(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "setGasPrice(uint8)": {
                "argument": {
                    "price": "uint8"
                },
                "contract": {}
            },
            "getGasCost()": {
                "argument": {},
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "closeContract(uint256)": {
                "argument": {
                    "playerBalance": "uint256"
                },
                "contract": {}
            },
            "open()": {
                "argument": {},
                "contract": {}
            },
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "EdgelessCasino(address,address,uint256,uint8)": {
                "argument": {
                    "depositLimit": "uint256",
                    "kGasPrice": "uint8"
                },
                "contract": {}
            },
            "withdrawFor(address,uint256,uint8,bytes32,bytes32)": {
                "argument": {
                    "amount": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {}
            },
            "authorize(address)": {
                "argument": {},
                "contract": {}
            },
            "deauthorize(address)": {
                "argument": {},
                "contract": {}
            },
            "updateState(int128,uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "gameCount": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {}
            },
            "determinePlayer(int128,uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "gameCount": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {}
            },
            "updatePlayerBalance(address,int128,int128,uint256)": {
                "argument": {
                    "gasCost": "uint256"
                },
                "contract": {}
            },
            "logGameData(bytes32[],bytes32[],int256[],uint8,bytes32,bytes32)": {
                "argument": {
                    "serverSeeds": "bytes32[]",
                    "clientSeeds": "bytes32[]",
                    "results": "int256[]",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {}
            },
            "determinePlayer(bytes32[],bytes32[],int256[],uint8,bytes32,bytes32)": {
                "argument": {
                    "serverSeeds": "bytes32[]",
                    "clientSeeds": "bytes32[]",
                    "results": "int256[]",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setWaitingTime(uint256)": [
                2318,
                647
            ],
            "cancelWithdrawalRequest()": [
                2295,
                625
            ],
            "bankroll()": [
                655,
                97
            ],
            "setMaxDeposit(uint256)": [
                2227,
                581
            ],
            "authorize(address)": [
                2069,
                537
            ],
            "deposit(address,uint256,bool)": [
                1039,
                229
            ],
            "logGameData(bytes32[],bytes32[],int256[],uint8,bytes32,bytes32)": [
                378,
                75
            ],
            "withdrawBankroll(uint256)": [
                698,
                119
            ],
            "deauthorize(address)": [
                879,
                163
            ],
            "requestWithdrawal()": [
                2272,
                603
            ],
            "withdrawFor(address,uint256,uint8,bytes32,bytes32)": [
                1702,
                427
            ],
            "changeOwner(address)": [
                1820,
                449
            ],
            "updateState(int128,uint128,uint8,bytes32,bytes32)": [
                1498,
                383
            ],
            "withdraw(uint256)": [
                994,
                207
            ],
            "close()": [
                1128,
                251
            ],
            "open()": [
                2363,
                669
            ],
            "setGasPrice(uint8)": [
                946,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump5872": [
                "ecrecover(keccak256(player, winBalance, gameCount), v, r, s)",
                "ecrecover(keccak256(player, winBalance, gameCount), v, r, s)"
            ],
            "jump5327": [
                "edg.transferFrom(msg.sender, address(this), numTokens)",
                "edg.transferFrom(msg.sender, address(this), numTokens)"
            ],
            "jump3210_0": [
                "edg.balanceOf(address(this))",
                "edg.balanceOf(address(this))"
            ],
            "jump9770": [
                "ecrecover(keccak256(winBalance, gameCount), v, r, s)",
                "ecrecover(keccak256(winBalance, gameCount), v, r, s)"
            ],
            "jump4688": [
                "edg.transfer(msg.sender, amount)",
                "edg.transfer(msg.sender, amount)"
            ],
            "jump7853": [
                "edg.transfer(receiver, amount)",
                "edg.transfer(receiver, amount)"
            ],
            "block4688": [
                "edg.transfer(msg.sender, amount)"
            ],
            "jump9207": [
                "ecrecover(keccak256(serverSeeds, clientSeeds, results), v, r, s)",
                "ecrecover(keccak256(serverSeeds, clientSeeds, results), v, r, s)"
            ],
            "block9770": [
                "ecrecover(keccak256(winBalance, gameCount), v, r, s)"
            ],
            "block9207": [
                "ecrecover(keccak256(serverSeeds, clientSeeds, results), v, r, s)"
            ],
            "block5327": [
                "edg.transferFrom(msg.sender, address(this), numTokens)"
            ],
            "block7106": [
                "ecrecover(keccak256(receiver, amount, withdrawCount[receiver]), v, r, s)"
            ],
            "jump7106": [
                "ecrecover(keccak256(receiver, amount, withdrawCount[receiver]), v, r, s)",
                "ecrecover(keccak256(receiver, amount, withdrawCount[receiver]), v, r, s)"
            ],
            "jump3639": [
                "edg.transfer(owner, numTokens)",
                "edg.transfer(owner, numTokens)"
            ],
            "block3639": [
                "edg.transfer(owner, numTokens)"
            ],
            "block5872": [
                "ecrecover(keccak256(player, winBalance, gameCount), v, r, s)"
            ],
            "block7853": [
                "edg.transfer(receiver, amount)"
            ],
            "jump3210": [
                "edg.balanceOf(address(this))",
                "edg.balanceOf(address(this))"
            ],
            "block3210": [
                "edg.balanceOf(address(this))"
            ],
            "block3210_0": [
                "edg.balanceOf(address(this))"
            ]
        }
    }
}