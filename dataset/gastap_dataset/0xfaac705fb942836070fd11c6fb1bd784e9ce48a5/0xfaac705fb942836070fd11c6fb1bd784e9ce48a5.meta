{
    "Storage": {
        "function_list": [
            "setUInt(bytes32,bytes32,uint256)",
            "getUInt(bytes32,bytes32)",
            "setAddress(bytes32,bytes32,address)",
            "getAddress(bytes32,bytes32)",
            "setBool(bytes32,bytes32,bool)",
            "getBool(bytes32,bytes32)",
            "setBal(bytes32,address,uint256)",
            "getBal(bytes32,address)"
        ],
        "initial_state": {
            "setUInt(bytes32,bytes32,uint256)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "getUInt(bytes32,bytes32)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "setAddress(bytes32,bytes32,address)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "getAddress(bytes32,bytes32)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "setBool(bytes32,bytes32,bool)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "getBool(bytes32,bytes32)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "setBal(bytes32,address,uint256)": {
                "argument": {
                    "_crate": "bytes32",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "getBal(bytes32,address)": {
                "argument": {
                    "_crate": "bytes32"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setUInt(bytes32,bytes32,uint256)": [
                422,
                141
            ],
            "setBal(bytes32,address,uint256)": [
                248,
                97
            ],
            "getBool(bytes32,bytes32)": [
                590,
                185
            ],
            "getUInt(bytes32,bytes32)": [
                339,
                119
            ],
            "getAddress(bytes32,bytes32)": [
                677,
                207
            ],
            "setBool(bytes32,bytes32,bool)": [
                804,
                229
            ],
            "getBal(bytes32,address)": [
                147,
                75
            ],
            "setAddress(bytes32,bytes32,address)": [
                495,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StorageEnabled": {
        "function_list": [
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)"
        ],
        "initial_state": {
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {}
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {}
            },
            "burnPool()": {
                "argument": {},
                "contract": {}
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {}
            },
            "powerPool()": {
                "argument": {},
                "contract": {}
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {}
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {}
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {}
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {}
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {}
            },
            "downs(address)": {
                "argument": {},
                "contract": {}
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "outstandingPower()": [
                649,
                229
            ],
            "powerBalanceOf(address)": [
                158,
                75
            ],
            "downs(address)": [
                288,
                119
            ],
            "activeSupply()": [
                606,
                207
            ],
            "babzBalanceOf(address)": [
                476,
                163
            ],
            "powerPool()": [
                245,
                97
            ],
            "authorizedPower()": [
                692,
                251
            ],
            "burnPool()": [
                563,
                185
            ]
        },
        "block_CALL_mapping": {
            "block3076": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block1946": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump2794": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump2230": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block965": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump1249": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block2794": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump1946": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump3076": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block1249": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump1547": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump965": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block2512": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block2230": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump2512": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block1547": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ]
        }
    },
    "Governable": {
        "function_list": [
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)"
        ],
        "initial_state": {
            "Governable()": {
                "argument": {},
                "contract": {
                    "admins": "address[]"
                }
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {
                    "admins": "address[]"
                }
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {
                    "admins": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "addAdmin(address)": [
                268,
                119
            ],
            "removeAdmin(address)": [
                201,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Governable()": {
                "argument": {},
                "contract": {}
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                438,
                185
            ],
            "unpause()": [
                301,
                119
            ],
            "addAdmin(address)": [
                371,
                163
            ],
            "removeAdmin(address)": [
                234,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "NutzEnabled": {
        "function_list": [
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "NutzEnabled(address,address)",
            "totalSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {}
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {}
            },
            "burnPool()": {
                "argument": {},
                "contract": {}
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {}
            },
            "powerPool()": {
                "argument": {},
                "contract": {}
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {}
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {}
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {}
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {}
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {}
            },
            "downs(address)": {
                "argument": {},
                "contract": {}
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Governable()": {
                "argument": {},
                "contract": {}
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                1354,
                339
            ],
            "outstandingPower()": [
                1865,
                493
            ],
            "allowance(address,address)": [
                1637,
                449
            ],
            "powerBalanceOf(address)": [
                556,
                119
            ],
            "unpause()": [
                905,
                229
            ],
            "downs(address)": [
                928,
                251
            ],
            "powerPool()": [
                862,
                207
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1029,
                273
            ],
            "approve(address,address,uint256)": [
                1756,
                471
            ],
            "removeAdmin(address)": [
                752,
                163
            ],
            "totalSupply()": [
                819,
                185
            ],
            "addAdmin(address)": [
                1287,
                317
            ],
            "transfer(address,address,uint256,bytes)": [
                377,
                97
            ],
            "activeSupply()": [
                1594,
                427
            ],
            "authorizedPower()": [
                1908,
                515
            ],
            "burnPool()": [
                1551,
                405
            ],
            "babzBalanceOf(address)": [
                1464,
                383
            ]
        },
        "block_CALL_mapping": {
            "block5347_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump2357": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump5913_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump3839": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump7551_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump7551_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5347": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5347_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block7551_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block7551_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump7551": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump7551_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5631": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block3312": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5631": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block7551_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block3312_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block7551": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5913": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump5347_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5347_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5347_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5347_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block6925": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump6643": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block5347": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5913_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump6925": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block5347_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5347_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block3839": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block6643": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block2357": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block5913": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump3312_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5631_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump3312": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5631_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ]
        }
    },
    "PullPayment": {
        "function_list": [
            "balanceOf(address)",
            "paymentOf(address)",
            "changeDailyLimit(uint256)",
            "changeWithdrawalDate(address,uint256)",
            "asyncSend(address)",
            "withdraw()",
            "isUnderLimit(uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "paymentOf(address)": {
                "argument": {},
                "contract": {}
            },
            "changeDailyLimit(uint256)": {
                "argument": {
                    "_dailyLimit": "uint256"
                },
                "contract": {}
            },
            "changeWithdrawalDate(address,uint256)": {
                "argument": {
                    "_newDate": "uint256"
                },
                "contract": {}
            },
            "asyncSend(address)": {
                "argument": {},
                "contract": {}
            },
            "withdraw()": {
                "argument": {},
                "contract": {}
            },
            "isUnderLimit(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump312": [
                "payee.send(payment)",
                "payee.send(payment)"
            ],
            "block312": [
                "payee.send(payment)"
            ]
        }
    },
    "Nutz": {
        "function_list": [
            "balanceOf(address)",
            "totalSupply()",
            "activeSupply()",
            "allowance(address,address)",
            "floor()",
            "ceiling()",
            "powerPool()",
            "_checkDestination(address,address,uint256,bytes)",
            "powerDown(address,address,uint256)",
            "asyncSend(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transData(address,uint256,bytes)",
            "transferFrom(address,address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "fallback()",
            "purchase(uint256)",
            "sell(uint256,uint256)",
            "powerUp(uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "floor()": {
                "argument": {},
                "contract": {}
            },
            "ceiling()": {
                "argument": {},
                "contract": {}
            },
            "powerPool()": {
                "argument": {},
                "contract": {}
            },
            "_checkDestination(address,address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "powerDown(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "asyncSend(address,address,uint256)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "transData(address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "purchase(uint256)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {}
            },
            "sell(uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "powerUp(uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1336,
                273
            ],
            "totalSupply()": [
                3747,
                889
            ],
            "allowance(address,address)": [
                7703,
                961
            ],
            "transferFrom(address,address,uint256)": [
                837,
                163
            ],
            "approve(address,uint256)": [
                674,
                97
            ],
            "purchase(uint256)": [
                2543,
                537
            ],
            "asyncSend(address,address,uint256)": [
                1466,
                317
            ],
            "powerUp(uint256)": [
                1806,
                383
            ],
            "floor()": [
                4389,
                889
            ],
            "transferFrom(address,address,uint256,bytes)": [
                1952,
                427
            ],
            "activeSupply()": [
                6564,
                889
            ],
            "transfer(address,uint256,bytes)": [
                2198,
                471
            ],
            "powerDown(address,address,uint256)": [
                1013,
                207
            ],
            "transData(address,uint256,bytes)": [
                1165,
                251
            ],
            "powerPool()": [
                3946,
                889
            ],
            "transfer(address,uint256)": [
                1851,
                405
            ],
            "sell(uint256,uint256)": [
                2369,
                493
            ],
            "ceiling()": [
                442,
                1448
            ]
        },
        "block_CALL_mapping": {
            "block8279_7": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump6280_0": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "jump4665": [
                "ControllerInterface(owner).babzBalanceOf(_owner)",
                "ControllerInterface(owner).babzBalanceOf(_owner)"
            ],
            "block442": [
                "ControllerInterface(owner).ceiling()"
            ],
            "jump6280": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "jump442_0": [
                "ControllerInterface(owner).ceiling()",
                "ControllerInterface(owner).ceiling()"
            ],
            "jump3747": [
                "ControllerInterface(owner).totalSupply()",
                "ControllerInterface(owner).totalSupply()"
            ],
            "block2865": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump6564": [
                "ControllerInterface(owner).activeSupply()",
                "ControllerInterface(owner).activeSupply()"
            ],
            "jump4389": [
                "ControllerInterface(owner).floor()",
                "ControllerInterface(owner).floor()"
            ],
            "block6280": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "block8279_3": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block8279_2": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump3483": [
                "ControllerInterface(owner).approve(msg.sender, _spender, _amountBabz)",
                "ControllerInterface(owner).approve(msg.sender, _spender, _amountBabz)"
            ],
            "block8279_0": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block3946": [
                "ControllerInterface(owner).powerPool()"
            ],
            "block8279_6": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block8279_5": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block7703": [
                "ControllerInterface(owner).allowance(_owner, _spender)"
            ],
            "block4665": [
                "ControllerInterface(owner).babzBalanceOf(_owner)"
            ],
            "jump7703": [
                "ControllerInterface(owner).allowance(_owner, _spender)",
                "ControllerInterface(owner).allowance(_owner, _spender)"
            ],
            "block3483": [
                "ControllerInterface(owner).approve(msg.sender, _spender, _amountBabz)"
            ],
            "jump442": [
                "ControllerInterface(owner).ceiling()",
                "ControllerInterface(owner).ceiling()"
            ],
            "jump8279_7": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_6": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump7355": [
                "ControllerInterface(owner).sell(msg.sender, _price, _amountBabz)",
                "ControllerInterface(owner).sell(msg.sender, _price, _amountBabz)"
            ],
            "block6280_0": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "jump8279_3": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_2": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump5818": [
                "ControllerInterface(owner).powerUp(msg.sender, msg.sender, _amountBabz)",
                "ControllerInterface(owner).powerUp(msg.sender, msg.sender, _amountBabz)"
            ],
            "block6987_0": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "jump2865_0": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)",
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump2865_1": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)",
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump4866": [
                "ControllerInterface(owner).ceiling()",
                "ControllerInterface(owner).ceiling()"
            ],
            "jump2865": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)",
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump8279_0": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump6987_1": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block4866": [
                "ControllerInterface(owner).ceiling()"
            ],
            "block2865_0": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "block2865_1": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "block6987": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block3747": [
                "ControllerInterface(owner).totalSupply()"
            ],
            "block8279_1": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block6987_1": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block4389": [
                "ControllerInterface(owner).floor()"
            ],
            "jump8279": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_1": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump6987": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block5211": [
                "PullPayInterface(_pullAddr).asyncSend.value(_amountWei)(_dest)"
            ],
            "jump8279_5": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump3946": [
                "ControllerInterface(owner).powerPool()",
                "ControllerInterface(owner).powerPool()"
            ],
            "jump5211": [
                "PullPayInterface(_pullAddr).asyncSend.value(_amountWei)(_dest)",
                "PullPayInterface(_pullAddr).asyncSend.value(_amountWei)(_dest)"
            ],
            "block8279_4": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block5818": [
                "ControllerInterface(owner).powerUp(msg.sender, msg.sender, _amountBabz)"
            ],
            "jump6987_0": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block442_0": [
                "ControllerInterface(owner).ceiling()"
            ],
            "block8279": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_4": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block7355": [
                "ControllerInterface(owner).sell(msg.sender, _price, _amountBabz)"
            ],
            "block6564": [
                "ControllerInterface(owner).activeSupply()"
            ]
        }
    },
    "MarketEnabled": {
        "function_list": [
            "NutzEnabled(address,address)",
            "totalSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "MarketEnabled(address,address,address)",
            "ceiling()",
            "floor()",
            "moveCeiling(uint256)",
            "moveFloor(uint256)",
            "purchase(address,uint256,uint256)",
            "sell(address,uint256,uint256)",
            "allocateEther(uint256,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "activeSupply()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "burnPool()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "powerPool()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "downs(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "Governable()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "MarketEnabled(address,address,address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "ceiling()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "floor()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "moveCeiling(uint256)": {
                "argument": {
                    "_newPurchasePrice": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "moveFloor(uint256)": {
                "argument": {
                    "_newSalePrice": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "purchase(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_price": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "sell(address,uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "allocateEther(uint256,address)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "powerBalanceOf(address)": [
                644,
                119
            ],
            "downs(address)": [
                1136,
                295
            ],
            "approve(address,address,uint256)": [
                2378,
                647
            ],
            "totalSupply()": [
                907,
                185
            ],
            "moveCeiling(uint256)": [
                1669,
                405
            ],
            "ceiling()": [
                1781,
                449
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1237,
                317
            ],
            "outstandingPower()": [
                2487,
                669
            ],
            "pause()": [
                1824,
                471
            ],
            "allocateEther(uint256,address)": [
                1059,
                273
            ],
            "unpause()": [
                993,
                229
            ],
            "addAdmin(address)": [
                1714,
                427
            ],
            "sell(address,uint256,uint256)": [
                1582,
                383
            ],
            "burnPool()": [
                2128,
                559
            ],
            "floor()": [
                1016,
                251
            ],
            "activeSupply()": [
                2171,
                581
            ],
            "moveFloor(uint256)": [
                2214,
                603
            ],
            "transfer(address,address,uint256,bytes)": [
                465,
                97
            ],
            "removeAdmin(address)": [
                840,
                163
            ],
            "purchase(address,uint256,uint256)": [
                1934,
                515
            ],
            "powerPool()": [
                950,
                207
            ],
            "authorizedPower()": [
                2530,
                691
            ],
            "babzBalanceOf(address)": [
                2041,
                537
            ],
            "allowance(address,address)": [
                2259,
                625
            ]
        },
        "block_CALL_mapping": {
            "block11142_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump9917": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block9917": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump8262_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump11405": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block8828_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block11142": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump8262_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump3934": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump10891": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block11405_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump8262_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5340": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump8262": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8546": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump8546_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump8546_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block5340": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block8262_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump8828_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8828_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block10891_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump8262_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8262": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block11405_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block11405_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block11405_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block6653": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "block11405_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block11405": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block3934_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block3934_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block3934_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block10891": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump8828": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump11142_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump11142": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump8828_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump3934_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block2979": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump3934_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump3934_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump8828_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8828_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8546_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block8546_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block8262_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump10891_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block8828_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8828_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8828_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8828_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8828_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block3934": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block8262_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8262_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8262_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump2979": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block8262_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump10199": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block8828": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8262_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump8546": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block8828_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump5076": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "jump8828_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump11405_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block8828_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block5076": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "jump8262_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump11405_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11405_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11405_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11405_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block10199": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump6653": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ]
        }
    },
    "Power": {
        "function_list": [
            "balanceOf(address)",
            "totalSupply()",
            "activeSupply()",
            "slashPower(address,uint256,bytes32)",
            "powerUp(address,uint256)",
            "transfer(address,uint256)",
            "downtime()",
            "downTick(address)",
            "downs(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {}
            },
            "powerUp(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amountPower": "uint256"
                },
                "contract": {}
            },
            "downtime()": {
                "argument": {},
                "contract": {}
            },
            "downTick(address)": {
                "argument": {},
                "contract": {}
            },
            "downs(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "slashPower(address,uint256,bytes32)": [
                357,
                97
            ],
            "downtime()": [
                1241,
                339
            ],
            "downs(address)": [
                2097,
                935
            ],
            "activeSupply()": [
                1198,
                317
            ],
            "balanceOf(address)": [
                635,
                185
            ],
            "totalSupply()": [
                448,
                119
            ],
            "downTick(address)": [
                1131,
                295
            ],
            "transfer(address,uint256)": [
                1030,
                273
            ],
            "powerUp(address,uint256)": [
                722,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump2379": [
                "ControllerInterface(owner).powerBalanceOf(_holder)",
                "ControllerInterface(owner).powerBalanceOf(_holder)"
            ],
            "jump3425": [
                "ControllerInterface(owner).downTick(_owner, now)",
                "ControllerInterface(owner).downTick(_owner, now)"
            ],
            "block2097": [
                "ControllerInterface(owner).downs(_owner)"
            ],
            "block3093": [
                "ControllerInterface(owner).createDownRequest(msg.sender, _amountPower)"
            ],
            "block1834": [
                "ControllerInterface(owner).powerTotalSupply()"
            ],
            "jump3587": [
                "ControllerInterface(owner).outstandingPower()",
                "ControllerInterface(owner).outstandingPower()"
            ],
            "block3425": [
                "ControllerInterface(owner).downTick(_owner, now)"
            ],
            "jump3093": [
                "ControllerInterface(owner).createDownRequest(msg.sender, _amountPower)",
                "ControllerInterface(owner).createDownRequest(msg.sender, _amountPower)"
            ],
            "jump1834": [
                "ControllerInterface(owner).powerTotalSupply()",
                "ControllerInterface(owner).powerTotalSupply()"
            ],
            "jump2097": [
                "ControllerInterface(owner).downs(_owner)",
                "ControllerInterface(owner).downs(_owner)"
            ],
            "block2379": [
                "ControllerInterface(owner).powerBalanceOf(_holder)"
            ],
            "block3587": [
                "ControllerInterface(owner).outstandingPower()"
            ]
        }
    },
    "PowerEnabled": {
        "function_list": [
            "MarketEnabled(address,address,address)",
            "ceiling()",
            "floor()",
            "moveCeiling(uint256)",
            "moveFloor(uint256)",
            "purchase(address,uint256,uint256)",
            "sell(address,uint256,uint256)",
            "allocateEther(uint256,address)",
            "NutzEnabled(address,address)",
            "totalSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "PowerEnabled(address,address,address,address)",
            "setMaxPower(uint256)",
            "setDowntime(uint256)",
            "dilutePower(uint256,uint256)",
            "_slashPower(address,uint256,bytes32)",
            "slashPower(address,uint256,bytes32)",
            "slashDownRequest(uint256,address,uint256,bytes32)",
            "powerUp(address,address,uint256)",
            "powerTotalSupply()",
            "_vestedDown(uint256,uint256,uint256,uint256)",
            "createDownRequest(address,uint256)",
            "downTick(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "MarketEnabled(address,address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "ceiling()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "floor()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "moveCeiling(uint256)": {
                "argument": {
                    "_newPurchasePrice": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "moveFloor(uint256)": {
                "argument": {
                    "_newSalePrice": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "purchase(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_price": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "sell(address,uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "allocateEther(uint256,address)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "activeSupply()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "burnPool()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "powerPool()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "downs(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "Governable()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "PowerEnabled(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "setMaxPower(uint256)": {
                "argument": {
                    "_maxPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "setDowntime(uint256)": {
                "argument": {
                    "_downtime": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "dilutePower(uint256,uint256)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_amountPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "slashDownRequest(uint256,address,uint256,bytes32)": {
                "argument": {
                    "_pos": "uint256",
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "powerUp(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "powerTotalSupply()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "_vestedDown(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_total": "uint256",
                    "_left": "uint256",
                    "_start": "uint256",
                    "_now": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "createDownRequest(address,uint256)": {
                "argument": {
                    "_amountPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "downTick(address,uint256)": {
                "argument": {
                    "_now": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "powerBalanceOf(address)": [
                776,
                119
            ],
            "downs(address)": [
                1359,
                317
            ],
            "createDownRequest(address,uint256)": [
                2237,
                537
            ],
            "approve(address,address,uint256)": [
                3283,
                889
            ],
            "totalSupply()": [
                1130,
                207
            ],
            "moveCeiling(uint256)": [
                2125,
                493
            ],
            "ceiling()": [
                2314,
                559
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1547,
                361
            ],
            "powerUp(address,address,uint256)": [
                2435,
                625
            ],
            "outstandingPower()": [
                3392,
                911
            ],
            "setMaxPower(uint256)": [
                1845,
                405
            ],
            "slashDownRequest(uint256,address,uint256,bytes32)": [
                1937,
                449
            ],
            "pause()": [
                2412,
                603
            ],
            "allocateEther(uint256,address)": [
                1282,
                295
            ],
            "slashPower(address,uint256,bytes32)": [
                15501,
                984
            ],
            "unpause()": [
                1216,
                251
            ],
            "addAdmin(address)": [
                2170,
                515
            ],
            "purchase(address,uint256,uint256)": [
                2631,
                669
            ],
            "sell(address,uint256,uint256)": [
                2038,
                471
            ],
            "burnPool()": [
                2945,
                757
            ],
            "downTick(address,uint256)": [
                2738,
                691
            ],
            "floor()": [
                1239,
                273
            ],
            "activeSupply()": [
                3031,
                801
            ],
            "moveFloor(uint256)": [
                3119,
                845
            ],
            "setDowntime(uint256)": [
                3074,
                823
            ],
            "transfer(address,address,uint256,bytes)": [
                597,
                97
            ],
            "powerTotalSupply()": [
                2815,
                713
            ],
            "dilutePower(uint256,uint256)": [
                2357,
                581
            ],
            "removeAdmin(address)": [
                1063,
                185
            ],
            "powerPool()": [
                1173,
                229
            ],
            "authorizedPower()": [
                3435,
                933
            ],
            "babzBalanceOf(address)": [
                2858,
                735
            ],
            "allowance(address,address)": [
                3164,
                867
            ]
        },
        "block_CALL_mapping": {
            "jump14540": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14540_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14540_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14540_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block16416": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block14540_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14540_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump15142_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump15142_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump17182": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)",
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "jump14258": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block15501_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block14540": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block8332": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "block16165_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block15142_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block15142_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump16165_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump6513": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump16165_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump16165_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump16165_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump16165_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump12986": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump5107": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block16416_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block16416_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump6513_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block12986_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump12986_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump15142": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block12092": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "jump6513_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump17433_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump17433_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump17433_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block6513_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block5107": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump16165": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block6249": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "block17433": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump16679_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump12414_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12414_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12414_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12414_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12414_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12414_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12414_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12414_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump16416_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump16416_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump16416_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump16931_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block14258_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump8332": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "block5107_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5107_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump15910_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block5107_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5107_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5107_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5107_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump16679": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block12414_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12414_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12414_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12414_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12414_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12414_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12414_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5107_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5107_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump14540_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14540_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14540_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14540_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14540_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14540_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump5107_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5107_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump12698_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12698_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block5107_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump12698_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12698_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12698_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12698_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block16679_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block16679_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block14540_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block12414": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block16679_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block16679_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block16679_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump15501_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block15501": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "jump16416": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump12698": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block5107_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump6249": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "jump15910_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block12986": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block17433_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block17433_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block17433_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block16416_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block5107_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump14258_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump14258_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block15142": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump14258_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump14258_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump5107_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block3927_0": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block6513": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block3927_2": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump5107_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block14258": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block16679": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5107_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5107_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block16931": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "jump5107_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump12986_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump5107_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block12986_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump5107_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block12414_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump15910": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block16931_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block15910": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump12986_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block10872": [
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "jump12986_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump17433": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block12698_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump14258_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump12986_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12986_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block16165": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block3927": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block12698_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12986_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12698_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump3927_2": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump3927_0": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump3927_1": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block3927_1": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block16165_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16165_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16165_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump10872": [
                "Power(powerAddr).powerUp(_from, amountPow)",
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "block16165_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump12092": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)",
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "block14258_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block14258_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump12414": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block14258_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block14258_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump15501": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "jump3927": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump16679_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block6513_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block16679_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block15910_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block15910_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block16679_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block6513_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump12986_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump12986_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump12986_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump12986_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12698_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12698_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12986_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block12698_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12986_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump12986_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block17182": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "jump6513_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block12698": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump16679_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16679_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16679_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16679_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16679_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16931": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ]
        }
    },
    "Controller": {
        "function_list": [
            "PowerEnabled(address,address,address,address)",
            "setMaxPower(uint256)",
            "setDowntime(uint256)",
            "dilutePower(uint256,uint256)",
            "_slashPower(address,uint256,bytes32)",
            "slashPower(address,uint256,bytes32)",
            "slashDownRequest(uint256,address,uint256,bytes32)",
            "powerUp(address,address,uint256)",
            "powerTotalSupply()",
            "_vestedDown(uint256,uint256,uint256,uint256)",
            "createDownRequest(address,uint256)",
            "downTick(address,uint256)",
            "MarketEnabled(address,address,address)",
            "ceiling()",
            "floor()",
            "moveCeiling(uint256)",
            "moveFloor(uint256)",
            "purchase(address,uint256,uint256)",
            "sell(address,uint256,uint256)",
            "allocateEther(uint256,address)",
            "NutzEnabled(address,address)",
            "totalSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "Controller(address,address,address,address)",
            "setContracts(address,address,address,address)",
            "changeDailyLimit(uint256)",
            "kill(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PowerEnabled(address,address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "setMaxPower(uint256)": {
                "argument": {
                    "_maxPower": "uint256"
                },
                "contract": {}
            },
            "setDowntime(uint256)": {
                "argument": {
                    "_downtime": "uint256"
                },
                "contract": {}
            },
            "dilutePower(uint256,uint256)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_amountPower": "uint256"
                },
                "contract": {}
            },
            "_slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {}
            },
            "slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {}
            },
            "slashDownRequest(uint256,address,uint256,bytes32)": {
                "argument": {
                    "_pos": "uint256",
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {}
            },
            "powerUp(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "powerTotalSupply()": {
                "argument": {},
                "contract": {}
            },
            "_vestedDown(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_total": "uint256",
                    "_left": "uint256",
                    "_start": "uint256",
                    "_now": "uint256"
                },
                "contract": {}
            },
            "createDownRequest(address,uint256)": {
                "argument": {
                    "_amountPower": "uint256"
                },
                "contract": {}
            },
            "downTick(address,uint256)": {
                "argument": {
                    "_now": "uint256"
                },
                "contract": {}
            },
            "MarketEnabled(address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "ceiling()": {
                "argument": {},
                "contract": {}
            },
            "floor()": {
                "argument": {},
                "contract": {}
            },
            "moveCeiling(uint256)": {
                "argument": {
                    "_newPurchasePrice": "uint256"
                },
                "contract": {}
            },
            "moveFloor(uint256)": {
                "argument": {
                    "_newSalePrice": "uint256"
                },
                "contract": {}
            },
            "purchase(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_price": "uint256"
                },
                "contract": {}
            },
            "sell(address,uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "allocateEther(uint256,address)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {}
            },
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {}
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {}
            },
            "burnPool()": {
                "argument": {},
                "contract": {}
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {}
            },
            "powerPool()": {
                "argument": {},
                "contract": {}
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {}
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {}
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {}
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {}
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {}
            },
            "downs(address)": {
                "argument": {},
                "contract": {}
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Governable()": {
                "argument": {},
                "contract": {}
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "Controller(address,address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "setContracts(address,address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "changeDailyLimit(uint256)": {
                "argument": {
                    "_dailyLimit": "uint256"
                },
                "contract": {}
            },
            "kill(address)": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "powerBalanceOf(address)": [
                809,
                119
            ],
            "downs(address)": [
                1392,
                317
            ],
            "createDownRequest(address,uint256)": [
                2270,
                537
            ],
            "approve(address,address,uint256)": [
                3591,
                955
            ],
            "totalSupply()": [
                1163,
                207
            ],
            "moveCeiling(uint256)": [
                2158,
                493
            ],
            "ceiling()": [
                2347,
                559
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1580,
                361
            ],
            "powerUp(address,address,uint256)": [
                2468,
                625
            ],
            "outstandingPower()": [
                3700,
                977
            ],
            "setMaxPower(uint256)": [
                1878,
                405
            ],
            "slashDownRequest(uint256,address,uint256,bytes32)": [
                1970,
                449
            ],
            "pause()": [
                2445,
                603
            ],
            "allocateEther(uint256,address)": [
                1315,
                295
            ],
            "slashPower(address,uint256,bytes32)": [
                18048,
                984
            ],
            "unpause()": [
                1249,
                251
            ],
            "changeDailyLimit(uint256)": [
                15751,
                914
            ],
            "addAdmin(address)": [
                2203,
                515
            ],
            "purchase(address,uint256,uint256)": [
                2664,
                669
            ],
            "sell(address,uint256,uint256)": [
                2071,
                471
            ],
            "burnPool()": [
                2978,
                757
            ],
            "downTick(address,uint256)": [
                2771,
                691
            ],
            "floor()": [
                1272,
                273
            ],
            "activeSupply()": [
                3064,
                801
            ],
            "setContracts(address,address,address,address)": [
                3152,
                845
            ],
            "setDowntime(uint256)": [
                3107,
                823
            ],
            "transfer(address,address,uint256,bytes)": [
                630,
                97
            ],
            "powerTotalSupply()": [
                2848,
                713
            ],
            "dilutePower(uint256,uint256)": [
                2390,
                581
            ],
            "moveFloor(uint256)": [
                3427,
                911
            ],
            "kill(address)": [
                3315,
                867
            ],
            "removeAdmin(address)": [
                1096,
                185
            ],
            "powerPool()": [
                1206,
                229
            ],
            "authorizedPower()": [
                3743,
                999
            ],
            "babzBalanceOf(address)": [
                2891,
                735
            ],
            "allowance(address,address)": [
                3472,
                933
            ]
        },
        "block_CALL_mapping": {
            "jump15085": [
                "Ownable(nutzAddr).transferOwnership(msg.sender)",
                "Ownable(nutzAddr).transferOwnership(msg.sender)"
            ],
            "block18712_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump5415": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump12400": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)",
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "block18712_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump14783": [
                "Ownable(pullAddr).transferOwnership(msg.sender)",
                "Ownable(pullAddr).transferOwnership(msg.sender)"
            ],
            "block18712_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump13294_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13294_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block18963_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump6821_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump19226_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block4235": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block18963": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block18712_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump19980_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump18712_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump19980_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump18712_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump18712_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump18712_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump18712_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block6557": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "jump12722": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block18048": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block12722": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block13294_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump17087_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump18712": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump11180": [
                "Power(powerAddr).powerUp(_from, amountPow)",
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "jump18048_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block18457": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block11180": [
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "block18963_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump5415_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block18963_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block17689": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump5415_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump8640": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "jump13006_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13006_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13006_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13006_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13006_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13006_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13294": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block17087_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump4235_0": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block17087_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block19980_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block19980_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block19980_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump5415_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block19226": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5415_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block6821_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump17689_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump17689_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block13006_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13006_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13006_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13006_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13006_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13006_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12400": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "jump17087_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump17087_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump17087_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump17087_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump17087_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump19226_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19226_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19226_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19226_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19226_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19226_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block18048_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block13294_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump17087": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block13294_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump15385": [
                "Ownable(storageAddr).transferOwnership(msg.sender)",
                "Ownable(storageAddr).transferOwnership(msg.sender)"
            ],
            "block13294_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump14481": [
                "Ownable(powerAddr).transferOwnership(msg.sender)",
                "Ownable(powerAddr).transferOwnership(msg.sender)"
            ],
            "jump18048": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block16805_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block16805_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block16805_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump19478_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block16805_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump18963": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump18963_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump18963_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump18963_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block19478": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "jump16805": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block17087_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block17087_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block17087_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block17087_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block13294": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13294_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump4235": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump19729": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)",
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "block13006": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump18457_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump18457_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block4235_2": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block4235_1": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block4235_0": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block12722_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12722_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12722_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12722_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12722_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12722_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12722_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12722_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump13294_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block19226_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump13006": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump19980": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block15385": [
                "Ownable(storageAddr).transferOwnership(msg.sender)"
            ],
            "block19980": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump18457": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump19980_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block15751": [
                "PullPayment(pullAddr).changeDailyLimit(_dailyLimit)"
            ],
            "jump13294_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump6821_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump6821_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block8640": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "jump19226": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump6557": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "jump5415_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block6821": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block17087": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump5415_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5415_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5415_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5415_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5415_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block17689_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block17689_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block16805_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block6821_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump6821": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump17689": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block14783": [
                "Ownable(pullAddr).transferOwnership(msg.sender)"
            ],
            "block18457_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block18457_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump16805_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump15751": [
                "PullPayment(pullAddr).changeDailyLimit(_dailyLimit)",
                "PullPayment(pullAddr).changeDailyLimit(_dailyLimit)"
            ],
            "block19478_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "jump16805_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump16805_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump16805_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump16805_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block18712_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block5415": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block18712": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump4235_1": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block19729": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "jump4235_2": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block6821_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block16805": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump19478": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "jump12722_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12722_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12722_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12722_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12722_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12722_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12722_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12722_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5415_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5415_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block15085": [
                "Ownable(nutzAddr).transferOwnership(msg.sender)"
            ],
            "block19226_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19226_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19226_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19226_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19226_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19226_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block14481": [
                "Ownable(powerAddr).transferOwnership(msg.sender)"
            ]
        }
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    }
}